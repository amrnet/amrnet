{"version":3,"sources":["registerServiceWorker.js","reportWebVitals.js","components/Admin/materialUI.js","constants.js","components/Admin/Admin.js","components/Elements/Header/HeaderMUI.js","assets/img/logo-prod.png","components/Elements/Drawer/DrawerMUI.js","stores/slices/appSlice.ts","stores/hooks.ts","util/menuItems.js","components/Elements/Drawer/Drawer.js","components/Elements/SelectOrganism/SelectOrganismMUI.js","stores/slices/dashboardSlice.ts","components/Elements/SelectOrganism/SelectOrganism.js","components/Elements/InformationCards/InformationCardsMUI.js","components/Elements/InformationCards/InformationCards.js","components/Elements/Header/Header.js","components/Layout/MainLayoutUI.js","components/Layout/MainLayout.js","components/Elements/Map/MapMUI.js","util/colorHelper.js","components/Elements/Map/mapColorHelper.js","components/Elements/Map/BottomLeftControls/BottomLeftControlsMUI.js","stores/slices/mapSlice.ts","components/Elements/Map/BottomLeftControls/BottomLeftControls.js","components/Elements/Map/TopRightControls/TopRightControlsMUI.js","util/genotypes.js","util/mapLegends.js","components/Elements/Map/TopRightControls/TopRightControls.js","components/Elements/Map/TopLeftControls/TopLeftControlsMUI.js","components/Elements/Map/TopLeftControls/TopLeftControls.js","components/Elements/Map/BottomRightControls/BottomRightControlsMUI.js","util/imgOnLoadPromise.js","components/Elements/Map/BottomRightControls/BottomRightControls.js","components/Elements/Map/Map.js","components/Elements/Footer/FooterMUI.js","assets/img/LSHTMLogo2020.jpg","assets/img/Wellcome_Trust_logo.png","components/Elements/Footer/Footer.js","components/Elements/DownloadData/DownloadDataMUI.js","assets/img/eu_flag.jpg","util/graphCards.js","stores/slices/graphSlice.ts","util/drugs.js","components/Elements/Graphs/graphColorHelper.js","util/convergenceVariablesOptions.js","components/Elements/DownloadData/DownloadData.js","util/reportInfoTexts.js","components/Elements/Graphs/GraphsMUI.js","components/Elements/Graphs/DeterminantsGraph/DeterminantsGraphMUI.js","util/isTouchDevice.js","components/Elements/Graphs/DeterminantsGraph/DeterminantsGraph.js","components/Elements/Graphs/FrequenciesGraph/FrequenciesGraphMUI.js","components/Elements/Graphs/FrequenciesGraph/FrequenciesGraph.js","components/Elements/Graphs/DrugResistanceGraph/DrugResistanceGraphMUI.js","components/Elements/Graphs/DrugResistanceGraph/DrugResistanceGraph.js","components/Elements/Graphs/DistributionGraph/DistributionGraphMUI.js","components/Elements/Graphs/DistributionGraph/DistributionGraph.js","components/Elements/Graphs/TrendsKPGraph/TrendsKPGraphMUI.js","components/Elements/Graphs/TrendsKPGraph/TrendsKPGraph.js","components/Elements/Graphs/KODiversityGraph/KODiversityGraphMUI.js","components/Elements/Graphs/KODiversityGraph/KODiversityGraph.js","components/Elements/Graphs/ConvergenceGraph/ConvergenceGraphMUI.js","components/Elements/Graphs/ConvergenceGraph/ConvergenceGraph.js","components/Elements/Graphs/Graphs.js","util/drugClassesRules.js","components/Dashboard/filters.js","components/Elements/ResetButton/ResetButtonMUI.js","components/Elements/ResetButton/ResetButton.js","components/Elements/SelectCountry/SelectCountryMUI.js","components/Elements/SelectCountry/SelectCountry.js","util/countries.js","components/Dashboard/Dashboard.js","components/About/AboutMUI.js","components/About/About.js","components/UserGuide/UserGuideMUI.js","components/UserGuide/UserGuide.js","components/Database/DatabaseMUI.js","components/Database/Database.js","components/Documentation/DocumentationMUI.js","components/Documentation/Documentation.js","components/Contact/ContactMUI.js","components/Contact/Contact.js","stores/store.ts","App.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","CustomCircularProgress","withStyles","root","color","CircularProgress","useStyles","makeStyles","cellON","backgroundColor","off","tableID","position","right","tablePadding","marginTop","actionsCell","borderLeft","stickyCell","actionsHeaderCell","stickyHeaderCell","changesTable","maxHeight","marginBottom","viewButton","width","resetButton","height","marginRight","marginLeft","uploadButton","checkChangesButton","dialog","display","flexDirection","justifyContent","flexWrap","input","input2","currentData","whiteSpace","paddingRight","toolbar","borderBottom","deleteSelected","checkboxCell","checkbox","tableRowRoot","tableRowSelected","box","alignItems","paddingLeft","select","textAlign","textAlignLast","minWidth","userSelect","borderRadius","font","letterSpacing","fontFamily","fontSize","choosePage","opacity","selectFilter","header","headerTitle","rowHeader","deleteChangeButton","border","searchInputWrapper","maxWidth","searchInput","ColorButton","theme","Button","ColorButton3","borderColor","ColorButton4","ColorButton5","fontWeight","StyledHeaderCell","head","palette","common","black","white","body","TableCell","CustomTableContainer","TableContainer","CustomTableSortLabel","active","icon","TableSortLabel","API_ENDPOINT","createData","id","date","changes","AdminPage","classes","rows","setRows","useState","data","setData","originalData","setOriginalData","setCurrentData","tableKeys","setTableKeys","page","setPage","rowsPerPage","setRowsPerPage","React","order","setOrder","orderBy","setOrderBy","currentRow","setCurrentRow","open","setOpen","open2","setOpen2","open3","setOpen3","open4","setOpen4","open5","setOpen5","open6","setOpen6","open7","setOpen7","open8","setOpen8","resultMessage","setResultMessage","loading","setLoading","selected","setSelected","search","setSearch","filters","setFilters","filterOptions","setFilterOptions","filteredData","setFilteredData","isLoading","setIsLoading","startProgress","setStartProgress","loadingMessage","setLoadingMessage","currentChange","setCurrentChange","exceptions","descendingComparator","a","b","changeView","resetChanges","aux","JSON","parse","stringify","index","Object","keys","added","forEach","element","genome","gIndex","findIndex","x","NAME","splice","deleted","push","sort","updated","key","filter","length","old","betterChanges","join","entries","map","updates","y","i","point","new","text","handleUpload","handleCheckChanges","message","async","checkChanges","showPopup","arguments","undefined","axios","get","concat","res","Status","getData","finally","getChangeData","changeData","Date","updatedAt","toLocaleString","aux2","values","aux4","aux5","includes","value","useEffect","response","s","toLowerCase","pass","EnhancedTableToolbar","props","numSelected","_jsxs","Toolbar","className","children","Typography","sx","flex","variant","component","_jsx","TextField","placeholder","defaultValue","InputProps","startAdornment","InputAdornment","Search","endAdornment","IconButton","onClick","document","getElementById","edge","Close","onKeyDown","event","Tooltip","title","DeleteOutline","EnhancedTableHead","onRequestSort","onSelectAllClick","rowCount","TableHead","TableRow","padding","Checkbox","indeterminate","checked","onChange","headCell","align","sortDirection","direction","property","FormControl","Select","target","stopPropagation","displayEmpty","onOpen","onClose","MenuItem","option","size","placement","Info","Paper","Table","stickyHeader","TableBody","row","r","t","handleDeleteChange","handleRequestSort","newSelecteds","n","array","comparator","stabilizedThis","el","stableSort","getComparator","slice","isItemSelected","name","indexOf","dataRow","role","hover","selectedIndex","newSelected","handleClick","cell","Math","random","handleEdit","Edit","handleDelete","disableUnderline","Array","ceil","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","ActionsComponent","useTheme","Box","flexShrink","ml","disabled","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","max","Loader","type","Dialog","style","dialogTransition","DialogTitle","DialogContent","DialogContentText","DialogActions","deleteRow","autoFocus","item","label","rowIndex","inputs","getElementsByClassName","editRow","addRow","times","parts","post","LZString","compress","current","uploadChanges","index2","deleteRows","deleteChange","headerWrapper","top","zIndex","margin","headerBox","appBar","minHeight","paddingTop","paddingBottom","logo","leftWrapper","columnGap","drawerTitleWrapper","toolbarWrapper","infoCollapse","otherPage","activeItem","activeItemIcon","appSlice","createSlice","initialState","openDrawer","reducers","action","payload","setOpenDrawer","actions","useAppDispatch","useDispatch","useAppSelector","useSelector","menuItems","Home","MenuBook","Storage","Description","Person","Drawer","navigate","useNavigate","useLocation","dispatch","app","handleToggleDrawer","currentPage","pathname","replace","SwipeableDrawer","anchor","List","ListItem","disablePadding","ListItemButton","handleUpdatePage","ListItemIcon","ListItemText","primary","organismSelectWrapper","organismSelect","dashboardSlice","canGetData","globalOverviewLabel","italicLabel","fullLabel","organism","loadingData","actualCountry","totalGenotypes","totalGenomes","actualGenomes","actualGenotypes","timeInitial","timeFinal","actualTimeInitial","actualTimeFinal","years","genotypesForFilter","colorPallete","listPMID","PMID","setCanGetData","setGlobalOverviewLabel","setOrganism","setLoadingData","setActualCountry","setTotalGenotypes","setTotalGenomes","setActualGenomes","setActualGenotypes","setTimeInitial","setTimeFinal","setActualTimeInitial","setActualTimeFinal","setYears","setGenotypesForFilter","setColorPallete","setListPMID","setPMID","organisms","abbr","SelectOrganism","matches1050","useMediaQuery","matches650","dashboard","handleGlobalOverviewLabel","currentOrganism","find","labels","split","org","newValue","inputProps","IconComponent","cardsWrapper","borderTop","rowGap","card","cardContent","actualAndTotalValues","bp1000","InformationCards","matches1000","_Fragment","Divider","orientation","flexItem","Header","showSelect","matches500","setInfoCollapse","AppBar","Menu","src","LogoImg","alt","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","mainLayout","overflowY","boxShadow","childrenWrapper","bottom","alignSelf","MainLayout","isHomePage","loadingMap","mapWrapper","composableMap","tooltipMap","topControls","country","tooltipInfo","info","getColorForGenotype","genotype","generatePalleteForGenotypes","genotypes","rainbow","require","setNumberRange","setSpectrum","pallete","colourAt","colorForDrugClassesST","Azithromycin","Chloramphenicol","Ampicillin","Sulphonamides","Trimethoprim","Tetracyclines","Ceftriaxone","colorForDrugClassesKP","ESBL","Carbapenems","lightGrey","darkGrey","zeroPercentColor","hoverColor","samplesColorScale","domain","redColorScale","percentage","p","sensitiveColorScale","parseFloat","bottomLeftControls","left","mapSlice","coordinates","zoom","mapView","tooltipContent","dataset","mapData","ifCustom","setLoadingMap","setPosition","setMapView","setTooltipContent","setDataset","setMapData","setIfCustom","BottomLeftControls","Zoom","some","coordinate","FilterCenterFocus","AddCircle","RemoveCircle","topRightControls","labelTooltipIcon","cursor","selectInput","selectMenu","legendWrapper","legend","legendColorBox","legendText","bp700","localeCompare","mapLegends","generalSteps","sensitiveSteps","noSamplesSteps","mapViewsWithZeroPercentOption","TopRightControls","matches","getStepBoxColor","step","Card","elevation","CardContent","InfoOutlined","MenuProps","list","getSteps","topLeftControls","datasetWrapper","yearsWrapper","yearWrapper","menuPaper","datasetOptions","TopLeftControls","gutterBottom","ToggleButtonGroup","exclusive","_event","ToggleButton","paper","child","fullWidth","year","bottomRightControls","imgOnLoadPromise","obj","Promise","resolve","reject","onload","onerror","BottomRightControls","showAlert","setShowAlert","customDropdownMapView","graph","handleCloseAlert","svgAsPngUri","scale","canvas","createElement","ctx","getContext","mapImg","mapImgPromise","uri","legendHeight","cHeight","fillStyle","fillRect","fillText","actualMapView","genotypesText","drawImage","textHeight","legendImg","legendImgPromise","legendWidth","typhinetLogo","typhinetLogoPromise","base64","toDataURL","download","CameraAlt","Snackbar","autoHideDuration","Alert","severity","statKey","MDR","XDR","AzithR","CipNS","CipR","Carb","Map","getGenotypeColor","handleOnMouseLeave","ComposableMap","projectionConfig","rotate","ZoomableGroup","center","onMoveEnd","handleOnMoveEnd","Sphere","stroke","strokeWidth","Graticule","Geographies","geography","_ref2","geographies","geo","_countryStats$statKey","_countryStats$statKey2","_countryStats$statKey3","countryData","properties","countryStats","stats","fillColor","smallerThan20","showTooltip","GENOTYPE","items","percentCounter","genotypes1","genotypes2","sumCount","toFixed","per","Geography","fill","onMouseLeave","onMouseEnter","tooltip","content","combinedPercentage","assign","Samples","Genotypes","H58","Susceptible","combinedCount","handleOnMouseEnter","default","outline","pressed","rsmKey","ReactTooltip","gap","gridTemplateColumns","socialsWrapper","gridColumn","logosWrapper","Footer","LSHTMLogoImg","WellcomeTrustLogoImg","GitHub","downloadDataWrapper","button","textTransform","graphCards","collapse","description","Timeline","BarChart","StackedBarChart","MultilineChart","BubbleChart","graphSlice","collapses","determinants","distribution","drugResistance","frequencies","trendsKP","KODiversity","convergence","countriesForFilter","genotypesYearData","drugsYearData","genotypesDrugsData","genotypesDrugsData2","genotypesDrugClassesData","genotypesAndDrugsYearData","distributionGraphView","drugResistanceGraphView","frequenciesGraphView","frequenciesGraphSelectedGenotypes","determinantsGraphView","determinantsGraphDrugClass","trendsKPGraphDrugClass","trendsKPGraphView","KODiversityData","KODiversityGraphView","convergenceData","convergenceGroupVariable","convergenceColourVariable","convergenceColourPallete","currentSliderValue","resetBool","maxSliderValue","setCollapse","setCollapses","setCountriesForFilter","setGenotypesYearData","setDrugsYearData","setDistributionGraphView","setDrugResistanceGraphView","setFrequenciesGraphView","setFrequenciesGraphSelectedGenotypes","setCustomDropdownMapView","setGenotypesDrugsData","setGenotypesDrugsData2","setDeterminantsGraphView","setDeterminantsGraphDrugClass","setGenotypesDrugClassesData","setGenotypesAndDrugsYearData","setTrendsKPGraphDrugClass","setTrendsKPGraphView","setKODiversityData","setKODiversityGraphView","setConvergenceData","setConvergenceGroupVariable","setConvergenceColourVariable","setConvergenceColourPallete","setCurrentSliderValue","setResetBool","setMaxSliderValue","drugsST","drugsForDrugResistanceGraphST","defaultDrugsForDrugResistanceGraphST","drugsKP","drugClassesST","drugClassesKP","getColorForDrug","drug","colorsForKODiversityGraph","variablesOptions","columnsToRemove","DownloadData","loadingCSV","setLoadingCSV","loadingPDF","setLoadingPDF","listPIMD","drawFooter","pageHeight","pageWidth","setFontSize","line","drawLegend","secondLegendFactor","legendData","factor","rectY","isGenotype","isDrug","isVariable","xSpace","twoPages","factorMultiply","firstLegendData","secondLegendData","firstLegendFactor","yFactor","xFactor","floor","setFillColor","circle","setFont","replaceAll","addPage","LoadingButton","indexes","csv","lines","currentIndex","reverse","newLines","j","newCSV","startIcon","TableChart","loadingPosition","doc","jsPDF","unit","format","internal","pageSize","getWidth","getHeight","moment","formatDate","Image","logoWidth","texts","firstName","secondName","secondword","addImage","getSalmonellaTexts","euFlag","EUFlagImg","mapY","img","mapLegend","isKlebe","cards","legendDrugs","drugClassesBars","drugClassesFactor","genotypesFactor","isYersiniabactin","variablesFactor","group","colour","graphImg","graphImgPromise","domtoimage","toPng","bgcolor","rect","legendGenotypes","isTwoPages","save","PictureAsPdf","cardActions","titleWrapper","actionsWrapper","determinantsGraph","selectsWrapper","selectWrapper","graphWrapper","graphLabel","textAnchor","overflowX","legendItemWrapper","chartTooltipLabel","colorCircle","tooltipWrapper","tooltipTitle","tooltipItemWrapper","tooltipItemBox","tooltipItemStats","overflowWrap","noGenotypeSelected","isTouchDevice","maxTouchPoints","msMaxTouchPoints","dataViewOptions","DeterminantsGraph","currentTooltip","setCurrentTooltip","plotChart","setPlotChart","_genotypesDrugClasses","totalCount","exclusions","genotypeDrugClassesDataPercentage","structuredClone","Number","handleClickChart","activeLabel","drugClasses","resistantCount","_event$activePayload$","activePayload","_genotypesDrugClasses2","_getDrugClassesBars","ResponsiveContainer","maxBarSize","CartesianGrid","strokeDasharray","XAxis","dataKey","interval","tick","YAxis","allowDataOverflow","allowDecimals","Label","angle","Brush","Legend","entry","ChartTooltip","Bar","stackId","getDrugClasses","noWrap","frequenciesGraph","labelWrapper","dataViewSelectInput","dataViewSelectMenu","genotypesSelectInput","genotypesSelectButton","genotypesMenuPaper","genotypesSelectMenu","FrequenciesGraph","searchValue2","setSearchValue2","getSelectGenotypeLabel","genotypeDataPercentage","drugs","handleChangeSelectedGenotypes","all","toUpperCase","multiple","renderValue","SearchIcon","e","setSearchValue","preventDefault","drugResistanceGraph","selectButton","noYearSelected","DrugResistanceGraph","drugDataPercentage","getDrugs","handleChangeDrugsView","newValues","hasValue","LineChart","tickCount","Line","connectNulls","activeDot","distributionGraph","selectLabel","DistributionGraph","trendsKPGraph","legendDivider","tooltipSubTitle","TrendsKPGraph","tooltipTab","setTooltipTab","_genotypesAndDrugsYea","percentageData","genes","_genotypesAndDrugsYea2","_genotypesAndDrugsYea3","_colorForDrugClassesK4","ComposedChart","_colorForDrugClassesK","_colorForDrugClassesK2","diviserIndex","_colorForDrugClassesK3","Fragment","Tabs","_","Tab","KODiversityGraph","diversity","_KODiversityData$KODi","convergenceGraph","noBubbleSelected","ConvergenceGraph","ScatterChart","ZAxis","range","_payload$","Scatter","Cell","colorLabel","z","Graphs","chartLoadings","setCharLoadings","context","mobileFactor","yPosition","beginPath","arc","PI","closePath","handleClickDownload","handleLoading","quality","heightFactor","logoPromise","CardActions","disableSpacing","handleExpandClick","d","drugRulesST","columnID","drugRulesForDrugResistanceGraphST","drugRulesKP","columnIDs","drugClassesRulesST","susceptible","rules","drugClassesRulesKP","filterData","newData","checkDataset","TRAVEL","DATE","checkTime","Set","genomesCount","genotypesCount","getCountryDisplayName","COUNTRY_ONLY","getMapStatsData","columnKey","statsKey","columnData","getMapData","_ref3","countries","getYearsData","_ref4","getUniqueGenotypes","drugsData","genotypesAndDrugsData","uniqueGenotypes","genotypesAndDrugsDataUniqueGenotypes","genotypesData","yearData","toString","reduce","accumulator","currentValue","drugStats","rule","drugData","num_resistance_classes","filteredGenotypes","fromEntries","_ref5","_ref6","apply","drugClass","getKPDrugClassData","drugKey","dataToFilter","sortedStats","_ref7","_ref8","unique","getGenotypesData","_ref9","genotypeData","drugClassResponse","classRule","classRuleName","every","KO_MDR","KO_HV","getKODiversityData","_ref10","K_locus","O_locus","keyData","diversityData","Hv","Bla_Carb_acquired","Bla_ESBL_acquired","aerobactin","Aerobactin","rmpADC","RmpADC","neither","unknownData","total","getVariableValue","dataItem","variable","getConvergenceData","_ref11","groupVariable","colourVariable","variablesCombinations","colourVariables","combination","combinedData","variables","splitCombination","virulence_score","resistance_score","isSusceptible","gene","_ref12","resistantData","g","resistantGenes","ResetButton","Fab","RestartAlt","SelectCountry","DashboardPage","currentConvergenceGroupVariable","setCurrentConvergenceGroupVariable","currentConvergenceColourVariable","setCurrentConvergenceColourVariable","yearsForFilter","endpoint","responseData","genotypeDataGreaterThanZero","yearsData","getInfoFromData","paragraph","AboutPage","href","rel","UserGuidePage","DatabasePage","DocumentationPage","submitButton","defaultValues","lastName","email","requiredValues","RegExp","ContactPage","formValues","setFormValues","formErrors","setFormErrors","handleChange","required","helperText","errors","test","alert","store","configureStore","reducer","appReducer","deashboardReducer","mapReducer","graphReducer","middleware","getDefaultMiddleware","serializableCheck","createTheme","main","typography","ReactDOM","render","StrictMode","HashRouter","Provider","ThemeProvider","Routes","Route","path","URL","process","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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AEb4M,iBAAkB,CAChBC,OAAQ,WAEVC,YAAa,CACXnhB,SAAU,kBACVmB,WAAY,iBACZ3B,UAAW,SAEb4hB,WAAY,CACV,sBAAuB,CACrBphB,SAAU,SAGdqhB,cAAe,CACbnkB,UAAW,MACXO,UAAW,QACXgf,UAAW,QAEb6E,OAAQ,CACNljB,QAAS,OACTiB,WAAY,UAEdkiB,eAAgB,CACd3jB,MAAO,OACPE,OAAQ,OACRC,YAAa,OAEfyjB,WAAY,CACVxhB,SAAU,QAEZyhB,MAAO,CAAC,MCvDG9D,GAAY,CAEvB,IACA,QACA,QACA,QACA,MACA,QACA,QACA,QACA,IACA,MACA,QACA,QACA,QACA,QACA,MACA,QACA,IACA,QACA,QACA,MACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,MACA,QACA,QACA,QACA,QACA,MACA,QACA,QACA,QACA,QACA,QACA,MACA,QACA,MACA,QACA,QACA,IACA,QACA,QACA,MACA,QACA,QACA,MACA,QACA,QACA,MACA,QACA,QACA,YACA,YACA,MACA,MACA,QACA,QACA,QACA,QACA,UACA,UACA,UACA,IACA,MACA,QACA,MACA,QACA,QACA,QACA,QACA,UACA,aACA,cACA,UACA,cACA,cACA,YACA,cACA,UACA,eACA/V,MAAK,CAACtB,EAAGC,IAAMD,EAAEob,cAAcnb,KC1FpBob,GAAa,CACxB,CAAEtX,MAAO,MAAOqI,MAAO,4BAA6BkH,UAAW,CAAC,UAChE,CAAEvP,MAAO,MAAOqI,MAAO,mCAAoCkH,UAAW,CAAC,UACvE,CAAEvP,MAAO,SAAUqI,MAAO,yBAA0BkH,UAAW,CAAC,UAChE,CAAEvP,MAAO,QAASqI,MAAO,wCAAyCkH,UAAW,CAAC,UAC9E,CAAEvP,MAAO,OAAQqI,MAAO,iCAAkCkH,UAAW,CAAC,UACtE,CAAEvP,MAAO,OAAQqI,MAAO,OAAQkH,UAAW,CAAC,UAC5C,CAAEvP,MAAO,OAAQqI,MAAO,cAAekH,UAAW,CAAC,UACnD,CAAEvP,MAAO,yBAA0BqI,MAAO,yBAA0BkH,UAAW,CAAC,QAAS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","file":"static/js/main.3f93ed30.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// capture the user experience of a web page\r\n\r\nconst reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { withStyles, makeStyles } from '@mui/styles';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Button from '@mui/material/Button';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\n// CircularProgress for 'Submit data' and 'Look for changes' dialogs\r\nconst CustomCircularProgress = withStyles({\r\n  root: {\r\n    color: 'rgb(31, 187, 211)'\r\n  }\r\n})(CircularProgress);\r\n\r\n// CSS like classes\r\nconst useStyles = makeStyles({\r\n  cellON: {\r\n    backgroundColor: '#e9f9fc'\r\n  },\r\n  off: {},\r\n  tableID: {\r\n    position: 'sticky',\r\n    right: 0\r\n  },\r\n  tablePadding: {\r\n    marginTop: '16px'\r\n  },\r\n  actionsCell: {\r\n    borderLeft: '1px solid rgba(224, 224, 224, 1)',\r\n    backgroundColor: 'white'\r\n  },\r\n  stickyCell: {\r\n    position: 'sticky',\r\n    right: 0,\r\n    borderLeft: '1px solid rgba(224, 224, 224, 1)',\r\n    backgroundColor: 'white'\r\n  },\r\n  actionsHeaderCell: {\r\n    backgroundColor: 'black',\r\n    color: 'white',\r\n    borderLeft: '1px solid rgba(224, 224, 224, 1)'\r\n  },\r\n  stickyHeaderCell: {\r\n    position: 'sticky',\r\n    right: 0,\r\n    backgroundColor: 'black',\r\n    color: 'white',\r\n    borderLeft: '1px solid rgba(224, 224, 224, 1)'\r\n  },\r\n  changesTable: {\r\n    maxHeight: '400px',\r\n    marginBottom: 32\r\n  },\r\n  viewButton: {\r\n    width: 80\r\n  },\r\n  resetButton: {\r\n    width: 150,\r\n    height: 40,\r\n    marginRight: 16,\r\n    marginLeft: 16\r\n  },\r\n  uploadButton: {\r\n    width: 150,\r\n    height: 40\r\n  },\r\n  checkChangesButton: {\r\n    width: 100,\r\n    height: 40\r\n  },\r\n  dialog: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap'\r\n  },\r\n  input: {\r\n    marginBottom: 16\r\n  },\r\n  input2: {\r\n    marginBottom: 16\r\n  },\r\n  currentData: {\r\n    backgroundColor: 'black',\r\n    color: 'white',\r\n    whiteSpace: 'nowrap',\r\n    paddingRight: 8\r\n  },\r\n  toolbar: {\r\n    backgroundColor: 'black',\r\n    borderBottom: '1px solid white',\r\n    justifyContent: 'space-between'\r\n  },\r\n  deleteSelected: {\r\n    color: 'red'\r\n  },\r\n  checkboxCell: {\r\n    backgroundColor: 'black'\r\n  },\r\n  checkbox: {\r\n    color: 'white'\r\n  },\r\n  tableRowRoot: {\r\n    '&$tableRowSelected, &$tableRowSelected:hover': {\r\n      backgroundColor: '#e9f9fc'\r\n    }\r\n  },\r\n  tableRowSelected: {\r\n    backgroundColor: '#e9f9fc'\r\n  },\r\n  box: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingLeft: 16\r\n  },\r\n  select: {\r\n    textAlign: 'right',\r\n    paddingLeft: 8,\r\n    textAlignLast: 'right',\r\n    minWidth: 50,\r\n    userSelect: 'none',\r\n    borderRadius: 0,\r\n    font: 'inherit',\r\n    letterSpacing: 'inherit',\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontSize: 14,\r\n    backgroundColor: 'transparent',\r\n    '&:focus': {\r\n      backgroundColor: 'transparent'\r\n    },\r\n    marginRight: 12\r\n  },\r\n  choosePage: {\r\n    opacity: 0.87,\r\n    whiteSpace: 'nowrap',\r\n    paddingLeft: 8\r\n  },\r\n  selectFilter: {\r\n    backgroundColor: 'white',\r\n    textAlign: 'start'\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'stretch'\r\n  },\r\n  headerTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start'\r\n  },\r\n  rowHeader: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'flex-start'\r\n  },\r\n  deleteChangeButton: {\r\n    backgroundColor: 'grey',\r\n    width: 35,\r\n    borderRadius: 5,\r\n    color: 'white',\r\n    border: '1px solid rgba(0, 0, 0, 0.23)',\r\n    '&:hover': {\r\n      color: 'white',\r\n      backgroundColor: '#4F4F4F'\r\n    }\r\n  },\r\n  searchInputWrapper: {\r\n    width: '-webkit-fill-available',\r\n    maxWidth: '300px'\r\n  },\r\n  searchInput: {\r\n    backgroundColor: 'white'\r\n  }\r\n});\r\n\r\n// Load button from the changes table\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: 'grey',\r\n    color: 'white',\r\n    '&:hover': {\r\n      color: 'white',\r\n      backgroundColor: '#4F4F4F'\r\n    },\r\n    marginRight: '16px'\r\n  }\r\n}))(Button);\r\n\r\n// 'Reset changes' and 'Add new entry' buttons\r\nconst ColorButton3 = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: 'white',\r\n    color: '#1FBBD3',\r\n    '&:hover': {\r\n      color: 'black',\r\n      backgroundColor: '#CFCFCF'\r\n    },\r\n    borderColor: '#1FBBD3'\r\n  }\r\n}))(Button);\r\n\r\n// Submit changes button\r\nconst ColorButton4 = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: '#1FBBD3',\r\n    color: 'white',\r\n    '&:hover': {\r\n      color: 'white',\r\n      backgroundColor: '#188C9E'\r\n    }\r\n  }\r\n}))(Button);\r\n\r\n// Refresh button\r\nconst ColorButton5 = withStyles((theme) => ({\r\n  root: {\r\n    color: 'black',\r\n    borderColor: 'black',\r\n    backgroundColor: 'transparent',\r\n    '&:hover': {\r\n      backgroundColor: '#CFCFCF'\r\n    },\r\n    fontWeight: 'bold'\r\n  }\r\n}))(Button);\r\n\r\n// Header cell for both tables\r\nconst StyledHeaderCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell);\r\n\r\n// Wrapper for data table\r\nconst CustomTableContainer = withStyles((theme) => ({\r\n  root: {\r\n    maxHeight: '600px'\r\n  }\r\n}))(TableContainer);\r\n\r\n// Label for header cells from the data table with order buttons\r\nconst CustomTableSortLabel = withStyles((theme) => ({\r\n  root: {\r\n    color: 'white',\r\n    '&:hover': {\r\n      color: 'white'\r\n    },\r\n    '&$active': {\r\n      color: 'white'\r\n    }\r\n  },\r\n  active: {},\r\n  icon: {\r\n    color: 'inherit !important'\r\n  }\r\n}))(TableSortLabel);\r\n\r\nexport {\r\n  useStyles,\r\n  ColorButton,\r\n  ColorButton3,\r\n  ColorButton4,\r\n  ColorButton5,\r\n  StyledHeaderCell,\r\n  CustomTableContainer,\r\n  CustomTableSortLabel,\r\n  CustomCircularProgress\r\n};\r\n","// Static routes to run the app. Only use one: local or heroku.\r\n//export const API_ENDPOINT = 'http://localhost:8080/api/';\r\nexport const API_ENDPOINT = 'https://amrnetdev-c321a2c459c0.herokuapp.com/api/';\r\n","import './index.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n  Tooltip,\r\n  Toolbar,\r\n  Typography,\r\n  Checkbox,\r\n  Box,\r\n  IconButton,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputAdornment\r\n} from '@mui/material';\r\nimport {\r\n  FirstPage,\r\n  LastPage,\r\n  KeyboardArrowLeft,\r\n  KeyboardArrowRight,\r\n  DeleteOutline,\r\n  Info,\r\n  Edit,\r\n  Search,\r\n  Close\r\n} from '@mui/icons-material';\r\nimport {\r\n  useStyles,\r\n  ColorButton,\r\n  ColorButton3,\r\n  ColorButton4,\r\n  ColorButton5,\r\n  StyledHeaderCell,\r\n  CustomTableContainer,\r\n  CustomTableSortLabel,\r\n  CustomCircularProgress\r\n} from './materialUI';\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport axios from 'axios';\r\nimport LZString from 'lz-string';\r\nimport Loader from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/styles';\r\n\r\nfunction createData(id, date, changes) {\r\n  return { id, date, changes };\r\n}\r\n\r\nexport const AdminPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [currentData, setCurrentData] = useState(0);\r\n  const [tableKeys, setTableKeys] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('NAME');\r\n  const [currentRow, setCurrentRow] = useState({});\r\n  const [open, setOpen] = React.useState(false);\r\n  const [open2, setOpen2] = React.useState(false);\r\n  const [open3, setOpen3] = React.useState(false);\r\n  const [open4, setOpen4] = React.useState(false);\r\n  const [open5, setOpen5] = React.useState(false);\r\n  const [open6, setOpen6] = React.useState(false);\r\n  const [open7, setOpen7] = React.useState(false);\r\n  const [open8, setOpen8] = React.useState(false);\r\n  const [resultMessage, setResultMessage] = React.useState('');\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [search, setSearch] = React.useState('');\r\n  const [filters, setFilters] = React.useState({});\r\n  const [filterOptions, setFilterOptions] = React.useState({});\r\n  const [filteredData, setFilteredData] = React.useState([]);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [startProgress, setStartProgress] = React.useState(false);\r\n  const [loadingMessage, setLoadingMessage] = React.useState('');\r\n  const [currentChange, setCurrentChange] = React.useState(null);\r\n\r\n  const [exceptions] = React.useState([\r\n    'NAME',\r\n    'ACCESION',\r\n    'Genome ID',\r\n    'LATITUDE',\r\n    'LONGITUDE',\r\n    'LOCATION',\r\n    'Mash Distance',\r\n    'Matching Hashes',\r\n    'SANGER LANE',\r\n    'STRAIN'\r\n  ]);\r\n\r\n  // Change table page\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  // Change number of rows per page and return to first page\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // Sort table by selected column in asc or desc\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  // Helper function for getComparator\r\n  function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  // Main function to return data ordered to table\r\n  function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n\r\n  // Comparator to order table for stableSort\r\n  function getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n\r\n  // Change current view of the table to another ID, this also resets all changes made on the table\r\n  function changeView(id) {\r\n    resetChanges();\r\n    setData(originalData);\r\n    const aux = JSON.parse(JSON.stringify(data));\r\n    if (id > 0) {\r\n      for (let index = 0; index < id; index++) {\r\n        Object.keys(rows[index].changes.added).forEach((element) => {\r\n          const genome = rows[index].changes.added[element];\r\n          const gIndex = aux.findIndex((x) => x.NAME === genome.NAME);\r\n          aux.splice(gIndex, 1);\r\n        });\r\n\r\n        Object.keys(rows[index].changes.deleted).forEach((element) => {\r\n          const genome = rows[index].changes.deleted[element];\r\n          aux.push(genome);\r\n          aux.sort((a, b) => (a.NAME < b.NAME ? -1 : 1));\r\n        });\r\n\r\n        Object.keys(rows[index].changes.updated).forEach((element) => {\r\n          const keys = rows[index].changes.updated[element];\r\n          for (const key in keys) {\r\n            const genome = aux.filter((x) => x.NAME === element);\r\n            if (genome.length > 0) {\r\n              genome[0][key] = keys[key].old;\r\n            }\r\n          }\r\n        });\r\n      }\r\n      setData(aux);\r\n    }\r\n    setCurrentData(id);\r\n  }\r\n\r\n  // Beautify text for changes\r\n  function betterChanges(changes) {\r\n    const aux = JSON.parse(JSON.stringify(changes));\r\n    const added = Object.keys(aux.added).length > 0 ? Object.keys(aux.added).join(', ') + '.' : '';\r\n    const deleted = Object.keys(aux.deleted).length > 0 ? Object.keys(aux.deleted).join(', ') + '.' : '';\r\n    let updated = '';\r\n\r\n    if (Object.keys(aux.updated).length > 0) {\r\n      updated = Object.entries(aux.updated).map((x) => {\r\n        const updates = Object.entries(x[1]);\r\n        const changes = updates.map((y, i) => {\r\n          const point = i === updates.length - 1 ? '.' : '';\r\n          return y[0] + ' (new: ' + y[1].new + ', old: ' + y[1].old + ')' + point;\r\n        });\r\n        return x[0] + ': ' + changes.join(', ');\r\n      });\r\n    }\r\n\r\n    const text = [];\r\n    if (added !== '') text.push(['ADDED', added]);\r\n    if (deleted !== '') text.push(['DELETED', deleted]);\r\n    if (updated !== '') text.push(['UPDATED', updated]);\r\n    return text;\r\n  }\r\n\r\n  // The five handlers below are mediators between the button and the dialog. They set specific informations before opening the dialogs.\r\n  function handleDelete(row) {\r\n    setCurrentRow(row);\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleDeleteChange(id) {\r\n    setCurrentChange(id);\r\n    setOpen8(true);\r\n  }\r\n\r\n  function handleEdit(row) {\r\n    setCurrentRow(row);\r\n    setOpen2(true);\r\n  }\r\n\r\n  function handleUpload() {\r\n    setOpen4(true);\r\n  }\r\n\r\n  function handleCheckChanges(message) {\r\n    setResultMessage(message);\r\n    setOpen5(true);\r\n  }\r\n\r\n  // Delete chosen change\r\n  async function deleteChange() {\r\n    axios\r\n      .post(`${API_ENDPOINT}mongo/deleteChange`, { id: currentChange - 1 })\r\n      .then((res) => {\r\n        getChangeData(res.data);\r\n        setCurrentData(0);\r\n      })\r\n      .finally(() => {\r\n        setOpen8(false);\r\n      });\r\n  }\r\n\r\n  // Check if there were any new changes on the database and updates the table\r\n  async function checkChanges(showPopup = true) {\r\n    setStartProgress(true);\r\n    setLoading(true);\r\n    return await axios\r\n      .get(`${API_ENDPOINT}mongo/checkForChanges`)\r\n      .then(async (res) => {\r\n        if (res.data.Status === 'Changes') {\r\n          await resetChanges();\r\n          await getData();\r\n          if (showPopup) {\r\n            handleCheckChanges('Changes were found. Tables updated.');\r\n          }\r\n          return true;\r\n        } else if (res.data.Status === 'No Changes') {\r\n          if (showPopup) {\r\n            handleCheckChanges('No changes found.');\r\n          }\r\n          return false;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (showPopup) {\r\n          handleCheckChanges('Could not check for changes. Try again later.');\r\n        }\r\n        return false;\r\n      })\r\n      .finally(() => {\r\n        setOpen7(false);\r\n        setLoading(false);\r\n        setStartProgress(false);\r\n      });\r\n  }\r\n\r\n  // Handler for select all rows button\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = filteredData.map((n) => n.NAME);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  // Handler for selecting specific row\r\n  const handleClick = (name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  // Delete selected row\r\n  function deleteRow() {\r\n    const index = data.findIndex((x) => x.NAME === currentRow.NAME);\r\n    const aux = JSON.parse(JSON.stringify(data));\r\n    aux.splice(index, 1);\r\n    setData(aux);\r\n    setOpen(false);\r\n  }\r\n\r\n  // If more than one row is selected than delete all of them\r\n  function deleteRows() {\r\n    const aux = JSON.parse(JSON.stringify(filteredData));\r\n    const aux2 = JSON.parse(JSON.stringify(data));\r\n    selected.forEach((row) => {\r\n      const index = aux.findIndex((x) => x.NAME === row);\r\n      if (index !== -1) {\r\n        aux.splice(index, 1);\r\n      }\r\n      const index2 = aux2.findIndex((x) => x.NAME === row);\r\n      if (index2 !== -1) {\r\n        aux2.splice(index2, 1);\r\n      }\r\n    });\r\n    setData(aux2);\r\n    setFilteredData(aux);\r\n    setSelected([]);\r\n    setOpen6(false);\r\n  }\r\n\r\n  // Edit selected row\r\n  function editRow() {\r\n    const row = {};\r\n    const aux = JSON.parse(JSON.stringify(data));\r\n\r\n    const rowIndex = aux.findIndex((x) => x.NAME === currentRow.NAME);\r\n\r\n    const inputs = document.getElementsByClassName('MuiOutlinedInput-input');\r\n    Object.values(inputs).forEach((input) => {\r\n      row[input.id] = input.value;\r\n    });\r\n\r\n    aux[rowIndex] = row;\r\n    setData(aux);\r\n    setOpen2(false);\r\n    setResultMessage(`Row ${currentRow.NAME} edited with success!`);\r\n    setOpen5(true);\r\n  }\r\n\r\n  // Add new row\r\n  function addRow() {\r\n    const row = {};\r\n    const aux = JSON.parse(JSON.stringify(data));\r\n\r\n    const inputs = document.getElementsByClassName('MuiOutlinedInput-input');\r\n    Object.values(inputs).forEach((input) => {\r\n      row[input.id] = input.value;\r\n    });\r\n\r\n    aux.push(row);\r\n    aux.sort((a, b) => (a.NAME < b.NAME ? -1 : 1));\r\n    setData(aux);\r\n    setOpen3(false);\r\n    setResultMessage(`Row ${row.NAME} added with success!`);\r\n    setOpen5(true);\r\n  }\r\n\r\n  // Reset all changes made on the table\r\n  async function resetChanges() {\r\n    setSearch('');\r\n    let aux = JSON.parse(JSON.stringify(filters));\r\n    for (const key in aux) {\r\n      aux[key] = '';\r\n    }\r\n    setFilters(aux);\r\n    setPage(0);\r\n    setRowsPerPage(10);\r\n    setCurrentData(0);\r\n    setData(originalData);\r\n  }\r\n\r\n  // Upload changes on the current table to the database\r\n  function uploadChanges() {\r\n    setLoading(true);\r\n    setStartProgress(true);\r\n    setResultMessage('');\r\n    const times = Math.ceil(data.length / 1500);\r\n    const parts = [];\r\n    for (let index = 0; index < times; index++) {\r\n      if (times === 0) {\r\n        break;\r\n      }\r\n      if (times === index - 1) {\r\n        if (times === 1) {\r\n          parts.push([data]);\r\n        } else {\r\n          parts.push([data.slice((times - 1) * 1500)]);\r\n        }\r\n      } else {\r\n        parts.push([data.slice(index * 1500, index * 1500 + 1500)]);\r\n      }\r\n      axios\r\n        .post(`${API_ENDPOINT}mongo/upload/admin`, {\r\n          data: LZString.compress(JSON.stringify(parts[parts.length - 1])),\r\n          parts: times,\r\n          current: index + 1\r\n        })\r\n        .then((res) => {\r\n          if (res.data !== '' && res.data.Status === 'Uploaded') {\r\n            axios\r\n              .get(`${API_ENDPOINT}mongo/download`)\r\n              .then(async () => {\r\n                await checkChanges();\r\n                setResultMessage('Upload and download completed!');\r\n              })\r\n              .catch(() => {\r\n                setResultMessage('Something went wrong with the download, please try again later!');\r\n              })\r\n              .finally(() => {\r\n                setStartProgress(false);\r\n                setLoading(false);\r\n                setOpen4(false);\r\n                setOpen5(true);\r\n              });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setStartProgress(false);\r\n          setLoading(false);\r\n          setOpen4(false);\r\n          setResultMessage('Something went wrong with the upload, please try again later!');\r\n          setOpen5(true);\r\n        });\r\n    }\r\n  }\r\n\r\n  // Helper for function getData to get only the changes\r\n  function getChangeData(changeData) {\r\n    let aux = [];\r\n    for (let index = 0; index < changeData.length - 1; index++) {\r\n      const date = new Date(changeData[index].updatedAt);\r\n      aux.push(createData(index + 1, date.toLocaleString(), changeData[index].changes));\r\n    }\r\n    setRows(aux);\r\n  }\r\n\r\n  // Main function to get data for all the admin page\r\n  async function getData() {\r\n    await axios.get(`${API_ENDPOINT}file/databaseLog`).then((res) => {\r\n      let data = res.data;\r\n\r\n      getChangeData(data);\r\n\r\n      let aux2 = Object.values(data[data.length - 1].data);\r\n      let aux4 = {};\r\n      let aux5 = {};\r\n\r\n      Object.keys(aux2[0]).forEach((key) => {\r\n        if (!exceptions.includes(key)) {\r\n          aux4[key] = '';\r\n          aux5[key] = [];\r\n          let options = aux2.map((value) => value[key]);\r\n          options.forEach((x) => {\r\n            if (!aux5[key].includes(x)) {\r\n              aux5[key].push(x);\r\n            }\r\n          });\r\n          aux5[key].sort();\r\n        }\r\n      });\r\n\r\n      setData(aux2);\r\n      setFilters(aux4);\r\n      setFilterOptions(aux5);\r\n      setFilteredData(JSON.parse(JSON.stringify(aux2)));\r\n      setOriginalData(JSON.parse(JSON.stringify(aux2)));\r\n      setTableKeys(Object.keys(aux2[0]));\r\n    });\r\n  }\r\n\r\n  // Check for changes when admin page is opened and get data\r\n  useEffect(() => {\r\n    setLoadingMessage('Checking for changes...');\r\n    checkChanges(false)\r\n      .then((response) => {\r\n        if (!response) {\r\n          getData().finally(() => {\r\n            setIsLoading(false);\r\n          });\r\n        } else {\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setLoadingMessage('');\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // Watcher for filtering columns and search\r\n  useEffect(() => {\r\n    let aux = JSON.parse(JSON.stringify(data));\r\n    if (search === '' && Object.values(filters).join('') === '') {\r\n      setFilteredData(aux);\r\n    } else {\r\n      let s = search.toLowerCase();\r\n\r\n      aux = aux.filter((x) => {\r\n        let pass = true;\r\n        Object.keys(x).forEach((y) => {\r\n          if (!exceptions.includes(y) && filters[y] !== '' && x[y] !== filters[y]) {\r\n            pass = false;\r\n          }\r\n          if (search !== '' && !Object.values(x).join(' ').toLowerCase().includes(s)) {\r\n            pass = false;\r\n          }\r\n        });\r\n        return pass;\r\n      });\r\n\r\n      setFilteredData(aux);\r\n    }\r\n  }, [search, data, filters, exceptions]);\r\n\r\n  // Component table toolbar (Above table header)\r\n  const EnhancedTableToolbar = (props) => {\r\n    const { numSelected } = props;\r\n\r\n    return (\r\n      <Toolbar className={classes.toolbar}>\r\n        {numSelected > 0 ? (\r\n          <Typography\r\n            sx={{ flex: '1 1 100%' }}\r\n            color=\"inherit\"\r\n            variant=\"subtitle1\"\r\n            component=\"div\"\r\n            className={classes.currentData}\r\n          >\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography\r\n            sx={{ flex: '1 1 100%' }}\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n            className={classes.currentData}\r\n          >\r\n            <b>DATA ID:</b> {currentData}\r\n          </Typography>\r\n        )}\r\n\r\n        <TextField\r\n          className={classes.searchInputWrapper}\r\n          placeholder=\"Search and press enter...\"\r\n          variant=\"outlined\"\r\n          defaultValue={search}\r\n          InputProps={{\r\n            className: classes.searchInput,\r\n            id: 'search-input',\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Search />\r\n              </InputAdornment>\r\n            ),\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={() => {\r\n                    document.getElementById('search-input').value = '';\r\n                    setSearch('');\r\n                    setPage(0);\r\n                  }}\r\n                  edge=\"end\"\r\n                >\r\n                  <Close />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n            onKeyDown: (event) => {\r\n              if (event.key === 'Enter') {\r\n                const value = document.getElementById('search-input').value;\r\n                setSearch(value);\r\n                setPage(0);\r\n              }\r\n            }\r\n          }}\r\n        />\r\n\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton onClick={() => setOpen6(true)}>\r\n              {/* <FontAwesomeIcon\r\n                icon={faTrashAlt}\r\n                className={classes.deleteSelected}\r\n              /> */}\r\n              <DeleteOutline />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : null}\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  // Component table header\r\n  function EnhancedTableHead(props) {\r\n    const { classes, order, orderBy, onRequestSort, onSelectAllClick, numSelected, rowCount } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n      data.length > 0 && (\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell padding=\"checkbox\" className={classes.checkboxCell}>\r\n              <Checkbox\r\n                color=\"primary\"\r\n                indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                checked={rowCount > 0 && numSelected === rowCount}\r\n                onChange={onSelectAllClick}\r\n                className={classes.checkbox}\r\n              />\r\n            </TableCell>\r\n            {tableKeys.map((headCell) => (\r\n              <StyledHeaderCell\r\n                key={headCell + 'table'}\r\n                align={'center'}\r\n                sortDirection={orderBy === headCell ? order : false}\r\n              >\r\n                <CustomTableSortLabel\r\n                  active={orderBy === headCell}\r\n                  direction={orderBy === headCell ? order : 'asc'}\r\n                  onClick={createSortHandler(headCell)}\r\n                  className={classes.rowHeader}\r\n                >\r\n                  <div className={classes.header}>\r\n                    <div className={classes.headerTitle}>{headCell}</div>\r\n                    {!exceptions.includes(headCell) && (\r\n                      <FormControl>\r\n                        <Select\r\n                          value={filters[headCell]}\r\n                          onChange={(event) => {\r\n                            setPage(0);\r\n                            let aux = JSON.parse(JSON.stringify(filters));\r\n                            aux[headCell] = event.target.value;\r\n                            setFilters(aux);\r\n                            event.stopPropagation();\r\n                          }}\r\n                          displayEmpty\r\n                          className={classes.selectFilter}\r\n                          onOpen={(event) => event.stopPropagation()}\r\n                          onClose={(event) => event.stopPropagation()}\r\n                        >\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          {filterOptions[headCell].map((option, i) => (\r\n                            <MenuItem key={i + option} value={option}>\r\n                              {option}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    )}\r\n                  </div>\r\n                </CustomTableSortLabel>\r\n              </StyledHeaderCell>\r\n            ))}\r\n            <TableCell className={classes.stickyHeaderCell}>\r\n              <div className=\"actions\">ACTIONS</div>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n      )\r\n    );\r\n  }\r\n\r\n  // Get number of pages for the table\r\n  function NumberOfPages() {\r\n    return Math.ceil(filteredData.length / rowsPerPage);\r\n  }\r\n\r\n  // Component TablePaginationActions\r\n  function TablePaginationActions(props) {\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n      onPageChange(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n      onPageChange(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n      onPageChange(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n      onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n      <Box sx={{ flexShrink: 0, ml: 2.5 }} className={classes.box}>\r\n        <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n          {theme.direction === 'rtl' ? <LastPage /> : <FirstPage />}\r\n        </IconButton>\r\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"next page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"last page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <FirstPage /> : <LastPage />}\r\n        </IconButton>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  TablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <div className=\"mainDiv\">\r\n      <div className=\"mainDiv-padding\">\r\n        <div className=\"titleActions\">\r\n          <div className=\"titleButtonRow\">\r\n            <h2 className=\"title\">MongoDB Admin Page</h2>\r\n          </div>\r\n          <div className=\"tooltipSubmitRow\">\r\n            <ColorButton5\r\n              onClick={() => {\r\n                setOpen7(true);\r\n              }}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.checkChangesButton}\r\n            >\r\n              Refresh\r\n            </ColorButton5>\r\n            <Tooltip\r\n              title={\r\n                <div className=\"tooltipTitle\">\r\n                  Changes are only saved by pressing the <b className=\"boldTooltipText\">SUBMIT CHANGES</b> button\r\n                </div>\r\n              }\r\n              placement=\"left\"\r\n            >\r\n              <IconButton>\r\n                {/* <FontAwesomeIcon icon={faInfoCircle} /> */}\r\n                <Info />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <ColorButton4\r\n              onClick={() => {\r\n                handleUpload();\r\n              }}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.uploadButton}\r\n            >\r\n              Submit changes\r\n            </ColorButton4>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper} className={classes.changesTable}>\r\n          <Table stickyHeader size=\"small\" aria-label=\"a dense table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledHeaderCell>ID</StyledHeaderCell>\r\n                <StyledHeaderCell>Date</StyledHeaderCell>\r\n                <StyledHeaderCell align=\"left\">Changes</StyledHeaderCell>\r\n                <StyledHeaderCell className={classes.actionsHeaderCell} align=\"left\">\r\n                  Actions\r\n                </StyledHeaderCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow key={'00changes'} className={currentData === 0 ? classes.cellON : classes.off}>\r\n                <TableCell align=\"left\">{0}</TableCell>\r\n                <TableCell align=\"left\"></TableCell>\r\n                <TableCell align=\"left\" width=\"70%\">\r\n                  {'CURRENT DATA'}\r\n                </TableCell>\r\n                <TableCell align=\"left\" className={classes.actionsCell}>\r\n                  <div className=\"tableActions\">\r\n                    <ColorButton\r\n                      onClick={() => changeView(0)}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      className={classes.viewButton}\r\n                    >\r\n                      Load\r\n                    </ColorButton>\r\n                  </div>\r\n                </TableCell>\r\n              </TableRow>\r\n              {rows.map((row, r) => (\r\n                <TableRow key={row.id + 'changes'} className={row.id === currentData ? classes.cellON : classes.off}>\r\n                  <TableCell align=\"left\">{row.id}</TableCell>\r\n                  <TableCell align=\"left\">{row.date}</TableCell>\r\n                  <TableCell align=\"left\" width=\"70%\">\r\n                    {betterChanges(row.changes).map((text, t) => (\r\n                      <div key={`${r}${t}change`} className=\"changesText\">\r\n                        <div>{text[0]}</div>\r\n                        &nbsp;{'entries with name:'}&nbsp;\r\n                        {text[0] !== 'UPDATED' ? (\r\n                          <div>{text[1]}</div>\r\n                        ) : (\r\n                          <div>\r\n                            {Object.values(text[1]).map((x, i) => (\r\n                              <div key={x + i}>{x}</div>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\" className={classes.actionsCell}>\r\n                    <div className=\"tableActions\">\r\n                      <ColorButton\r\n                        onClick={() => changeView(row.id)}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className={classes.viewButton}\r\n                      >\r\n                        Load\r\n                      </ColorButton>\r\n                      <IconButton\r\n                        aria-label=\"deleteChange\"\r\n                        size=\"small\"\r\n                        className={classes.deleteChangeButton}\r\n                        onClick={() => handleDeleteChange(row.id)}\r\n                      >\r\n                        {/* <FontAwesomeIcon icon={faTrashAlt} /> */}\r\n                        <DeleteOutline />\r\n                      </IconButton>\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <div className=\"addButton\">\r\n          <ColorButton4\r\n            onClick={() => {\r\n              handleUpload();\r\n            }}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.uploadButton}\r\n          >\r\n            Submit changes\r\n          </ColorButton4>\r\n          <ColorButton3\r\n            onClick={() => {\r\n              resetChanges();\r\n            }}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.resetButton}\r\n          >\r\n            Reset changes\r\n          </ColorButton3>\r\n          <ColorButton3\r\n            onClick={() => {\r\n              setOpen3(true);\r\n            }}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.uploadButton}\r\n          >\r\n            Add new entry\r\n          </ColorButton3>\r\n        </div>\r\n        <Paper className={classes.tablePadding}>\r\n          <EnhancedTableToolbar numSelected={selected.length} />\r\n          <CustomTableContainer>\r\n            <Table stickyHeader size=\"small\" aria-label=\"a dense table\">\r\n              <EnhancedTableHead\r\n                numSelected={selected.length}\r\n                classes={classes}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onRequestSort={handleRequestSort}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                rowCount={filteredData.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(filteredData, getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = isSelected(row.NAME);\r\n                    return (\r\n                      <TableRow\r\n                        key={row.NAME + index}\r\n                        className={classes.dataRow}\r\n                        role=\"checkbox\"\r\n                        hover\r\n                        aria-checked={isItemSelected}\r\n                        selected={isItemSelected}\r\n                        classes={{\r\n                          selected: classes.tableRowSelected,\r\n                          root: classes.tableRowRoot\r\n                        }}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox color=\"primary\" checked={isItemSelected} onClick={() => handleClick(row.NAME)} />\r\n                        </TableCell>\r\n                        {Object.values(row).map((cell) => (\r\n                          <TableCell key={Math.random() + 'cell'} align=\"center\">\r\n                            {cell}\r\n                          </TableCell>\r\n                        ))}\r\n                        <TableCell align=\"center\" className={classes.stickyCell}>\r\n                          <div className=\"tableActions\">\r\n                            <IconButton\r\n                              aria-label=\"edit\"\r\n                              size=\"small\"\r\n                              onClick={() => handleEdit(JSON.parse(JSON.stringify(row)))}\r\n                            >\r\n                              {/* <FontAwesomeIcon\r\n                                icon={faEdit}\r\n                                className=\"editIcon\"\r\n                              /> */}\r\n                              <Edit />\r\n                            </IconButton>\r\n                            <IconButton\r\n                              aria-label=\"delete\"\r\n                              size=\"small\"\r\n                              onClick={() => handleDelete(JSON.parse(JSON.stringify(row)))}\r\n                            >\r\n                              {/* <FontAwesomeIcon\r\n                                icon={faTrashAlt}\r\n                                className=\"trashIcon\"\r\n                              /> */}\r\n                              <DeleteOutline />\r\n                            </IconButton>\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </CustomTableContainer>\r\n          <div className=\"pagination\">\r\n            <Typography className={classes.choosePage} variant=\"body2\">\r\n              Choose Page:{' '}\r\n            </Typography>\r\n            {filteredData.length > 0 && (\r\n              <Select\r\n                value={page}\r\n                onChange={(event) => {\r\n                  setPage(event.target.value);\r\n                }}\r\n                className={classes.select}\r\n                disableUnderline\r\n              >\r\n                {[...Array(NumberOfPages())].map((x, i) => (\r\n                  <MenuItem key={x + 'nPage'} value={i}>\r\n                    {i}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            )}\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 50, 100]}\r\n              component=\"div\"\r\n              count={filteredData.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </div>\r\n        </Paper>\r\n      </div>\r\n      {isLoading && (\r\n        <div className=\"div-loader\">\r\n          <Loader type=\"Circles\" color=\"white\" height={70} width={70} />\r\n          <p className=\"div-loader-msg\">{loadingMessage}</p>\r\n        </div>\r\n      )}\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        style={classes.dialogTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Delete'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete {currentRow.NAME} ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n          <Button onClick={() => deleteRow()} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={open2}\r\n        onClose={() => setOpen2(false)}\r\n        style={classes.dialogTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Edit'}</DialogTitle>\r\n        <DialogContent className={classes.dialog}>\r\n          {Object.entries(currentRow).map((item) => (\r\n            <TextField\r\n              key={item[0] + 'input'}\r\n              id={item[0]}\r\n              className={classes.input}\r\n              label={item[0]}\r\n              variant=\"outlined\"\r\n              defaultValue={item[1]}\r\n            />\r\n          ))}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen2(false)}>Cancel</Button>\r\n          <Button onClick={() => editRow()} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={open3}\r\n        onClose={() => setOpen3(false)}\r\n        style={classes.dialogTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Add'}</DialogTitle>\r\n        <DialogContent className={classes.dialog}>\r\n          {data.length > 0 &&\r\n            Object.keys(data[0]).map((item) => (\r\n              <TextField key={item + 'input2'} id={item} className={classes.input2} label={item} variant=\"outlined\" />\r\n            ))}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen3(false)}>Cancel</Button>\r\n          <Button onClick={() => addRow()} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={open4}\r\n        onClose={() => setOpen4(false)}\r\n        style={classes.dialogTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Submit data'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Would you like to submit changes to the database and download the new version to AMRnet ?\r\n          </DialogContentText>\r\n          {loading && (\r\n            <div className=\"spinner\">\r\n              <CustomCircularProgress></CustomCircularProgress>\r\n            </div>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {!startProgress && <Button onClick={() => setOpen4(false)}>Cancel</Button>}\r\n          {!startProgress && (\r\n            <Button onClick={() => uploadChanges()} autoFocus>\r\n              Ok\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={open5}\r\n        onClose={() => setOpen5(false)}\r\n        style={classes.dialogTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Result'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">{resultMessage}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen5(false)} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={open6}\r\n        onClose={() => setOpen6(false)}\r\n        style={classes.dialogTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Delete many'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete {selected.length} row(s) ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen6(false)}>Cancel</Button>\r\n          <Button onClick={() => deleteRows()} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={open7}\r\n        onClose={() => setOpen7(false)}\r\n        style={classes.dialogTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Look for changes'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Look for changes in the database? If there are, your current changes in the table below will be reseted.\r\n          </DialogContentText>\r\n          {loading && (\r\n            <div className=\"spinner\">\r\n              <CustomCircularProgress></CustomCircularProgress>\r\n            </div>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {!startProgress && <Button onClick={() => setOpen7(false)}>Cancel</Button>}\r\n          {!startProgress && (\r\n            <Button\r\n              onClick={() => {\r\n                checkChanges();\r\n              }}\r\n              autoFocus\r\n            >\r\n              Ok\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={open8}\r\n        onClose={() => setOpen8(false)}\r\n        style={classes.dialogTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Delete changes'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete change nº {currentChange} ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen8(false)}>Cancel</Button>\r\n          <Button onClick={() => deleteChange()} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  headerWrapper: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    width: '-webkit-fill-available',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    zIndex: 2,\r\n    backgroundColor: '#E5E5E5',\r\n    borderRadius: '0px 0px 16px 16px',\r\n    flexDirection: 'column',\r\n    maxWidth: '1280px',\r\n    margin: '0px 16px',\r\n\r\n    '@media (max-width: 500px)': {\r\n      margin: '0px 8px'\r\n    }\r\n  },\r\n  headerBox: {\r\n    width: '100%',\r\n    height: '32px',\r\n    marginBottom: '-16px',\r\n    backgroundColor: '#E5E5E5',\r\n    paddingLeft: '32px',\r\n\r\n    '@media (max-width: 500px)': {\r\n      paddingLeft: '16px',\r\n      height: '24px'\r\n    }\r\n  },\r\n  appBar: {\r\n    borderRadius: '16px'\r\n  },\r\n  toolbar: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: '16px',\r\n    flexDirection: 'column',\r\n    minHeight: '0 !important',\r\n\r\n    '@media (max-width: 500px)': {\r\n      paddingTop: '8px',\r\n      paddingBottom: '8px'\r\n    },\r\n\r\n    '&$otherPage': {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n\r\n      '& $leftWrapper': {\r\n        justifyContent: 'space-between'\r\n      }\r\n    }\r\n  },\r\n  logo: {\r\n    height: '80px',\r\n    padding: '8px 0px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      height: '60px'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      height: '40px'\r\n    }\r\n  },\r\n  leftWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    columnGap: '10px'\r\n  },\r\n  drawerTitleWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  toolbarWrapper: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n\r\n    '@media (min-width: 651px) and (max-width: 1000px)': {\r\n      flexDirection: 'column'\r\n    },\r\n\r\n    '@media (max-width: 650px)': {\r\n      columnGap: '4px'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      justifyContent: 'flex-end'\r\n    }\r\n  },\r\n  infoCollapse: {\r\n    width: '100%'\r\n  },\r\n  title: {\r\n    position: 'absolute'\r\n  },\r\n  otherPage: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","export default __webpack_public_path__ + \"static/media/logo-prod.5bbce697.png\";","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  activeItem: {\r\n    '&.MuiListItemButton-root': {\r\n      backgroundColor: '#1fbbd3',\r\n      color: '#fff'\r\n    },\r\n    '&.MuiListItemButton-root:hover': {\r\n      backgroundColor: '#1fbbd3'\r\n    }\r\n  },\r\n  activeItemIcon: {\r\n    '&.MuiListItemIcon-root': {\r\n      color: '#fff'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface AppState {\r\n  page: string;\r\n  openDrawer: boolean;\r\n}\r\n\r\nconst initialState: AppState = {\r\n  page: 'home',\r\n  openDrawer: false\r\n};\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    setPage: (state, action: PayloadAction<string>) => {\r\n      state.page = action.payload;\r\n    },\r\n    setOpenDrawer: (state, action: PayloadAction<boolean>) => {\r\n      state.openDrawer = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setPage, setOpenDrawer } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store'\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { Description, Home, Info, MenuBook, Person, Storage } from '@mui/icons-material';\r\n\r\n// List of drawer menu items\r\nexport const menuItems = [\r\n  {\r\n    key: 'home',\r\n    label: 'Home',\r\n    icon: <Home />\r\n  },\r\n  {\r\n    key: 'about',\r\n    label: 'About',\r\n    icon: <Info />\r\n  },\r\n  {\r\n    key: 'user-guide',\r\n    label: 'User Guide',\r\n    icon: <MenuBook />\r\n  },\r\n  {\r\n    key: 'database',\r\n    label: 'Database',\r\n    icon: <Storage />\r\n  },\r\n  {\r\n    key: 'documentation',\r\n    label: 'Documentation',\r\n    icon: <Description />\r\n  },\r\n  {\r\n    key: 'contact',\r\n    label: 'Contact',\r\n    icon: <Person />\r\n  }\r\n];\r\n","import { useStyles } from './DrawerMUI';\r\nimport { Box, List, ListItem, ListItemButton, ListItemIcon, ListItemText, SwipeableDrawer } from '@mui/material';\r\nimport { useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { setOpenDrawer, setPage } from '../../../stores/slices/appSlice.ts';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { menuItems } from '../../../util/menuItems';\r\n\r\nexport const Drawer = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const dispatch = useAppDispatch();\r\n  const openDrawer = useAppSelector((state) => state.app.openDrawer);\r\n  const page = useAppSelector((state) => state.app.page);\r\n\r\n  useEffect(() => {\r\n    const currentPage = location.pathname.replace('/', '');\r\n\r\n    if (page === currentPage || (currentPage === '' && page === 'home')) {\r\n      return;\r\n    }\r\n\r\n    dispatch(setPage(currentPage));\r\n  });\r\n\r\n  function handleToggleDrawer(event, value) {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    dispatch(setOpenDrawer(value));\r\n  }\r\n\r\n  function handleUpdatePage(item) {\r\n    if (page === item.key) {\r\n      return;\r\n    }\r\n\r\n    dispatch(setPage(item.key));\r\n\r\n    if (item.key === menuItems[0].key) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    navigate(`/${item.key}`);\r\n  }\r\n\r\n  return (\r\n    <SwipeableDrawer\r\n      anchor=\"left\"\r\n      open={openDrawer}\r\n      onOpen={(event) => handleToggleDrawer(event, true)}\r\n      onClose={(event) => handleToggleDrawer(event, false)}\r\n    >\r\n      <Box\r\n        sx={{ width: 250 }}\r\n        role=\"presentation\"\r\n        onClick={(event) => handleToggleDrawer(event, false)}\r\n        onKeyDown={(event) => handleToggleDrawer(event, false)}\r\n      >\r\n        <List>\r\n          {menuItems.map((item, index) => (\r\n            <ListItem key={`menu-item-${index}`} disablePadding>\r\n              <ListItemButton\r\n                className={`${page === item.key ? classes.activeItem : ''}`}\r\n                onClick={() => handleUpdatePage(item)}\r\n              >\r\n                <ListItemIcon className={page === item.key ? classes.activeItemIcon : ''}>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.label} />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    </SwipeableDrawer>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  organismSelectWrapper: {\r\n    width: '100%',\r\n    maxWidth: '800px',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  organismSelect: {\r\n    height: '36px',\r\n    width: '100%',\r\n\r\n    '@media (max-width: 500px)': {\r\n      padding: '4px 0px'\r\n    },\r\n\r\n    '& .MuiSelect-select.MuiSelect-select': {\r\n      height: '100%',\r\n      borderRadius: '4px',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      fontSize: '18px',\r\n      backgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.1)'\r\n      },\r\n\r\n      '@media (min-width: 501px)': {\r\n        padding: '4px !important'\r\n      },\r\n\r\n      '@media (max-width: 500px)': {\r\n        fontSize: '16px'\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface GlobalOverviewModel {\r\n  italicLabel: string;\r\n  label: string;\r\n  fullLabel: string\r\n}\r\n\r\ninterface DashboardState {\r\n  canGetData: boolean;\r\n  globalOverviewLabel: GlobalOverviewModel;\r\n  organism: string;\r\n  loadingData: boolean;\r\n  actualCountry: string;\r\n  totalGenomes: number;\r\n  totalGenotypes: number;\r\n  actualGenomes: number;\r\n  actualGenotypes: number;\r\n  timeInitial: number;\r\n  timeFinal: number;\r\n  actualTimeInitial: number | string;\r\n  actualTimeFinal: number | string;\r\n  years: Array<number>;\r\n  genotypesForFilter: Array<string>;\r\n  colorPallete: Object;\r\n  listPMID: Array<string>;\r\n  PMID: Array<string>\r\n}\r\n\r\nconst initialState: DashboardState = {\r\n  canGetData: true,\r\n  globalOverviewLabel: { italicLabel: 'Salmonella', label: 'Typhi', fullLabel: 'Salmonella Typhi' },\r\n  organism: 'typhi',\r\n  loadingData: false,\r\n  actualCountry: 'All',\r\n  totalGenotypes: 0,\r\n  totalGenomes: 0,\r\n  actualGenomes: 0,\r\n  actualGenotypes: 0,\r\n  timeInitial: 0,\r\n  timeFinal: 0,\r\n  actualTimeInitial: '',\r\n  actualTimeFinal: '',\r\n  years: [],\r\n  genotypesForFilter: [],\r\n  colorPallete: {},\r\n  listPMID: [],\r\n  PMID: []\r\n};\r\n\r\nexport const dashboardSlice = createSlice({\r\n  name: 'dashboard',\r\n  initialState,\r\n  reducers: {\r\n    setCanGetData: (state, action: PayloadAction<boolean>) => {\r\n      state.canGetData = action.payload;\r\n    },\r\n    setGlobalOverviewLabel: (state, action: PayloadAction<GlobalOverviewModel>) => {\r\n      state.globalOverviewLabel = action.payload;\r\n    },\r\n    setOrganism: (state, action: PayloadAction<string>) => {\r\n      state.organism = action.payload;\r\n    },\r\n    setLoadingData: (state, action: PayloadAction<boolean>) => {\r\n      state.loadingData = action.payload;\r\n    },\r\n    setActualCountry: (state, action: PayloadAction<string>) => {\r\n      state.actualCountry = action.payload;\r\n    },\r\n    setTotalGenotypes: (state, action: PayloadAction<number>) => {\r\n      state.totalGenotypes = action.payload;\r\n    },\r\n    setTotalGenomes: (state, action: PayloadAction<number>) => {\r\n      state.totalGenomes = action.payload;\r\n    },\r\n    setActualGenomes: (state, action: PayloadAction<number>) => {\r\n      state.actualGenomes = action.payload;\r\n    },\r\n    setActualGenotypes: (state, action: PayloadAction<number>) => {\r\n      state.actualGenotypes = action.payload;\r\n    },\r\n    setTimeInitial: (state, action: PayloadAction<number>) => {\r\n      state.timeInitial = action.payload;\r\n    },\r\n    setTimeFinal: (state, action: PayloadAction<number>) => {\r\n      state.timeFinal = action.payload;\r\n    },\r\n    setActualTimeInitial: (state, action: PayloadAction<number>) => {\r\n      state.actualTimeInitial = action.payload;\r\n    },\r\n    setActualTimeFinal: (state, action: PayloadAction<number>) => {\r\n      state.actualTimeFinal = action.payload;\r\n    },\r\n    setYears: (state, action: PayloadAction<Array<number>>) => {\r\n      state.years = action.payload;\r\n    },\r\n    setGenotypesForFilter: (state, action: PayloadAction<Array<string>>) => {\r\n      state.genotypesForFilter = action.payload;\r\n    },\r\n    setColorPallete: (state, action: PayloadAction<Object>) => {\r\n      state.colorPallete = action.payload;\r\n    },\r\n    setListPMID: (state, action: PayloadAction<Array<string>>) => {\r\n      state.listPMID = action.payload;\r\n    },\r\n    setPMID: (state, action: PayloadAction<Array<string>>) => {\r\n      state.PMID = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nexport const {\r\n  setCanGetData,\r\n  setGlobalOverviewLabel,\r\n  setOrganism,\r\n  setLoadingData,\r\n  setActualCountry,\r\n  setTotalGenotypes,\r\n  setTotalGenomes,\r\n  setActualGenomes,\r\n  setActualGenotypes,\r\n  setTimeInitial,\r\n  setTimeFinal,\r\n  setActualTimeInitial,\r\n  setActualTimeFinal,\r\n  setYears,\r\n  setGenotypesForFilter,\r\n  setColorPallete,\r\n  setListPMID,\r\n  setPMID\r\n} = dashboardSlice.actions;\r\n\r\nexport default dashboardSlice.reducer;\r\n","import { IconButton, MenuItem, Select, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './SelectOrganismMUI';\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@mui/icons-material';\r\nimport { setGlobalOverviewLabel, setOrganism } from '../../../stores/slices/dashboardSlice.ts';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\n\r\nconst organisms = [\r\n  {\r\n    label: 'Salmonella Typhi',\r\n    value: 'typhi',\r\n    abbr: 'S. Typhi'\r\n  },\r\n  {\r\n    label: 'Klebsiella pneumoniae',\r\n    value: 'klebe',\r\n    abbr: 'K. pneumoniae'\r\n  }\r\n  // {\r\n  //   label: 'Neisseria gonorrhoeae',\r\n  //   value: 'gono',\r\n  //   abbr: 'N. gonorrhoeae'\r\n  // }\r\n  // {\r\n  //   label: 'Streptococcus pneumoniae',\r\n  //   value: 'pneumo',\r\n  //   abbr: 'S. pneumoniae'\r\n  // }\r\n];\r\n\r\nexport const SelectOrganism = () => {\r\n  const classes = useStyles();\r\n  const matches1050 = useMediaQuery('(max-width: 1050px)');\r\n  const matches650 = useMediaQuery('(max-width: 650px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const loadingData = useAppSelector((state) => state.dashboard.loadingData);\r\n\r\n  function handleChange(event) {\r\n    const value = event.target.value;\r\n    dispatch(setOrganism(value));\r\n    handleGlobalOverviewLabel(value);\r\n  }\r\n\r\n  function handlePreviousAgent() {\r\n    const index = organisms.findIndex((org) => org.value === organism);\r\n    if (index !== -1) {\r\n      const isFirstIndex = index === 0;\r\n      const newValue = isFirstIndex ? organisms[organisms.length - 1].value : organisms[index - 1].value;\r\n      dispatch(setOrganism(newValue));\r\n      handleGlobalOverviewLabel(newValue);\r\n    }\r\n  }\r\n\r\n  function handleNextAgent() {\r\n    const index = organisms.findIndex((org) => org.value === organism);\r\n    if (index !== -1) {\r\n      const isLastIndex = organisms.length - 1 === index;\r\n      const newValue = isLastIndex ? organisms[0].value : organisms[index + 1].value;\r\n      dispatch(setOrganism(newValue));\r\n      handleGlobalOverviewLabel(newValue);\r\n    }\r\n  }\r\n\r\n  function handleGlobalOverviewLabel(value) {\r\n    const currentOrganism = organisms.find((x) => x.value === value);\r\n    const labels = currentOrganism.label.split(' ');\r\n    dispatch(\r\n      setGlobalOverviewLabel({\r\n        italicLabel: labels[0],\r\n        label: labels[1],\r\n        fullLabel: currentOrganism.label\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.organismSelectWrapper}>\r\n      {!matches650 && (\r\n        <IconButton color=\"inherit\" onClick={handlePreviousAgent} disabled={loadingData}>\r\n          <KeyboardArrowLeft />\r\n        </IconButton>\r\n      )}\r\n      <Select\r\n        value={organism}\r\n        onChange={handleChange}\r\n        disableUnderline\r\n        variant=\"standard\"\r\n        className={classes.organismSelect}\r\n        inputProps={matches650 ? {} : { IconComponent: () => null }}\r\n        disabled={loadingData}\r\n      >\r\n        <MenuItem value=\"none\" disabled>\r\n          Select an organism\r\n        </MenuItem>\r\n        {organisms.map((item, index) => (\r\n          <MenuItem key={`organism-${index}`} value={item.value}>\r\n            {matches1050 ? item.abbr : item.label}\r\n          </MenuItem>\r\n        ))}\r\n        <MenuItem value=\"gono\" disabled>\r\n          {matches1050 ? 'N. gonorrhoeae' : 'Neisseria gonorrhoeae'}\r\n        </MenuItem>\r\n      </Select>\r\n      {!matches650 && (\r\n        <IconButton color=\"inherit\" onClick={handleNextAgent} disabled={loadingData}>\r\n          <KeyboardArrowRight />\r\n        </IconButton>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardsWrapper: {\r\n    display: 'flex',\r\n    columnGap: '16px',\r\n    padding: '8px 0px',\r\n    maxWidth: '420px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      justifyContent: 'space-between',\r\n      padding: '8px 0px',\r\n      maxWidth: '100%',\r\n      borderTop: '1px solid rgba(0, 0, 0, 0.12)'\r\n    },\r\n\r\n    '@media (max-width: 650px)': {\r\n      flexDirection: 'column',\r\n      rowGap: '4px',\r\n      padding: '0px 0px 4px'\r\n    }\r\n  },\r\n  card: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    textAlign: 'center'\r\n  },\r\n  cardContent: {\r\n    padding: '8px 16px !important',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      display: 'flex',\r\n      alignItems: 'flex-end',\r\n      columnGap: '8px',\r\n      padding: '0px 0px !important'\r\n    }\r\n  },\r\n  title: {\r\n    whiteSpace: 'nowrap',\r\n    paddingBottom: '6px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      paddingBottom: '0px'\r\n    }\r\n  },\r\n  actualAndTotalValues: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end'\r\n  },\r\n  bp1000: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Divider, Typography, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './InformationCardsMUI';\r\nimport { useAppSelector } from '../../../stores/hooks';\r\n\r\nexport const InformationCards = () => {\r\n  const classes = useStyles();\r\n  const matches1000 = useMediaQuery('(max-width: 1000px)');\r\n  const matches650 = useMediaQuery('(max-width: 650px)');\r\n\r\n  const totalGenomes = useAppSelector((state) => state.dashboard.totalGenomes);\r\n  const actualGenomes = useAppSelector((state) => state.dashboard.actualGenomes);\r\n  const totalGenotypes = useAppSelector((state) => state.dashboard.totalGenotypes);\r\n  const actualGenotypes = useAppSelector((state) => state.dashboard.actualGenotypes);\r\n\r\n  return (\r\n    <div className={classes.cardsWrapper}>\r\n      <div className={classes.card}>\r\n        <div className={classes.cardContent}>\r\n          <Typography variant={matches650 ? 'body2' : 'body1'} component=\"div\" className={classes.title}>\r\n            {`Total Genomes${matches1000 ? ':' : ''}`}\r\n          </Typography>\r\n          <Typography variant={matches650 ? 'h6' : 'h5'} sx={{ fontWeight: '500' }}>\r\n            {totalGenomes === actualGenomes ? (\r\n              <>{totalGenomes}</>\r\n            ) : (\r\n              <span className={classes.actualAndTotalValues}>\r\n                {actualGenomes}\r\n                <Typography variant={matches650 ? 'body2' : 'body1'} sx={{ fontWeight: '500' }}>\r\n                  /{totalGenomes}\r\n                </Typography>\r\n              </span>\r\n            )}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      {!matches650 && <Divider orientation=\"vertical\" flexItem />}\r\n      <div className={classes.card}>\r\n        <div className={classes.cardContent}>\r\n          <Typography variant={matches650 ? 'body2' : 'body1'} component=\"div\" className={classes.title}>\r\n            {`Total Genotypes${matches1000 ? ':' : ''}`}\r\n          </Typography>\r\n          <Typography variant={matches650 ? 'h6' : 'h5'} sx={{ fontWeight: '500' }}>\r\n            {totalGenotypes === actualGenotypes ? (\r\n              <>{totalGenotypes}</>\r\n            ) : (\r\n              <span className={classes.actualAndTotalValues}>\r\n                {actualGenotypes}\r\n                <Typography variant={matches650 ? 'body2' : 'body1'} sx={{ fontWeight: '500' }}>\r\n                  /{totalGenotypes}\r\n                </Typography>\r\n              </span>\r\n            )}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { AppBar, Collapse, IconButton, Toolbar, Typography, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './HeaderMUI';\r\nimport LogoImg from '../../../assets/img/logo-prod.png';\r\nimport { ExpandLess, ExpandMore, Menu } from '@mui/icons-material';\r\nimport { Drawer } from '../Drawer';\r\nimport { SelectOrganism } from '../SelectOrganism';\r\nimport { InformationCards } from '../InformationCards/InformationCards';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { setOpenDrawer } from '../../../stores/slices/appSlice.ts';\r\nimport { menuItems } from '../../../util/menuItems';\r\nimport { useState } from 'react';\r\n\r\nexport const Header = ({ showSelect }) => {\r\n  const classes = useStyles();\r\n  const matches650 = useMediaQuery('(max-width: 650px)');\r\n  const matches500 = useMediaQuery('(max-width: 500px)');\r\n  const [infoCollapse, setInfoCollapse] = useState(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const page = useAppSelector((state) => state.app.page);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n\r\n  function getPageTitle() {\r\n    const title = menuItems.find((item) => item.key === page).label;\r\n    return title;\r\n  }\r\n\r\n  function handleToggleDrawer(event, value) {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    dispatch(setOpenDrawer(value));\r\n  }\r\n\r\n  function handleToggleCollapse() {\r\n    setInfoCollapse(!infoCollapse);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.headerWrapper}>\r\n      <div className={classes.headerBox}></div>\r\n      <AppBar position=\"relative\" sx={{ maxWidth: '1280px' }} className={classes.appBar}>\r\n        <Toolbar className={`${classes.toolbar} ${page === 'home' ? '' : classes.otherPage}`}>\r\n          <div className={classes.toolbarWrapper}>\r\n            <div className={classes.leftWrapper}>\r\n              <div className={classes.drawerTitleWrapper}>\r\n                <IconButton edge=\"start\" color=\"inherit\" onClick={(event) => handleToggleDrawer(event, true)}>\r\n                  <Menu sx={{ fontSize: '1.7rem' }} />\r\n                </IconButton>\r\n                <img src={LogoImg} alt=\"AMRnet\" className={classes.logo} />\r\n              </div>\r\n              {showSelect && <SelectOrganism />}\r\n            </div>\r\n            {!showSelect && (\r\n              <Typography className={classes.title} variant={matches500 ? 'h6' : 'h5'} fontWeight={500}>\r\n                {getPageTitle()}\r\n              </Typography>\r\n            )}\r\n            {showSelect &&\r\n              (matches650 ? (\r\n                organism !== 'none' && (\r\n                  <IconButton onClick={handleToggleCollapse}>\r\n                    {infoCollapse ? <ExpandLess /> : <ExpandMore />}\r\n                  </IconButton>\r\n                )\r\n              ) : (\r\n                <InformationCards />\r\n              ))}\r\n          </div>\r\n          <Collapse className={classes.infoCollapse} in={infoCollapse} timeout=\"auto\" unmountOnExit>\r\n            <InformationCards />\r\n          </Collapse>\r\n        </Toolbar>\r\n        <Drawer />\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainLayout: {\r\n    width: '100%',\r\n    backgroundColor: '#E5E5E5',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    overflowY: 'auto',\r\n\r\n    '& .MuiAppBar-root': {\r\n      boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)'\r\n    }\r\n  },\r\n  childrenWrapper: {\r\n    width: '100%'\r\n  },\r\n  children: {\r\n    padding: '128px 16px 16px',\r\n    maxWidth: '1280px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    rowGap: '16px',\r\n    backgroundColor: '#E5E5E5',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      padding: '158px 16px 16px',\r\n\r\n      '&$otherPage': {\r\n        padding: '108px 16px 16px'\r\n      }\r\n    },\r\n\r\n    '@media (max-width: 650px)': {\r\n      padding: '108px 16px 16px'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      padding: '88px 8px 8px',\r\n      rowGap: '8px',\r\n\r\n      '&$otherPage': {\r\n        padding: '88px 8px 8px'\r\n      }\r\n    }\r\n  },\r\n  loading: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0,0,0,0.2)',\r\n    zIndex: 9999\r\n  },\r\n  logo: {\r\n    height: '100px',\r\n    alignSelf: 'center',\r\n    paddingLeft: '20px'\r\n  },\r\n  otherPage: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","import Loader from 'react-loader-spinner';\r\n// import LogoImg from '../../assets/img/logo-prod.png';\r\nimport { Header } from '../Elements/Header';\r\nimport { useStyles } from './MainLayoutUI';\r\nimport { useAppSelector } from '../../stores/hooks';\r\n\r\nexport const MainLayout = ({ children, isHomePage = false }) => {\r\n  const classes = useStyles();\r\n\r\n  const page = useAppSelector((state) => state.app.page);\r\n  const loadingData = useAppSelector((state) => state.dashboard.loadingData);\r\n  const loadingMap = useAppSelector((state) => state.map.loadingMap);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.mainLayout} id=\"main-layout\">\r\n        <Header showSelect={isHomePage} />\r\n        <div className={classes.childrenWrapper}>\r\n          <div className={`${classes.children} ${page === 'home' ? '' : classes.otherPage}`}>{children}</div>\r\n        </div>\r\n      </div>\r\n      {(loadingData || loadingMap) && (\r\n        <div className={classes.loading}>\r\n          {/* <img className={classes.logo} src={LogoImg} alt=\"AMRnet\" /> */}\r\n          <Loader type=\"Circles\" color=\"#6F2F9F\" height={70} width={70} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mapWrapper: { position: 'relative' },\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    }\r\n  },\r\n  cardContent: {\r\n    textAlign: 'center',\r\n    position: 'relative'\r\n  },\r\n  composableMap: {\r\n    height: '500px',\r\n    width: '100%',\r\n\r\n    '@media (max-width: 500px)': {\r\n      height: '300px'\r\n    }\r\n  },\r\n  tooltipMap: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingBottom: '4px',\r\n    alignItems: 'flex-start',\r\n\r\n    '& $country': {\r\n      fontWeight: 500,\r\n      fontSize: '18px'\r\n    },\r\n\r\n    '& $tooltipInfo': {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n\r\n      '& $info': {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n\r\n        '& $color': {\r\n          width: '10px',\r\n          height: '10px',\r\n          marginRight: '4px',\r\n          border: '1px solid #f5f4f6'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  topControls: {\r\n    marginTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '16px'\r\n  },\r\n  country: {},\r\n  tooltipInfo: {},\r\n  info: {},\r\n  color: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","// Helper for colors\r\n\r\n// Color for Salmonella genotypes\r\nexport const getColorForGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case '0':\r\n    case '0.0.1':\r\n    case '0.0.2':\r\n    case '0.0.3':\r\n    case '0.1.0':\r\n    case '0.1':\r\n    case '0.1.1':\r\n    case '0.1.2':\r\n    case '0.1.3':\r\n      return '#808080';\r\n    case '1':\r\n    case '1.1':\r\n    case '1.1.1':\r\n    case '1.1.2':\r\n    case '1.1.3':\r\n    case '1.1.4':\r\n      return '#ffff00';\r\n    case '1.2':\r\n    case '1.2.1':\r\n      return '#ffd700';\r\n    case '2':\r\n    case '2.0.0':\r\n    case '2.0.1':\r\n    case '2.0.2':\r\n      return '#32cd32';\r\n    case '2.1.0':\r\n    case '2.1':\r\n    case '2.1.1':\r\n    case '2.1.2':\r\n    case '2.1.3':\r\n    case '2.1.4':\r\n    case '2.1.5':\r\n    case '2.1.6':\r\n    case '2.1.7':\r\n    case '2.1.8':\r\n    case '2.1.9':\r\n    case '2.1.7.1':\r\n    case '2.1.7.2':\r\n      return '#adff2f';\r\n    case '2.2':\r\n    case '2.2.0':\r\n    case '2.2.1':\r\n    case '2.2.2':\r\n    case '2.2.3':\r\n    case '2.2.4':\r\n      return '#98fb98';\r\n    case '2.3':\r\n    case '2.3.1':\r\n    case '2.3.2':\r\n    case '2.3.3':\r\n    case '2.3.4':\r\n    case '2.3.5':\r\n      return '#6b8e23';\r\n    case '2.4.0':\r\n    case '2.4':\r\n    case '2.4.1':\r\n      return '#2e8b57';\r\n    case '2.5.0':\r\n    case '2.5':\r\n    case '2.5.1':\r\n    case '2.5.2':\r\n      return '#006400';\r\n    case '3.0.0':\r\n    case '3':\r\n    case '3.0.1':\r\n    case '3.0.2':\r\n      return '#0000cd';\r\n    case '3.1.0':\r\n    case '3.1':\r\n    case '3.1.1':\r\n    case '3.1.2':\r\n      return '#4682b4';\r\n    case '3.2.1':\r\n    case '3.2':\r\n    case '3.2.2':\r\n      return '#00bfff';\r\n    case '3.3.0':\r\n    case '3.3':\r\n    case '3.3.1':\r\n    case '3.3.2':\r\n    case '3.3.2.Bd1':\r\n    case '3.3.2.Bd2':\r\n      return '#1e90ff';\r\n    case '3.4':\r\n      return '#6a5acd';\r\n    case '3.5':\r\n    case '3.5.1':\r\n    case '3.5.2':\r\n    case '3.5.3':\r\n    case '3.5.4':\r\n    case '3.5.4.1':\r\n    case '3.5.4.2':\r\n    case '3.5.4.3':\r\n      return '#4b0082';\r\n    case '4':\r\n    case '4.1.0':\r\n    case '4.1':\r\n    case '4.1.1':\r\n      return '#8b0000';\r\n    case '4.2':\r\n    case '4.2.1':\r\n    case '4.2.2':\r\n    case '4.2.3':\r\n      return '#ff6347';\r\n    // case '4.3':\r\n    // case '4.3.0':\r\n    case '4.3.1':\r\n      return '#ff0000';\r\n    case '4.3.1.1':\r\n    case '4.3.1.1.EA1':\r\n      return '#f1b6da';\r\n    case '4.3.1.1.P1':\r\n      return 'black';\r\n    case '4.3.1.2':\r\n    case '4.3.1.2.EA2':\r\n    case '4.3.1.2.EA3':\r\n    case '4.3.1.2.1':\r\n    case '4.3.1.2.1.1':\r\n      return '#c51b7d';\r\n    case '4.3.1.3':\r\n    case '4.3.1.3.Bdq':\r\n      return '#fb8072';\r\n    default:\r\n      return '#F5F4F6';\r\n  }\r\n};\r\n\r\n// Generate color pallete for Klebsiella genotypes\r\nexport const generatePalleteForGenotypes = (genotypes) => {\r\n  if (genotypes.length === 0) {\r\n    return {};\r\n  }\r\n\r\n  var Rainbow = require('rainbowvis.js');\r\n  const rainbow = new Rainbow();\r\n  rainbow.setNumberRange(0, genotypes.length);\r\n  rainbow.setSpectrum(\r\n    '#67001f',\r\n    '#b2182b',\r\n    '#d6604d',\r\n    '#f4a582',\r\n    '#fddbc7',\r\n    '#d1e5f0',\r\n    '#92c5de',\r\n    '#4393c3',\r\n    '#2166ac',\r\n    '#053061'\r\n  );\r\n\r\n  const pallete = {};\r\n  genotypes.forEach((x, i) => {\r\n    pallete[x] = `#${rainbow.colourAt(i)}`;\r\n  });\r\n\r\n  return pallete;\r\n};\r\n\r\n// Generate color pallete for Klebsiella genes, not being used at the moment\r\nexport const generatePalleteForGenes = (genes) => {\r\n  var Rainbow = require('rainbowvis.js');\r\n  const rainbow = new Rainbow();\r\n  rainbow.setNumberRange(0, genes.length);\r\n  rainbow.setSpectrum(\r\n    '#67001f',\r\n    '#b2182b',\r\n    '#d6604d',\r\n    '#f4a582',\r\n    '#fddbc7',\r\n    '#d1e5f0',\r\n    '#92c5de',\r\n    '#4393c3',\r\n    '#2166ac',\r\n    '#053061',\r\n    '#40004b',\r\n    '#762a83',\r\n    '#9970ab',\r\n    '#c2a5cf',\r\n    '#e7d4e8',\r\n    '#d9f0d3',\r\n    '#a6dba0',\r\n    '#5aae61',\r\n    '#1b7837',\r\n    '#00441b'\r\n  );\r\n\r\n  const pallete = [];\r\n  genes.forEach((x, i) => {\r\n    pallete.push({ name: x, color: `#${rainbow.colourAt(i)}` });\r\n  });\r\n\r\n  return pallete;\r\n};\r\n\r\n// Colors for Salmonella drug classes genes\r\nexport const colorForDrugClassesST = {\r\n  Azithromycin: [\r\n    { name: 'acrB_R717L', color: '#FBCFE5' },\r\n    { name: 'acrB_R717Q', color: '#addd8e' },\r\n    { name: 'acrB_R717Q + acrB_R717L', color: '#fd8d3c' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  // 'Fluoroquinolones (CipNS)': [\r\n  'Ciprofloxacin NS': [\r\n    { name: '0_QRDR + qnrB (CipNS)', color: '#0066cc' },\r\n    { name: '0_QRDR + qnrS (CipNS)', color: '#009999' },\r\n    { name: '0_QRDR + qnrS + qnrD (CipNS)', color: '#a8ddb5' },\r\n    { name: '1_QRDR (CipNS)', color: '#ffcc00' },\r\n    { name: '1_QRDR + qnrB (CipNS)', color: '#993399' },\r\n    { name: '1_QRDR + qnrS (CipNS)', color: '#660066' },\r\n    { name: '2_QRDR (CipR)', color: '#ff6600' },\r\n    { name: '2_QRDR + qnrB (CipR)', color: '#ffcccc' },\r\n    { name: '2_QRDR + qnrS (CipR)', color: '#ff6666' },\r\n    { name: '3_QRDR (CipR)', color: '#cc0000' },\r\n    { name: '3_QRDR + qnrB (CipR)', color: '#660000' },\r\n    { name: '3_QRDR + qnrS (CipR)', color: 'black' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  Chloramphenicol: [\r\n    { name: 'catA1', color: '#9e9ac8' },\r\n    { name: 'catA1 + cmlA', color: '#FFEC78' },\r\n    { name: 'cmlA', color: '#addd8e' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  Ampicillin: [\r\n    { name: 'blaTEM-1D', color: '#addd8e' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  Sulphonamides: [\r\n    { name: 'None', color: '#B9B9B9' },\r\n    { name: 'sul1', color: '#fd8d3c' },\r\n    { name: 'sul1 + sul2', color: '#B4DD70' },\r\n    { name: 'sul2', color: '#ffeda0' }\r\n  ],\r\n  Trimethoprim: [\r\n    { name: 'dfrA1', color: '#B4DD70' },\r\n    { name: 'dfrA5', color: '#D7AEF7' },\r\n    { name: 'dfrA7', color: '#FFEC78' },\r\n    { name: 'dfrA7 + dfrA14', color: '#fd8d3c' },\r\n    { name: 'dfrA14', color: '#6baed6' },\r\n    { name: 'dfrA15', color: '#FBCFE5' },\r\n    { name: 'dfrA17', color: '#FCB469' },\r\n    { name: 'dfrA18', color: '#66c2a4' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  Tetracyclines: [\r\n    { name: 'tetA(A)', color: 'rgb(174,227,154)' },\r\n    { name: 'tetA(B)', color: '#D7AEF7' },\r\n    { name: 'tetA(C)', color: '#FFEC78' },\r\n    { name: 'tetA(D)', color: '#FCB469' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  // ESBL: [\r\n  //   { name: 'blaCTX-M-15', color: '#6baed6' },\r\n  //   { name: 'blaCTX-M-55', color: '#FBCFE5' },\r\n  //   { name: 'blaOXA-7', color: '#9e9ac8' },\r\n  //   { name: 'blaSHV-12', color: '#addd8e' },\r\n  //   { name: 'None', color: '#B9B9B9' }\r\n  // ],\r\n  Ceftriaxone: [\r\n    { name: 'blaCTX-M-15', color: '#6baed6' },\r\n    { name: 'blaCTX-M-55', color: '#FBCFE5' },\r\n    { name: 'blaOXA-7', color: '#9e9ac8' },\r\n    { name: 'blaSHV-12', color: '#addd8e' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  // 'Co-trimoxazole': [\r\n  'Trimethoprim-sulfamethoxazole': [\r\n    { name: 'dfrA1 + sul1', color: '#ffeda0' },\r\n    { name: 'dfrA1 + sul2', color: '#a50f15' },\r\n    { name: 'dfrA1 + sul1 + sul2', color: '#fcc5c0' },\r\n    { name: 'dfrA5 + sul1', color: '#fd8d3c' },\r\n    { name: 'dfrA5 + sul2', color: '#6a5acd' },\r\n    { name: 'dfrA5 + sul1 + sul2', color: '#bcbddc' },\r\n    { name: 'dfrA7 + sul1', color: '#addd8e' },\r\n    { name: 'dfrA7 + sul2', color: '#f1b6da' },\r\n    { name: 'dfrA7 + sul1 + sul2', color: '#fdd0a2' },\r\n    { name: 'dfrA7 + dfrA14 + sul1 + sul2', color: '#F54CEB' },\r\n    { name: 'dfrA14 + sul1', color: '#9e9ac8' },\r\n    { name: 'dfrA14 + sul2', color: '#fb8072' },\r\n    { name: 'dfrA14 + sul1 + sul2', color: '#c994c7' },\r\n    { name: 'dfrA15 + sul1', color: '#4682b4' },\r\n    { name: 'dfrA15 + sul2', color: '#6baed6' },\r\n    { name: 'dfrA15 + sul1 + sul2', color: '#9ecae1' },\r\n    { name: 'dfrA17 + sul1', color: '#7a0177' },\r\n    { name: 'dfrA17 + sul2', color: '#2e8b57' },\r\n    { name: 'dfrA17 + sul1 + sul2', color: '#a8ddb5' },\r\n    { name: 'dfrA18 + sul1', color: '#54278f' },\r\n    { name: 'dfrA18 + sul2', color: '#98fb98' },\r\n    { name: 'dfrA18 + sul1 + sul2', color: '#fc9272' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ]\r\n};\r\n\r\n// Colors for Klebsiella drug classes genes\r\nexport const colorForDrugClassesKP = {\r\n  ESBL: [\r\n    { name: 'BEL-1', color: '#543005' },\r\n    { name: 'CMY-30', color: '#8c510a' },\r\n    { name: 'CMY-42', color: '#f8961e' },\r\n    { name: 'CTX-M-1', color: '#f9844a' },\r\n    { name: 'CTX-M-115', color: '#f9c74f' },\r\n    { name: 'CTX-M-115 + CTX-M-15', color: '#f9c74f' },\r\n    { name: 'CTX-M-12', color: '#90be6d' },\r\n    { name: 'CTX-M-12 + CTX-M-2', color: '#90be6d' },\r\n    { name: 'CTX-M-12 + SHV-12', color: '#90be6d' },\r\n    { name: 'CTX-M-12 + SHV-5', color: '#90be6d' },\r\n    { name: 'CTX-M-132', color: '#43aa8b' },\r\n    { name: 'CTX-M-133.v1', color: '#4d908e' },\r\n    { name: 'CTX-M-14', color: '#577590' },\r\n    { name: 'CTX-M-14 + CTX-M-15', color: '#577590' },\r\n    { name: 'CTX-M-14 + CTX-M-15 + SHV-12', color: '#577590' },\r\n    { name: 'CTX-M-14 + CTX-M-3', color: '#577590' },\r\n    { name: 'CTX-M-14 + CTX-M-3 + SHV-12', color: '#577590' },\r\n    { name: 'CTX-M-14 + CTX-M-55', color: '#577590' },\r\n    { name: 'CTX-M-14 + CTX-M-8', color: '#577590' },\r\n    { name: 'CTX-M-14 + SFO-1.v1 + VEB-3', color: '#577590' },\r\n    { name: 'CTX-M-14 + SHV-12', color: '#577590' },\r\n    { name: 'CTX-M-14 + VEB-1', color: '#577590' },\r\n    { name: 'CTX-M-15', color: '#277da1' },\r\n    { name: 'CTX-M-15 + CTX-M-15', color: '#277da1' },\r\n    { name: 'CTX-M-15 + CTX-M-2', color: '#277da1' },\r\n    { name: 'CTX-M-15 + CTX-M-27', color: '#277da1' },\r\n    { name: 'CTX-M-15 + CTX-M-63', color: '#277da1' },\r\n    { name: 'CTX-M-15 + CTX-M-65', color: '#277da1' },\r\n    { name: 'CTX-M-15 + CTX-M-65 + SHV-12', color: '#277da1' },\r\n    { name: 'CTX-M-15 + CTX-M-8', color: '#277da1' },\r\n    { name: 'CTX-M-15 + CTX-M-9', color: '#277da1' },\r\n    { name: 'CTX-M-15 + GES-9 + SHV-12', color: '#277da1' },\r\n    { name: 'CTX-M-15 + OXA-163', color: '#277da1' },\r\n    { name: 'CTX-M-15 + SFO-1.v1', color: '#277da1' },\r\n    { name: 'CTX-M-15 + SHV-12', color: '#277da1' },\r\n    { name: 'CTX-M-15 + SHV-2', color: '#277da1' },\r\n    { name: 'CTX-M-15 + SHV-31.v1', color: '#277da1' },\r\n    { name: 'CTX-M-15 + SHV-5', color: '#277da1' },\r\n    { name: 'CTX-M-15 + TEM-116', color: '#277da1' },\r\n    { name: 'CTX-M-15 + TEM-155', color: '#277da1' },\r\n    { name: 'CTX-M-15 + VEB-1', color: '#277da1' },\r\n    { name: 'CTX-M-15 + VEB-5', color: '#277da1' },\r\n    { name: 'CTX-M-163', color: '#582f0e' },\r\n    { name: 'CTX-M-2', color: '#7f4f24' },\r\n    { name: 'CTX-M-2 + CTX-M-3', color: '#7f4f24' },\r\n    { name: 'CTX-M-24', color: '#936639' },\r\n    { name: 'CTX-M-25', color: '#a68a64' },\r\n    { name: 'CTX-M-26', color: '#b6ad90' },\r\n    { name: 'CTX-M-27', color: '#a4ac86' },\r\n    { name: 'CTX-M-27 + CTX-M-55', color: '#a4ac86' },\r\n    { name: 'CTX-M-27 + CTX-M-63', color: '#a4ac86' },\r\n    { name: 'CTX-M-27 + SHV-12', color: '#a4ac86' },\r\n    { name: 'CTX-M-3', color: '#656d4a' },\r\n    { name: 'CTX-M-3 + CTX-M-65', color: '#656d4a' },\r\n    { name: 'CTX-M-3 + CTX-M-65 + SHV-12', color: '#656d4a' },\r\n    { name: 'CTX-M-3 + SHV-12', color: '#656d4a' },\r\n    { name: 'CTX-M-32', color: '#414833' },\r\n    { name: 'CTX-M-35', color: '#333d29' },\r\n    { name: 'CTX-M-39', color: '#661d72' },\r\n    { name: 'CTX-M-40', color: '#70257c' },\r\n    { name: 'CTX-M-55', color: '#782f86' },\r\n    { name: 'CTX-M-55 + CTX-M-65', color: '#7f3c8d' },\r\n    { name: 'CTX-M-55 + CTX-M-65 + SHV-12', color: '#854994' },\r\n    { name: 'CTX-M-55 + SHV-2', color: '#8c559c' },\r\n    { name: 'CTX-M-58.v2', color: '#9262a3' },\r\n    { name: 'CTX-M-62.v2', color: '#996fab' },\r\n    { name: 'CTX-M-63', color: '#a079b1' },\r\n    { name: 'CTX-M-65', color: '#a883b8' },\r\n    { name: 'CTX-M-65 + KPC-51', color: '#af8dbf' },\r\n    { name: 'CTX-M-65 + SHV-12', color: '#b797c5' },\r\n    { name: 'CTX-M-65 + TEM-116', color: '#bea0cc' },\r\n    { name: 'CTX-M-71', color: '#c6aad1' },\r\n    { name: 'CTX-M-8', color: '#ccb2d6' },\r\n    { name: 'CTX-M-9', color: '#d3bbdb' },\r\n    { name: 'CTX-M-9 + SHV-12', color: '#dac4df' },\r\n    { name: 'CTX-M-90', color: '#e1cce4' },\r\n    { name: 'CTX-M-96', color: '#e7d5e8' },\r\n    { name: 'CTX-M-98', color: '#e4dae4' },\r\n    { name: 'GES-2', color: '#e2dfe0' },\r\n    { name: 'GES-9', color: '#dfe4dc' },\r\n    { name: 'KPC-52 + SHV-12', color: '#dce9d8' },\r\n    { name: 'None', color: '#B9B9B9' },\r\n    { name: 'OXA-163', color: '#daeed4' },\r\n    { name: 'OXA-17', color: '#d3edcd' },\r\n    { name: 'OXA-17 + SHV-12', color: '#c9e9c3' },\r\n    { name: 'PER-1 + SFO-1.v1 + SHV-12', color: '#c0e6ba' },\r\n    { name: 'SFO-1.v1', color: '#b6e2b0' },\r\n    { name: 'SHV-106', color: '#addea7' },\r\n    { name: 'SHV-12', color: '#a2d99d' },\r\n    { name: 'SHV-12 + VEB-1', color: '#94d191' },\r\n    { name: 'SHV-12 + VEB-9', color: '#86c886' },\r\n    { name: 'SHV-2', color: '#78c07a' },\r\n    { name: 'SHV-24', color: '#6ab86e' },\r\n    { name: 'SHV-31.v1', color: '#5caf63' },\r\n    { name: 'SHV-5', color: '#50a65a' },\r\n    { name: 'TEM-116', color: '#459c53' },\r\n    { name: 'TEM-15', color: '#39924b' },\r\n    { name: 'TEM-24.v1', color: '#2d8843' },\r\n    { name: 'TEM-3', color: '#227e3b' },\r\n    { name: 'VEB-1', color: '#197435' },\r\n    { name: 'VEB-1 + VEB-1', color: '#146a30' },\r\n    { name: 'VEB-5', color: '#0f612a' },\r\n    { name: 'VEB-6', color: '#0a5725' },\r\n    { name: 'VEB-9', color: '#054e20' }\r\n  ],\r\n  Carbapenems: [\r\n    { name: 'CTX-M-33', color: '#D1E5F0' },\r\n    { name: 'GES-13', color: '#FDDBC7' },\r\n    { name: 'GES-24', color: '#E7D4E8' },\r\n    { name: 'IMP-1', color: '#F6E8C3' },\r\n    { name: 'IMP-1 + IMP-1', color: '#F6E8C3' },\r\n    { name: 'IMP-11', color: '#D9F0D3' },\r\n    { name: 'IMP-19', color: '#FDE0EF' },\r\n    { name: 'IMP-26', color: '#92C5DE' },\r\n    { name: 'IMP-26 + NDM-1', color: '#92C5DE' },\r\n    { name: 'IMP-27', color: '#DFC27D' },\r\n    { name: 'IMP-4', color: '#FFB6C1' },\r\n    { name: 'IMP-4 + KPC-2', color: '#FFB6C1' },\r\n    { name: 'IMP-4 + KPC-3', color: '#FFB6C1' },\r\n    { name: 'IMP-4 + NDM-1', color: '#FFB6C1' },\r\n    { name: 'IMP-6', color: '#F1B6DA' },\r\n    { name: 'IMP-68', color: '#A6DBA0' },\r\n    { name: 'IMP-8', color: '#80CDC1' },\r\n    { name: 'KPC-12', color: '#00FFFF' },\r\n    { name: 'KPC-18', color: '#ADDD8E' },\r\n    { name: 'KPC-2', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + KPC-2', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + KPC-2 + NDM-1', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + NDM-1', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + NDM-1 + OXA-181', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + NDM-1 + OXA-48', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + NDM-1 + VIM-24', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + NDM-5', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + NDM-7', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + NDM-9', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + OXA-181', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + OXA-48', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + VIM-1', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + VIM-2', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + VIM-4', color: '#C2A5CF' },\r\n    { name: 'KPC-23', color: '#F4A582' },\r\n    { name: 'KPC-29', color: '#6BAED6' },\r\n    { name: 'KPC-3', color: '#21BCF9' },\r\n    { name: 'KPC-3 + KPC-3', color: '#21BCF9' },\r\n    { name: 'KPC-3 + NDM-1', color: '#21BCF9' },\r\n    { name: 'KPC-3 + NDM-5', color: '#21BCF9' },\r\n    { name: 'KPC-3 + NDM-7', color: '#21BCF9' },\r\n    { name: 'KPC-3 + OXA-48', color: '#21BCF9' },\r\n    { name: 'KPC-3 + VIM-24', color: '#21BCF9' },\r\n    { name: 'KPC-36', color: '#00FA99' },\r\n    { name: 'KPC-38', color: '#FEB24C' },\r\n    { name: 'KPC-39', color: '#FFD500' },\r\n    { name: 'KPC-4', color: '#BC8F8F' },\r\n    { name: 'KPC-4 + NDM-7', color: '#BC8F8F' },\r\n    { name: 'KPC-49', color: '#9ACD32' },\r\n    { name: 'KPC-5', color: '#FFA300' },\r\n    { name: 'KPC-54', color: '#FD8D3C' },\r\n    { name: 'KPC-56', color: '#5AAE61' },\r\n    { name: 'KPC-8', color: '#DE77AE' },\r\n    { name: 'NDM-1', color: '#6495ED' },\r\n    { name: 'NDM-1 + NDM-1 + OXA-48', color: '#6495ED' },\r\n    { name: 'NDM-1 + OXA-181', color: '#6495ED' },\r\n    { name: 'NDM-1 + OXA-232', color: '#6495ED' },\r\n    { name: 'NDM-1 + OXA-48', color: '#6495ED' },\r\n    { name: 'NDM-1 + VIM-1', color: '#6495ED' },\r\n    { name: 'NDM-19', color: '#41AB5D' },\r\n    { name: 'NDM-23', color: '#35978F' },\r\n    { name: 'NDM-23 + OXA-48', color: '#35978F' },\r\n    { name: 'NDM-29', color: '#BF812D' },\r\n    { name: 'NDM-4', color: '#0088AF' },\r\n    { name: 'NDM-4 + OXA-181', color: '#0088AF' },\r\n    { name: 'NDM-4 + OXA-48', color: '#0088AF' },\r\n    { name: 'NDM-5', color: '#9970AB' },\r\n    { name: 'NDM-5 + OXA-181', color: '#9970AB' },\r\n    { name: 'NDM-5 + OXA-232', color: '#9970AB' },\r\n    { name: 'NDM-5 + OXA-48', color: '#9970AB' },\r\n    { name: 'NDM-6', color: '#D6604D' },\r\n    { name: 'NDM-7', color: '#9270DB' },\r\n    { name: 'NDM-7 + OXA-232', color: '#9270DB' },\r\n    { name: 'NDM-9', color: '#FC4E2A' },\r\n    { name: 'None', color: '#B9B9B9' },\r\n    { name: 'OXA-162', color: '#556B2F' },\r\n    { name: 'OXA-181', color: '#E31A1C' },\r\n    { name: 'OXA-204', color: '#2166AC' },\r\n    { name: 'OXA-232', color: '#1B7837' },\r\n    { name: 'OXA-232 + OXA-232', color: '#1B7837' },\r\n    { name: 'OXA-244', color: '#C51B7D' },\r\n    { name: 'OXA-245', color: '#01665E' },\r\n    { name: 'OXA-48', color: '#8C510A' },\r\n    { name: 'OXA-48 + OXA-48', color: '#8C510A' },\r\n    { name: 'OXA-48 + VIM-1', color: '#8C510A' },\r\n    { name: 'OXA-484', color: '#88419D' },\r\n    { name: 'VIM-1', color: '#B2182B' },\r\n    { name: 'VIM-12', color: '#08519C' },\r\n    { name: 'VIM-19', color: '#8E0152' },\r\n    { name: 'VIM-2', color: '#810F7C' },\r\n    { name: 'VIM-24', color: '#543005' },\r\n    { name: 'VIM-26', color: '#00441B' },\r\n    { name: 'VIM-27', color: '#0000CD' },\r\n    { name: 'VIM-29', color: '#08306B' },\r\n    { name: 'VIM-33', color: '#67001F' },\r\n    { name: 'VIM-4', color: '#4A0082' },\r\n    { name: 'VIM-5', color: '#40004B' }\r\n  ]\r\n};\r\n\r\n// Color variables\r\nexport const lightGrey = '#D3D3D3';\r\nexport const darkGrey = '#727272';\r\nexport const zeroPercentColor = '#A20F17';\r\nexport const zeroCountColor = '#F5F4F6';\r\nexport const hoverColor = '#D2F1F6';\r\n","// Helper for map color\r\n\r\nexport const samplesColorScale = (domain) => {\r\n  if (domain >= 1 && domain <= 9) {\r\n    return '#4575B4';\r\n  } else if (domain >= 10 && domain <= 19) {\r\n    return '#91BFDB';\r\n  } else if (domain >= 20 && domain <= 99) {\r\n    return '#ADDD8E';\r\n  } else if (domain >= 100 && domain <= 299) {\r\n    return '#FEE090';\r\n  } else if (domain >= 300) {\r\n    return '#FC8D59';\r\n  }\r\n};\r\n\r\nexport const redColorScale = (percentage) => {\r\n  const p = parseInt(percentage);\r\n  if (p >= 51) {\r\n    return '#A20F17';\r\n  } else if (p >= 11) {\r\n    return '#DD2C24';\r\n  } else if (p >= 3) {\r\n    return '#FA694A';\r\n  } else {\r\n    return '#FAAD8F';\r\n  }\r\n};\r\n\r\nexport const sensitiveColorScale = (percentage) => {\r\n  const p = parseFloat(percentage);\r\n  if (p > 90) {\r\n    return '#727272';\r\n  } else if (p > 50) {\r\n    return '#FAAD8F';\r\n  } else if (p > 20) {\r\n    return '#FA694A';\r\n  } else if (p > 10) {\r\n    return '#DD2C24';\r\n  }\r\n  return '#A20F17';\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bottomLeftControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface PositionModel {\r\n  coordinates: Array<number>;\r\n  zoom: number;\r\n}\r\n\r\ninterface ItemModel {\r\n  name: string;\r\n  count: number;\r\n  percentage: number;\r\n}\r\n\r\ninterface ItemsModel {\r\n  items: Array<ItemModel>;\r\n  count: number;\r\n  percentage?: number;\r\n}\r\n\r\ninterface StatsModel {\r\n  GENOTYPE: ItemsModel;\r\n  H58: ItemsModel;\r\n  MDR: ItemsModel;\r\n  XDR: ItemsModel;\r\n  AzithR: ItemsModel;\r\n  Susceptible: ItemsModel;\r\n  CipR: ItemsModel;\r\n  CipNS: ItemsModel;\r\n}\r\n\r\ninterface MapDataModel {\r\n  name: string;\r\n  displayName: string;\r\n  count: number;\r\n  stats: StatsModel;\r\n}\r\n\r\ninterface MapState {\r\n  loadingMap: boolean;\r\n  position: PositionModel;\r\n  mapView: string;\r\n  tooltipContent: Object | null;\r\n  dataset: string;\r\n  mapData: Array<MapDataModel>;\r\n  ifCustom : boolean;\r\n}\r\n\r\nconst initialState: MapState = {\r\n  loadingMap: false,\r\n  position: {\r\n    coordinates: [0, 0],\r\n    zoom: 1\r\n  },\r\n  mapView: '',\r\n  tooltipContent: null,\r\n  dataset: '',\r\n  mapData: [],\r\n  ifCustom : false,\r\n};\r\n\r\nexport const mapSlice = createSlice({\r\n  name: 'map',\r\n  initialState,\r\n  reducers: {\r\n    setLoadingMap: (state, action: PayloadAction<boolean>) => {\r\n      state.loadingMap = action.payload;\r\n    },\r\n    setPosition: (state, action: PayloadAction<PositionModel>) => {\r\n      state.position = action.payload;\r\n    },\r\n    setMapView: (state, action: PayloadAction<string>) => {\r\n      state.mapView = action.payload;\r\n    },\r\n    setTooltipContent: (state, action: PayloadAction<Object | null>) => {\r\n      state.tooltipContent = action.payload;\r\n    },\r\n\r\n    setDataset: (state, action: PayloadAction<string>) => {\r\n      state.dataset = action.payload;\r\n    },\r\n    setMapData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.mapData = action.payload;\r\n    },\r\n    setIfCustom: (state, action: PayloadAction<boolean>) => {\r\n      state.ifCustom = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nexport const { setPosition, setMapView, setTooltipContent, setDataset, setLoadingMap, setMapData,  setIfCustom } = mapSlice.actions;\r\n\r\nexport default mapSlice.reducer;","import { AddCircle, FilterCenterFocus, RemoveCircle } from '@mui/icons-material';\r\nimport { IconButton, Tooltip, Zoom } from '@mui/material';\r\nimport { useStyles } from './BottomLeftControlsMUI';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setPosition } from '../../../../stores/slices/mapSlice';\r\n\r\nexport const BottomLeftControls = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const position = useAppSelector((state) => state.map.position);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n\r\n  function handleRecenter() {\r\n    dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n  }\r\n\r\n  function handleZoomIn() {\r\n    if (position.zoom >= 4) return;\r\n\r\n    dispatch(setPosition({ ...position, zoom: position.zoom * 2 }));\r\n  }\r\n\r\n  function handleZoomOut() {\r\n    if (position.zoom <= 1) return;\r\n    if (position.zoom / 2 === 1) {\r\n      dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n    } else {\r\n      dispatch(setPosition({ ...position, coordinates: [0, 0], zoom: position.zoom / 2 }));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.bottomLeftControls}>\r\n      <Zoom in={position.zoom !== 1 || position.coordinates.some((coordinate) => coordinate !== 0)}>\r\n        <Tooltip title=\"Recenter\" placement=\"right\">\r\n          <IconButton onClick={handleRecenter}>\r\n            <FilterCenterFocus fontSize=\"large\" color=\"primary\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Zoom>\r\n      <Tooltip title=\"Zoom In\" placement=\"right\">\r\n        <span>\r\n          <IconButton color=\"primary\" onClick={handleZoomIn} disabled={organism === 'none'}>\r\n            <AddCircle fontSize=\"large\" />\r\n          </IconButton>\r\n        </span>\r\n      </Tooltip>\r\n      <Tooltip title=\"Zoom Out\" placement=\"right\">\r\n        <span>\r\n          <IconButton color=\"primary\" onClick={handleZoomOut} disabled={organism === 'none'}>\r\n            <RemoveCircle fontSize=\"large\" />\r\n          </IconButton>\r\n        </span>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  topRightControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n\r\n    '&$bp700': {\r\n      position: 'relative'\r\n    }\r\n  },\r\n  card: { borderRadius: '6px !important' },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '4px'\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '8px'\r\n  },\r\n  labelTooltipIcon: {\r\n    cursor: 'pointer'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    textAlign: 'start'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  legendWrapper: {\r\n    marginTop: '8px',\r\n    maxHeight: '250px',\r\n    overflowY: 'auto'\r\n  },\r\n  legend: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  legendColorBox: {\r\n    width: '10px',\r\n    height: '10px',\r\n    marginRight: '4px'\r\n  },\r\n  legendText: {\r\n    fontSize: '10px'\r\n  },\r\n  bp700: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","// List of Salmonella genotypes\r\nexport const genotypes = [\r\n\r\n  '0',\r\n  '0.0.1',\r\n  '0.0.2',\r\n  '0.0.3',\r\n  '0.1',\r\n  '0.1.1',\r\n  '0.1.2',\r\n  '0.1.3',\r\n  '1',\r\n  '1.1',\r\n  '1.1.1',\r\n  '1.1.2',\r\n  '1.1.3',\r\n  '1.1.4',\r\n  '1.2',\r\n  '1.2.1',\r\n  '2',\r\n  '2.0.1',\r\n  '2.0.2',\r\n  '2.1',\r\n  '2.1.1',\r\n  '2.1.2',\r\n  '2.1.3',\r\n  '2.1.4',\r\n  '2.1.5',\r\n  '2.1.6',\r\n  '2.1.7',\r\n  '2.1.8',\r\n  '2.1.9',\r\n  '2.1.7.1',\r\n  '2.1.7.2',\r\n  '2.2',\r\n  '2.2.1',\r\n  '2.2.2',\r\n  '2.2.3',\r\n  '2.2.4',\r\n  '2.3',\r\n  '2.3.1',\r\n  '2.3.2',\r\n  '2.3.3',\r\n  '2.3.4',\r\n  '2.3.5',\r\n  '2.4',\r\n  '2.4.1',\r\n  '2.5',\r\n  '2.5.1',\r\n  '2.5.2',\r\n  '3',\r\n  '3.0.1',\r\n  '3.0.2',\r\n  '3.1',\r\n  '3.1.1',\r\n  '3.1.2',\r\n  '3.2',\r\n  '3.2.1',\r\n  '3.2.2',\r\n  '3.3',\r\n  '3.3.1',\r\n  '3.3.2',\r\n  '3.3.2.Bd1',\r\n  '3.3.2.Bd2',\r\n  '3.4',\r\n  '3.5',\r\n  '3.5.1',\r\n  '3.5.2',\r\n  '3.5.3',\r\n  '3.5.4',\r\n  '3.5.4.1',\r\n  '3.5.4.2',\r\n  '3.5.4.3',\r\n  '4',\r\n  '4.1',\r\n  '4.1.1',\r\n  '4.2',\r\n  '4.2.1',\r\n  '4.2.2',\r\n  '4.2.3',\r\n  '4.3.1',\r\n  '4.3.1.1',\r\n  '4.3.1.1.P1',\r\n  '4.3.1.1.EA1',\r\n  '4.3.1.2',\r\n  '4.3.1.2.EA2',\r\n  '4.3.1.2.EA3',\r\n  '4.3.1.2.1',\r\n  '4.3.1.2.1.1',\r\n  '4.3.1.3',\r\n  '4.3.1.3.Bdq'\r\n].sort((a, b) => a.localeCompare(b));\r\n","// List of legends for the map and in which organisms they appear\r\nexport const mapLegends = [\r\n  { value: 'MDR', label: 'Multidrug resistant (MDR)', organisms: ['typhi'] },\r\n  { value: 'XDR', label: 'Extensively drug resistant (XDR)', organisms: ['typhi'] },\r\n  { value: 'AzithR', label: 'Azithromycin resistant', organisms: ['typhi'] },\r\n  { value: 'CipNS', label: 'Ciprofloxacin non-susceptible (CipNS)', organisms: ['typhi'] },\r\n  { value: 'CipR', label: 'Ciprofloxacin resistant (CipR)', organisms: ['typhi'] },\r\n  { value: 'ESBL', label: 'ESBL', organisms: ['klebe'] },\r\n  { value: 'Carb', label: 'Carbapenems', organisms: ['klebe'] },\r\n  { value: 'Sensitive to all drugs', label: 'Sensitive to all drugs', organisms: ['typhi', 'klebe', 'gono', 'pneumo'] },\r\n  { value: 'Dominant Genotype', label: 'Dominant Genotype', organisms: ['typhi', 'klebe', 'gono', 'pneumo'] },\r\n  { value: 'H58 / Non-H58', label: 'H58 genotype', organisms: ['typhi'] },\r\n  { value: 'No. Samples', label: 'No. Samples', organisms: ['typhi', 'klebe', 'gono', 'pneumo'] }\r\n];\r\n","import { InfoOutlined } from '@mui/icons-material';\r\nimport { Box, Card, CardContent, MenuItem, Select, Tooltip, Typography, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './TopRightControlsMUI';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setMapView } from '../../../../stores/slices/mapSlice.ts';\r\nimport { darkGrey, getColorForGenotype, lightGrey } from '../../../../util/colorHelper';\r\nimport { genotypes } from '../../../../util/genotypes';\r\nimport { redColorScale, samplesColorScale, sensitiveColorScale } from '../mapColorHelper';\r\nimport { mapLegends } from '../../../../util/mapLegends';\r\n\r\nconst generalSteps = ['1 - 2%', '3 - 10%', '11 - 50%', '51 - 100%'];\r\nconst sensitiveSteps = ['0 - 10%', '10 - 20%', '20 - 50%', '50 - 90%', '90 - 100%'];\r\nconst noSamplesSteps = ['1 - 9', '10 - 19', '20 - 99', '100 - 299', '>= 300'];\r\nconst mapViewsWithZeroPercentOption = ['CipNS', 'CipR', 'AzithR', 'MDR', 'XDR', 'H58 / Non-H58', 'ESBL', 'Carb'];\r\n\r\nexport const TopRightControls = () => {\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery('(max-width:700px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const mapData = useAppSelector((state) => state.map.mapData);\r\n  const mapView = useAppSelector((state) => state.map.mapView);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const colorPallete = useAppSelector((state) => state.dashboard.colorPallete);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n\r\n  function handleChangeMapView(event) {\r\n    dispatch(setMapView(event.target.value));\r\n  }\r\n\r\n  function hasZeroPercentOption() {\r\n    return mapViewsWithZeroPercentOption.includes(mapView);\r\n  }\r\n\r\n  function getGenotypeColor(genotype) {\r\n    return organism === 'typhi' ? getColorForGenotype(genotype) : colorPallete[genotype] || '#F5F4F6';\r\n  }\r\n\r\n  function getDominantGenotypeSteps(genotype) {\r\n    if (organism === 'typhi') {\r\n      return genotypes;\r\n    } else {\r\n      return genotypesForFilter;\r\n    }\r\n  }\r\n\r\n  function getSteps() {\r\n    switch (mapView) {\r\n      case 'Sensitive to all drugs':\r\n        return sensitiveSteps;\r\n      case 'No. Samples':\r\n        return noSamplesSteps;\r\n      case 'Dominant Genotype':\r\n        return getDominantGenotypeSteps();\r\n      default:\r\n        return generalSteps;\r\n    }\r\n  }\r\n\r\n  function getStepBoxColor(step, index) {\r\n    switch (mapView) {\r\n      case 'Sensitive to all drugs':\r\n        const aux = ['10', '20', '50', '90', '100'];\r\n        return sensitiveColorScale(aux[index]);\r\n      case 'No. Samples': {\r\n        const aux = [1, 10, 20, 100, 300];\r\n        return samplesColorScale(aux[index]);\r\n      }\r\n      case 'Dominant Genotype':\r\n        return getGenotypeColor(step);\r\n      default:\r\n        return redColorScale(step);\r\n    }\r\n  }\r\n\r\n  function getMapLegends() {\r\n    return mapLegends.filter((legend) => legend.organisms.includes(organism));\r\n  }\r\n\r\n  return (\r\n    <div className={`${classes.topRightControls} ${matches ? classes.bp700 : ''}`}>\r\n      <Card elevation={3} className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <div className={classes.label}>\r\n            <Typography variant=\"caption\">Select map view</Typography>\r\n            <Tooltip\r\n              title=\"Percentage frequency data is shown only for countries with\r\n          N≥20 genomes\"\r\n              placement=\"top\"\r\n            >\r\n              <InfoOutlined color=\"action\" fontSize=\"small\" className={classes.labelTooltipIcon} />\r\n            </Tooltip>\r\n          </div>\r\n          <Select\r\n            variant=\"standard\"\r\n            value={mapView}\r\n            onChange={handleChangeMapView}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n            disabled={organism === 'none'}\r\n          >\r\n            {getMapLegends().map((legend, index) => {\r\n              return (\r\n                <MenuItem key={index + 'mapview'} value={legend.value}>\r\n                  {legend.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n          {organism !== 'none' && mapData.length > 0 && (\r\n            <div className={classes.legendWrapper}>\r\n              <div className={classes.legend}>\r\n                <Box className={classes.legendColorBox} style={{ backgroundColor: lightGrey }} />\r\n                <span className={classes.legendText}>Insufficient data</span>\r\n              </div>\r\n              {hasZeroPercentOption() && (\r\n                <div className={classes.legend}>\r\n                  <Box className={classes.legendColorBox} style={{ backgroundColor: darkGrey }} />\r\n                  <span className={classes.legendText}>0%</span>\r\n                </div>\r\n              )}\r\n              {getSteps().map((step, index) => {\r\n                return (\r\n                  <div key={`step-${index}`} className={classes.legend}>\r\n                    <Box className={classes.legendColorBox} style={{ backgroundColor: getStepBoxColor(step, index) }} />\r\n                    <span className={classes.legendText}>{step}</span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  topLeftControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n\r\n    '&$bp700': {\r\n      position: 'relative',\r\n\r\n      '& $yearWrapper': {\r\n        width: '100%'\r\n      },\r\n      '& $datasetWrapper .MuiToggleButton-root': {\r\n        width: '100%'\r\n      }\r\n    }\r\n  },\r\n  card: { borderRadius: '6px !important' },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px',\r\n    textAlign: 'start'\r\n  },\r\n  datasetWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    textAlign: 'start'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  yearsWrapper: {\r\n    display: 'flex',\r\n    columnGap: '4px',\r\n    paddingTop: '8px'\r\n  },\r\n  yearWrapper: {\r\n    width: '78px'\r\n  },\r\n  menuPaper: {\r\n    maxHeight: '350px !important'\r\n  },\r\n  bp700: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useStyles } from './TopLeftControlsMUI';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  MenuItem,\r\n  Select,\r\n  ToggleButton,\r\n  ToggleButtonGroup,\r\n  Typography,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setDataset } from '../../../../stores/slices/mapSlice.ts';\r\nimport { setActualTimeFinal, setActualTimeInitial } from '../../../../stores/slices/dashboardSlice';\r\n\r\nconst datasetOptions = ['All', 'Local', 'Travel'];\r\n\r\nexport const TopLeftControls = () => {\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery('(max-width:700px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const years = useAppSelector((state) => state.dashboard.years);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n\r\n  function handleChange(_event, newValue) {\r\n    if (newValue !== null) {\r\n      dispatch(setDataset(newValue));\r\n    }\r\n  }\r\n\r\n  function handleChangeInitial(_event, child) {\r\n    dispatch(setActualTimeInitial(child.props.value));\r\n  }\r\n\r\n  function handleChangeFinal(_event, child) {\r\n    dispatch(setActualTimeFinal(child.props.value));\r\n  }\r\n\r\n  function isDisabled() {\r\n    return organism !== 'typhi';\r\n  }\r\n\r\n  return (\r\n    <div className={`${classes.topLeftControls} ${matches ? classes.bp700 : ''}`}>\r\n      <Card elevation={3} className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography variant=\"h6\">Filters</Typography>\r\n          <div className={classes.datasetWrapper}>\r\n            <Typography gutterBottom variant=\"caption\">\r\n              Select dataset\r\n            </Typography>\r\n            <ToggleButtonGroup value={dataset} exclusive size=\"small\" onChange={handleChange} disabled={isDisabled()}>\r\n              {datasetOptions.map((option, index) => (\r\n                <ToggleButton key={`dataset-${index}`} value={option} color=\"primary\">\r\n                  {option}\r\n                </ToggleButton>\r\n              ))}\r\n            </ToggleButtonGroup>\r\n          </div>\r\n          <div className={classes.yearsWrapper}>\r\n            <div className={classes.yearWrapper}>\r\n              <Typography gutterBottom variant=\"caption\">\r\n                Start year\r\n              </Typography>\r\n              <Select\r\n                variant=\"standard\"\r\n                inputProps={{ className: classes.selectInput }}\r\n                MenuProps={{ classes: { paper: classes.menuPaper, list: classes.selectMenu } }}\r\n                value={actualTimeInitial}\r\n                onChange={handleChangeInitial}\r\n                fullWidth\r\n                disabled={organism === 'none'}\r\n              >\r\n                {years\r\n                  .filter((year) => year <= actualTimeFinal)\r\n                  .map((year, index) => {\r\n                    return (\r\n                      <MenuItem key={`initial-year-${index}`} value={year}>\r\n                        {year}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n              </Select>\r\n            </div>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <div className={classes.yearWrapper}>\r\n              <Typography gutterBottom variant=\"caption\">\r\n                End year\r\n              </Typography>\r\n              <Select\r\n                variant=\"standard\"\r\n                inputProps={{ className: classes.selectInput }}\r\n                MenuProps={{ classes: { paper: classes.menuPaper, list: classes.selectMenu } }}\r\n                value={actualTimeFinal}\r\n                onChange={handleChangeFinal}\r\n                fullWidth\r\n                disabled={organism === 'none'}\r\n              >\r\n                {years\r\n                  .filter((year) => year >= actualTimeInitial)\r\n                  .map((year, index) => {\r\n                    return (\r\n                      <MenuItem key={`final-year-${index}`} value={year}>\r\n                        {year}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bottomRightControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    right: 0\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","// Helper for loading images to the report\r\nexport function imgOnLoadPromise(obj) {\r\n  return new Promise((resolve, reject) => {\r\n    obj.onload = () => resolve(obj);\r\n    obj.onerror = reject;\r\n  });\r\n}\r\n","import { Alert, CircularProgress, IconButton, Snackbar, Tooltip } from '@mui/material';\r\nimport { useStyles } from './BottomRightControlsMUI';\r\nimport { CameraAlt } from '@mui/icons-material';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { useState } from 'react';\r\nimport { setPosition } from '../../../../stores/slices/mapSlice';\r\nimport { svgAsPngUri } from 'save-svg-as-png';\r\nimport { imgOnLoadPromise } from '../../../../util/imgOnLoadPromise';\r\nimport download from 'downloadjs';\r\nimport LogoImg from '../../../../assets/img/logo-prod.png';\r\nimport { mapLegends } from '../../../../util/mapLegends';\r\n\r\nexport const BottomRightControls = () => {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const mapView = useAppSelector((state) => state.map.mapView);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const globalOverviewLabel = useAppSelector((state) => state.dashboard.globalOverviewLabel);\r\n  const customDropdownMapView = useAppSelector((state) => state.graph.customDropdownMapView);\r\n\r\n  async function handleClick() {\r\n    setLoading(true);\r\n    dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n\r\n    try {\r\n      await svgAsPngUri(document.getElementById('global-overview-map'), {\r\n        scale: 4,\r\n        backgroundColor: 'white',\r\n        width: 1200,\r\n        left: -200\r\n      }).then(async (uri) => {\r\n        let canvas = document.createElement('canvas');\r\n        let ctx = canvas.getContext('2d');\r\n\r\n        let mapImg = document.createElement('img');\r\n        let mapImgPromise = imgOnLoadPromise(mapImg);\r\n        mapImg.src = uri;\r\n        await mapImgPromise;\r\n\r\n        const cWidth = 3600;\r\n        const cHeight = 1800;\r\n        const textHeight = 250;\r\n        const legendHeight = 350;\r\n        \r\n        canvas.width = cWidth;\r\n        canvas.height = cHeight + textHeight + legendHeight;\r\n\r\n        ctx.fillStyle = 'white';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        ctx.font = 'bolder 50px Montserrat';\r\n        ctx.fillStyle = 'black';\r\n        ctx.textAlign = 'center';\r\n        // Draw the entire text with the original font style\r\n        ctx.fillText(\"Global Overview of \", canvas.width*0.44 , 80);\r\n\r\n        // Set the font style for \"Salmonella\" to italic\r\n        ctx.font = 'italic bold 50px Montserrat';\r\n        ctx.fillText(globalOverviewLabel.italicLabel, canvas.width * 0.55, 80);\r\n\r\n        // Revert to the original font style for the remaining text\r\n        ctx.font = 'bolder 50px Montserrat';\r\n        if (organism === 'typhi') {\r\n          ctx.fillText(globalOverviewLabel.label, canvas.width * 0.615, 80);\r\n        } else if (organism === 'klebe') {\r\n          ctx.fillText(globalOverviewLabel.label, canvas.width * 0.64, 80);\r\n        }\r\n        \r\n\r\n        ctx.font = '35px Montserrat';\r\n        ctx.textAlign = 'center';\r\n\r\n        const actualMapView = mapLegends.find((x) => x.value === mapView).label;\r\n\r\n        ctx.fillText('Map View: ' + actualMapView, canvas.width / 2, 140);\r\n        ctx.fillText('Dataset: ' + dataset, canvas.width / 2, 190);\r\n        ctx.fillText('Time Period: ' + actualTimeInitial + ' to ' + actualTimeFinal, canvas.width / 2, 240);\r\n        if(mapView === 'Genotype prevalence'){\r\n          if (customDropdownMapView.length === 1) {\r\n            ctx.fillText('Selected Genotypes: ' + customDropdownMapView, canvas.width / 2, 290);\r\n          } else if (customDropdownMapView.length > 1) {\r\n            const genotypesText = customDropdownMapView.join(', ');\r\n            ctx.fillText('Selected Genotypes: ' + genotypesText, canvas.width / 2, 290);\r\n          }\r\n        }\r\n        ctx.drawImage(mapImg, 0, textHeight+50, canvas.width, cHeight);\r\n\r\n        const legendImg = document.createElement('img');\r\n        const legendImgPromise = imgOnLoadPromise(legendImg);\r\n        let legendWidth = 439;\r\n\r\n        switch (mapView) {\r\n          case 'Dominant Genotype':\r\n            legendWidth = organism === 'typhi' ? 3085 : 2937;\r\n            legendImg.src = `legends/MapView_DominantGenotype_${organism}.png`;\r\n            break;\r\n          case 'No. Samples':\r\n            legendImg.src = 'legends/MapView_NoSamples.png';\r\n            break;\r\n          case 'Sensitive to all drugs':\r\n            legendImg.src = 'legends/MapView_Sensitive.png';\r\n            break;\r\n          default:\r\n            legendImg.src = 'legends/MapView_Others.png';\r\n            break;\r\n        }\r\n        if (mapView === 'Dominant Genotype') {\r\n        await legendImgPromise;\r\n        ctx.drawImage(\r\n          legendImg,\r\n          canvas.width / 2 - legendWidth / 2,\r\n          canvas.height - legendHeight - 30,\r\n          legendWidth,\r\n          legendHeight\r\n        );\r\n      } else {\r\n        await legendImgPromise;\r\n        ctx.drawImage(\r\n          legendImg,\r\n          canvas.width - (canvas.width / 6),\r\n          0,\r\n          legendWidth,\r\n          legendHeight\r\n        );\r\n      }\r\n\r\n        const typhinetLogo = document.createElement('img');\r\n        const typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n        typhinetLogo.src = LogoImg;\r\n        await typhinetLogoPromise;\r\n        ctx.drawImage(typhinetLogo, 25, 25, 500, 200);\r\n\r\n        const base64 = canvas.toDataURL();\r\n        await download(base64, 'TyphiNET - Global Overview Salmonella Typhi.png');\r\n      });\r\n    } catch (error) {\r\n      setShowAlert(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function handleCloseAlert() {\r\n    setShowAlert(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.bottomRightControls}>\r\n      <Tooltip title=\"Download Map as PNG\" placement=\"left\">\r\n        <span>\r\n          <IconButton color=\"primary\" onClick={handleClick} disabled={organism === 'none' || loading}>\r\n            {loading ? <CircularProgress color=\"primary\" size={35} /> : <CameraAlt fontSize=\"large\" />}\r\n          </IconButton>\r\n        </span>\r\n      </Tooltip>\r\n      <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleCloseAlert}>\r\n        <Alert onClose={handleCloseAlert} severity=\"error\" sx={{ width: '100%' }}>\r\n          Something went wrong with the download, please try again later.\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Card, CardContent, Typography, useMediaQuery } from '@mui/material';\r\nimport { ComposableMap, Geographies, Geography, Graticule, Sphere, ZoomableGroup } from 'react-simple-maps';\r\nimport { useStyles } from './MapMUI';\r\nimport geography from '../../../assets/world-50m.json';\r\nimport { darkGrey, getColorForGenotype, lightGrey, zeroCountColor, zeroPercentColor } from '../../../util/colorHelper';\r\nimport { redColorScale, samplesColorScale, sensitiveColorScale } from './mapColorHelper';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { BottomLeftControls } from './BottomLeftControls';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { setPosition, setTooltipContent } from '../../../stores/slices/mapSlice.ts';\r\nimport { TopRightControls } from './TopRightControls';\r\nimport { setActualCountry } from '../../../stores/slices/dashboardSlice.ts';\r\nimport { TopLeftControls } from './TopLeftControls';\r\nimport { BottomRightControls } from './BottomRightControls';\r\n\r\nconst statKey = {\r\n  MDR: 'MDR',\r\n  'H58 / Non-H58': 'H58',\r\n  XDR: 'XDR',\r\n  AzithR: 'AzithR',\r\n  CipNS: 'CipNS',\r\n  CipR: 'CipR',\r\n  'Sensitive to all drugs': 'Susceptible',\r\n  ESBL: 'ESBL',\r\n  Carb: 'Carb'\r\n};\r\n\r\nexport const Map = () => {\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery('(max-width:700px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const position = useAppSelector((state) => state.map.position);\r\n  const mapData = useAppSelector((state) => state.map.mapData);\r\n  const mapView = useAppSelector((state) => state.map.mapView);\r\n  const tooltipContent = useAppSelector((state) => state.map.tooltipContent);\r\n  const globalOverviewLabel = useAppSelector((state) => state.dashboard.globalOverviewLabel);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const colorPallete = useAppSelector((state) => state.dashboard.colorPallete);\r\n  // const frequenciesGraphSelectedGenotypes = useAppSelector((state) => state.graph.frequenciesGraphSelectedGenotypes);\r\n  const customDropdownMapView = useAppSelector((state) => state.graph.customDropdownMapView);\r\n  const ifCustom = useAppSelector((state) => state.map.ifCustom);\r\n\r\n  function getGenotypeColor(genotype) {\r\n    return organism === 'typhi' ? getColorForGenotype(genotype) : colorPallete[genotype] || '#F5F4F6';\r\n  }\r\n\r\n  function handleOnClick(NAME) {\r\n    if (NAME !== undefined) {\r\n      dispatch(setActualCountry(NAME));\r\n    }\r\n  }\r\n\r\n  function handleOnMouseLeave() {\r\n    dispatch(setTooltipContent(null));\r\n  }\r\n\r\n  function handleOnMouseEnter({ geo, countryStats, countryData, smallerThan20 = false, showTooltip = false }) {\r\n    const { NAME } = geo.properties;\r\n    const tooltip = {\r\n      name: NAME,\r\n      content: {},\r\n      smallerThan20\r\n    };\r\n\r\n    if (countryData !== undefined) {\r\n      switch (mapView) {\r\n        case 'No. Samples':\r\n          const combinedPercentage = ((countryStats[statKey[\"CipR\"]].percentage || 0) + (countryStats[statKey[\"CipNS\"]].percentage || 0));\r\n          Object.assign(tooltip, {\r\n            content:\r\n              organism === 'typhi'\r\n                ? {\r\n                    Samples: countryData.count,\r\n                    Genotypes: countryStats.GENOTYPE.count,\r\n                    H58: `${countryStats.H58.percentage}%`,\r\n                    MDR: `${countryStats.MDR.percentage}%`,\r\n                    XDR: `${countryStats.XDR.percentage}%`,\r\n                    AzithR: `${countryStats.AzithR.percentage}%`,\r\n                    CipR: `${countryStats.CipR.percentage}%`,\r\n                    // CipNS: `${countryStats.CipNS.percentage}%`,\r\n                    CipNS: `${combinedPercentage.toFixed(2)}%`,\r\n                    Susceptible: `${countryStats.Susceptible.percentage}%`\r\n                  }\r\n                : {\r\n                    Samples: countryData.count,\r\n                    Genotypes: countryStats.GENOTYPE.count,\r\n                    ESBL: `${countryStats.ESBL.percentage}%`,\r\n                    Carb: `${countryStats.Carb.percentage}%`,\r\n                    Susceptible: `${countryStats.Susceptible.percentage}%`\r\n                  }\r\n          });\r\n          break;\r\n        case 'Dominant Genotype':\r\n          const genotypes = countryStats.GENOTYPE.items.slice(0, 5);\r\n          genotypes.forEach((genotype) => {\r\n            tooltip.content[genotype.name] = genotype.count;\r\n          });\r\n          break;\r\n        case 'H58 / Non-H58':\r\n        case 'MDR':\r\n        case 'Sensitive to all drugs':\r\n        case 'XDR':\r\n        case 'AzithR':\r\n        case 'CipR':\r\n        case 'ESBL':\r\n        case 'Carb':\r\n          if (showTooltip) {\r\n            tooltip.content[statKey[mapView]] = {\r\n              count: countryStats[statKey[mapView]].count,\r\n              percentage: `${countryStats[statKey[mapView]].percentage}%`\r\n            };\r\n          }\r\n          break;\r\n        case 'CipNS':\r\n          if (showTooltip) {\r\n            const combinedCount = (countryStats[statKey[\"CipR\"]].count || 0) + (countryStats[statKey[\"CipNS\"]].count || 0);\r\n            const combinedPercentage = (\r\n              (countryStats[statKey[\"CipR\"]].percentage || 0) + (countryStats[statKey[\"CipNS\"]].percentage || 0));\r\n            tooltip.content['CipNS'] = {\r\n              count: combinedCount,\r\n              percentage: `${combinedPercentage.toFixed(2)}%`\r\n            };\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    dispatch(setTooltipContent(tooltip));\r\n  }\r\n\r\n  function handleOnMoveEnd(value) {\r\n    dispatch(setPosition(value));\r\n  }\r\n\r\n  function showPercentage() {\r\n    return !['Dominant Genotype', 'No. Samples'].includes(mapView);\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography gutterBottom variant=\"h5\" fontWeight={'bold'}>\r\n          Global Overview{' '}\r\n          {organism === 'none' ? (\r\n            ''\r\n          ) : (\r\n            <span>\r\n              of <i>{globalOverviewLabel.italicLabel}</i> {globalOverviewLabel.label}\r\n            </span>\r\n          )}\r\n        </Typography>\r\n        <div className={classes.mapWrapper}>\r\n          <ComposableMap\r\n            className={classes.composableMap}\r\n            id=\"global-overview-map\"\r\n            data-tip=\"\"\r\n            projectionConfig={{\r\n              rotate: [-10, 0, 0],\r\n              scale: 210\r\n            }}\r\n          >\r\n            <ZoomableGroup\r\n              zoom={position.zoom}\r\n              center={position.coordinates}\r\n              onMoveEnd={(value) => {\r\n                handleOnMoveEnd(value);\r\n              }}\r\n            >\r\n              <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n              <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n              <Geographies geography={geography}>\r\n                {({ geographies }) => {\r\n                  return geographies.map((geo) => {\r\n                    const countryData = mapData.find((item) => item.name === geo.properties.NAME);\r\n                    const countryStats = countryData?.stats;\r\n                    let fillColor = lightGrey;\r\n                    let smallerThan20 = false;\r\n                    let showTooltip = false;\r\n\r\n                    if (countryData) {\r\n                      let count = 0;\r\n\r\n                      switch (mapView) {\r\n                        case 'No. Samples':\r\n                          if (countryData.count > 0) {\r\n                            fillColor = samplesColorScale(countryData.count);\r\n                          } else {\r\n                            fillColor = zeroCountColor;\r\n                          }\r\n                          break;\r\n                        case 'Dominant Genotype':\r\n                          const genotypes = countryStats.GENOTYPE.items;\r\n                          fillColor = getGenotypeColor(genotypes[0].name);\r\n                          break;\r\n                        case 'Genotype prevalence':\r\n                          let percentCounter = 0;        \r\n                          const genotypes1 = countryStats.GENOTYPE.items;\r\n                          // console.log(\"gencountryDataotypes1\",countryData);\r\n                          let genotypes2 = [];\r\n                          genotypes1.forEach((genotype) => {\r\n                            if (customDropdownMapView.includes(genotype.name))\r\n                                genotypes2.push(genotype);\r\n                              percentCounter += genotype.count;\r\n                          });\r\n                          // console.log(\"genotypes2\",genotypes2.length );\r\n                \r\n                          let sumCount = 0;\r\n\r\n                          if (genotypes2.length > 0 ) {\r\n                            for (const genotype of genotypes2) {\r\n                              sumCount += genotype.count;\r\n                            }\r\n                          }\r\n                          if(countryData.count>=20 && genotypes2.length > 0 ){\r\n                            // console.log(\"count %\",count );\r\n                            if(genotypes2 !== undefined){\r\n                              fillColor = redColorScale(((sumCount/percentCounter)*100).toFixed(2));\r\n                            }\r\n                          }\r\n                          else if (countryData.count>=20) {\r\n                            fillColor = darkGrey;\r\n                            smallerThan20 = true;\r\n                          }\r\n                          break;\r\n                        case 'Sensitive to all drugs':\r\n                        case 'H58 / Non-H58':\r\n                        case 'MDR':\r\n                        case 'XDR':\r\n                        case 'AzithR':\r\n                        case 'CipR':\r\n                        case 'ESBL':\r\n                        case 'Carb':\r\n                          count = countryStats[statKey[mapView]]?.count;\r\n                          if (countryData.count >= 20 && count > 0) {\r\n                            if (mapView === 'Sensitive to all drugs') {\r\n                              fillColor = sensitiveColorScale(countryStats[statKey[mapView]].percentage);\r\n                            } else {\r\n                              fillColor = redColorScale(countryStats[statKey[mapView]].percentage);\r\n                            }\r\n                            showTooltip = true;\r\n                          } else if (countryData.count >= 20) {\r\n                            if (mapView === 'Sensitive to all drugs') {\r\n                              fillColor = zeroPercentColor;\r\n                            } else {\r\n                              fillColor = darkGrey;\r\n                            }\r\n                            smallerThan20 = true;\r\n                          }\r\n                          break;\r\n                        case 'CipNS':\r\n                          let countCipR = countryStats[statKey[\"CipR\"]]?.count;\r\n                          let countCipNS = countryStats[statKey[\"CipNS\"]]?.count;\r\n                          count = countCipR + countCipNS;\r\n                          // count = countryStats[statKey[mapView]]?.count;\r\n                          let per = countryStats[statKey[\"CipNS\"]].percentage + countryStats[statKey[\"CipR\"]].percentage;\r\n                          console.log(\"per\", countryStats[statKey[\"CipNS\"]], per)\r\n                          if (countryData.count >= 20 && count > 0) {\r\n                            if (mapView === 'Susceptible to all drugs') {\r\n                              fillColor = sensitiveColorScale(per);\r\n                            } else {\r\n                              fillColor = redColorScale(per);\r\n                            }\r\n                            showTooltip = true;\r\n                          } else if (countryData.count >= 20) {\r\n                            if (mapView === 'Susceptible to all drugs') {\r\n                              fillColor = zeroPercentColor;\r\n                            } else {\r\n                              fillColor = darkGrey;\r\n                            }\r\n                            smallerThan20 = true;\r\n                          }\r\n                          break;\r\n                        default:\r\n                          break;\r\n                      }\r\n                    }\r\n\r\n                    return (\r\n                      <Geography\r\n                        key={geo.rsmKey}\r\n                        geography={geo}\r\n                        cursor=\"pointer\"\r\n                        fill={fillColor}\r\n                        onClick={() => handleOnClick(geo.properties.NAME)}\r\n                        onMouseLeave={handleOnMouseLeave}\r\n                        onMouseEnter={() =>\r\n                          handleOnMouseEnter({\r\n                            geo,\r\n                            countryStats,\r\n                            countryData,\r\n                            smallerThan20,\r\n                            showTooltip\r\n                          })\r\n                        }\r\n                        style={{\r\n                          default: {\r\n                            outline: 'none'\r\n                          },\r\n                          hover: {\r\n                            stroke: '#607D8B',\r\n                            strokeWidth: 1,\r\n                            outline: 'none'\r\n                          },\r\n                          pressed: {\r\n                            fill: '#FF5722',\r\n                            stroke: '#607D8B',\r\n                            strokeWidth: 1,\r\n                            outline: 'none'\r\n                          }\r\n                        }}\r\n                      />\r\n                    );\r\n                  });\r\n                }}\r\n              </Geographies>\r\n            </ZoomableGroup>\r\n          </ComposableMap>\r\n          {!matches && (\r\n            <>\r\n              <TopLeftControls />\r\n              <TopRightControls />\r\n            </>\r\n          )}\r\n          <BottomLeftControls />\r\n          <BottomRightControls />\r\n        </div>\r\n        {matches && (\r\n          <div className={classes.topControls}>\r\n            <TopRightControls />\r\n            <TopLeftControls />\r\n          </div>\r\n        )}\r\n        <ReactTooltip>\r\n          {tooltipContent && (\r\n            <div className={classes.tooltipMap}>\r\n              <span className={classes.country}>{tooltipContent.name}</span>\r\n              <div className={classes.tooltipInfo}>\r\n                {Object.keys(tooltipContent.content).map((key, index) => {\r\n                  return (\r\n                    <div key={`tooltip-${index}`} className={classes.info}>\r\n                      {mapView === 'Dominant Genotype' && (\r\n                        <div\r\n                          className={classes.color}\r\n                          style={{\r\n                            backgroundColor: getGenotypeColor(key)\r\n                          }}\r\n                        />\r\n                      )}\r\n                      <span key={`info-${index}`}>\r\n                        <span>{key}:</span>\r\n                        {showPercentage() ? (\r\n                          <span>{` ${tooltipContent.content[key].count} (${tooltipContent.content[key].percentage})`}</span>\r\n                        ) : (\r\n                          <span>{` ${tooltipContent.content[key]}`}</span>\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  );\r\n                })}\r\n                {Object.keys(tooltipContent.content).length === 0 && (\r\n                  <span>{tooltipContent.smallerThan20 ? '0%' : 'Insufficient data'}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ReactTooltip>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: '16px',\r\n    backgroundColor: '#fff !important'\r\n  },\r\n  toolbar: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: '16px',\r\n    display: 'grid !important',\r\n    gap: '8px',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    padding: '16px 16px 24px !important',\r\n    margin: '0px 2%'\r\n  },\r\n  socialsWrapper: {\r\n    display: 'flex',\r\n    columnGap: '4px',\r\n    gridColumn: 'span 6',\r\n    justifyContent: 'flex-end'\r\n  },\r\n  logosWrapper: {\r\n    gridColumn: 'span 6',\r\n    display: 'flex',\r\n    columnGap: '8px'\r\n  },\r\n  logo: {\r\n    cursor: 'pointer'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","export default __webpack_public_path__ + \"static/media/LSHTMLogo2020.f787d6d4.jpg\";","export default __webpack_public_path__ + \"static/media/Wellcome_Trust_logo.359b4529.png\";","import { AppBar, IconButton, Toolbar, Tooltip } from '@mui/material';\r\nimport { useStyles } from './FooterMUI';\r\nimport { GitHub } from '@mui/icons-material';\r\nimport LSHTMLogoImg from '../../../assets/img/LSHTMLogo2020.jpg';\r\nimport WellcomeTrustLogoImg from '../../../assets/img/Wellcome_Trust_logo.png';\r\n\r\nexport const Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  function handleClickGithub() {\r\n    window.open('https://github.com/amrnet', '_blank');\r\n  }\r\n\r\n  function handleClickLSHTM() {\r\n    window.open('https://www.lshtm.ac.uk', '_blank');\r\n  }\r\n\r\n  function handleClickWT() {\r\n    window.open('http://wellcome.org', '_blank');\r\n  }\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <div className={classes.logosWrapper}>\r\n          <img\r\n            className={classes.logo}\r\n            onClick={handleClickLSHTM}\r\n            src={LSHTMLogoImg}\r\n            alt=\"LSHTM Logo\"\r\n            loading=\"lazy\"\r\n            height={60}\r\n          />\r\n          <img\r\n            className={classes.logo}\r\n            onClick={handleClickWT}\r\n            src={WellcomeTrustLogoImg}\r\n            alt=\"Wellcome Trust Logo\"\r\n            loading=\"lazy\"\r\n            height={60}\r\n          />\r\n        </div>\r\n        <div className={classes.socialsWrapper}>\r\n          <Tooltip title=\"Github\" placement=\"top\">\r\n            <IconButton onClick={handleClickGithub}>\r\n              <GitHub fontSize=\"large\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  downloadDataWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    padding: '16px 0px',\r\n\r\n    '@media (max-width: 500px)': {\r\n      padding: '8px 0px'\r\n    },\r\n\r\n    '@media (max-width: 700px)': {\r\n      flexDirection: 'column',\r\n      rowGap: '8px'\r\n    }\r\n  },\r\n  button: {\r\n    color: '#fff !important',\r\n    width: '30%',\r\n    textTransform: 'none !important',\r\n    paddingTop: '8px !important',\r\n    paddingBottom: '8px !important',\r\n    borderRadius: '100px !important',\r\n\r\n    '@media (max-width: 700px)': {\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","export default __webpack_public_path__ + \"static/media/eu_flag.77134ad3.jpg\";","import { BarChart, BubbleChart, MultilineChart, StackedBarChart, Timeline } from '@mui/icons-material';\r\n\r\nexport const graphCards = [\r\n  {\r\n    collapse: 'drugResistance',\r\n    title: 'Drug resistance trends',\r\n    description: ['Data are plotted for years with N ≥ 10 genomes'],\r\n    icon: <Timeline color=\"primary\" />,\r\n    id: 'DRT',\r\n    organisms: ['typhi', 'klebe']\r\n  },\r\n  {\r\n    collapse: 'frequencies',\r\n    title: 'Resistance frequencies within genotypes',\r\n    description: ['Top Genotypes (up to 7)'],\r\n    icon: <BarChart color=\"primary\" />,\r\n    id: 'RFWG',\r\n    organisms: ['typhi', 'klebe']\r\n  },\r\n  {\r\n    collapse: 'determinants',\r\n    title: 'Resistance determinants within genotypes',\r\n    description: ['Top Genotypes (up to 10)'],\r\n    icon: <StackedBarChart color=\"primary\" />,\r\n    id: 'RDWG',\r\n    organisms: ['typhi', 'klebe']\r\n  },\r\n  {\r\n    collapse: 'distribution',\r\n    title: 'Genotype distribution',\r\n    description: [''],\r\n    icon: <StackedBarChart color=\"primary\" />,\r\n    id: 'GD',\r\n    organisms: ['typhi', 'klebe']\r\n  },\r\n  {\r\n    collapse: 'trendsKP',\r\n    title: 'Carbapenems and ESBL resistant determinant trends',\r\n    description: ['Top Genotypes (up to 10)', 'Data are plotted for years with N ≥ 10 genomes'],\r\n    icon: <MultilineChart color=\"primary\" />,\r\n    id: 'CERDT',\r\n    organisms: ['klebe']\r\n  },\r\n  {\r\n    collapse: 'KODiversity',\r\n    title: 'K/O diversity',\r\n    description: ['Top K/O (up to 20)'],\r\n    icon: <StackedBarChart color=\"primary\" />,\r\n    id: 'KO',\r\n    organisms: ['klebe']\r\n  },\r\n  {\r\n    collapse: 'convergence',\r\n    title: 'Convergence vs metadata',\r\n    description: [''],\r\n    icon: <BubbleChart color=\"primary\" />,\r\n    id: 'CVM',\r\n    organisms: ['klebe']\r\n  }\r\n];\r\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface CollapsesModel {\r\n  determinants: boolean;\r\n  distribution: boolean;\r\n  drugResistance: boolean;\r\n  frequencies: boolean;\r\n  trendsKP: boolean;\r\n  KODiversity: boolean;\r\n  convergence: boolean;\r\n}\r\ninterface GraphState {\r\n  countriesForFilter: Array<string>;\r\n  distributionGraphView: string;\r\n  genotypesYearData: Array<any>;\r\n  drugsYearData: Array<any>;\r\n  genotypesAndDrugsYearData: Array<any>;\r\n  collapses: CollapsesModel;\r\n  drugResistanceGraphView: Array<string>,\r\n  frequenciesGraphView: string;\r\n  frequenciesGraphSelectedGenotypes: Array<string>;\r\n  customDropdownMapView: Array<string>;\r\n  genotypesDrugsData: Array<any>;\r\n  genotypesDrugsData2: Array<any>;\r\n  genotypesDrugClassesData: Array<any>;\r\n  determinantsGraphView: string;\r\n  determinantsGraphDrugClass: string;\r\n  trendsKPGraphDrugClass: string;\r\n  trendsKPGraphView: string;\r\n  KODiversityData: Array<any>;\r\n  KODiversityGraphView: string;\r\n  convergenceData: Array<any>;\r\n  convergenceGroupVariable: string;\r\n  convergenceColourVariable: string;\r\n  convergenceColourPallete: Object;\r\n  currentSliderValue: number;\r\n  resetBool: boolean;\r\n  maxSliderValue:number;\r\n}\r\n\r\nconst initialState: GraphState = {\r\n  collapses: {\r\n    determinants: false,\r\n    distribution: false,\r\n    drugResistance: false,\r\n    frequencies: false,\r\n    trendsKP: false,\r\n    KODiversity: false,\r\n    convergence: false,\r\n  },\r\n  countriesForFilter: [],\r\n  genotypesYearData: [],\r\n  drugsYearData: [],\r\n  genotypesDrugsData: [],\r\n  genotypesDrugsData2: [],\r\n  genotypesDrugClassesData: [],\r\n  genotypesAndDrugsYearData: [],\r\n  distributionGraphView: 'number',\r\n  drugResistanceGraphView: [],\r\n  frequenciesGraphView: 'percentage',\r\n  frequenciesGraphSelectedGenotypes: [],\r\n  customDropdownMapView: [],\r\n  determinantsGraphView: 'percentage',\r\n  determinantsGraphDrugClass: '',\r\n  trendsKPGraphDrugClass: '',\r\n  trendsKPGraphView: 'number',\r\n  KODiversityData: [],\r\n  KODiversityGraphView: 'K_locus',\r\n  convergenceData: [],\r\n  convergenceGroupVariable: 'COUNTRY_ONLY',\r\n  convergenceColourVariable: 'DATE',\r\n  convergenceColourPallete: {},\r\n  currentSliderValue:20,\r\n  resetBool: false,\r\n  maxSliderValue:0,\r\n};\r\n\r\nexport const graphSlice = createSlice({\r\n  name: 'graph',\r\n  initialState,\r\n  reducers: {\r\n    setCollapse: (state, action: PayloadAction<any>) => {\r\n      state.collapses[action.payload.key as keyof CollapsesModel] = action.payload.value;\r\n    },\r\n    setCollapses: (state, action: PayloadAction<CollapsesModel>) => {\r\n      state.collapses = action.payload;\r\n    },\r\n    setCountriesForFilter: (state, action: PayloadAction<Array<string>>) => {\r\n      state.countriesForFilter = action.payload;\r\n    },\r\n    setGenotypesYearData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.genotypesYearData = action.payload;\r\n    },\r\n    setDrugsYearData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.drugsYearData = action.payload;\r\n    },\r\n    setDistributionGraphView: (state, action: PayloadAction<string>) => {\r\n      state.distributionGraphView = action.payload;\r\n    },\r\n    setDrugResistanceGraphView: (state, action: PayloadAction<Array<string>>) => {\r\n      state.drugResistanceGraphView = action.payload;\r\n    },\r\n    setFrequenciesGraphView: (state, action: PayloadAction<string>) => {\r\n      state.frequenciesGraphView = action.payload;\r\n    },\r\n    setFrequenciesGraphSelectedGenotypes: (state, action: PayloadAction<Array<string>>) => {\r\n      state.frequenciesGraphSelectedGenotypes = action.payload;\r\n    },\r\n    setCustomDropdownMapView: (state, action: PayloadAction<Array<string>>) => {\r\n      state.customDropdownMapView = action.payload;\r\n    },\r\n    setGenotypesDrugsData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.genotypesDrugsData = action.payload;\r\n    },\r\n    setGenotypesDrugsData2: (state, action: PayloadAction<Array<any>>) => {\r\n      state.genotypesDrugsData2 = action.payload;\r\n    },\r\n    setDeterminantsGraphView: (state, action: PayloadAction<string>) => {\r\n      state.determinantsGraphView = action.payload;\r\n    },\r\n    setDeterminantsGraphDrugClass: (state, action: PayloadAction<string>) => {\r\n      state.determinantsGraphDrugClass = action.payload;\r\n    },\r\n    setGenotypesDrugClassesData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.genotypesDrugClassesData = action.payload;\r\n    },\r\n    setGenotypesAndDrugsYearData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.genotypesAndDrugsYearData = action.payload;\r\n    },\r\n    setTrendsKPGraphDrugClass: (state, action: PayloadAction<string>) => {\r\n      state.trendsKPGraphDrugClass = action.payload;\r\n    },\r\n    setTrendsKPGraphView: (state, action: PayloadAction<string>) => {\r\n      state.trendsKPGraphView = action.payload;\r\n    },\r\n    setKODiversityData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.KODiversityData = action.payload;\r\n    },\r\n    setKODiversityGraphView: (state, action: PayloadAction<string>) => {\r\n      state.KODiversityGraphView = action.payload;\r\n    },\r\n    setConvergenceData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.convergenceData = action.payload;\r\n    },\r\n    setConvergenceGroupVariable: (state, action: PayloadAction<string>) => {\r\n      state.convergenceGroupVariable = action.payload;\r\n    },\r\n    setConvergenceColourVariable: (state, action: PayloadAction<string>) => {\r\n      state.convergenceColourVariable = action.payload;\r\n    },\r\n    setConvergenceColourPallete: (state, action: PayloadAction<Object>) => {\r\n      state.convergenceColourPallete = action.payload;\r\n    },\r\n     setCurrentSliderValue: (state, action: PayloadAction<number>) => {\r\n      state.currentSliderValue = action.payload;\r\n    },\r\n    setResetBool: (state, action: PayloadAction<boolean>) => {\r\n      state.resetBool = action.payload;\r\n    },\r\n    setMaxSliderValue: (state, action: PayloadAction<number>) => {\r\n      state.maxSliderValue = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nexport const {\r\n  setCountriesForFilter,\r\n  setDistributionGraphView,\r\n  setGenotypesYearData,\r\n  setDrugsYearData,\r\n  setCollapse,\r\n  setDrugResistanceGraphView,\r\n  setCollapses,\r\n  setFrequenciesGraphView,\r\n  setFrequenciesGraphSelectedGenotypes,\r\n  setCustomDropdownMapView,\r\n  setGenotypesDrugsData,\r\n  setGenotypesDrugsData2,\r\n  setDeterminantsGraphView,\r\n  setDeterminantsGraphDrugClass,\r\n  setGenotypesDrugClassesData,\r\n  setGenotypesAndDrugsYearData,\r\n  setTrendsKPGraphDrugClass,\r\n  setTrendsKPGraphView,\r\n  setKODiversityData,\r\n  setKODiversityGraphView,\r\n  setConvergenceData,\r\n  setConvergenceGroupVariable,\r\n  setConvergenceColourVariable,\r\n  setConvergenceColourPallete,\r\n  setCurrentSliderValue,\r\n  setResetBool,\r\n  setMaxSliderValue,\r\n} = graphSlice.actions;\r\n\r\nexport default graphSlice.reducer;","// List of Salmonella drugs\r\nexport const drugsST = [\r\n  'Ampicillin',\r\n  'Azithromycin',\r\n  'Chloramphenicol',\r\n  // 'Co-trimoxazole',\r\n  'Trimethoprim-sulfamethoxazole',\r\n  // 'ESBL',\r\n  'Ceftriaxone',\r\n  // 'Fluoroquinolones (CipNS)',\r\n  'Ciprofloxacin NS',\r\n  // 'Fluoroquinolones (CipR)',\r\n  'Ciprofloxacin R',\r\n  'Sulphonamides',\r\n  'Susceptible',\r\n  'Tetracyclines',\r\n  'Trimethoprim'\r\n].sort((a, b) => a.localeCompare(b));\r\n\r\nexport const drugsForDrugResistanceGraphST = [...drugsST, 'XDR', 'MDR'].sort((a, b) => a.localeCompare(b));\r\n\r\nexport const defaultDrugsForDrugResistanceGraphST = [\r\n  'Azithromycin',\r\n  'Ceftriaxone',\r\n  'Ciprofloxacin NS',\r\n  'Ciprofloxacin R',\r\n  'MDR',\r\n  'Susceptible',\r\n  'Trimethoprim-sulfamethoxazole',\r\n  'XDR'\r\n];\r\n\r\n// List of Klebsiella drugs\r\nexport const drugsKP = [\r\n  'Aminoglycosides',\r\n  'Carbapenems',\r\n  '3rd gen cephalosporins (3GCs)',\r\n  '3rd gen cephalosporins (3GCs) + β-lactamase inhibitors',\r\n  'Colistin',\r\n  'Fluoroquinolones',\r\n  'Fosfomycin',\r\n  'Penicillins',\r\n  'β-lactamase inhibitors',\r\n  'Phenicols',\r\n  'Sulfonamides',\r\n  'Susceptible',\r\n  'Tetracycline',\r\n  'Tigecycline',\r\n  'Trimethoprim'\r\n];\r\n\r\n// List of Salmonella drug classes\r\nexport const drugClassesST = [\r\n  'Ampicillin',\r\n  'Azithromycin',\r\n  'Chloramphenicol',\r\n  // 'Co-trimoxazole',\r\n  'Trimethoprim-sulfamethoxazole',\r\n  // 'ESBL',\r\n  'Ceftriaxone',\r\n  // 'Fluoroquinolones (CipNS)',\r\n  'Ciprofloxacin NS',\r\n  'Sulphonamides',\r\n  'Tetracyclines',\r\n  'Trimethoprim'\r\n];\r\n\r\n// List of Klebsiella drug classes\r\nexport const drugClassesKP = ['Carbapenems', 'ESBL'];\r\n","import { lightGrey } from '../../../util/colorHelper';\r\n\r\nexport const getColorForDrug = (drug) => {\r\n  switch (drug) {\r\n    case 'Ampicillin':\r\n    case 'Aminoglycosides':\r\n      return 'rgb(129,178,210)';\r\n\r\n    case 'Azithromycin':\r\n    case 'Carbapenems':\r\n      return 'rgb(144,211,199)';\r\n\r\n    case 'Chloramphenicol':\r\n    case '3rd gen cephalosporins (3GCs)':\r\n      return 'rgb(249,129,117)';\r\n\r\n    // case 'Co-trimoxazole':\r\n    case 'Trimethoprim-sulfamethoxazole':\r\n    case '3rd gen cephalosporins (3GCs) + β-lactamase inhibitors':\r\n      return 'rgb(252,180,105)';\r\n\r\n    // case 'ESBL':\r\n    case 'Ceftriaxone':\r\n    case 'Colistin':\r\n      return '#DB90F0';\r\n\r\n    // case 'Fluoroquinolones (CipI)':\r\n    case 'Fosfomycin':\r\n      return '#98fb98';\r\n\r\n    // case 'Fluoroquinolones (CipNS)':\r\n    case 'Ciprofloxacin NS':\r\n    case 'Penicillins':\r\n      return 'rgb(255,236,120)';\r\n\r\n    // case 'Fluoroquinolones (CipR)':\r\n    case 'Ciprofloxacin R':\r\n    case 'Fluoroquinolones':\r\n      return '#9e9ac8';\r\n\r\n    case 'Sulphonamides':\r\n    case 'Sulfonamides':\r\n      return 'rgb(180,221,112)';\r\n\r\n    case 'Susceptible':\r\n      return lightGrey;\r\n\r\n    case 'Tetracyclines':\r\n    case 'Tetracycline':\r\n      return 'rgb(251,207,229)';\r\n\r\n    case 'Trimethoprim':\r\n      return 'rgb(102,102,255)';\r\n\r\n    case 'β-lactamase inhibitors':\r\n      return '#F3AAB9';\r\n\r\n    case 'Phenicols':\r\n      return '#FBCFBA';\r\n\r\n    case 'Tigecycline':\r\n      return '#54C2FF';\r\n\r\n    case 'XDR':\r\n      return '#000';\r\n\r\n    case 'MDR':\r\n      return '#B80F0F';\r\n\r\n    default:\r\n      return '#F5F4F6';\r\n  }\r\n};\r\n\r\nexport const colorsForKODiversityGraph = [\r\n  { name: 'MDR', color: 'rgb(187, 54, 60)' },\r\n  { name: 'Hv', color: 'rgb(24, 85, 183)' },\r\n  { name: 'Carbapenems', color: 'rgb(144,211,199)' },\r\n  { name: 'ESBL', color: '#DB90F0' },\r\n  { name: 'Aerobactin(iuc)', color: 'rgb(180,221,112)' },\r\n  { name: 'rmpADC', color: 'rgb(252,180,105)' },\r\n  { name: 'neither', color: lightGrey }\r\n];\r\n","export const variablesOptions = [\r\n  { label: 'Country', value: 'COUNTRY_ONLY' },\r\n  { label: 'Year', value: 'DATE' },\r\n  { label: 'Sublineage', value: 'GENOTYPE' }\r\n  // { label: 'Yersiniabactin', value: 'Yersiniabactin' },\r\n  // { label: 'Host', value: 'Host' },\r\n  // { label: 'Bla_Carb_acquired', value: 'Bla_Carb_acquired' },\r\n  // { label: 'Bla_ESBL_acquired', value: 'Bla_ESBL_acquired' }\r\n];\r\n","import { Alert, Button, Snackbar, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './DownloadDataMUI';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { setPage } from '../../../stores/slices/appSlice';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport download from 'downloadjs';\r\nimport { API_ENDPOINT } from '../../../constants';\r\nimport { useState } from 'react';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { PictureAsPdf, Storage, TableChart } from '@mui/icons-material';\r\nimport { setPosition } from '../../../stores/slices/mapSlice';\r\nimport jsPDF from 'jspdf';\r\nimport LogoImg from '../../../assets/img/logo-prod.png';\r\nimport EUFlagImg from '../../../assets/img/eu_flag.jpg';\r\nimport moment from 'moment';\r\nimport { svgAsPngUri } from 'save-svg-as-png';\r\nimport { mapLegends } from '../../../util/mapLegends';\r\nimport { imgOnLoadPromise } from '../../../util/imgOnLoadPromise';\r\nimport { graphCards } from '../../../util/graphCards';\r\nimport domtoimage from 'dom-to-image';\r\nimport { setCollapses } from '../../../stores/slices/graphSlice';\r\nimport { drugsKP, drugsST, drugsForDrugResistanceGraphST } from '../../../util/drugs';\r\nimport { colorsForKODiversityGraph, getColorForDrug } from '../Graphs/graphColorHelper';\r\nimport { colorForDrugClassesKP, colorForDrugClassesST, getColorForGenotype } from '../../../util/colorHelper';\r\nimport { getKlebsiellaTexts, getSalmonellaTexts } from '../../../util/reportInfoTexts';\r\nimport { variablesOptions } from '../../../util/convergenceVariablesOptions';\r\n\r\nconst columnsToRemove = [\r\n  'azith_pred_pheno',\r\n  'PROJECT ACCESSION',\r\n  'COUNTRY_ONLY',\r\n  'REGION_IN_COUNTRY',\r\n  'LOCATION',\r\n  'ACCURACY',\r\n  'LATITUDE',\r\n  'LONGITUDE',\r\n  'REFERENCE',\r\n  'MLST ST (EnteroBase)',\r\n  'MLST PROFILE (EnteroBase)',\r\n  'GENOTYPHI SNPs CALLED',\r\n  'Genome ID',\r\n  'Version',\r\n  'Organism Name',\r\n  'Organism ID',\r\n  'Species Name',\r\n  'Species ID',\r\n  'Genus Name',\r\n  'Genus ID',\r\n  'Reference ID',\r\n  'Matching Hashes',\r\n  'p-Value',\r\n  'Mash Distance',\r\n  'cip_pred_pheno',\r\n  'dcs_category',\r\n  'amr_category',\r\n  'num_qrdr',\r\n  'num_acrb',\r\n  'ESBL_category',\r\n  'chloramphenicol_category',\r\n  'tetracycline_category',\r\n  'cip_pheno_qrdr_gene',\r\n  'dcs_mechanisms',\r\n  'num_amr_genes',\r\n  'dfra_any',\r\n  'sul_any',\r\n  'co_trim',\r\n  'GENOTYPE_SIMPLE',\r\n  'h58_genotypes'\r\n];\r\n\r\nexport const DownloadData = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const matches500 = useMediaQuery('(max-width:500px)');\r\n  const [loadingCSV, setLoadingCSV] = useState(false);\r\n  const [loadingPDF, setLoadingPDF] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const actualCountry = useAppSelector((state) => state.dashboard.actualCountry);\r\n  const listPIMD = useAppSelector((state) => state.dashboard.listPMID);\r\n  const PMID = useAppSelector((state) => state.dashboard.PMID);\r\n  const globalOverviewLabel = useAppSelector((state) => state.dashboard.globalOverviewLabel);\r\n  const actualGenomes = useAppSelector((state) => state.dashboard.actualGenomes);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const mapView = useAppSelector((state) => state.map.mapView);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const determinantsGraphDrugClass = useAppSelector((state) => state.graph.determinantsGraphDrugClass);\r\n  const trendsKPGraphDrugClass = useAppSelector((state) => state.graph.trendsKPGraphDrugClass);\r\n  const KODiversityGraphView = useAppSelector((state) => state.graph.KODiversityGraphView);\r\n  const colorPallete = useAppSelector((state) => state.dashboard.colorPallete);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n  const convergenceGroupVariable = useAppSelector((state) => state.graph.convergenceGroupVariable);\r\n  const convergenceColourVariable = useAppSelector((state) => state.graph.convergenceColourVariable);\r\n  const convergenceColourPallete = useAppSelector((state) => state.graph.convergenceColourPallete);\r\n  const customDropdownMapView = useAppSelector((state) => state.graph.customDropdownMapView);\r\n\r\n  async function handleClickDownloadDatabase() {\r\n    setLoadingCSV(true);\r\n    await axios\r\n      .post(`${API_ENDPOINT}file/download`, { organism })\r\n      .then((res) => {\r\n        let indexes = [];\r\n        let csv = res.data.split('\\n');\r\n        let lines = [];\r\n\r\n        for (let index = 0; index < csv.length; index++) {\r\n          let line = csv[index].split(',');\r\n          lines.push(line);\r\n        }\r\n\r\n        // lines[0].forEach((curr, index) => {\r\n        //   if (curr === 'cip_pred_pheno') {\r\n        //     lines[0][index] = 'cip_pred_pheno';\r\n        //   }\r\n        // });\r\n        \r\n        for (let index = 0; index < columnsToRemove.length; index++) {\r\n          let currentIndex = lines[0].indexOf(columnsToRemove[index]);\r\n          indexes.push(currentIndex);\r\n        }\r\n        indexes.sort();\r\n        indexes.reverse();\r\n\r\n        let newLines = [];\r\n        for (let j = 0; j < lines.length; j++) {\r\n          let aux = [];\r\n          for (let i = 0; i < lines[j].length; i++) {\r\n            if (!indexes.includes(i)) {\r\n              aux.push(lines[j][i]);\r\n            }\r\n          }\r\n          newLines.push(aux);\r\n        }\r\n\r\n        let newCSV = '';\r\n        for (let i = 0; i < newLines.length; i++) {\r\n          let aux = '';\r\n          for (let index = 0; index < newLines[i].length; index++) {\r\n            aux += newLines[i][index];\r\n            if (index !== newLines[i].length - 1) {\r\n              aux += ',';\r\n            }\r\n          }\r\n          if (i !== newLines.length - 1) {\r\n            aux += '\\n';\r\n          }\r\n          newCSV += aux;\r\n        }\r\n\r\n        download(newCSV, 'Database.csv');\r\n      })\r\n      .finally(() => {\r\n        setLoadingCSV(false);\r\n      });\r\n  }\r\n\r\n  function getOrganismCards() {\r\n    return graphCards.filter((card) => card.organisms.includes(organism));\r\n  }\r\n\r\n  function getGenotypeColor(genotype) {\r\n    return organism === 'typhi' ? getColorForGenotype(genotype) : colorPallete[genotype] || '#F5F4F6';\r\n  }\r\n\r\n  function getDrugClassesBars() {\r\n    switch (organism) {\r\n      case 'typhi':\r\n        return colorForDrugClassesST[determinantsGraphDrugClass];\r\n      default:\r\n        return colorForDrugClassesKP[determinantsGraphDrugClass];\r\n    }\r\n  }\r\n\r\n  function formatDate(date) {\r\n    return moment(date).format('ddd MMM DD YYYY HH:mm');\r\n  }\r\n\r\n  function drawFooter({ document, pageHeight, pageWidth, date }) {\r\n    document.setFontSize(10);\r\n    document.line(0, pageHeight - 26, pageWidth, pageHeight - 24);\r\n    document.text(`Source: amr.net [${date}]`, pageWidth / 2, pageHeight - 10, { align: 'center' });\r\n  }\r\n\r\n  function drawLegend({\r\n    id = null,\r\n    legendData,\r\n    document,\r\n    factor,\r\n    rectY,\r\n    isGenotype = false,\r\n    isDrug = false,\r\n    isVariable = false,\r\n    xSpace,\r\n    twoPages = false,\r\n    factorMultiply = 3\r\n  }) {\r\n    let firstLegendData = legendData.slice();\r\n    let secondLegendData = [];\r\n\r\n    let firstLegendFactor = factor;\r\n    let secondLegendFactor;\r\n\r\n    if (twoPages) {\r\n      firstLegendData = legendData.slice(0, 27 * factorMultiply);\r\n      secondLegendData = legendData.slice(27 * factorMultiply);\r\n      secondLegendFactor = factor - 27;\r\n      firstLegendFactor = 27;\r\n    }\r\n\r\n    firstLegendData.forEach((legend, i) => {\r\n      const yFactor = (i % firstLegendFactor) * 10;\r\n      const xFactor = Math.floor(i / firstLegendFactor) * xSpace;\r\n\r\n      document.setFillColor(\r\n        isGenotype\r\n          ? getGenotypeColor(legend)\r\n          : isDrug\r\n          ? getColorForDrug(legend)\r\n          : isVariable\r\n          ? convergenceColourPallete[legend]\r\n          : legend.color\r\n      );\r\n      document.circle(50 + xFactor, rectY + 10 + yFactor, 2.5, 'F');\r\n\r\n      if (id === 'CERDT' && i < 2) {\r\n        if (i === 0) {\r\n          document.setFont(undefined, 'bold');\r\n        } else {\r\n          document.setFont(undefined, 'normal');\r\n        }\r\n      }\r\n      document.text(\r\n        isGenotype || isDrug || isVariable ? legend.replaceAll('β', 'B') : legend.name,\r\n        56 + xFactor,\r\n        rectY + 12 + yFactor\r\n      );\r\n    });\r\n\r\n    if (twoPages) {\r\n      document.addPage();\r\n\r\n      secondLegendData.forEach((legend, i) => {\r\n        const yFactor = (i % secondLegendFactor) * 10;\r\n        const xFactor = Math.floor(i / secondLegendFactor) * xSpace;\r\n\r\n        document.setFillColor(\r\n          isGenotype\r\n            ? getGenotypeColor(legend)\r\n            : isDrug\r\n            ? getColorForDrug(legend)\r\n            : isVariable\r\n            ? convergenceColourPallete[legend]\r\n            : legend.color\r\n        );\r\n        document.circle(50 + xFactor, 24 + yFactor, 2.5, 'F');\r\n        document.text(\r\n          isGenotype || isDrug || isVariable ? legend.replaceAll('β', 'B') : legend.name,\r\n          56 + xFactor,\r\n          26 + yFactor\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  async function handleClickDownloadPDF() {\r\n    setLoadingPDF(true);\r\n    dispatch(\r\n      setCollapses({\r\n        determinants: true,\r\n        distribution: true,\r\n        drugResistance: true,\r\n        frequencies: true,\r\n        trendsKP: true,\r\n        KODiversity: true,\r\n        convergence: true\r\n      })\r\n    );\r\n    dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n\r\n    try {\r\n      if(genotypesForFilter.length<=0)\r\n        return console.log(\"No data available to generate report\");\r\n      const doc = new jsPDF({ unit: 'px', format: 'a4' });\r\n      const pageWidth = doc.internal.pageSize.getWidth();\r\n      const pageHeight = doc.internal.pageSize.getHeight();\r\n      const date = formatDate(new Date());\r\n\r\n      // Logo\r\n      const logo = new Image();\r\n      logo.src = LogoImg;\r\n      const logoWidth = 80;\r\n      doc.addImage(logo, 'PNG', 16, 16, logoWidth, 41);\r\n\r\n\r\n      let texts;\r\n      let firstName, secondName, secondword;\r\n      if (organism === 'typhi') {\r\n        texts = getSalmonellaTexts(date);\r\n        firstName = \"Salmonella\";\r\n        secondName = \"Typhi\";\r\n        secondword = 315;\r\n      } else if (organism === 'klebe') {\r\n        texts = getKlebsiellaTexts();\r\n        firstName = \"Klebsiella\";\r\n        secondName = \"pneumoniae\";\r\n        secondword = 330;\r\n      }\r\n\r\n      // Title and Date\r\n      doc.setFontSize(16).setFont(undefined, 'bold');\r\n      doc.text(\"Global Overview of\", 177, 24, { align: 'center' });\r\n      doc.setFont(undefined, \"bolditalic\");\r\n      doc.text(firstName, 264, 24, { align: 'center' });\r\n      doc.setFont(undefined, \"bold\");\r\n      doc.text(secondName, secondword, 24, { align: 'center' });\r\n      doc.setFontSize(12).setFont(undefined, 'normal');\r\n      doc.text(date, pageWidth / 2, 48, { align: 'center' });\r\n\r\n      \r\n\r\n      // Info\r\n      doc.text(texts[0], 16, 85, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[1], 16, 125, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[2], 16, 153, {\r\n        align: 'justify',\r\n        maxWidth: pageWidth - 36\r\n      });\r\n      doc.text(texts[3], 16, 169, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[4], 16, 197, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[5], 16, 225, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[6], 16, 277, { align: 'justify', maxWidth: pageWidth - 36 });\r\n\r\n      if (organism === 'typhi') {\r\n        const euFlag = new Image();\r\n        euFlag.src = EUFlagImg;\r\n        doc.addImage(euFlag, 'JPG', 208, 290, 12, 8);\r\n      }\r\n       let list = PMID.filter((value)=> value !== \"-\")\r\n\r\n      if (actualCountry !== 'All') \r\n        list = listPIMD.filter((value)=> value !== \"-\")\r\n        doc.text(\r\n          `Studies contributing genomes representing infections originating from ${actualCountry} have the following PubMed IDs (PMIDs) or Digital Object Identifier (DOI): ${list.join(\r\n            ', '\r\n          )}.`,\r\n          16,\r\n          337,\r\n          { align: 'left', maxWidth: pageWidth - 36 }\r\n        );\r\n\r\n      drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n\r\n      // Map\r\n      doc.addPage();\r\n      drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n\r\n      doc.setFontSize(16).setFont(undefined, 'bold');\r\n      doc.text(\"Global Overview of\", 177, 24, { align: 'center' });\r\n      doc.setFont(undefined, \"bolditalic\");\r\n      doc.text(firstName, 264, 24, { align: 'center' });\r\n      doc.setFont(undefined, \"bold\");\r\n      doc.text(secondName, secondword, 24, { align: 'center' });\r\n      doc.setFontSize(12).setFont(undefined, 'normal');\r\n      doc.text(`Total: ${actualGenomes} genomes`, pageWidth / 2, 40, { align: 'center' });\r\n      doc.text(`Country: ${actualCountry}`, pageWidth / 2, 52, { align: 'center' });\r\n      doc.text(`Time Period: ${actualTimeInitial} to ${actualTimeFinal}`, pageWidth / 2, 64, { align: 'center' });\r\n      doc.line(16, 76, pageWidth - 16, 76);\r\n\r\n      doc.setFont(undefined, 'bold');\r\n      doc.text('Map', 16, 96);\r\n      doc.setFont(undefined, 'normal');\r\n      const actualMapView = mapLegends.find((x) => x.value === mapView).label;\r\n      doc.text(`Map View: ${actualMapView}`, 16, 108);\r\n      doc.text(`Dataset: ${dataset}${dataset === 'All' && organism === 'typhi' ? ' (local + travel)' : ''}`, 16, 120);\r\n      if(mapView === 'Genotype prevalence'){\r\n        if (customDropdownMapView.length === 1) {\r\n            doc.text('Selected Genotypes: ' + customDropdownMapView, 16, 140);\r\n        } else if (customDropdownMapView.length > 1) {\r\n            const genotypesText = customDropdownMapView.join('\\n');\r\n            doc.text('Selected Genotypes: \\n' + genotypesText, 16, 140);\r\n        }\r\n      }\r\n      let mapY = 160 + (customDropdownMapView.length*9);\r\n      await svgAsPngUri(document.getElementById('global-overview-map'), {\r\n        scale: 4,\r\n        backgroundColor: 'white',\r\n        width: 1200,\r\n        left: -200\r\n      }).then(async (uri) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        const mapImg = document.createElement('img');\r\n        const mapImgPromise = imgOnLoadPromise(mapImg);\r\n        mapImg.src = uri;\r\n        await mapImgPromise;\r\n\r\n        canvas.width = 4800;\r\n        canvas.height = 2400;\r\n        ctx.drawImage(mapImg, 0, 0, canvas.width, canvas.height);\r\n\r\n        const img = canvas.toDataURL('image/png');\r\n        doc.addImage(img, 'PNG', 0, mapY, pageWidth, 223);\r\n      });\r\n\r\n      const mapLegend = new Image();\r\n      let legendWidth = 58.85;\r\n\r\n      switch (mapView) {\r\n        case 'Dominant Genotype':\r\n          legendWidth = organism === 'typhi' ? 414.21 : 394.28;\r\n          mapLegend.src = `legends/MapView_DominantGenotype_${organism}.png`;\r\n          break;\r\n        case 'No. Samples':\r\n          mapLegend.src = 'legends/MapView_NoSamples.png';\r\n          break;\r\n        case 'Sensitive to all drugs':\r\n          mapLegend.src = 'legends/MapView_Sensitive.png';\r\n          break;\r\n        default:\r\n          mapLegend.src = 'legends/MapView_Others.png';\r\n          break;\r\n      }\r\n      if (mapView === 'Dominant Genotype') {\r\n        doc.addImage(mapLegend, 'PNG', pageWidth / 2 - legendWidth / 2, 351, legendWidth, 47);\r\n      } else {\r\n        doc.addImage(mapLegend, 'PNG', pageWidth - pageWidth / 5 , 85, legendWidth, 47);\r\n      }\r\n\r\n      // Graphs\r\n      const isKlebe = organism === 'klebe';\r\n\r\n      const cards = getOrganismCards();\r\n      const legendDrugs = organism === 'typhi' ? drugsST : drugsKP;\r\n      const drugClassesBars = getDrugClassesBars();\r\n      const drugClassesFactor = Math.ceil(drugClassesBars.length / 3);\r\n      const genotypesFactor = Math.ceil(genotypesForFilter.length / 6);\r\n\r\n      const isYersiniabactin = convergenceColourVariable === 'Yersiniabactin';\r\n      const variablesFactor = Math.ceil(Object.keys(convergenceColourPallete).length / (isYersiniabactin ? 2 : 3));\r\n\r\n      for (let index = 0; index < cards.length; index++) {\r\n        doc.addPage();\r\n        drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n\r\n        let title = `${cards[index].title}`;\r\n        switch (cards[index].id) {\r\n          case 'RDWG':\r\n            title += `: ${determinantsGraphDrugClass}`;\r\n            break;\r\n          case 'CERDT':\r\n            title += `: ${trendsKPGraphDrugClass}`;\r\n            break;\r\n          case 'KO':\r\n            title += `: ${KODiversityGraphView}`;\r\n            break;\r\n          case 'CVM':\r\n            const group = variablesOptions.find((option) => option.value === convergenceGroupVariable).label;\r\n            const colour = variablesOptions.find((option) => option.value === convergenceColourVariable).label;\r\n            title += `: ${group} x ${colour}`;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n\r\n        doc.setFontSize(12).setFont(undefined, 'bold');\r\n        doc.text(title, 16, 24);\r\n        doc.setFont(undefined, 'normal');\r\n        doc.setFontSize(10);\r\n        doc.text(cards[index].description.join(' / ').replaceAll('≥', '>='), 16, 36);\r\n        doc.setFontSize(12);\r\n        doc.text(`Total: ${actualGenomes} genomes`, 16, 54);\r\n        doc.text(`Country: ${actualCountry}`, 16, 66);\r\n        doc.text(`Time Period: ${actualTimeInitial} to ${actualTimeFinal}`, 16, 78);\r\n        doc.text(`Dataset: ${dataset}${dataset === 'All' && organism === 'typhi' ? ' (local + travel)' : ''}`, 16, 90);\r\n\r\n        const graphImg = document.createElement('img');\r\n        const graphImgPromise = imgOnLoadPromise(graphImg);\r\n        graphImg.src = await domtoimage.toPng(document.getElementById(cards[index].id), { bgcolor: 'white' });\r\n        await graphImgPromise;\r\n        if (graphImg.width <= 741) {\r\n          doc.addImage(graphImg, 'PNG', 16, 110);\r\n        } else {\r\n          doc.addImage(graphImg, 'PNG', 16, 110, pageWidth - 80, 271);\r\n        }\r\n\r\n        doc.setFillColor(255, 255, 255);\r\n        const rectY = matches500 ? 300 : 320;\r\n        doc.rect(0, rectY, pageWidth, 200, 'F');\r\n\r\n        doc.setFontSize(9);\r\n        if (graphCards[index].id === 'RFWG') {\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: legendDrugs,\r\n            factor: (legendDrugs.length>12 ? 8 : 4),\r\n            rectY,\r\n            xSpace: (legendDrugs.length>12 ? 200 : 100),\r\n            isDrug: true\r\n          });\r\n        }else if (graphCards[index].id === 'DRT') {\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: drugsForDrugResistanceGraphST,\r\n            factor: 4,\r\n            rectY,\r\n            xSpace: 100,\r\n            isDrug: true\r\n          });\r\n        } else if (graphCards[index].id === 'RDWG') {\r\n\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: drugClassesBars,\r\n            factor: drugClassesFactor,\r\n            rectY,\r\n            xSpace: 127,\r\n            twoPages: isKlebe\r\n          });\r\n\r\n          if (isKlebe) {\r\n            drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n          }\r\n        } else if (cards[index].id === 'GD') {\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: genotypesForFilter,\r\n            factor: genotypesFactor,\r\n            rectY,\r\n            xSpace: 65,\r\n            isGenotype: true\r\n          });\r\n        } else if (cards[index].id === 'CERDT') {\r\n          const legendGenotypes = genotypesForFilter.map((genotype) => {\r\n            return { name: genotype, color: getGenotypeColor(genotype) };\r\n          });\r\n\r\n          drawLegend({\r\n            id: 'CERDT',\r\n            document: doc,\r\n            legendData: [{ name: 'GENES: ', color: 'white' }, ...drugClassesBars],\r\n            factor: drugClassesFactor,\r\n            rectY,\r\n            xSpace: 127,\r\n            twoPages: true\r\n          });\r\n\r\n          drawLegend({\r\n            id: 'CERDT',\r\n            document: doc,\r\n            legendData: [{ name: 'GENOTYPES: ', color: 'white' }, ...legendGenotypes],\r\n            factor: Math.ceil(genotypesForFilter.length / 3),\r\n            rectY: 6 * 13,\r\n            xSpace: 127\r\n          });\r\n\r\n          drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n        } else if (cards[index].id === 'KO') {\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: colorsForKODiversityGraph,\r\n            factor: 1,\r\n            rectY,\r\n            xSpace: 50\r\n          });\r\n        } else if (cards[index].id === 'CVM') {\r\n          const isTwoPages = ['Bla_Carb_acquired', 'Bla_ESBL_acquired', 'Yersiniabactin'].includes(\r\n            convergenceColourVariable\r\n          );\r\n\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: Object.keys(convergenceColourPallete),\r\n            factor: variablesFactor,\r\n            rectY,\r\n            xSpace: isYersiniabactin ? 190 : 127,\r\n            isVariable: true,\r\n            factorMultiply: isYersiniabactin ? 2 : 3,\r\n            twoPages: isTwoPages\r\n          });\r\n\r\n          if (isTwoPages) {\r\n            drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n          }\r\n        }\r\n      }\r\n\r\n      doc.save('AMRnet - Report.pdf');\r\n    } catch (error) {\r\n      setShowAlert(true);\r\n    } finally {\r\n      setLoadingPDF(false);\r\n    }\r\n  }\r\n\r\n  function handleCloseAlert() {\r\n    setShowAlert(false);\r\n  }\r\n\r\n  function handleClickDatabasePage() {\r\n    dispatch(setPage('database'));\r\n    navigate('/database');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.downloadDataWrapper}>\r\n      <LoadingButton\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        onClick={handleClickDownloadDatabase}\r\n        loading={loadingCSV}\r\n        startIcon={<TableChart />}\r\n        loadingPosition=\"start\"\r\n        disabled={organism === 'none'}\r\n      >\r\n        Download database (CSV format)\r\n      </LoadingButton>\r\n      <LoadingButton\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        onClick={handleClickDownloadPDF}\r\n        loading={loadingPDF}\r\n        startIcon={<PictureAsPdf />}\r\n        loadingPosition=\"start\"\r\n        disabled={organism === 'none'}\r\n      >\r\n        Download PDF\r\n      </LoadingButton>\r\n      <Button className={classes.button} variant=\"contained\" onClick={handleClickDatabasePage} startIcon={<Storage />}>\r\n        See Database Page\r\n      </Button>\r\n      <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleCloseAlert}>\r\n        <Alert onClose={handleCloseAlert} severity=\"error\" sx={{ width: '100%' }}>\r\n          Something went wrong with the download, please try again later.\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n","export function getSalmonellaTexts(date) {\r\n  return [\r\n    `This report was generated at ${date}, using TyphiNET (http://typhi.net), a data visualisation platform that draws genome-derived data on antimicrobial resistance and genotypes from Typhi Pathogenwatch (http://pathogen.watch).`,\r\n    'TyphiNET data were last updated on September 12 2023. For code and further details please see: https://github.com/zadyson/TyphiNET.',\r\n    'The genotypes reported here are defined in Dyson & Holt (2021), J. Infect. Dis.',\r\n    'Antimicrobial resistance determinants are described in the Typhi Pathogenwatch paper, Argimón et al. 2021, Nat. Commun.',\r\n    'Travel-associated cases are attributed to the country of travel, not the country of isolation (see Ingle et al. 2019, PLoS NTDs).',\r\n    'TyphiNET presents data aggregated from >100 studies. Individual genome information, including derived genotype and AMR calls, sequence data accession numbers, and source information (PubMedID for citation) can be downloaded as a spreadsheet from the TyphiNET website (http://typhi.net).',\r\n    \"This project has received funding from the the Wellcome Trust (Open Research Fund, 219692/Z/19/Z) and the  European Union's Horizon 2020 research and innovation programme under the Marie Sklodowska-Curie grant agreement No 845681.\"\r\n  ];\r\n}\r\n\r\nexport function getKlebsiellaTexts() {\r\n  return [\r\n    'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque',\r\n    'Aliquam laoreet, dolor eu convallis fringilla, velit dolor efficitur dui, eu fermentum tortor leo non justo. Suspendisse potenti.',\r\n    'Nam accumsan pulvinar arcu, sit amet lobortis felis bibendum quis.',\r\n    'Donec eu urna nunc. Quisque dapibus purus quis elit convallis tincidunt. Donec scelerisque neque a leo tincidunt, a placerat quam convallis.',\r\n    'Donec dictum et odio ac convallis. Duis non lectus in lectus auctor fringilla. Etiam eros orci, ultrices id pellentesque et, volutpat et orci.',\r\n    'Suspendisse potenti. Nullam vitae mi orci. Duis auctor purus rhoncus sapien posuere, vel malesuada sem convallis. Mauris euismod accumsan lectus vel dapibus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Fusce venenatis, ipsum in blandit tempor, dui turpis luctus risus.',\r\n    'Quisque in lacinia enim, vel rutrum felis. Donec venenatis pulvinar vestibulum. Fusce pretium condimentum dolor in gravida. Morbi sollicitudin mollis tellus vel laoreet. Vivamus iaculis leo non diam tincidunt rutrum. Etiam id neque.'\r\n  ];\r\n}\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardsWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '16px',\r\n\r\n    '@media (max-width: 500px)': {\r\n      rowGap: '8px'\r\n    }\r\n  },\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    }\r\n  },\r\n  cardActions: {\r\n    display: 'flex',\r\n    columnGap: '8px',\r\n    justifyContent: 'space-between',\r\n    padding: '16px !important'\r\n  },\r\n  titleWrapper: {\r\n    display: 'flex',\r\n    columnGap: '8px'\r\n  },\r\n  title: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  actionsWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '8px'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  determinantsGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)'\r\n  },\r\n  selectsWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      width: '100%',\r\n      height: '460px'\r\n    }\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  chartTooltipLabel: {\r\n    backgroundColor: '#fff',\r\n    padding: '8px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltipWrapper: {\r\n    width: '30%',\r\n    borderRadius: '6px',\r\n    backgroundColor: '#E5E5E5',\r\n    overflowY: 'auto',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      height: '250px'\r\n    }\r\n  },\r\n  tooltip: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end',\r\n    padding: '16px 16px 8px',\r\n    borderBottom: '1px solid #fff'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexWrap: 'wrap',\r\n    gap: '16px',\r\n    padding: '16px',\r\n    overflowY: 'auto'\r\n  },\r\n  tooltipItemWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    gridColumn: 'span 6'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  },\r\n  noGenotypeSelected: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","// Check if current device has touch screen\r\nexport function isTouchDevice() {\r\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, CardContent, MenuItem, Select, Typography } from '@mui/material';\r\nimport { useStyles } from './DeterminantsGraphMUI';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Label,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as ChartTooltip,\r\n  Brush\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setDeterminantsGraphDrugClass, setDeterminantsGraphView } from '../../../../stores/slices/graphSlice';\r\nimport { drugClassesST, drugClassesKP } from '../../../../util/drugs';\r\nimport { useEffect, useState } from 'react';\r\nimport { colorForDrugClassesKP, colorForDrugClassesST, hoverColor } from '../../../../util/colorHelper';\r\nimport { isTouchDevice } from '../../../../util/isTouchDevice';\r\n\r\nconst dataViewOptions = [\r\n  { label: 'Number of genomes', value: 'number', graphLabel: 'Number of occurrences' },\r\n  { label: 'Percentage per genotype', value: 'percentage', graphLabel: '% Genomes' }\r\n];\r\n\r\nexport const DeterminantsGraph = () => {\r\n  const classes = useStyles();\r\n  const [currentTooltip, setCurrentTooltip] = useState(null);\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n\r\n  const dispatch = useAppDispatch();\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const genotypesDrugClassesData = useAppSelector((state) => state.graph.genotypesDrugClassesData);\r\n  const determinantsGraphView = useAppSelector((state) => state.graph.determinantsGraphView);\r\n  const determinantsGraphDrugClass = useAppSelector((state) => state.graph.determinantsGraphDrugClass);\r\n\r\n  useEffect(() => {\r\n    setCurrentTooltip(null);\r\n  }, [genotypesDrugClassesData]);\r\n\r\n  function getDrugClasses() {\r\n    switch (organism) {\r\n      case 'typhi':\r\n        return drugClassesST;\r\n      case 'klebe':\r\n        return drugClassesKP;\r\n      default:\r\n        return [];\r\n    }\r\n  }\r\n\r\n  function getDrugClassesBars() {\r\n    switch (organism) {\r\n      case 'typhi':\r\n        return colorForDrugClassesST[determinantsGraphDrugClass];\r\n      default:\r\n        return colorForDrugClassesKP[determinantsGraphDrugClass];\r\n    }\r\n  }\r\n  let data = 0;\r\n  useEffect(()=>{\r\n    if(genotypesDrugClassesData[determinantsGraphDrugClass] !== undefined){\r\n      data = genotypesDrugClassesData[determinantsGraphDrugClass].filter((x)=>x.totalCount>0).length;\r\n    }\r\n  },[genotypesDrugClassesData, determinantsGraphDrugClass])\r\n\r\n  function getDomain() {\r\n    return determinantsGraphView === 'number' ? undefined : [0, 100];\r\n  }\r\n\r\n  function getData() {\r\n    if (determinantsGraphView === 'number') {\r\n      return genotypesDrugClassesData[determinantsGraphDrugClass].filter((x)=>x.totalCount>0);\r\n    }\r\n\r\n    const exclusions = ['name', 'totalCount', 'resistantCount'];\r\n    let genotypeDrugClassesDataPercentage = structuredClone(genotypesDrugClassesData[determinantsGraphDrugClass] ?? []);\r\n    genotypeDrugClassesDataPercentage = genotypeDrugClassesDataPercentage.filter((x)=>x.totalCount>0).map((item) => {\r\n      const keys = Object.keys(item).filter((x) => !exclusions.includes(x));\r\n\r\n      keys.forEach((key) => {\r\n        item[key] = Number(((item[key] / item.totalCount) * 100).toFixed(2));\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    return genotypeDrugClassesDataPercentage;\r\n  }\r\n\r\n  function handleChangeDataView(event) {\r\n    dispatch(setDeterminantsGraphView(event.target.value));\r\n  }\r\n\r\n  function handleChangeDrugClass(event) {\r\n    setCurrentTooltip(null);\r\n    dispatch(setDeterminantsGraphDrugClass(event.target.value));\r\n  }\r\n\r\n  function handleClickChart(event) {\r\n    const data = genotypesDrugClassesData[determinantsGraphDrugClass].find((item) => item.name === event?.activeLabel);\r\n\r\n    if (data) {\r\n      const currentData = structuredClone(data);\r\n      const value = {\r\n        name: currentData.name,\r\n        count: currentData.totalCount,\r\n        drugClasses: []\r\n      };\r\n\r\n      delete currentData.name;\r\n      delete currentData.totalCount;\r\n      delete currentData.resistantCount;\r\n\r\n      Object.keys(currentData).forEach((key) => {\r\n        const count = currentData[key];\r\n\r\n        if (count === 0) {\r\n          return;\r\n        }\r\n\r\n        value.drugClasses.push({\r\n          label: key,\r\n          count,\r\n          percentage: Number(((count / value.count) * 100).toFixed(2)),\r\n          color: event.activePayload.find((x) => x.name === key)?.color\r\n        });\r\n\r\n        value.drugClasses.sort((a, b) => a.label.localeCompare(b.label));\r\n      });\r\n\r\n      setCurrentTooltip(value);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <BarChart\r\n              data={getData()}\r\n              cursor={isTouchDevice() ? 'default' : 'pointer'}\r\n              onClick={handleClickChart}\r\n              maxBarSize={70}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={getDomain()} allowDataOverflow={true} allowDecimals={false}>\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  {dataViewOptions.find((option) => option.value === determinantsGraphView).label}\r\n                </Label>\r\n              </YAxis>\r\n              {(genotypesDrugClassesData[determinantsGraphDrugClass] ?? []).length > 0 && (\r\n                <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div key={`distribution-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                            <Typography variant=\"caption\">{dataKey}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                cursor={data > 0 ? { fill: hoverColor }:false}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    return <div className={classes.chartTooltipLabel}>{label}</div>;\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {getDrugClassesBars()?.map((option, index) => (\r\n                <Bar\r\n                  key={`determinants-bar-${index}`}\r\n                  dataKey={option.name}\r\n                  name={option.name}\r\n                  stackId={0}\r\n                  fill={option.color}\r\n                />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [genotypesDrugClassesData, determinantsGraphView, determinantsGraphDrugClass]);\r\n\r\n  return (\r\n    <CardContent className={classes.determinantsGraph}>\r\n      <div className={classes.selectsWrapper}>\r\n        <div className={classes.selectWrapper}>\r\n          <Typography variant=\"caption\">Select drug class</Typography>\r\n          <Select\r\n            value={determinantsGraphDrugClass}\r\n            onChange={handleChangeDrugClass}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n            disabled={organism === 'none'}\r\n          >\r\n            {getDrugClasses().map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'determinants-drug-classes'} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div>\r\n        <div className={classes.selectWrapper}>\r\n          <Typography variant=\"caption\">Data view</Typography>\r\n          <Select\r\n            value={determinantsGraphView}\r\n            onChange={handleChangeDataView}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n            disabled={organism === 'none'}\r\n          >\r\n            {dataViewOptions.map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'determinants-dataview'} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"RDWG\">\r\n          {plotChart}\r\n        </div>\r\n        <div className={classes.tooltipWrapper}>\r\n          {currentTooltip ? (\r\n            <div className={classes.tooltip}>\r\n              <div className={classes.tooltipTitle}>\r\n                <Typography variant=\"h5\" fontWeight=\"600\">\r\n                  {currentTooltip.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">{'N = ' + currentTooltip.count}</Typography>\r\n              </div>\r\n              <div className={classes.tooltipContent}>\r\n                {currentTooltip.drugClasses.map((item, index) => {\r\n                  return (\r\n                    <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                      <Box\r\n                        className={classes.tooltipItemBox}\r\n                        style={{\r\n                          backgroundColor: item.color\r\n                        }}\r\n                      />\r\n                      <div className={classes.tooltipItemStats}>\r\n                        <Typography variant=\"body2\" fontWeight=\"500\">\r\n                          {item.label}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" noWrap>{`N = ${item.count}`}</Typography>\r\n                        <Typography fontSize=\"10px\">{`${item.percentage}%`}</Typography>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.noGenotypeSelected}>No genotype selected</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  frequenciesGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)'\r\n  },\r\n  selectsWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '4px'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px'\r\n  },\r\n  labelWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '8px'\r\n  },\r\n  labelTooltipIcon: {\r\n    cursor: 'pointer'\r\n  },\r\n  dataViewSelectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  dataViewSelectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  genotypesSelectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important',\r\n    marginRight: '-80px !important'\r\n  },\r\n  genotypesSelectButton: {\r\n    height: '20px',\r\n    fontSize: '10px !important',\r\n    padding: '3px 5px !important',\r\n    whiteSpace: 'nowrap',\r\n    position: 'absolute',\r\n    right: '18px'\r\n  },\r\n  genotypesMenuPaper: {\r\n    maxHeight: '350px !important'\r\n  },\r\n  genotypesSelectMenu: {\r\n    '& .MuiCheckbox-root': {\r\n      padding: '0px 8px 0px 0px'\r\n    },\r\n    '& .MuiTypography-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      width: '100%',\r\n      height: '460px'\r\n    }\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  chartTooltipLabel: {\r\n    backgroundColor: '#fff',\r\n    padding: '8px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px'\r\n  },\r\n  tooltipWrapper: {\r\n    width: '30%',\r\n    borderRadius: '6px',\r\n    backgroundColor: '#E5E5E5',\r\n    overflowY: 'auto',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      height: '250px'\r\n    }\r\n  },\r\n  tooltip: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end',\r\n    padding: '16px 16px 8px',\r\n    borderBottom: '1px solid #fff'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexWrap: 'wrap',\r\n    gap: '16px',\r\n    padding: '16px',\r\n    overflowY: 'auto'\r\n  },\r\n  tooltipItemWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    gridColumn: 'span 6'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  },\r\n  noGenotypeSelected: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, Button, CardContent, Checkbox, ListItemText, MenuItem, Select, Tooltip, Typography, Card, InputAdornment } from '@mui/material';\r\nimport { useStyles } from './FrequenciesGraphMUI';\r\nimport { InfoOutlined } from '@mui/icons-material';\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport TextField from '@mui/material/TextField';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip as ChartTooltip,\r\n  XAxis,\r\n  YAxis,\r\n  Label,\r\n  Legend,\r\n  Brush\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setFrequenciesGraphSelectedGenotypes, setFrequenciesGraphView, setResetBool} from '../../../../stores/slices/graphSlice';\r\nimport { useEffect, useState } from 'react';\r\nimport { hoverColor } from '../../../../util/colorHelper';\r\nimport { getColorForDrug } from '../graphColorHelper';\r\nimport { drugsST, drugsKP } from '../../../../util/drugs';\r\nimport { isTouchDevice } from '../../../../util/isTouchDevice';\r\n\r\nconst dataViewOptions = [\r\n  { label: 'Number of genomes', value: 'number' },\r\n  { label: 'Percentage within genotype', value: 'percentage' }\r\n];\r\n\r\nexport const FrequenciesGraph = () => {\r\n  const classes = useStyles();\r\n  const [currentTooltip, setCurrentTooltip] = useState(null);\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n  const [searchValue2, setSearchValue2] = useState(\"\")\r\n\r\n  const dispatch = useAppDispatch();\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const genotypesDrugsData = useAppSelector((state) => state.graph.genotypesDrugsData);\r\n  const frequenciesGraphView = useAppSelector((state) => state.graph.frequenciesGraphView);\r\n  const frequenciesGraphSelectedGenotypes = useAppSelector((state) => state.graph.frequenciesGraphSelectedGenotypes);\r\n  const resetBool = useAppSelector((state) => state.graph.resetBool);\r\n  let data = genotypesDrugsData;\r\n  useEffect(() => {\r\n    dispatch(setResetBool(true));\r\n    setCurrentTooltip(null);\r\n      dispatch(setFrequenciesGraphSelectedGenotypes(genotypesDrugsData.slice(0, 5).map((x) => x.name)));\r\n  }, [genotypesDrugsData]);\r\n\r\n  function getSelectGenotypeLabel(genotype) {\r\n    const percentage = Number(((genotype.Susceptible / genotype.totalCount) * 100).toFixed(2));\r\n\r\n    return `${genotype.name} (total N=${genotype.totalCount===0 ? 0:`${genotype.totalCount}, ${percentage}% Susceptible`})`;\r\n  }\r\n\r\n  function getDomain() {\r\n    return frequenciesGraphView === 'number' ? undefined : [0, 100];\r\n  }\r\n\r\n  function getDrugs() {\r\n    if (organism === 'none') {\r\n      return [];\r\n    }\r\n    if (organism === 'typhi') {\r\n      return drugsST;\r\n    }\r\n    return drugsKP;\r\n  }\r\n\r\n  function getData() {\r\n    data = data.filter((genotype) => frequenciesGraphSelectedGenotypes.includes(genotype.name));\r\n    console.log(\"getData\",data)\r\n\r\n    if (frequenciesGraphView === 'number') {\r\n      return data;\r\n    }\r\n\r\n    const exclusions = ['name', 'totalCount', 'resistantCount'];\r\n    let genotypeDataPercentage = structuredClone(data);\r\n    genotypeDataPercentage = genotypeDataPercentage.map((item) => {\r\n      const keys = Object.keys(item).filter((x) => !exclusions.includes(x));\r\n\r\n      keys.forEach((key) => {\r\n        item[key] = Number(((item[key] / item.totalCount) * 100).toFixed(2));\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    return genotypeDataPercentage;\r\n  }\r\n\r\n  function getDataForGenotypeSelect() {\r\n    // if (organism === 'typhi') {\r\n      return genotypesDrugsData;\r\n    // } else {\r\n    //   return JSON.parse(JSON.stringify(genotypesDrugsData.slice(0, 20)));\r\n    // }\r\n  }\r\n\r\n  function handleClickChart(event) {\r\n    const data = genotypesDrugsData.find((item) => item.name === event?.activeLabel);\r\n\r\n    if (data) {\r\n      const currentData = structuredClone(data);\r\n\r\n      const value = {\r\n        name: currentData.name,\r\n        count: currentData.totalCount,\r\n        drugs: []\r\n      };\r\n\r\n      delete currentData.name;\r\n      delete currentData.totalCount;\r\n      delete currentData.resistantCount;\r\n\r\n      Object.keys(currentData).forEach((key) => {\r\n        const count = currentData[key];\r\n\r\n        if (count === 0) {\r\n          return;\r\n        }\r\n\r\n        value.drugs.push({\r\n          label: key,\r\n          count,\r\n          percentage: Number(((count / value.count) * 100).toFixed(2)),\r\n          fill: event.activePayload.find((x) => x.name === key).fill\r\n        });\r\n        value.drugs.sort((a, b) => b.count - a.count);\r\n      });\r\n\r\n      setCurrentTooltip(value);\r\n      dispatch(setResetBool(false));\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(resetBool){\r\n      setCurrentTooltip(null);\r\n      dispatch(setResetBool(true));\r\n    }\r\n  });\r\n\r\n  function handleChangeDataView(event) {\r\n    dispatch(setFrequenciesGraphView(event.target.value));\r\n  }\r\n\r\n  function handleChangeSelectedGenotypes({ event = null, all = false }) {\r\n    if (all) {\r\n      dispatch(setFrequenciesGraphSelectedGenotypes([]));\r\n      setCurrentTooltip(null);\r\n      return;\r\n    }\r\n\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n\r\n    if (frequenciesGraphSelectedGenotypes.length === 7 && value.length > 7) {\r\n      return;\r\n    }\r\n\r\n    if (value.length === 0) {\r\n      setCurrentTooltip(null);\r\n    }\r\n    dispatch(setFrequenciesGraphSelectedGenotypes(value));\r\n  }\r\n\r\n    function setSearchValue(event){\r\n    event.preventDefault()\r\n    setSearchValue2(event.target.value)\r\n  }\r\n\r\n  const filteredData = data.filter((genotype) =>\r\n    genotype.name.includes(searchValue2.toLowerCase()) || genotype.name.includes(searchValue2.toUpperCase())\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <BarChart data={getData()} cursor={isTouchDevice() ? 'default' : 'pointer'} onClick={handleClickChart}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={getDomain()} allowDecimals={false}>\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  {dataViewOptions.find((option) => option.value === frequenciesGraphView).label}\r\n                </Label>\r\n              </YAxis>\r\n              {genotypesDrugsData.length > 0 && <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div key={`frequencies-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                            <Typography variant=\"caption\">{dataKey}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                cursor={frequenciesGraphSelectedGenotypes!=0?{ fill: hoverColor }:false}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    return <div className={classes.chartTooltipLabel}>{label}</div>;\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {getDrugs().map((option, index) => (\r\n                <Bar key={`frequencies-bar-${index}`} dataKey={option} fill={getColorForDrug(option)} />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [genotypesDrugsData, frequenciesGraphView, frequenciesGraphSelectedGenotypes]);\r\n\r\n  return (\r\n    <CardContent className={classes.frequenciesGraph}>\r\n      <div className={classes.selectsWrapper}>\r\n        <div className={classes.labelWrapper}>\r\n          <Typography variant=\"caption\">Data view</Typography>\r\n          <Tooltip title=\"Select up to 7 genotypes\" placement=\"top\">\r\n            <InfoOutlined color=\"action\" fontSize=\"small\" className={classes.labelTooltipIcon} />\r\n          </Tooltip>\r\n        </div>\r\n        <div className={classes.selectWrapper}>\r\n          <Select\r\n            value={frequenciesGraphView}\r\n            onChange={handleChangeDataView}\r\n            inputProps={{ className: classes.dataViewSelectInput }}\r\n            MenuProps={{ classes: { list: classes.dataViewSelectMenu } }}\r\n            disabled={organism === 'none'}\r\n          >\r\n            {dataViewOptions.map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'frequencies-dataview'} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n          <Select\r\n            className={classes.select}\r\n            multiple\r\n            value={frequenciesGraphSelectedGenotypes}\r\n            onChange={(event) => handleChangeSelectedGenotypes({ event })}\r\n            displayEmpty\r\n            // endAdornment={\r\n            //   <Button\r\n            //     variant=\"outlined\"\r\n            //     className={classes.genotypesSelectButton}\r\n            //     onClick={() => handleChangeSelectedGenotypes({ all: true })}\r\n            //     disabled={frequenciesGraphSelectedGenotypes.length === 0}\r\n            //     color=\"error\"\r\n            //   >\r\n            //     Clear All\r\n            //   </Button>\r\n            // }\r\n            inputProps={{ className: classes.genotypesSelectInput }}\r\n            MenuProps={{ classes: { paper: classes.genotypesMenuPaper, list: classes.genotypesSelectMenu } }}\r\n            renderValue={(selected) => (<div>{`Select genotypes (currently showing ${selected.length} )`}</div>)}\r\n          >\r\n            <TextField \r\n                size=\"small\"\r\n                autoFocus\r\n                placeholder=\"Type to search...\"\r\n                label=\"Search genotype\" \r\n                variant=\"standard\" \r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SearchIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        className={classes.genotypesSelectButton}\r\n                        onClick={() => handleChangeSelectedGenotypes({ all: true })}\r\n                        disabled={frequenciesGraphSelectedGenotypes.length === 0}\r\n                        color=\"error\"\r\n                      >\r\n                        Clear All\r\n                      </Button>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n                sx={{ width:'98%', margin:'0% 1%'}}\r\n                onChange={e => setSearchValue(e)}\r\n                onKeyDown={(e) => e.stopPropagation()}\r\n              />\r\n            {filteredData.map((genotype, index) => (\r\n              <MenuItem key={`frequencies-option-${index}`} value={genotype.name}>\r\n                <Checkbox checked={frequenciesGraphSelectedGenotypes.indexOf(genotype.name) > -1} />\r\n                <ListItemText primary={getSelectGenotypeLabel(genotype)} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"RFWG\">\r\n          {plotChart}\r\n        </div>\r\n        <div className={classes.tooltipWrapper}>\r\n          {currentTooltip ? (\r\n            <div className={classes.tooltip}>\r\n              <div className={classes.tooltipTitle}>\r\n                <Typography variant=\"h5\" fontWeight=\"600\">\r\n                  {currentTooltip.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">{'N = ' + currentTooltip.count}</Typography>\r\n              </div>\r\n              <div className={classes.tooltipContent}>\r\n                {currentTooltip.drugs.map((item, index) => {\r\n                  return (\r\n                    <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                      <Box\r\n                        className={classes.tooltipItemBox}\r\n                        style={{\r\n                          backgroundColor: item.fill\r\n                        }}\r\n                      />\r\n                      <div className={classes.tooltipItemStats}>\r\n                        <Typography variant=\"body2\" fontWeight=\"500\">\r\n                          {item.label}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" noWrap>{`N = ${item.count}`}</Typography>\r\n                        <Typography fontSize=\"10px\">{`${item.percentage}%`}</Typography>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.noGenotypeSelected}>Click on a genotype to see detail</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drugResistanceGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  labelWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '8px',\r\n    paddingBottom: '4px'\r\n  },\r\n  labelTooltipIcon: {\r\n    cursor: 'pointer'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important',\r\n    marginRight: '-80px !important'\r\n  },\r\n  selectButton: {\r\n    height: '20px',\r\n    fontSize: '10px !important',\r\n    padding: '3px 5px !important',\r\n    whiteSpace: 'nowrap',\r\n    position: 'absolute',\r\n    right: '18px'\r\n  },\r\n  menuPaper: {\r\n    maxHeight: '350px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiCheckbox-root': {\r\n      padding: '0px 8px 0px 0px'\r\n    },\r\n    '& .MuiTypography-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      width: '100%',\r\n      height: '460px'\r\n    }\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltipWrapper: {\r\n    width: '30%',\r\n    borderRadius: '6px',\r\n    backgroundColor: '#E5E5E5',\r\n    overflowY: 'auto',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      height: '250px'\r\n    }\r\n  },\r\n  noYearSelected: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n  },\r\n  tooltip: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end',\r\n    padding: '16px 16px 8px',\r\n    borderBottom: '1px solid #fff'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexWrap: 'wrap',\r\n    gap: '16px',\r\n    padding: '16px',\r\n    overflowY: 'auto'\r\n  },\r\n  tooltipItemWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    gridColumn: 'span 6'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  },\r\n  chartTooltipLabel: {\r\n    backgroundColor: '#fff',\r\n    padding: '8px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, Button, CardContent, Checkbox, ListItemText, MenuItem, Select, Tooltip, Typography } from '@mui/material';\r\nimport { useStyles } from './DrugResistanceGraphMUI';\r\nimport {\r\n  Brush,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as ChartTooltip,\r\n  LineChart,\r\n  Line,\r\n  Label\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setDrugResistanceGraphView } from '../../../../stores/slices/graphSlice';\r\nimport { drugsKP, drugsForDrugResistanceGraphST } from '../../../../util/drugs';\r\nimport { useEffect, useState } from 'react';\r\nimport { hoverColor } from '../../../../util/colorHelper';\r\nimport { getColorForDrug } from '../graphColorHelper';\r\nimport { InfoOutlined } from '@mui/icons-material';\r\nimport { isTouchDevice } from '../../../../util/isTouchDevice';\r\n\r\nexport const DrugResistanceGraph = () => {\r\n  const classes = useStyles();\r\n  const [currentTooltip, setCurrentTooltip] = useState(null);\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n\r\n  const dispatch = useAppDispatch();\r\n  const drugResistanceGraphView = useAppSelector((state) => state.graph.drugResistanceGraphView);\r\n  const drugsYearData = useAppSelector((state) => state.graph.drugsYearData);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const timeInitial = useAppSelector((state) => state.dashboard.timeInitial);\r\n  const timeFinal = useAppSelector((state) => state.dashboard.timeFinal);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n\r\n  useEffect(() => {\r\n    setCurrentTooltip(null);\r\n  }, [drugsYearData]);\r\n\r\n  function getData() {\r\n    const exclusions = ['name', 'count'];\r\n    let drugDataPercentage = structuredClone(drugsYearData);\r\n    drugDataPercentage = drugDataPercentage.map((item) => {\r\n      const keys = Object.keys(item).filter((x) => !exclusions.includes(x));\r\n\r\n      keys.forEach((key) => {\r\n        item[key] = Number(((item[key] / item.count) * 100).toFixed(2));\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    return drugDataPercentage;\r\n  }\r\n\r\n  function getDrugs() {\r\n    if (organism === 'none') {\r\n      return [];\r\n    }\r\n    if (organism === 'typhi') {\r\n      return drugsForDrugResistanceGraphST;\r\n    }\r\n    return drugsKP;\r\n  }\r\n\r\n  function handleChangeDrugsView({ event = null, all = false }) {\r\n    setCurrentTooltip(null);\r\n    let newValues = [];\r\n    const drugs = getDrugs();\r\n\r\n    if (all) {\r\n      if (drugResistanceGraphView.length === drugs.length) {\r\n        newValues = [];\r\n      } else {\r\n        newValues = drugs.slice();\r\n      }\r\n    } else {\r\n      const {\r\n        target: { value }\r\n      } = event;\r\n      newValues = value;\r\n    }\r\n\r\n    newValues.sort((a, b) => a.localeCompare(b));\r\n    dispatch(setDrugResistanceGraphView(newValues));\r\n  }\r\n\r\n  function handleClickChart(event) {\r\n    const data = drugsYearData.find((item) => item.name === event?.activeLabel);\r\n\r\n    if (data && drugResistanceGraphView.length > 0) {\r\n      const currentData = structuredClone(data);\r\n\r\n      const value = {\r\n        name: currentData.name,\r\n        count: currentData.count,\r\n        drugs: []\r\n      };\r\n\r\n      delete currentData.name;\r\n      delete currentData.count;\r\n\r\n      Object.keys(currentData).forEach((key) => {\r\n        if (!drugResistanceGraphView.includes(key)) {\r\n          return;\r\n        }\r\n\r\n        const count = currentData[key];\r\n        if (count === 0) {\r\n          return;\r\n        }\r\n\r\n        value.drugs.push({\r\n          label: key,\r\n          count,\r\n          percentage: Number(((count / value.count) * 100).toFixed(2)),\r\n          fill: event.activePayload.find((x) => x.name === key).stroke\r\n        });\r\n        value.drugs.sort((a, b) => b.count - a.count);\r\n      });\r\n\r\n      setCurrentTooltip(value);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      const doc = document.getElementById('DRT');\r\n      const lines = doc.getElementsByClassName('recharts-line');\r\n\r\n      for (let index = 0; index < lines.length; index++) {\r\n        const hasValue = drugResistanceGraphView.some((value) => getDrugs().indexOf(value) === index);\r\n        lines[index].style.display = hasValue ? 'block' : 'none';\r\n      }\r\n\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <LineChart data={getData()} cursor={isTouchDevice() ? 'default' : 'pointer'} onClick={handleClickChart}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                tickCount={20}\r\n                allowDecimals={false}\r\n                padding={{ left: 20, right: 20 }}\r\n                dataKey=\"name\"\r\n                domain={drugsYearData.length > 0 ? ['dataMin', 'dataMax'] : undefined}\r\n                interval={'preserveStartEnd'}\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis tickCount={6} padding={{ top: 20, bottom: 20 }} allowDecimals={false}>\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  Resistant (%)\r\n                </Label>\r\n              </YAxis>\r\n              {drugsYearData.length > 0 && <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />}\r\n\r\n              {organism !== 'none' && (\r\n                <Legend\r\n                  content={(props) => {\r\n                    const { payload } = props;\r\n                    return (\r\n                      <div className={classes.legendWrapper}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry;\r\n                          return (\r\n                            <div key={`drug-resistance-legend-${index}`} className={classes.legendItemWrapper}>\r\n                              <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                              <Typography variant=\"caption\">{dataKey}</Typography>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                />\r\n              )}\r\n\r\n              <ChartTooltip\r\n                cursor={{ fill: hoverColor }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    return <div className={classes.chartTooltipLabel}>{label}</div>;\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {getDrugs().map((option, index) => (\r\n                <Line\r\n                  key={`drug-resistance-bar-${index}`}\r\n                  dataKey={option}\r\n                  strokeWidth={2}\r\n                  stroke={getColorForDrug(option)}\r\n                  connectNulls\r\n                  type=\"monotone\"\r\n                  activeDot={timeInitial === timeFinal ? true : false}\r\n                />\r\n              ))}\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [drugsYearData, drugResistanceGraphView]);\r\n\r\n  return (\r\n    <CardContent className={classes.drugResistanceGraph}>\r\n      <div className={classes.selectWrapper}>\r\n        <div className={classes.labelWrapper}>\r\n          <Typography variant=\"caption\">Drugs view</Typography>\r\n          <Tooltip\r\n            title=\"The resistance frequencies are only shown for years with N≥10 genomes. When the data is insufficent per year to calculate annual frequencies, there are no data points to show.\"\r\n            placement=\"top\"\r\n          >\r\n            <InfoOutlined color=\"action\" fontSize=\"small\" className={classes.labelTooltipIcon} />\r\n          </Tooltip>\r\n        </div>\r\n        <Select\r\n          multiple\r\n          value={drugResistanceGraphView}\r\n          onChange={(event) => handleChangeDrugsView({ event })}\r\n          displayEmpty\r\n          disabled={organism === 'none'}\r\n          endAdornment={\r\n            <Button\r\n              variant=\"outlined\"\r\n              className={classes.selectButton}\r\n              onClick={() => handleChangeDrugsView({ all: true })}\r\n              disabled={organism === 'none'}\r\n              color={drugResistanceGraphView.length === getDrugs().length ? 'error' : 'primary'}\r\n            >\r\n              {drugResistanceGraphView.length === getDrugs().length ? 'Clear All' : 'Select All'}\r\n            </Button>\r\n          }\r\n          inputProps={{ className: classes.selectInput }}\r\n          MenuProps={{ classes: { paper: classes.menuPaper, list: classes.selectMenu } }}\r\n          renderValue={(selected) => <div>{`${selected.length} of ${getDrugs().length} selected`}</div>}\r\n        >\r\n          {getDrugs().map((drug, index) => (\r\n            <MenuItem key={`drug-resistance-option-${index}`} value={drug}>\r\n              <Checkbox checked={drugResistanceGraphView.indexOf(drug) > -1} />\r\n              <ListItemText primary={drug} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"DRT\">\r\n          {plotChart}\r\n        </div>\r\n        <div className={classes.tooltipWrapper}>\r\n          {currentTooltip ? (\r\n            <div className={classes.tooltip}>\r\n              <div className={classes.tooltipTitle}>\r\n                <Typography variant=\"h5\" fontWeight=\"600\">\r\n                  {currentTooltip.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">{'N = ' + currentTooltip.count}</Typography>\r\n              </div>\r\n              <div className={classes.tooltipContent}>\r\n                {currentTooltip.drugs.map((item, index) => {\r\n                  return (\r\n                    <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                      <Box\r\n                        className={classes.tooltipItemBox}\r\n                        style={{\r\n                          backgroundColor: item.fill\r\n                        }}\r\n                      />\r\n                      <div className={classes.tooltipItemStats}>\r\n                        <Typography variant=\"body2\" fontWeight=\"500\">\r\n                          {item.label}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" noWrap>{`N = ${item.count}`}</Typography>\r\n                        <Typography fontSize=\"10px\">{`${item.percentage}%`}</Typography>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.noYearSelected}>\r\n              {drugResistanceGraphView.length === 0 ? 'No drug selected' : 'No year selected'}{' '}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  distributionGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  selectLabel: {\r\n    paddingBottom: '4px'\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      width: '100%',\r\n      height: '460px'\r\n    }\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltipWrapper: {\r\n    width: '30%',\r\n    borderRadius: '6px',\r\n    backgroundColor: '#E5E5E5',\r\n    overflowY: 'auto',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      height: '250px'\r\n    }\r\n  },\r\n  noYearSelected: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n  },\r\n  tooltip: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end',\r\n    padding: '16px 16px 8px',\r\n    borderBottom: '1px solid #fff'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexWrap: 'wrap',\r\n    gap: '16px',\r\n    padding: '16px',\r\n    overflowY: 'auto'\r\n  },\r\n  tooltipItemWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    gridColumn: 'span 6'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  },\r\n  chartTooltipLabel: {\r\n    backgroundColor: '#fff',\r\n    padding: '8px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Box, CardContent, MenuItem, Select, Typography } from '@mui/material';\r\nimport { useStyles } from './DistributionGraphMUI';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  Brush,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as ChartTooltip,\r\n  Label\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setDistributionGraphView } from '../../../../stores/slices/graphSlice';\r\nimport { getColorForGenotype, hoverColor } from '../../../../util/colorHelper';\r\nimport { useEffect, useState } from 'react';\r\nimport { isTouchDevice } from '../../../../util/isTouchDevice';\r\n\r\nconst dataViewOptions = [\r\n  { label: 'Number of genomes', value: 'number' },\r\n  { label: 'Percentage per year', value: 'percentage' }\r\n];\r\n\r\nexport const DistributionGraph = () => {\r\n  const classes = useStyles();\r\n  const [currentTooltip, setCurrentTooltip] = useState(null);\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n\r\n  const dispatch = useAppDispatch();\r\n  const distributionGraphView = useAppSelector((state) => state.graph.distributionGraphView);\r\n  const genotypesYearData = useAppSelector((state) => state.graph.genotypesYearData);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const colorPallete = useAppSelector((state) => state.dashboard.colorPallete);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n\r\n  useEffect(() => {\r\n    setCurrentTooltip(null);\r\n  }, [genotypesYearData]);\r\n\r\n  function getDomain() {\r\n    return distributionGraphView === 'number' ? undefined : [0, 100];\r\n  }\r\n\r\n  function getData() {\r\n    if (distributionGraphView === 'number') {\r\n      return genotypesYearData;\r\n    }\r\n\r\n    const exclusions = ['name', 'count'];\r\n    let genotypeDataPercentage = structuredClone(genotypesYearData);\r\n    genotypeDataPercentage = genotypeDataPercentage.map((item) => {\r\n      const keys = Object.keys(item).filter((x) => !exclusions.includes(x));\r\n\r\n      keys.forEach((key) => {\r\n        item[key] = Number(((item[key] / item.count) * 100).toFixed(2));\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    return genotypeDataPercentage;\r\n  }\r\n\r\n  function getGenotypeColor(genotype) {\r\n    return organism === 'typhi' ? getColorForGenotype(genotype) : colorPallete[genotype] || '#F5F4F6';\r\n  }\r\n\r\n  function handleChangeDataView(event) {\r\n    dispatch(setDistributionGraphView(event.target.value));\r\n  }\r\n\r\n  function handleClickChart(event) {\r\n    const data = genotypesYearData.find((item) => item.name === event?.activeLabel);\r\n\r\n    if (data) {\r\n      const currentData = structuredClone(data);\r\n\r\n      const value = {\r\n        name: currentData.name,\r\n        count: currentData.count,\r\n        genotypes: []\r\n      };\r\n\r\n      delete currentData.name;\r\n      delete currentData.count;\r\n\r\n      value.genotypes = Object.keys(currentData).map((key) => {\r\n        const count = currentData[key];\r\n        const activePayload = event.activePayload.find((x) => x.name === key);\r\n\r\n        return {\r\n          label: key,\r\n          count,\r\n          percentage: Number(((count / value.count) * 100).toFixed(2)),\r\n          color: activePayload?.fill\r\n        };\r\n      });\r\n      value.genotypes.sort((a, b) => b.label.localeCompare(a.label));\r\n\r\n      setCurrentTooltip(value);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <BarChart\r\n              data={getData()}\r\n              cursor={isTouchDevice() ? 'default' : 'pointer'}\r\n              onClick={handleClickChart}\r\n              maxBarSize={70}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={getDomain()} allowDataOverflow={true} allowDecimals={false}>\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  {dataViewOptions.find((option) => option.value === distributionGraphView).label}\r\n                </Label>\r\n              </YAxis>\r\n              {genotypesYearData.length > 0 && <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div key={`distribution-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                            <Typography variant=\"caption\">{dataKey}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                cursor={{ fill: hoverColor }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    return <div className={classes.chartTooltipLabel}>{label}</div>;\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {genotypesForFilter.map((option, index) => (\r\n                <Bar\r\n                  key={`distribution-bar-${index}`}\r\n                  dataKey={option}\r\n                  name={option}\r\n                  stackId={0}\r\n                  fill={getGenotypeColor(option)}\r\n                />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [genotypesYearData, distributionGraphView]);\r\n\r\n  return (\r\n    <CardContent className={classes.distributionGraph}>\r\n      <div className={classes.selectWrapper}>\r\n        <Typography variant=\"caption\">Data view</Typography>\r\n        <Select\r\n          value={distributionGraphView}\r\n          onChange={handleChangeDataView}\r\n          inputProps={{ className: classes.selectInput }}\r\n          MenuProps={{ classes: { list: classes.selectMenu } }}\r\n          disabled={organism === 'none'}\r\n        >\r\n          {dataViewOptions.map((option, index) => {\r\n            return (\r\n              <MenuItem key={index + 'distribution-dataview'} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"GD\">\r\n          {plotChart}\r\n        </div>\r\n        <div className={classes.tooltipWrapper}>\r\n          {currentTooltip ? (\r\n            <div className={classes.tooltip}>\r\n              <div className={classes.tooltipTitle}>\r\n                <Typography variant=\"h5\" fontWeight=\"600\">\r\n                  {currentTooltip.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">{'N = ' + currentTooltip.count}</Typography>\r\n              </div>\r\n              <div className={classes.tooltipContent}>\r\n                {currentTooltip.genotypes.map((item, index) => {\r\n                  return (\r\n                    <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                      <Box\r\n                        className={classes.tooltipItemBox}\r\n                        style={{\r\n                          backgroundColor: item.color\r\n                        }}\r\n                      />\r\n                      <div className={classes.tooltipItemStats}>\r\n                        <Typography variant=\"body2\" fontWeight=\"500\">\r\n                          {item.label}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" noWrap>{`N = ${item.count}`}</Typography>\r\n                        <Typography fontSize=\"10px\">{`${item.percentage}%`}</Typography>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.noYearSelected}>No year selected</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  trendsKPGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)'\r\n  },\r\n  selectsWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      width: '100%',\r\n      height: '460px'\r\n    }\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  legendDivider: {\r\n    marginRight: '8px !important'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    minWidth: '10px'\r\n  },\r\n  tooltipWrapper: {\r\n    width: '30%',\r\n    borderRadius: '6px',\r\n    backgroundColor: '#E5E5E5',\r\n    overflowY: 'auto',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      height: '300px'\r\n    }\r\n  },\r\n  noYearSelected: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n  },\r\n  tooltip: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end',\r\n    padding: '16px 16px 8px',\r\n    borderBottom: '1px solid #fff'\r\n  },\r\n  tooltipItemWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    gridColumn: 'span 6'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  },\r\n  chartTooltipLabel: {\r\n    backgroundColor: '#fff',\r\n    padding: '8px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px'\r\n  },\r\n  tooltipSubTitle: {\r\n    padding: '16px 0px'\r\n  },\r\n  tooltipContent: {\r\n    padding: '16px !important',\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexWrap: 'wrap',\r\n    gap: '16px',\r\n    overflowY: 'auto'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, CardContent, Divider, MenuItem, Select, Tab, Tabs, Typography } from '@mui/material';\r\nimport { useStyles } from './TrendsKPGraphMUI';\r\nimport {\r\n  Bar,\r\n  Brush,\r\n  CartesianGrid,\r\n  ComposedChart,\r\n  Label,\r\n  Legend,\r\n  Line,\r\n  ResponsiveContainer,\r\n  Tooltip as ChartTooltip,\r\n  XAxis,\r\n  YAxis\r\n} from 'recharts';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { isTouchDevice } from '../../../../util/isTouchDevice';\r\nimport { colorForDrugClassesKP, hoverColor } from '../../../../util/colorHelper';\r\nimport { setTrendsKPGraphDrugClass, setTrendsKPGraphView } from '../../../../stores/slices/graphSlice';\r\nimport { drugClassesKP } from '../../../../util/drugs';\r\n\r\nconst dataViewOptions = [\r\n  { label: 'Number of genomes', value: 'number' },\r\n  { label: 'Percentage per year', value: 'percentage' }\r\n];\r\n\r\nexport const TrendsKPGraph = () => {\r\n  const classes = useStyles();\r\n  const [currentTooltip, setCurrentTooltip] = useState(null);\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n  const [tooltipTab, setTooltipTab] = useState('genes');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n  const colorPallete = useAppSelector((state) => state.dashboard.colorPallete);\r\n  const timeInitial = useAppSelector((state) => state.dashboard.timeInitial);\r\n  const timeFinal = useAppSelector((state) => state.dashboard.timeFinal);\r\n  const genotypesAndDrugsYearData = useAppSelector((state) => state.graph.genotypesAndDrugsYearData);\r\n  const trendsKPGraphView = useAppSelector((state) => state.graph.trendsKPGraphView);\r\n  const trendsKPGraphDrugClass = useAppSelector((state) => state.graph.trendsKPGraphDrugClass);\r\n\r\n  useEffect(() => {\r\n    setCurrentTooltip(null);\r\n  }, [genotypesAndDrugsYearData]);\r\n\r\n  function getDrugClasses() {\r\n    if (organism === 'none') {\r\n      return [];\r\n    }\r\n    return drugClassesKP;\r\n  }\r\n\r\n  function getDomain() {\r\n    return trendsKPGraphView === 'number' ? undefined : [0, 100];\r\n  }\r\n\r\n  function getData() {\r\n    if (trendsKPGraphView === 'number') {\r\n      return genotypesAndDrugsYearData[trendsKPGraphDrugClass];\r\n    }\r\n\r\n    const exclusions = ['name', 'totalCount', 'resistantCount'];\r\n    let percentageData = structuredClone(genotypesAndDrugsYearData[trendsKPGraphDrugClass] ?? []);\r\n    percentageData = percentageData.map((item) => {\r\n      const keys = Object.keys(item).filter((x) => !exclusions.includes(x));\r\n\r\n      keys.forEach((key) => {\r\n        item[key] = Number(((item[key] / item.totalCount) * 100).toFixed(2));\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    return percentageData;\r\n  }\r\n\r\n  function handleChangeDataView(event) {\r\n    dispatch(setTrendsKPGraphView(event.target.value));\r\n  }\r\n\r\n  function handleChangeDrugClass(event) {\r\n    setCurrentTooltip(null);\r\n    dispatch(setTrendsKPGraphDrugClass(event.target.value));\r\n  }\r\n\r\n  function handleChangeTooltipTab(_, newValue) {\r\n    setTooltipTab(newValue);\r\n  }\r\n\r\n  function handleClickChart(event) {\r\n    const data = genotypesAndDrugsYearData[trendsKPGraphDrugClass].find((item) => item.name === event?.activeLabel);\r\n\r\n    if (data) {\r\n      const currentData = structuredClone(data);\r\n      const value = {\r\n        name: currentData.name,\r\n        count: currentData.totalCount,\r\n        genes: [],\r\n        genotypes: []\r\n      };\r\n\r\n      delete currentData.name;\r\n      delete currentData.totalCount;\r\n      delete currentData.resistantCount;\r\n\r\n      Object.keys(currentData).forEach((key) => {\r\n        const count = currentData[key];\r\n\r\n        if (count === 0) {\r\n          return;\r\n        }\r\n\r\n        const item = {\r\n          label: key,\r\n          count,\r\n          percentage: Number(((count / value.count) * 100).toFixed(2)),\r\n          color: event.activePayload.find((x) => x.name === key).color\r\n        };\r\n\r\n        if (genotypesForFilter.includes(key)) {\r\n          value.genotypes.push(item);\r\n          value.genotypes.sort((a, b) => a.label.localeCompare(b.label));\r\n          return;\r\n        }\r\n\r\n        value.genes.push(item);\r\n        value.genes.sort((a, b) => a.label.localeCompare(b.label));\r\n      });\r\n\r\n      setCurrentTooltip(value);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <ComposedChart data={getData()} cursor={isTouchDevice() ? 'default' : 'pointer'} onClick={handleClickChart}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                tickCount={20}\r\n                allowDecimals={false}\r\n                padding={{ left: 20, right: 20 }}\r\n                dataKey=\"name\"\r\n                domain={\r\n                  (genotypesAndDrugsYearData[trendsKPGraphDrugClass] ?? []).length > 0\r\n                    ? ['dataMin', 'dataMax']\r\n                    : undefined\r\n                }\r\n                interval={'preserveStartEnd'}\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis\r\n                tickCount={6}\r\n                padding={{ top: 20, bottom: 20 }}\r\n                allowDecimals={false}\r\n                domain={getDomain()}\r\n                allowDataOverflow={true}\r\n              >\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  Number of Genomes\r\n                </Label>\r\n              </YAxis>\r\n              {(genotypesAndDrugsYearData[trendsKPGraphDrugClass] ?? []).length > 0 && (\r\n                <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />\r\n              )}\r\n\r\n              {organism !== 'none' && (\r\n                <Legend\r\n                  content={(props) => {\r\n                    const { payload } = props;\r\n                    const diviserIndex = colorForDrugClassesKP[trendsKPGraphDrugClass]?.length ?? 0;\r\n\r\n                    return (\r\n                      <div className={classes.legendWrapper}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry;\r\n                          return (\r\n                            <React.Fragment key={`trendsKP-legend-${index}`}>\r\n                              <div className={classes.legendItemWrapper}>\r\n                                <Box\r\n                                  className={classes.colorCircle}\r\n                                  style={{\r\n                                    backgroundColor: color,\r\n                                    borderRadius:\r\n                                      index < colorForDrugClassesKP[trendsKPGraphDrugClass]?.length ? undefined : '50%'\r\n                                  }}\r\n                                />\r\n                                <Typography variant=\"caption\">{dataKey}</Typography>\r\n                              </div>\r\n                              {diviserIndex - 1 === index && (\r\n                                <Divider orientation=\"vertical\" className={classes.legendDivider} />\r\n                              )}\r\n                            </React.Fragment>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                />\r\n              )}\r\n\r\n              <ChartTooltip\r\n                cursor={{ fill: hoverColor }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    return <div className={classes.chartTooltipLabel}>{label}</div>;\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {colorForDrugClassesKP[trendsKPGraphDrugClass]?.map((option, index) => (\r\n                <Bar\r\n                  key={`trendsKP-bar-${index}`}\r\n                  dataKey={option.name}\r\n                  name={option.name}\r\n                  stackId={0}\r\n                  fill={option.color}\r\n                />\r\n              ))}\r\n\r\n              {genotypesForFilter.map((option, index) => (\r\n                <Line\r\n                  key={`trendsKP-line-${index}`}\r\n                  dataKey={option}\r\n                  strokeWidth={2}\r\n                  stroke={colorPallete[option] || '#F5F4F6'}\r\n                  connectNulls\r\n                  type=\"monotone\"\r\n                  activeDot={timeInitial === timeFinal ? true : false}\r\n                />\r\n              ))}\r\n            </ComposedChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [genotypesAndDrugsYearData, trendsKPGraphView, trendsKPGraphDrugClass]);\r\n\r\n  return (\r\n    <CardContent className={classes.trendsKPGraph}>\r\n      <div className={classes.selectsWrapper}>\r\n        <div className={classes.selectWrapper}>\r\n          <Typography variant=\"caption\">Select drug class</Typography>\r\n          <Select\r\n            value={trendsKPGraphDrugClass}\r\n            onChange={handleChangeDrugClass}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n            disabled={organism === 'none'}\r\n          >\r\n            {getDrugClasses().map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'trendsKP-drug-classes'} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div>\r\n        <div className={classes.selectWrapper}>\r\n          <Typography variant=\"caption\">Data view</Typography>\r\n          <Select\r\n            value={trendsKPGraphView}\r\n            onChange={handleChangeDataView}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n            disabled={organism === 'none'}\r\n          >\r\n            {dataViewOptions.map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'trendsKP-dataview'} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"CERDT\">\r\n          {plotChart}\r\n        </div>\r\n        <div className={classes.tooltipWrapper}>\r\n          {currentTooltip ? (\r\n            <div className={classes.tooltip}>\r\n              <div className={classes.tooltipTitle}>\r\n                <Typography variant=\"h5\" fontWeight=\"600\">\r\n                  {currentTooltip.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">{'N = ' + currentTooltip.count}</Typography>\r\n              </div>\r\n              <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                <Tabs value={tooltipTab} onChange={handleChangeTooltipTab} variant=\"fullWidth\">\r\n                  <Tab label=\"Genes\" value=\"genes\" />\r\n                  <Tab label=\"Genotypes\" value=\"genotypes\" />\r\n                </Tabs>\r\n              </Box>\r\n              <div className={classes.tooltipContent}>\r\n                {currentTooltip[tooltipTab].map((item, index) => {\r\n                  return (\r\n                    <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                      <Box\r\n                        className={classes.tooltipItemBox}\r\n                        style={{\r\n                          backgroundColor: item.color\r\n                        }}\r\n                      />\r\n                      <div className={classes.tooltipItemStats}>\r\n                        <Typography variant=\"body2\" fontWeight=\"500\">\r\n                          {item.label}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" noWrap>{`N = ${item.count}`}</Typography>\r\n                        <Typography fontSize=\"10px\">{`${item.percentage}%`}</Typography>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.noYearSelected}>No year selected</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  KODiversityGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  selectLabel: {\r\n    paddingBottom: '4px'\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      width: '100%',\r\n      height: '460px'\r\n    }\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltipWrapper: {\r\n    width: '30%',\r\n    borderRadius: '6px',\r\n    backgroundColor: '#E5E5E5',\r\n    overflowY: 'auto',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      height: '250px'\r\n    }\r\n  },\r\n  noYearSelected: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n  },\r\n  tooltip: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end',\r\n    padding: '16px 16px 8px',\r\n    borderBottom: '1px solid #fff'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexWrap: 'wrap',\r\n    gap: '16px',\r\n    padding: '16px',\r\n    overflowY: 'auto'\r\n  },\r\n  tooltipItemWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    gridColumn: 'span 6'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  },\r\n  chartTooltipLabel: {\r\n    backgroundColor: '#fff',\r\n    padding: '8px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Box, CardContent, MenuItem, Select, Typography } from '@mui/material';\r\nimport { useStyles } from './KODiversityGraphMUI';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  Brush,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as ChartTooltip,\r\n  Label\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setKODiversityGraphView, setResetBool } from '../../../../stores/slices/graphSlice';\r\nimport { hoverColor } from '../../../../util/colorHelper';\r\nimport { useEffect, useState } from 'react';\r\nimport { isTouchDevice } from '../../../../util/isTouchDevice';\r\nimport { colorsForKODiversityGraph } from '../graphColorHelper';\r\n\r\nconst dataViewOptions = [\r\n  { label: 'K locus', value: 'K_locus' },\r\n  { label: 'O locus', value: 'O_locus' }\r\n];\r\n\r\nexport const KODiversityGraph = () => {\r\n  const classes = useStyles();\r\n  const [currentTooltip, setCurrentTooltip] = useState(null);\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n\r\n  const dispatch = useAppDispatch();\r\n  const KODiversityData = useAppSelector((state) => state.graph.KODiversityData);\r\n  const KODiversityGraphView = useAppSelector((state) => state.graph.KODiversityGraphView);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const resetBool = useAppSelector((state) => state.graph.resetBool);\r\n\r\n  useEffect(() => {\r\n    dispatch(setResetBool(true));\r\n    setCurrentTooltip(null);\r\n  }, [KODiversityData]);\r\n\r\n  function handleChangeDataView(event) {\r\n    setCurrentTooltip(null);\r\n    dispatch(setKODiversityGraphView(event.target.value));\r\n  }\r\n\r\n  function handleClickChart(event) {\r\n    const data = KODiversityData[KODiversityGraphView].find((item) => item.name === event?.activeLabel);\r\n\r\n    if (data) {\r\n      const currentData = structuredClone(data);\r\n\r\n      const value = {\r\n        name: currentData.name,\r\n        count: currentData.count,\r\n        diversity: []\r\n      };\r\n\r\n      delete currentData.name;\r\n      delete currentData.count;\r\n\r\n      Object.keys(currentData).forEach((key) => {\r\n        const count = currentData[key];\r\n\r\n        if (count === 0) {\r\n          return;\r\n        }\r\n\r\n        const activePayload = event.activePayload.find((x) => x.name === key);\r\n\r\n        value.diversity.push({\r\n          label: key,\r\n          count,\r\n          percentage: Number(((count / value.count) * 100).toFixed(2)),\r\n          color: activePayload?.fill\r\n        });\r\n      });\r\n\r\n      setCurrentTooltip(value);\r\n      dispatch(setResetBool(false));\r\n\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(resetBool){\r\n      setCurrentTooltip(null);\r\n      dispatch(setResetBool(true));\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <BarChart\r\n              data={KODiversityData[KODiversityGraphView]}\r\n              cursor={isTouchDevice() ? 'default' : 'pointer'}\r\n              onClick={handleClickChart}\r\n              maxBarSize={70}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis allowDataOverflow={true} allowDecimals={false} fontSize=\"14px\">\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  Number of genomes\r\n                </Label>\r\n              </YAxis>\r\n\r\n              {(KODiversityData[KODiversityGraphView] ?? []).length > 0 && (\r\n                <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div key={`KODiversity-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                            <Typography variant=\"caption\">{dataKey}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                cursor={{ fill: hoverColor }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    return <div className={classes.chartTooltipLabel}>{label}</div>;\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {colorsForKODiversityGraph.map((option, index) => (\r\n                <Bar\r\n                  key={`KODiversity-bar-${index}`}\r\n                  dataKey={option.name}\r\n                  name={option.name}\r\n                  stackId={0}\r\n                  fill={option.color}\r\n                />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [KODiversityData, KODiversityGraphView]);\r\n\r\n  return (\r\n    <CardContent className={classes.KODiversityGraph}>\r\n      <div className={classes.selectWrapper}>\r\n        <Typography variant=\"caption\">Data view</Typography>\r\n        <Select\r\n          value={KODiversityGraphView}\r\n          onChange={handleChangeDataView}\r\n          inputProps={{ className: classes.selectInput }}\r\n          MenuProps={{ classes: { list: classes.selectMenu } }}\r\n          disabled={organism === 'none'}\r\n        >\r\n          {dataViewOptions.map((option, index) => {\r\n            return (\r\n              <MenuItem key={index + 'KODiversity-dataview'} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"KO\">\r\n          {plotChart}\r\n        </div>\r\n        <div className={classes.tooltipWrapper}>\r\n          {currentTooltip ? (\r\n            <div className={classes.tooltip}>\r\n              <div className={classes.tooltipTitle}>\r\n                <Typography variant=\"h5\" fontWeight=\"600\">\r\n                  {currentTooltip.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">{'N = ' + currentTooltip.count}</Typography>\r\n              </div>\r\n              <div className={classes.tooltipContent}>\r\n                {currentTooltip.diversity.map((item, index) => {\r\n                  return (\r\n                    <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                      <Box\r\n                        className={classes.tooltipItemBox}\r\n                        style={{\r\n                          backgroundColor: item.color\r\n                        }}\r\n                      />\r\n                      <div className={classes.tooltipItemStats}>\r\n                        <Typography variant=\"body2\" fontWeight=\"500\">\r\n                          {item.label}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" noWrap>{`N = ${item.count}`}</Typography>\r\n                        <Typography fontSize=\"10px\">{`${item.percentage}%`}</Typography>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.noYearSelected}>Click on a item to see the details</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  convergenceGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)'\r\n  },\r\n  selectsWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      width: '100%',\r\n      height: '460px'\r\n    }\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px',\r\n    marginTop: '20px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  chartTooltipLabel: {\r\n    backgroundColor: '#fff',\r\n    padding: '8px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltipWrapper: {\r\n    width: '30%',\r\n    borderRadius: '6px',\r\n    backgroundColor: '#E5E5E5',\r\n    overflowY: 'auto',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      height: '250px'\r\n    }\r\n  },\r\n  tooltip: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end',\r\n    padding: '16px 16px 8px',\r\n    borderBottom: '1px solid #fff'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexWrap: 'wrap',\r\n    gap: '16px',\r\n    padding: '16px',\r\n    overflowY: 'auto'\r\n  },\r\n  tooltipItemWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    gridColumn: 'span 6'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  },\r\n  noBubbleSelected: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, CardContent, MenuItem, Select, Typography } from '@mui/material';\r\nimport { useStyles } from './ConvergenceGraphMUI';\r\nimport {\r\n  CartesianGrid,\r\n  Label,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as ChartTooltip,\r\n  ScatterChart,\r\n  Scatter,\r\n  ZAxis,\r\n  Cell\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { /*setConvergenceColourVariable,*/ setConvergenceGroupVariable } from '../../../../stores/slices/graphSlice';\r\nimport { useEffect, useState } from 'react';\r\nimport { hoverColor } from '../../../../util/colorHelper';\r\nimport { isTouchDevice } from '../../../../util/isTouchDevice';\r\nimport { variablesOptions } from '../../../../util/convergenceVariablesOptions';\r\n\r\nexport const ConvergenceGraph = () => {\r\n  const classes = useStyles();\r\n  const [currentTooltip, setCurrentTooltip] = useState(null);\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n\r\n  const dispatch = useAppDispatch();\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const convergenceData = useAppSelector((state) => state.graph.convergenceData);\r\n  const convergenceGroupVariable = useAppSelector((state) => state.graph.convergenceGroupVariable);\r\n  // const convergenceColourVariable = useAppSelector((state) => state.graph.convergenceColourVariable);\r\n  const convergenceColourPallete = useAppSelector((state) => state.graph.convergenceColourPallete);\r\n\r\n  useEffect(() => {\r\n    setCurrentTooltip(null);\r\n  }, [convergenceData]);\r\n\r\n  function handleChangeGroupVariable(event) {\r\n    setCurrentTooltip(null);\r\n    dispatch(setConvergenceGroupVariable(event.target.value));\r\n  }\r\n\r\n  // function handleChangeColourVariable(event) {\r\n  //   setCurrentTooltip(null);\r\n  //   dispatch(setConvergenceColourVariable(event.target.value));\r\n  // }\r\n\r\n  function handleClickChart(name) {\r\n    const data = convergenceData.find((item) => item.name === name);\r\n\r\n    if (data) {\r\n      const currentData = structuredClone(data);\r\n      setCurrentTooltip({ ...currentData });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <ScatterChart cursor={isTouchDevice() ? 'default' : 'pointer'}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              {/* <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} /> */}\r\n              <XAxis\r\n                dataKey=\"x\"\r\n                allowDecimals={false}\r\n                type=\"number\"\r\n                interval=\"preserveStartEnd\"\r\n                tick={{ fontSize: 14 }}\r\n                tickCount={10}\r\n                domain={[0, 5]}\r\n                padding={{ left: 20, right: 20 }}\r\n              >\r\n                <Label position=\"bottom\" className={classes.graphLabel}>\r\n                  Mean virulence score\r\n                </Label>\r\n              </XAxis>\r\n              <YAxis\r\n                type=\"number\"\r\n                dataKey=\"y\"\r\n                allowDataOverflow={true}\r\n                domain={[0, 3]}\r\n                padding={{ top: 20, bottom: 20 }}\r\n              >\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  Mean resistance score\r\n                </Label>\r\n              </YAxis>\r\n              <ZAxis type=\"number\" dataKey=\"z\" range={[50, 1000]} />\r\n\r\n              <Legend\r\n                content={() => {\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {Object.keys(convergenceColourPallete).map((key, index) => {\r\n                        return (\r\n                          <div key={`convergence-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box\r\n                              className={classes.colorCircle}\r\n                              style={{ backgroundColor: convergenceColourPallete[key] }}\r\n                            />\r\n                            <Typography variant=\"caption\">{key}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                cursor={{ fill: hoverColor }}\r\n                content={({ payload, active }) => {\r\n                  if (payload !== null && active) {\r\n                    return <div className={classes.chartTooltipLabel}>{payload[0]?.payload.name}</div>;\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              <Scatter name=\"combinations\" data={convergenceData}>\r\n                {convergenceData.map((option, index) => (\r\n                  <Cell\r\n                    name={option.name}\r\n                    onClick={() => handleClickChart(option.name)}\r\n                    key={`combination-cell-${index}`}\r\n                    fill={convergenceColourPallete[option.colorLabel]}\r\n                  />\r\n                ))}\r\n              </Scatter>\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [convergenceData]);\r\n\r\n  return (\r\n    <CardContent className={classes.convergenceGraph}>\r\n      <div className={classes.selectsWrapper}>\r\n        <div className={classes.selectWrapper}>\r\n          <Typography variant=\"caption\">Group variable</Typography>\r\n          <Select\r\n            value={convergenceGroupVariable}\r\n            onChange={handleChangeGroupVariable}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n            disabled={organism === 'none'}\r\n          >\r\n            {variablesOptions.map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'convergence-group-variable'} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div>\r\n        {/* <div className={classes.selectWrapper}>\r\n          <Typography variant=\"caption\">Colour variable</Typography>\r\n          <Select\r\n            value={convergenceColourVariable}\r\n            onChange={handleChangeColourVariable}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n            disabled={organism === 'none'}\r\n          >\r\n            {variablesOptions.map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'convergence-colour-variable'} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div> */}\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"CVM\">\r\n          {plotChart}\r\n        </div>\r\n        <div className={classes.tooltipWrapper}>\r\n          {currentTooltip ? (\r\n            <div className={classes.tooltip}>\r\n              <div className={classes.tooltipTitle}>\r\n                <Typography variant=\"h5\" fontWeight=\"600\">\r\n                  {currentTooltip.name}\r\n                </Typography>\r\n                {/* <Typography noWrap variant=\"subtitle1\" minWidth=\"90px\" textAlign=\"end\"> */}\r\n                <Typography variant=\"subtitle1\">{'N = ' + currentTooltip.z}</Typography>\r\n              </div>\r\n              <div className={classes.tooltipContent}>\r\n                <div className={classes.tooltipItemWrapper}>\r\n                  <Box\r\n                    className={classes.tooltipItemBox}\r\n                    style={{\r\n                      backgroundColor: 'rgb(24, 85, 183)'\r\n                    }}\r\n                  />\r\n                  <div className={classes.tooltipItemStats}>\r\n                    <Typography variant=\"body2\" fontWeight=\"500\">\r\n                      Mean virulence score\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" noWrap>\r\n                      {currentTooltip.x}\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <div className={classes.tooltipItemWrapper}>\r\n                  <Box\r\n                    className={classes.tooltipItemBox}\r\n                    style={{\r\n                      backgroundColor: 'rgb(187, 54, 60)'\r\n                    }}\r\n                  />\r\n                  <div className={classes.tooltipItemStats}>\r\n                    <Typography variant=\"body2\" fontWeight=\"500\">\r\n                      Mean resistance score\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" noWrap>\r\n                      {currentTooltip.y}\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.noBubbleSelected}>No bubble selected</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","import {\r\n  Alert,\r\n  Card,\r\n  CardActions,\r\n  CircularProgress,\r\n  Collapse,\r\n  IconButton,\r\n  Snackbar,\r\n  Tooltip,\r\n  Typography,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport { useStyles } from './GraphsMUI';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { CameraAlt, ExpandLess, ExpandMore } from '@mui/icons-material';\r\nimport { setCollapse } from '../../../stores/slices/graphSlice';\r\nimport { DeterminantsGraph } from './DeterminantsGraph';\r\nimport { FrequenciesGraph } from './FrequenciesGraph';\r\nimport { DrugResistanceGraph } from './DrugResistanceGraph';\r\nimport { DistributionGraph } from './DistributionGraph';\r\nimport { useState } from 'react';\r\nimport { imgOnLoadPromise } from '../../../util/imgOnLoadPromise';\r\nimport domtoimage from 'dom-to-image';\r\nimport LogoImg from '../../../assets/img/logo-prod.png';\r\nimport download from 'downloadjs';\r\nimport { drugsST, drugsKP, drugsForDrugResistanceGraphST } from '../../../util/drugs';\r\nimport { colorsForKODiversityGraph, getColorForDrug } from './graphColorHelper';\r\nimport { colorForDrugClassesKP, colorForDrugClassesST, getColorForGenotype } from '../../../util/colorHelper';\r\nimport { TrendsKPGraph } from './TrendsKPGraph';\r\nimport { isTouchDevice } from '../../../util/isTouchDevice';\r\nimport { graphCards } from '../../../util/graphCards';\r\nimport { KODiversityGraph } from './KODiversityGraph';\r\nimport { ConvergenceGraph } from './ConvergenceGraph';\r\nimport { variablesOptions } from '../../../util/convergenceVariablesOptions';\r\n\r\nexport const Graphs = () => {\r\n  const classes = useStyles();\r\n  const matches500 = useMediaQuery('(max-width:500px)');\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [chartLoadings, setCharLoadings] = useState({\r\n    frequencies: false,\r\n    drugResistance: false,\r\n    determinants: false,\r\n    distribution: false,\r\n    trendsKP: false\r\n  });\r\n\r\n  const dispatch = useAppDispatch();\r\n  const collapses = useAppSelector((state) => state.graph.collapses);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const actualCountry = useAppSelector((state) => state.dashboard.actualCountry);\r\n  const determinantsGraphDrugClass = useAppSelector((state) => state.graph.determinantsGraphDrugClass);\r\n  const trendsKPGraphDrugClass = useAppSelector((state) => state.graph.trendsKPGraphDrugClass);\r\n  const KODiversityGraphView = useAppSelector((state) => state.graph.KODiversityGraphView);\r\n  const globalOverviewLabel = useAppSelector((state) => state.dashboard.globalOverviewLabel);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n  const colorPallete = useAppSelector((state) => state.dashboard.colorPallete);\r\n  const convergenceGroupVariable = useAppSelector((state) => state.graph.convergenceGroupVariable);\r\n  const convergenceColourVariable = useAppSelector((state) => state.graph.convergenceColourVariable);\r\n  const convergenceColourPallete = useAppSelector((state) => state.graph.convergenceColourPallete);\r\n\r\n  function getOrganismCards() {\r\n    return graphCards.filter((card) => card.organisms.includes(organism));\r\n  }\r\n\r\n  function getGenotypeColor(genotype) {\r\n    return organism === 'typhi' ? getColorForGenotype(genotype) : colorPallete[genotype] || '#F5F4F6';\r\n  }\r\n\r\n  function getDrugClassesBars() {\r\n    switch (organism) {\r\n      case 'typhi':\r\n        return colorForDrugClassesST[determinantsGraphDrugClass];\r\n      default:\r\n        return colorForDrugClassesKP[determinantsGraphDrugClass];\r\n    }\r\n  }\r\n\r\n  function drawLegend({\r\n    legendData,\r\n    context,\r\n    factor,\r\n    mobileFactor,\r\n    yPosition,\r\n    isGenotype = false,\r\n    isDrug = false,\r\n    isVariable = false,\r\n    xSpace\r\n  }) {\r\n    legendData.forEach((legend, i) => {\r\n      const yFactor = (i % factor) * 24;\r\n      const xFactor = Math.floor(i / factor) * xSpace;\r\n\r\n      context.fillStyle = isGenotype\r\n        ? getGenotypeColor(legend)\r\n        : isDrug\r\n        ? getColorForDrug(legend)\r\n        : isVariable\r\n        ? convergenceColourPallete[legend]\r\n        : legend.color;\r\n      context.beginPath();\r\n      context.arc(102 + xFactor, yPosition - mobileFactor + yFactor, 5, 0, 2 * Math.PI);\r\n      context.fill();\r\n      context.closePath();\r\n      context.fillStyle = 'black';\r\n      context.fillText(\r\n        isGenotype || isDrug || isVariable ? legend : legend.name,\r\n        111 + xFactor,\r\n        yPosition + 4 - mobileFactor + yFactor\r\n      );\r\n    });\r\n  }\r\n\r\n  async function handleClickDownload(event, card) {\r\n    event.stopPropagation();\r\n    handleLoading(card.collapse, true);\r\n\r\n    try {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n\r\n      const graph = document.getElementById(card.id);\r\n      const graphImg = document.createElement('img');\r\n      const graphImgPromise = imgOnLoadPromise(graphImg);\r\n\r\n      graphImg.src = await domtoimage.toPng(graph, { quality: 0.1, bgcolor: 'white' });\r\n      await graphImgPromise;\r\n\r\n      let heightFactor = 0,\r\n        drugClassesBars,\r\n        drugClassesFactor,\r\n        genotypesFactor,\r\n        variablesFactor;\r\n\r\n      if (['RFWG', 'DRT'].includes(card.id)) {\r\n        heightFactor = 250;\r\n      }\r\n      if (['RDWG', 'CERDT'].includes(card.id)) {\r\n        drugClassesBars = getDrugClassesBars();\r\n        drugClassesFactor = Math.ceil(drugClassesBars.length / 4);\r\n        heightFactor += drugClassesFactor * 22;\r\n      }\r\n      if (card.id === 'GD') {\r\n        genotypesFactor = Math.ceil(genotypesForFilter.length / 9);\r\n        heightFactor += genotypesFactor * 22;\r\n      }\r\n      if (card.id === 'CERDT') {\r\n        genotypesFactor = Math.ceil(genotypesForFilter.length / 9);\r\n        heightFactor += genotypesFactor * 22 + 50;\r\n      }\r\n      if (card.id === 'CVM') {\r\n        variablesFactor = Math.ceil(Object.keys(convergenceColourPallete).length / 3);\r\n        heightFactor += variablesFactor * 22;\r\n      }\r\n\r\n      canvas.width = 922;\r\n      canvas.height = graphImg.height + 220 + heightFactor;\r\n\r\n      ctx.fillStyle = 'white';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      const logo = document.createElement('img');\r\n      const logoPromise = imgOnLoadPromise(logo);\r\n      logo.src = LogoImg;\r\n      await logoPromise;\r\n\r\n      ctx.drawImage(logo, 10, 10, 155, 80);\r\n      ctx.drawImage(graphImg, canvas.width / 2 - graphImg.width / 2, 220);\r\n\r\n      ctx.font = 'bold 18px Montserrat';\r\n      ctx.fillStyle = 'black';\r\n      ctx.textAlign = 'center';\r\n      ctx.fillText(card.title, canvas.width / 2 ,50);\r\n\r\n      ctx.font = '12px Montserrat';\r\n      ctx.fillText(card.description.join(' / '), canvas.width / 2, 72);\r\n\r\n      ctx.font = '14px Montserrat';\r\n      ctx.fillText(`Organism: ${globalOverviewLabel.fullLabel}`, canvas.width / 2, 110);\r\n      ctx.fillText(`Dataset: ${dataset}`, canvas.width / 2, 132);\r\n      ctx.fillText(`Time period: ${actualTimeInitial} to ${actualTimeFinal}`, canvas.width / 2, 154);\r\n      ctx.fillText(`Country: ${actualCountry}`, canvas.width / 2, 176);\r\n      if (card.id === 'RDWG') ctx.fillText(`Drug Class: ${determinantsGraphDrugClass}`, canvas.width / 2, 198);\r\n      if (card.id === 'CERDT') ctx.fillText(`Drug Class: ${trendsKPGraphDrugClass}`, canvas.width / 2, 198);\r\n      if (card.id === 'KO') ctx.fillText(`Data view: ${KODiversityGraphView}`, canvas.width / 2, 198);\r\n      if (card.id === 'CVM') {\r\n        const group = variablesOptions.find((option) => option.value === convergenceGroupVariable).label;\r\n        const colour = variablesOptions.find((option) => option.value === convergenceColourVariable).label;\r\n        ctx.fillText(`Group variable: ${group} / Colour variable: ${colour}`, canvas.width / 2, 198);\r\n      }\r\n\r\n      ctx.fillStyle = 'white';\r\n      ctx.textAlign = 'start';\r\n      ctx.font = '12px Montserrat';\r\n\r\n      const mobileFactor = matches500 ? 100 : 0;\r\n      if ('RFWG'.includes(card.id)) {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n        const legendDrugs = organism === 'typhi' ? drugsST : drugsKP;\r\n\r\n        drawLegend({\r\n          legendData: legendDrugs,\r\n          context: ctx,\r\n          factor: (legendDrugs.length>12 ? 8 : 4),\r\n          mobileFactor,\r\n          yPosition: 670,\r\n          xSpace: (legendDrugs.length>12 ? 400 : 200),\r\n          isDrug: true\r\n        });\r\n      } else if ('DRT'.includes(card.id)) {\r\n          ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n          drawLegend({\r\n            legendData: drugsForDrugResistanceGraphST,\r\n            context: ctx,\r\n            factor: 4,\r\n            mobileFactor,\r\n            yPosition: 670,\r\n            xSpace: 200,\r\n            isDrug: true\r\n          });\r\n      } else if (card.id === 'RDWG') {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n\r\n        drawLegend({\r\n          legendData: drugClassesBars,\r\n          context: ctx,\r\n          factor: drugClassesFactor,\r\n          mobileFactor,\r\n          yPosition: 670,\r\n          xSpace: 208\r\n        });\r\n      } else if (card.id === 'GD') {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n\r\n        drawLegend({\r\n          legendData: genotypesForFilter,\r\n          context: ctx,\r\n          factor: genotypesFactor,\r\n          mobileFactor,\r\n          yPosition: 670,\r\n          isGenotype: true,\r\n          xSpace: 87\r\n        });\r\n      } else if (card.id === 'CERDT') {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n\r\n        ctx.fillStyle = 'black';\r\n        ctx.fillText('GENES:', 98, 675);\r\n        drawLegend({\r\n          legendData: drugClassesBars,\r\n          context: ctx,\r\n          factor: drugClassesFactor,\r\n          mobileFactor,\r\n          yPosition: 695,\r\n          xSpace: 208\r\n        });\r\n\r\n        ctx.fillStyle = 'black';\r\n        ctx.fillText('GENOTYPES:', 98, 1310);\r\n        drawLegend({\r\n          legendData: genotypesForFilter,\r\n          context: ctx,\r\n          factor: genotypesFactor,\r\n          mobileFactor,\r\n          yPosition: 1330,\r\n          isGenotype: true,\r\n          xSpace: 87\r\n        });\r\n      } else if (card.id === 'KO') {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n\r\n        drawLegend({\r\n          legendData: colorsForKODiversityGraph,\r\n          context: ctx,\r\n          factor: 5,\r\n          mobileFactor,\r\n          yPosition: 670,\r\n          xSpace: 330\r\n        });\r\n      } else if (card.id === 'CVM') {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n\r\n        drawLegend({\r\n          legendData: Object.keys(convergenceColourPallete),\r\n          context: ctx,\r\n          factor: variablesFactor,\r\n          mobileFactor,\r\n          yPosition: 670,\r\n          xSpace: 270,\r\n          isVariable: true\r\n        });\r\n      }\r\n\r\n      const base64 = canvas.toDataURL();\r\n      await download(base64, `AMRnet - ${globalOverviewLabel.fullLabel} - ${card.title}.png`);\r\n    } catch {\r\n      setShowAlert(true);\r\n    } finally {\r\n      handleLoading(card.collapse, false);\r\n    }\r\n  }\r\n\r\n  function handleLoading(collapse, value) {\r\n    setCharLoadings({ ...chartLoadings, [collapse]: value });\r\n  }\r\n\r\n  function handleCloseAlert() {\r\n    setShowAlert(false);\r\n  }\r\n\r\n  function handleExpandClick(event, key) {\r\n    dispatch(setCollapse({ key, value: !collapses[key] }));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.cardsWrapper}>\r\n      {getOrganismCards().map((card, index) => {\r\n        return (\r\n          <Card key={`graph-card-${index}`} className={classes.card}>\r\n            <CardActions\r\n              disableSpacing\r\n              className={classes.cardActions}\r\n              onClick={(event) => handleExpandClick(event, card.collapse)}\r\n              style={{ cursor: isTouchDevice() ? 'default' : 'pointer' }}\r\n            >\r\n              <div className={classes.titleWrapper}>\r\n                {card.icon}\r\n                <div className={classes.title}>\r\n                  <Typography fontSize=\"18px\" fontWeight=\"500\">\r\n                    {card.title}\r\n                  </Typography>\r\n                  {collapses[card.collapse] && (\r\n                    <Typography fontSize=\"10px\" component=\"span\">\r\n                      {card.description.map((d, i) => (\r\n                        <div key={`description-${i}`}>{d}</div>\r\n                      ))}\r\n                    </Typography>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className={classes.actionsWrapper}>\r\n                {collapses[card.collapse] && (\r\n                  <Tooltip title=\"Download Chart as PNG\" placement=\"top\">\r\n                    <span>\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        onClick={(event) => handleClickDownload(event, card)}\r\n                        disabled={organism === 'none' || chartLoadings[card.collapse]}\r\n                      >\r\n                        {chartLoadings[card.collapse] ? <CircularProgress color=\"primary\" size={24} /> : <CameraAlt />}\r\n                      </IconButton>\r\n                    </span>\r\n                  </Tooltip>\r\n                )}\r\n                <IconButton>{collapses[card.collapse] ? <ExpandLess /> : <ExpandMore />}</IconButton>\r\n              </div>\r\n            </CardActions>\r\n            <Collapse in={collapses[card.collapse]} timeout=\"auto\">\r\n              {card.collapse === 'frequencies' && <FrequenciesGraph />}\r\n              {card.collapse === 'drugResistance' && <DrugResistanceGraph />}\r\n              {card.collapse === 'determinants' && <DeterminantsGraph />}\r\n              {card.collapse === 'distribution' && <DistributionGraph />}\r\n              {card.collapse === 'trendsKP' && <TrendsKPGraph />}\r\n              {card.collapse === 'KODiversity' && <KODiversityGraph />}\r\n              {card.collapse === 'convergence' && <ConvergenceGraph />}\r\n            </Collapse>\r\n          </Card>\r\n        );\r\n      })}\r\n      <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleCloseAlert}>\r\n        <Alert onClose={handleCloseAlert} severity=\"error\" sx={{ width: '100%' }}>\r\n          Something went wrong with the download, please try again later.\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n","// Drug rules for Salmonella, where the column has to have one of the values to validate the rule. For frequencies and\r\n// drug resistance graphs\r\nexport const drugRulesST = [\r\n  { key: 'Ampicillin', columnID: 'blaTEM-1D', values: ['1'] },\r\n  { key: 'Azithromycin', columnID: 'azith_pred_pheno', values: ['AzithR'] },\r\n  { key: 'Chloramphenicol', columnID: 'chloramphenicol_category', values: ['ChlR'] },\r\n  // { key: 'Co-trimoxazole', columnID: 'co_trim', values: ['1'] },\r\n  { key: 'Trimethoprim-sulfamethoxazole', columnID: 'co_trim', values: ['1'] },\r\n  // { key: 'ESBL', columnID: 'ESBL_category', values: ['ESBL'] },\r\n  { key: 'Ceftriaxone', columnID: 'ESBL_category', values: ['ESBL'] },\r\n  // { key: 'Fluoroquinolones (CipNS)', columnID: 'cip_pred_pheno', values: ['CipR', 'CipI'] },\r\n  { key: 'Ciprofloxacin NS', columnID: 'cip_pred_pheno', values: ['CipNS'] },\r\n  { key: 'Sulphonamides', columnID: 'sul_any', values: ['1'] },\r\n  { key: 'Susceptible', columnID: 'amr_category', values: ['No AMR detected'] },\r\n  { key: 'Tetracyclines', columnID: 'tetracycline_category', values: ['TetR'] },\r\n  { key: 'Trimethoprim', columnID: 'dfra_any', values: ['1'] }\r\n];\r\n\r\nexport const drugRulesForDrugResistanceGraphST = [\r\n  { key: 'MDR', columnID: 'MDR', values: ['MDR'] },\r\n  { key: 'XDR', columnID: 'XDR', values: ['XDR'] }\r\n];\r\n\r\n// Drug rules for Klebsiella, where the column has to be any value other than '-' to validate the rule. For frequencies\r\n// and drug resistance graphs\r\nexport const drugRulesKP = [\r\n  { key: 'Aminoglycosides', columnIDs: ['AGly_acquired'] },\r\n  { key: 'Carbapenems', columnIDs: ['Bla_Carb_acquired'] },\r\n  { key: '3rd gen cephalosporins (3GCs)', columnIDs: ['Bla_ESBL_acquired'] },\r\n  { key: '3rd gen cephalosporins (3GCs) + β-lactamase inhibitors', columnIDs: ['Bla_ESBL_inhR_acquired'] },\r\n  { key: 'Colistin', columnIDs: ['Col_acquired', 'Col_mutations'] },\r\n  { key: 'Fluoroquinolones', columnIDs: ['Flq_acquired', 'Flq_mutations'] },\r\n  { key: 'Fosfomycin', columnIDs: ['Fcyn_acquired'] },\r\n  { key: 'Penicillins', columnIDs: ['Bla_chr'] },\r\n  { key: 'β-lactamase inhibitors', columnIDs: ['Bla_inhR_acquired'] },\r\n  { key: 'Phenicols', columnIDs: ['Phe_acquired'] },\r\n  { key: 'Sulfonamides', columnIDs: ['Sul_acquired'] },\r\n  { key: 'Tetracycline', columnIDs: ['Tet_acquired'] },\r\n  { key: 'Tigecycline', columnIDs: ['Tgc_acquired'] },\r\n  { key: 'Trimethoprim', columnIDs: ['Tmt_acquired'] }\r\n];\r\n\r\n// Salmonella drug classes rules for determinants graph\r\nexport const drugClassesRulesST = {\r\n  Ampicillin: [\r\n    {\r\n      name: 'blaTEM-1D',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'blaTEM-1D', value: '1' }]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'blaTEM-1D', value: '0' }]\r\n    }\r\n  ],\r\n  Azithromycin: [\r\n    {\r\n      name: 'acrB_R717Q + acrB_R717L',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'azith_pred_pheno', value: 'AzithR' },\r\n        { columnID: 'acrB_R717Q', value: '1' },\r\n        { columnID: 'acrB_R717L', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'acrB_R717Q',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'azith_pred_pheno', value: 'AzithR' },\r\n        { columnID: 'acrB_R717Q', value: '1' },\r\n        { columnID: 'acrB_R717L', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'acrB_R717L',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'azith_pred_pheno', value: 'AzithR' },\r\n        { columnID: 'acrB_R717L', value: '1' },\r\n        { columnID: 'acrB_R717Q', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'azith_pred_pheno', value: 'AzithS' }]\r\n    }\r\n  ],\r\n  Chloramphenicol: [\r\n    {\r\n      name: 'catA1 + cmlA',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'chloramphenicol_category', value: 'ChlR' },\r\n        { columnID: 'catA1', value: '1' },\r\n        { columnID: 'cmlA', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'catA1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'chloramphenicol_category', value: 'ChlR' },\r\n        { columnID: 'catA1', value: '1' },\r\n        { columnID: 'cmlA', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'cmlA',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'chloramphenicol_category', value: 'ChlR' },\r\n        { columnID: 'cmlA', value: '1' },\r\n        { columnID: 'catA1', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'chloramphenicol_category', value: 'ChlS' }]\r\n    }\r\n  ],\r\n  // 'Co-trimoxazole': [\r\n  'Trimethoprim-sulfamethoxazole': [\r\n    {\r\n      name: 'dfrA7 + dfrA14 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA7 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA7 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA7 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA14 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '0' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA14 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '0' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA14 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '0' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA1 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA1', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA1 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA1', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA1', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA5 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA5', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA5 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA5', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA5 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA5', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA15 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA15', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA15 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA15', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA15 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA15', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA17 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA17', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA17 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA17', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA17 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA17', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA18 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA18', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA18 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA18', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA18 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA18', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'co_trim', value: '0' }]\r\n    }\r\n  ],\r\n  // ESBL: [\r\n  Ceftriaxone: [\r\n    {\r\n      name: 'blaCTX-M-15',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'ESBL_category', value: 'ESBL' },\r\n        { columnID: 'blaCTX-M-15_23', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'blaOXA-7',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'ESBL_category', value: 'ESBL' },\r\n        { columnID: 'blaOXA-7', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'blaSHV-12',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'ESBL_category', value: 'ESBL' },\r\n        { columnID: 'blaSHV-12', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'blaCTX-M-55',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'ESBL_category', value: 'ESBL' },\r\n        { columnID: 'blaCTX-M-55', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'ESBL_category', value: 'Non-ESBL' }]\r\n    }\r\n  ],\r\n  // 'Fluoroquinolones (CipNS)': [\r\n  'Ciprofloxacin NS': [\r\n    {\r\n      name: '3_QRDR + qnrS (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '3_QRDR + qnrS' }]\r\n    },\r\n    {\r\n      name: '3_QRDR + qnrB (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '3_QRDR + qnrB' }]\r\n    },\r\n    {\r\n      name: '3_QRDR (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '3_QRDR' }]\r\n    },\r\n    {\r\n      name: '2_QRDR + qnrS (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '2_QRDR + qnrS' }]\r\n    },\r\n    {\r\n      name: '2_QRDR + qnrB (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '2_QRDR + qnrB' }]\r\n    },\r\n    {\r\n      name: '2_QRDR (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '2_QRDR' }]\r\n    },\r\n    {\r\n      name: '1_QRDR + qnrS (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '1_QRDR + qnrS' }]\r\n    },\r\n    {\r\n      name: '1_QRDR + qnrB (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '1_QRDR + qnrB' }]\r\n    },\r\n    {\r\n      name: '1_QRDR (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '1_QRDR' }]\r\n    },\r\n    {\r\n      name: '0_QRDR + qnrS (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '0_QRDR + qnrS' }]\r\n    },\r\n    {\r\n      name: '0_QRDR + qnrB (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '0_QRDR + qnrB' }]\r\n    },\r\n    {\r\n      name: '0_QRDR + qnrS + qnrD (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '0_QRDR + qnrS + qnrD' }]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '0_QRDR' }]\r\n    }\r\n  ],\r\n  Sulphonamides: [\r\n    {\r\n      name: 'sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'sul_any', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'sul_any', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'sul_any', value: '1' },\r\n        { columnID: 'sul2', value: '1' },\r\n        { columnID: 'sul1', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'sul_any', value: '0' }]\r\n    }\r\n  ],\r\n  Tetracyclines: [\r\n    {\r\n      name: 'tetA(A)',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'tetracycline_category', value: 'TetR' },\r\n        { columnID: 'tetA(A)', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'tetA(B)',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'tetracycline_category', value: 'TetR' },\r\n        { columnID: 'tetA(B)', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'tetA(C)',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'tetracycline_category', value: 'TetR' },\r\n        { columnID: 'tetA(C)', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'tetA(D)',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'tetracycline_category', value: 'TetR' },\r\n        { columnID: 'tetA(D)', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'tetracycline_category', value: 'TetS' }]\r\n    }\r\n  ],\r\n  Trimethoprim: [\r\n    {\r\n      name: 'dfrA7 + dfrA14',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA7',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA14',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA1', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA5',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA5', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA15',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA15', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA17',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA17', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA18',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA18', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'dfra_any', value: '0' }]\r\n    }\r\n  ]\r\n};\r\n\r\n// Klebsiella drug classes rules for determinants graph\r\nexport const drugClassesRulesKP = {\r\n  Carbapenems: 'Bla_Carb_acquired',\r\n  ESBL: 'Bla_ESBL_acquired'\r\n};\r\n","import { drugRulesForDrugResistanceGraphST, drugRulesKP } from '../../util/drugClassesRules';\r\nimport { drugClassesRulesST, drugClassesRulesKP, drugRulesST } from '../../util/drugClassesRules';\r\n\r\n// This filter is called after either dataset, initialYear, finalYear or country changes and if reset button is pressed.\r\n// And it returns the data filtered by the variables said before, also the list of unique genotypes, count of genotypes\r\n// and count of genomes.\r\nexport function filterData({ data, dataset, actualTimeInitial, actualTimeFinal, organism, actualCountry }) {\r\n  const checkDataset = (item) => dataset === 'All' || item.TRAVEL === dataset.toLowerCase();\r\n  const checkTime = (item) => {\r\n    return item.DATE >= actualTimeInitial && item.DATE <= actualTimeFinal;\r\n  };\r\n\r\n  const newData = data.filter((x) => checkDataset(x) && checkTime(x));\r\n  const genotypes = [...new Set(newData.map((x) => x.GENOTYPE))];\r\n\r\n  if (organism === 'typhi') {\r\n    genotypes.sort((a, b) => a.localeCompare(b));\r\n  } else {\r\n    genotypes.sort((a, b) => a - b);\r\n  }\r\n\r\n  let genomesCount = newData.length;\r\n  let genotypesCount = genotypes.length;\r\n  let listPMID = [];\r\n\r\n  if (actualCountry !== 'All') {\r\n    const countryData = newData.filter((x) => getCountryDisplayName(x.COUNTRY_ONLY) === actualCountry);\r\n    genomesCount = countryData.length;\r\n    listPMID = [...new Set(countryData.map((x) => x.PMID))];\r\n\r\n    const countryGenotypes = [...new Set(countryData.map((x) => x.GENOTYPE))];\r\n    genotypesCount = countryGenotypes.length;\r\n  }\r\n\r\n  return {\r\n    data: newData,\r\n    genotypes,\r\n    genomesCount,\r\n    genotypesCount,\r\n    listPMID\r\n  };\r\n}\r\n\r\n// Adjust the country names to its correct name\r\nexport function getCountryDisplayName(country) {\r\n  switch (country) {\r\n    case 'Democratic Republic of the Congo':\r\n      return 'Dem. Rep. Congo';\r\n    case 'Central African Republic':\r\n      return 'Central African Rep.';\r\n    case 'Ivory Coast':\r\n    case \"Cote d'Ivoire\":\r\n      return \"Côte d'Ivoire\";\r\n    case 'East Timor':\r\n      return 'Timor-Leste';\r\n    case 'State of Palestine':\r\n      return 'Palestine';\r\n    case 'Dominican Republic':\r\n      return 'Dominican Rep.';\r\n    case 'Viet Nam':\r\n      return 'Vietnam';\r\n    case 'USA':\r\n      return 'United States of America';\r\n    case 'Cape Verde':\r\n      return 'Cabo Verde';\r\n    case 'Turks and Caicos Islands':\r\n      return 'Turks and Caicos Is.';\r\n    case 'United Kingdom (England/Wales/N. Ireland)':\r\n    case 'United Kingdom (Scotland)':\r\n    case 'UK':\r\n      return 'United Kingdom';\r\n    case 'The Gambia':\r\n      return 'Gambia';\r\n    default:\r\n      return country;\r\n  }\r\n}\r\n\r\n// Get specific drug count, percentage and al its types for the map component\r\nfunction getMapStatsData({ countryData, columnKey, statsKey }) {\r\n  const data = {\r\n    items: [],\r\n    percentage: 0,\r\n    count: 0\r\n  };\r\n\r\n  const columnData = [...new Set(countryData.map((x) => x[columnKey]))];\r\n  data.items = columnData.map((name) => {\r\n    const count = countryData.filter((x) => x[columnKey] === name).length;\r\n    const percentage = Number(((count / countryData.length) * 100).toFixed(2));\r\n\r\n    if (name === statsKey) {\r\n      data.count = count;\r\n      data.percentage = percentage;\r\n    }\r\n    return { name, count, percentage };\r\n  });\r\n\r\n  if (statsKey === '-') {\r\n    data.count = countryData.length - data.count;\r\n    data.percentage = Number(((data.count / countryData.length) * 100).toFixed(2));\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n// Get country data for map component, the data includes the name, count and drug stats\r\nexport function getMapData({ data, countries, organism }) {\r\n  const mapData = countries.map((country) => {\r\n    const stats = {\r\n      GENOTYPE: {\r\n        items: [],\r\n        count: 0\r\n      }\r\n    };\r\n\r\n    const countryData = data.filter((x) => getCountryDisplayName(x.COUNTRY_ONLY) === country);\r\n\r\n    if (countryData.length === 0) {\r\n      return {};\r\n    }\r\n\r\n    const genotypes = [...new Set(countryData.map((x) => x.GENOTYPE))];\r\n    stats.GENOTYPE.count = genotypes.length;\r\n    stats.GENOTYPE.items = genotypes.map((genotype) => {\r\n      return {\r\n        name: genotype,\r\n        count: countryData.filter((x) => x.GENOTYPE === genotype).length\r\n      };\r\n    });\r\n    stats.GENOTYPE.items.sort((a, b) => (a.count <= b.count ? 1 : -1));\r\n\r\n    if (organism === 'typhi') {\r\n      stats.H58 = getMapStatsData({ countryData, columnKey: 'GENOTYPE_SIMPLE', statsKey: 'H58' });\r\n      stats.MDR = getMapStatsData({ countryData, columnKey: 'MDR', statsKey: 'MDR' });\r\n      stats.XDR = getMapStatsData({ countryData, columnKey: 'XDR', statsKey: 'XDR' });\r\n      stats.AzithR = getMapStatsData({ countryData, columnKey: 'azith_pred_pheno', statsKey: 'AzithR' });\r\n      stats.Susceptible = getMapStatsData({ countryData, columnKey: 'amr_category', statsKey: 'No AMR detected' });\r\n      stats.CipR = getMapStatsData({ countryData, columnKey: 'cip_pred_pheno', statsKey: 'CipR' });\r\n      stats.CipNS = getMapStatsData({ countryData, columnKey: 'cip_pred_pheno', statsKey: 'CipNS' });\r\n    } else {\r\n      stats.Susceptible = getMapStatsData({ countryData, columnKey: 'num_resistance_classes', statsKey: '0' });\r\n      stats.ESBL = getMapStatsData({ countryData, columnKey: 'Bla_ESBL_acquired', statsKey: '-' });\r\n      stats.Carb = getMapStatsData({ countryData, columnKey: 'Bla_Carb_acquired', statsKey: '-' });\r\n    }\r\n\r\n    return {\r\n      name: country,\r\n      count: countryData.length,\r\n      stats\r\n    };\r\n  });\r\n\r\n  return mapData;\r\n}\r\n\r\n// Get data for distribution and drug resistance graphs and, if the organism is klebsiella, the list of unique genotypes\r\n// for the pallete and legend of the distribution graph\r\nexport function getYearsData({ data, years, organism, getUniqueGenotypes = false }) {\r\n  const drugsData = [];\r\n  const genotypesAndDrugsData = {};\r\n  let uniqueGenotypes = [];\r\n  const genotypesAndDrugsDataUniqueGenotypes = {};\r\n\r\n  if (organism === 'klebe') {\r\n    Object.keys(drugClassesRulesKP).forEach((key) => {\r\n      genotypesAndDrugsData[key] = [];\r\n      genotypesAndDrugsDataUniqueGenotypes[key] = [];\r\n    });\r\n  }\r\n\r\n  const genotypesData = years.map((year) => {\r\n    const yearData = data.filter((x) => x.DATE === year);\r\n    const response = {\r\n      name: year.toString(),\r\n      count: yearData.length\r\n    };\r\n    let stats = {};\r\n\r\n    if (yearData.length > 0) {\r\n      const genotypes = [...new Set(yearData.map((x) => x.GENOTYPE))];\r\n\r\n      stats = genotypes.reduce((accumulator, currentValue) => {\r\n        const count = yearData.filter((x) => x.GENOTYPE === currentValue).length;\r\n        accumulator[currentValue] = count;\r\n\r\n        return accumulator;\r\n      }, {});\r\n\r\n      if (yearData.length >= 10) {\r\n        const drugStats = {};\r\n\r\n        if (organism === 'typhi') {\r\n          drugRulesST.forEach((rule) => {\r\n            const drugData = yearData.filter((x) => rule.values.includes(x[rule.columnID]));\r\n            drugStats[rule.key] = drugData.length;\r\n\r\n            if (rule.key === 'Ciprofloxacin NS') {\r\n              drugStats['Ciprofloxacin R'] = yearData.filter((x) => x[rule.columnID] === 'CipR').length;\r\n              drugStats['Ciprofloxacin NS'] = drugStats['Ciprofloxacin NS'] + drugStats['Ciprofloxacin R'];\r\n            }\r\n          });\r\n\r\n          drugRulesForDrugResistanceGraphST.forEach((rule) => {\r\n            const drugData = yearData.filter((x) => rule.values.includes(x[rule.columnID]));\r\n            drugStats[rule.key] = drugData.length;\r\n          });\r\n        } else {\r\n          // For drugsData\r\n          drugRulesKP.forEach((rule) => {\r\n            const drugData = yearData.filter((x) => rule.columnIDs.some((columnID) => x[columnID] !== '-'));\r\n            drugStats[rule.key] = drugData.length;\r\n          });\r\n\r\n          const susceptible = yearData.filter((x) => x.num_resistance_classes === '0');\r\n          drugStats['Susceptible'] = susceptible.length;\r\n\r\n          // For genotypesAndDrugsData\r\n          Object.keys(drugClassesRulesKP).forEach((key) => {\r\n            const filteredGenotypes = Object.fromEntries(\r\n              Object.entries(stats)\r\n                .sort(([, a], [, b]) => b - a)\r\n                .slice(0, 10)\r\n            );\r\n\r\n            genotypesAndDrugsDataUniqueGenotypes[key].push.apply(\r\n              genotypesAndDrugsDataUniqueGenotypes[key],\r\n              Object.keys(filteredGenotypes)\r\n            );\r\n\r\n            const drugClass = getKPDrugClassData({ drugKey: key, dataToFilter: yearData });\r\n\r\n            const item = { ...response, ...filteredGenotypes, ...drugClass, totalCount: response.count };\r\n            delete item.count;\r\n\r\n            genotypesAndDrugsData[key].push(item);\r\n          });\r\n        }\r\n\r\n        drugsData.push({ ...response, ...drugStats });\r\n      }\r\n    }\r\n\r\n    if (organism === 'klebe' && getUniqueGenotypes) {\r\n      const sortedStats = Object.fromEntries(\r\n        Object.entries(stats)\r\n          .sort(([, a], [, b]) => b - a)\r\n          .slice(0, 20)\r\n      );\r\n      uniqueGenotypes = uniqueGenotypes.concat(Object.keys(sortedStats));\r\n\r\n      return {\r\n        ...response,\r\n        ...sortedStats\r\n      };\r\n    }\r\n\r\n    return {\r\n      ...response,\r\n      ...stats\r\n    };\r\n  });\r\n\r\n  if (getUniqueGenotypes) {\r\n    uniqueGenotypes = [...new Set(uniqueGenotypes.map((x) => x))];\r\n    uniqueGenotypes.sort((a, b) => a - b);\r\n  }\r\n\r\n  Object.keys(genotypesAndDrugsDataUniqueGenotypes).forEach((key) => {\r\n    const unique = [...new Set(genotypesAndDrugsDataUniqueGenotypes[key])];\r\n\r\n    genotypesAndDrugsData[key].forEach((item) => {\r\n      const keys = Object.keys(item);\r\n      const filtered = unique.filter((x) => !keys.includes(x));\r\n      filtered.forEach((x) => {\r\n        item[x] = 0;\r\n      });\r\n    });\r\n  });\r\n\r\n  return { genotypesData: genotypesData.filter((x) => x.count > 0), drugsData, uniqueGenotypes, genotypesAndDrugsData };\r\n}\r\n\r\n// Get data for frequencies and determinants graphs\r\nexport function getGenotypesData({ data, genotypes, organism }) {\r\n  const genotypesDrugClassesData = {};\r\n\r\n  if (organism === 'typhi') {\r\n    drugRulesST.forEach((drug) => {\r\n      if (drug.key !== 'Susceptible') {\r\n        genotypesDrugClassesData[drug.key] = [];\r\n      }\r\n    });\r\n  } else {\r\n    Object.keys(drugClassesRulesKP).forEach((key) => {\r\n      genotypesDrugClassesData[key] = [];\r\n    });\r\n  }\r\n\r\n  const genotypesDrugsData = genotypes.map((genotype) => {\r\n    const genotypeData = data.filter((x) => x.GENOTYPE === genotype);\r\n\r\n    const response = {\r\n      name: genotype,\r\n      totalCount: genotypeData.length,\r\n      resistantCount: 0\r\n    };\r\n\r\n    const drugClassResponse = {\r\n      name: genotype,\r\n      totalCount: genotypeData.length,\r\n      resistantCount: 0\r\n    };\r\n\r\n    if (organism === 'typhi') {\r\n      drugRulesST.forEach((rule) => {\r\n        const drugData = genotypeData.filter((x) => rule.values.includes(x[rule.columnID]));\r\n        response[rule.key] = drugData.length;\r\n\r\n        if (rule.key === 'Ciprofloxacin NS') {\r\n          response['Ciprofloxacin R'] = genotypeData.filter((x) => x[rule.columnID] === 'CipR').length;\r\n          response['Ciprofloxacin NS'] = response['Ciprofloxacin NS'] + response['Ciprofloxacin R'];\r\n        }\r\n\r\n        if (rule.key !== 'Susceptible') {\r\n          const drugClass = { ...drugClassResponse };\r\n\r\n          drugClassesRulesST[rule.key].forEach((classRule) => {\r\n            const classRuleName = classRule.name;\r\n\r\n            drugClass[classRuleName] = genotypeData.filter((x) => {\r\n              return classRule.rules.every((r) => x[r.columnID] === r.value);\r\n            }).length;\r\n\r\n            if (classRule.susceptible) {\r\n              drugClass.resistantCount = drugClass.totalCount - drugClass[classRuleName];\r\n            }\r\n          });\r\n\r\n          genotypesDrugClassesData[rule.key].push(drugClass);\r\n        }\r\n      });\r\n    } else {\r\n      drugRulesKP.forEach((rule) => {\r\n        const drugData = genotypeData.filter((x) => rule.columnIDs.some((columnID) => x[columnID] !== '-'));\r\n        response[rule.key] = drugData.length;\r\n      });\r\n\r\n      const susceptible = genotypeData.filter((x) => x.num_resistance_classes === '0');\r\n      response['Susceptible'] = susceptible.length;\r\n\r\n      Object.keys(drugClassesRulesKP).forEach((key) => {\r\n        const drugClass = { ...drugClassResponse, ...getKPDrugClassData({ drugKey: key, dataToFilter: genotypeData }) };\r\n        genotypesDrugClassesData[key].push(drugClass);\r\n      });\r\n    }\r\n\r\n    response.resistantCount = response.totalCount - response['Susceptible'];\r\n    return response;\r\n  });\r\n\r\n  genotypesDrugsData.sort((a, b) => b.resistantCount - a.resistantCount);\r\n  Object.keys(genotypesDrugClassesData).forEach((key) => {\r\n    genotypesDrugClassesData[key].sort((a, b) => b.resistantCount - a.resistantCount);\r\n    genotypesDrugClassesData[key] = genotypesDrugClassesData[key].slice(0, 10);\r\n  });\r\n\r\n  return { genotypesDrugsData, genotypesDrugClassesData };\r\n}\r\n\r\nconst KO_MDR = ['ST258', 'ST307', 'ST340', 'ST512', 'ST11', 'ST15'];\r\nconst KO_HV = ['ST23', 'ST86', 'ST65', 'ST25'];\r\n\r\nexport function getKODiversityData({ data }) {\r\n  const KODiversityData = {\r\n    K_locus: [],\r\n    O_locus: []\r\n  };\r\n\r\n  Object.keys(KODiversityData).forEach((key) => {\r\n    const values = [...new Set(data.map((x) => x[key]))];\r\n\r\n    const keyData = values.map((value) => {\r\n      const diversityData = data.filter((x) => x[key] === value);\r\n      const MDR = diversityData.filter((x) => KO_MDR.includes(x.GENOTYPE));\r\n      const Hv = diversityData.filter((x) => KO_HV.includes(x.GENOTYPE));\r\n      const Carbapenems = diversityData.filter((x) => x.Bla_Carb_acquired !== '-');\r\n      const ESBL = diversityData.filter((x) => x.Bla_ESBL_acquired !== '-');\r\n      const aerobactin = diversityData.filter((x) => x.Aerobactin !== '-');\r\n      const rmpADC = diversityData.filter((x) => !['-', '-,-,-'].includes(x.RmpADC));\r\n      const neither = diversityData.filter(\r\n        (x) =>\r\n          !KO_MDR.includes(x.GENOTYPE) &&\r\n          !KO_HV.includes(x.GENOTYPE) &&\r\n          x.Bla_Carb_acquired === '-' &&\r\n          x.Bla_ESBL_acquired === '-' &&\r\n          x.Aerobactin === '-' &&\r\n          ['-', '-,-,-'].includes(x.RmpADC)\r\n      );\r\n\r\n      return {\r\n        name: value,\r\n        count: diversityData.length,\r\n        MDR: MDR.length,\r\n        Hv: Hv.length,\r\n        Carbapenems: Carbapenems.length,\r\n        ESBL: ESBL.length,\r\n        'Aerobactin(iuc)': aerobactin.length,\r\n        rmpADC: rmpADC.length,\r\n        neither: neither.length\r\n      };\r\n    });\r\n\r\n    KODiversityData[key] = keyData.filter((x) => !x.name.includes('unknown'));\r\n    const unknownData = keyData.filter((x) => x.name.includes('unknown'));\r\n\r\n    KODiversityData[key].push({\r\n      name: 'unknown',\r\n      count: unknownData.reduce((total, obj) => obj.count + total, 0),\r\n      MDR: unknownData.reduce((total, obj) => obj.MDR + total, 0),\r\n      Hv: unknownData.reduce((total, obj) => obj.Hv + total, 0),\r\n      Carbapenems: unknownData.reduce((total, obj) => obj.Carbapenems + total, 0),\r\n      ESBL: unknownData.reduce((total, obj) => obj.ESBL + total, 0),\r\n      'Aerobactin(iuc)': unknownData.reduce((total, obj) => obj['Aerobactin(iuc)'] + total, 0),\r\n      rmpADC: unknownData.reduce((total, obj) => obj.rmpADC + total, 0),\r\n      neither: unknownData.reduce((total, obj) => obj.neither + total, 0)\r\n    });\r\n\r\n    KODiversityData[key].sort((a, b) => b.count - a.count);\r\n    KODiversityData[key] = KODiversityData[key].slice(0, 20);\r\n  });\r\n\r\n  return KODiversityData;\r\n}\r\n\r\nfunction getVariableValue(dataItem, variable) {\r\n  if (variable === 'COUNTRY_ONLY') {\r\n    return getCountryDisplayName(dataItem[variable]);\r\n  }\r\n\r\n  return dataItem[variable];\r\n}\r\n\r\nexport function getConvergenceData({ data, groupVariable, colourVariable }) {\r\n  const convergenceData = [];\r\n  let variablesCombinations = [];\r\n  let colourVariables = [];\r\n\r\n  if (groupVariable === colourVariable) {\r\n    variablesCombinations = [...new Set(data.map((x) => getVariableValue(x, colourVariable)))];\r\n    colourVariables = variablesCombinations;\r\n  } else {\r\n    variablesCombinations = [\r\n      ...new Set(data.map((x) => `${getVariableValue(x, groupVariable)} - ${getVariableValue(x, colourVariable)}`))\r\n    ];\r\n    colourVariables = [...new Set(data.map((x) => getVariableValue(x, colourVariable)))];\r\n  }\r\n\r\n  variablesCombinations.forEach((combination) => {\r\n    let combinedData = [];\r\n\r\n    if (groupVariable === colourVariable) {\r\n      combinedData = data.filter((x) => getVariableValue(x, groupVariable) === combination);\r\n    } else {\r\n      const variables = combination.split(' - ');\r\n      combinedData = data.filter(\r\n        (x) =>\r\n          getVariableValue(x, groupVariable) === variables[0] && getVariableValue(x, colourVariable) === variables[1]\r\n      );\r\n    }\r\n\r\n    const count = combinedData.length;\r\n\r\n    const splitCombination = combination.split(' - ');\r\n    const colorLabel = splitCombination.length > 1 ? splitCombination[1] : combination;\r\n    convergenceData.push({\r\n      name: combination,\r\n      colorLabel,\r\n      z: count,\r\n      x: (combinedData.reduce((total, obj) => Number(obj.virulence_score) + total, 0) / count).toFixed(2),\r\n      y: (combinedData.reduce((total, obj) => Number(obj.resistance_score) + total, 0) / count).toFixed(2)\r\n    });\r\n  });\r\n\r\n  if (colourVariable === 'YEAR') {\r\n    colourVariables.sort((a, b) => b - a);\r\n  } else {\r\n    colourVariables.sort((a, b) => a.localeCompare(b));\r\n  }\r\n\r\n  return { data: convergenceData, colourVariables };\r\n}\r\n\r\n// Check if a gene has a susceptible character for klebesiella drug rules for determinants graph\r\nfunction isSusceptible(gene) {\r\n  return gene.includes('*') || gene.includes('^') || gene.includes('?');\r\n}\r\n\r\n// Filter all genes for a specific drug class from Klebsiella and return the final object\r\nfunction getKPDrugClassData({ drugKey, dataToFilter }) {\r\n  const drugClass = {};\r\n  const columnID = drugClassesRulesKP[drugKey];\r\n\r\n  const resistantData = dataToFilter.filter((x) => {\r\n    if (x[columnID] === '-') {\r\n      return false;\r\n    }\r\n\r\n    const genes = x[columnID].split(';');\r\n\r\n    if (genes.every((g) => isSusceptible(g))) {\r\n      return false;\r\n    }\r\n\r\n    if (genes.length === 1) {\r\n      if (genes[0] in drugClass) {\r\n        drugClass[genes[0]] += 1;\r\n      } else {\r\n        drugClass[genes[0]] = 1;\r\n      }\r\n    } else {\r\n      const resistantGenes = genes.filter((g) => !isSusceptible(g));\r\n      resistantGenes.sort((a, b) => a.localeCompare(b));\r\n\r\n      const name = resistantGenes.join(';').replaceAll(';', ' + ');\r\n\r\n      if (name in drugClass) {\r\n        drugClass[name] += 1;\r\n      } else {\r\n        drugClass[name] = 1;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  drugClass['None'] = dataToFilter.length - resistantData.length;\r\n  drugClass.resistantCount = resistantData.length;\r\n\r\n  return drugClass;\r\n}\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  resetButton: {\r\n    position: 'fixed',\r\n    right: 16,\r\n    bottom: 0,\r\n    padding: '16px',\r\n\r\n    '@media (max-width: 500px)': {\r\n      right: 8,\r\n      padding: '16px 8px'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { RestartAlt } from '@mui/icons-material';\r\nimport { useStyles } from './ResetButtonMUI';\r\nimport { Fab, Tooltip, useMediaQuery } from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { setActualTimeFinal, setActualTimeInitial, setCanGetData } from '../../../stores/slices/dashboardSlice';\r\nimport { setDataset, setMapView, setPosition } from '../../../stores/slices/mapSlice';\r\nimport { setActualCountry } from '../../../stores/slices/dashboardSlice';\r\nimport {\r\n  setCollapses,\r\n  setConvergenceColourPallete,\r\n  setConvergenceColourVariable,\r\n  setConvergenceGroupVariable,\r\n  setDeterminantsGraphDrugClass,\r\n  setDeterminantsGraphView,\r\n  setDistributionGraphView,\r\n  setDrugResistanceGraphView,\r\n  setFrequenciesGraphView,\r\n  setKODiversityGraphView,\r\n  setTrendsKPGraphDrugClass,\r\n  setTrendsKPGraphView\r\n} from '../../../stores/slices/graphSlice';\r\nimport { drugsKP, defaultDrugsForDrugResistanceGraphST } from '../../../util/drugs';\r\n\r\nexport const ResetButton = () => {\r\n  const classes = useStyles();\r\n  const matches500 = useMediaQuery('(max-width: 500px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const timeInitial = useAppSelector((state) => state.dashboard.timeInitial);\r\n  const timeFinal = useAppSelector((state) => state.dashboard.timeFinal);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n\r\n  function handleClick() {\r\n    dispatch(setCanGetData(false));\r\n    dispatch(\r\n      setCollapses({\r\n        determinants: false,\r\n        distribution: false,\r\n        drugResistance: false,\r\n        frequencies: false,\r\n        trendsKP: false,\r\n        KODiversity: false,\r\n        convergence: false\r\n      })\r\n    );\r\n\r\n    dispatch(setDataset('All'));\r\n    dispatch(setActualTimeInitial(timeInitial));\r\n    dispatch(setActualTimeFinal(timeFinal));\r\n    dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n    dispatch(setActualCountry('All'));\r\n\r\n    if (organism === 'typhi') {\r\n      dispatch(setMapView('CipNS'));\r\n      dispatch(setDeterminantsGraphDrugClass('Ciprofloxacin NS'));\r\n      dispatch(setDrugResistanceGraphView(defaultDrugsForDrugResistanceGraphST));\r\n    } else {\r\n      dispatch(setMapView('No. Samples'));\r\n      dispatch(setDrugResistanceGraphView(drugsKP));\r\n      dispatch(setDeterminantsGraphDrugClass('Carbapenems'));\r\n      dispatch(setTrendsKPGraphDrugClass('Carbapenems'));\r\n      dispatch(setTrendsKPGraphView('number'));\r\n      dispatch(setKODiversityGraphView('K_locus'));\r\n      dispatch(setConvergenceGroupVariable('COUNTRY_ONLY'));\r\n      dispatch(setConvergenceColourVariable('DATE'));\r\n      dispatch(setConvergenceColourPallete({}));\r\n    }\r\n\r\n    dispatch(setFrequenciesGraphView('percentage'));\r\n    dispatch(setDeterminantsGraphView('percentage'));\r\n    dispatch(setDistributionGraphView('number'));\r\n    dispatch(setCanGetData(true));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.resetButton}>\r\n      <Tooltip title=\"Reset Configurations\" placement=\"left\">\r\n        <span>\r\n          <Fab\r\n            color=\"primary\"\r\n            size={matches500 ? 'medium' : 'large'}\r\n            onClick={handleClick}\r\n            disabled={organism === 'none'}\r\n          >\r\n            <RestartAlt sx={{ color: '#fff' }} />\r\n          </Fab>\r\n        </span>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    }\r\n  },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    rowGap: '8px'\r\n  },\r\n  selectInput: {\r\n    fontSize: '16px !important',\r\n    fontWeight: '600 !important',\r\n    textAlign: 'start',\r\n    minWidth: '250px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '16px'\r\n    }\r\n  },\r\n  menuPaper: {\r\n    maxHeight: '350px !important'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useStyles } from './SelectCountryMUI';\r\nimport { Card, CardContent, MenuItem, Select, Typography } from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { setActualCountry } from '../../../stores/slices/dashboardSlice';\r\n\r\nexport const SelectCountry = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const actualCountry = useAppSelector((state) => state.dashboard.actualCountry);\r\n  const countriesForFilter = useAppSelector((state) => state.graph.countriesForFilter);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n\r\n  function handleChange(event) {\r\n    dispatch(setActualCountry(event.target.value));\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography variant=\"h5\" fontWeight={700}>\r\n          {`Now showing: ${\r\n            organism === 'none'\r\n              ? ''\r\n              : `${dataset} data from ${actualCountry === 'All' ? 'all countries' : actualCountry} from ${\r\n                  actualTimeInitial || 'year'\r\n                } to ${actualTimeFinal || 'year'}`\r\n          }`}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" fontWeight={500}>\r\n          Select country (or click map)\r\n        </Typography>\r\n        <Select\r\n          variant=\"standard\"\r\n          value={actualCountry}\r\n          onChange={handleChange}\r\n          inputProps={{ className: classes.selectInput }}\r\n          MenuProps={{ classes: { paper: classes.menuPaper, list: classes.selectMenu } }}\r\n          disabled={organism === 'none'}\r\n        >\r\n          <MenuItem value=\"All\">All</MenuItem>\r\n          {countriesForFilter.map((country, index) => {\r\n            return (\r\n              <MenuItem key={index + 'mapview'} value={country}>\r\n                {country}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","const countries = [\n  'Zimbabwe', 'Zambia', 'Yemen', 'Vietnam', 'Venezuela', 'Vatican', 'Vanuatu', 'Uzbekistan', 'Uruguay', 'Micronesia',\n  'Marshall Is.', 'N. Mariana Is.', 'U.S. Virgin Is.', 'Guam', 'American Samoa', 'Puerto Rico', 'United States of America',\n  'S. Geo. and the Is.', 'Br. Indian Ocean Ter.', 'Saint Helena', 'Pitcairn Is.', 'Anguilla', 'Falkland Is.', 'Cayman Is.',\n  'Bermuda', 'British Virgin Is.', 'Turks and Caicos Is.', 'Montserrat', 'Jersey', 'Guernsey', 'Isle of Man', 'United Kingdom',\n  'United Arab Emirates', 'Ukraine', 'Uganda', 'Turkmenistan', 'Turkey', 'Tunisia', 'Trinidad and Tobago', 'Tonga', 'Togo',\n  'Timor-Leste', 'Thailand', 'Tanzania', 'Tajikistan', 'Taiwan', 'Syria', 'Switzerland', 'Sweden', 'eSwatini', 'Suriname',\n  'S. Sudan', 'Sudan', 'Sri Lanka', 'Spain', 'South Korea', 'South Africa', 'Somalia', 'Somaliland', 'Solomon Is.', 'Slovakia',\n  'Slovenia', 'Singapore', 'Sierra Leone', 'Seychelles', 'Serbia', 'Senegal', 'Saudi Arabia', 'São Tomé and Principe', 'San Marino',\n  'Samoa', 'St. Vin. and Gren.', 'Saint Lucia', 'St. Kitts and Nevis', 'Rwanda', 'Russia', 'Romania', 'Qatar', 'Portugal',\n  'Poland', 'Philippines', 'Peru', 'Paraguay', 'Papua New Guinea', 'Panama', 'Palau', 'Pakistan', 'Oman', 'Norway', 'North Korea',\n  'Nigeria', 'Niger', 'Nicaragua', 'New Zealand', 'Niue', 'Cook Is.', 'Netherlands', 'Aruba', 'Curaçao', 'Nepal', \n  'Nauru', 'Namibia', 'Mozambique', 'Morocco', 'W. Sahara', 'Montenegro', 'Mongolia', 'Moldova', 'Monaco', 'Mexico', \n  'Mauritius', 'Mauritania', 'Malta', 'Mali', 'Maldives', 'Malaysia', 'Malawi', 'Madagascar', 'North Macedonia', 'Luxembourg', \n  'Lithuania', 'Liechtenstein', 'Libya', 'Liberia', 'Lesotho', 'Lebanon', 'Latvia', 'Laos', 'Kyrgyzstan', 'Kuwait', 'Kosovo', \n  'Kiribati', 'Kenya', 'Kazakhstan', 'Jordan', 'Japan', 'Jamaica', 'Italy', 'Israel', 'Palestine', 'Ireland', 'Iraq', 'Iran', \n  'Indonesia', 'India', 'Iceland', 'Hungary', 'Honduras', 'Haiti', 'Guyana', 'Guinea-Bissau', 'Guinea', 'Guatemala', 'Grenada', \n  'Greece', 'Ghana', 'Germany', 'Georgia', 'Gambia', 'Gabon', 'French Guiana', 'France', 'St. Pierre and Miquelon', \n  'Wallis and Futuna Is.', 'St-Martin', 'St-Barthélemy', 'Fr. Polynesia', 'New Caledonia', 'Fr. S. Antarctic Lands', 'Åland', \n  'Finland', 'Fiji', 'Ethiopia', 'Estonia', 'Eritrea', 'Eq. Guinea', 'El Salvador', 'Egypt', 'Ecuador', 'Dominican Rep.', \n  'Dominica', 'Djibouti', 'Greenland', 'Faeroe Is.', 'Denmark', 'Czechia', 'N. Cyprus', 'Cyprus', 'Cuba', 'Croatia', \n  \"Côte d'Ivoire\", 'Costa Rica', 'Dem. Rep. Congo', 'Congo', 'Comoros', 'Colombia', 'China', 'Macao', 'Hong Kong', 'Chile',\n  'Chad', 'Central African Rep.', 'Cabo Verde', 'Canada', 'Cameroon', 'Cambodia', 'Myanmar', 'Burundi', 'Burkina Faso', \n  'Bulgaria', 'Brunei', 'Brazil', 'Botswana', 'Bosnia and Herz.', 'Bolivia', 'Bhutan', 'Benin', 'Belize', 'Belgium', 'Belarus', \n  'Barbados', 'Bangladesh', 'Bahrain', 'Bahamas', 'Azerbaijan', 'Austria', 'Australia', 'Indian Ocean Ter.', \n  'Heard I. and McDonald Is.', 'Norfolk Island', 'Ashmore and Cartier Is.', 'Armenia', 'Argentina', 'Antigua and Barb.', \n  'Angola', 'Andorra', 'Algeria', 'Albania', 'Afghanistan', 'Siachen Glacier', 'Antarctica', 'Sint Maarten', 'Tuvalu'\n].sort();\nexport default countries;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { MainLayout } from '../Layout';\r\nimport { Map } from '../Elements/Map';\r\nimport { Footer } from '../Elements/Footer';\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { DownloadData } from '../Elements/DownloadData';\r\nimport { useAppDispatch, useAppSelector } from '../../stores/hooks';\r\nimport {\r\n  setActualCountry,\r\n  setActualGenomes,\r\n  setActualGenotypes,\r\n  setActualTimeFinal,\r\n  setActualTimeInitial,\r\n  setColorPallete,\r\n  setGenotypesForFilter,\r\n  setListPMID,\r\n  setLoadingData,\r\n  setTimeFinal,\r\n  setTimeInitial,\r\n  setTotalGenomes,\r\n  setTotalGenotypes,\r\n  setYears,\r\n  setPMID\r\n} from '../../stores/slices/dashboardSlice.ts';\r\nimport { setDataset, setMapData, setMapView, setPosition, setIfCustom } from '../../stores/slices/mapSlice.ts';\r\nimport { Graphs } from '../Elements/Graphs';\r\nimport {\r\n  setCollapses,\r\n  setConvergenceColourPallete,\r\n  setConvergenceColourVariable,\r\n  setConvergenceData,\r\n  setConvergenceGroupVariable,\r\n  setCountriesForFilter,\r\n  setDeterminantsGraphDrugClass,\r\n  setDeterminantsGraphView,\r\n  setDistributionGraphView,\r\n  setDrugResistanceGraphView,\r\n  setDrugsYearData,\r\n  setFrequenciesGraphSelectedGenotypes,\r\n  setCustomDropdownMapView,\r\n  setFrequenciesGraphView,\r\n  setGenotypesAndDrugsYearData,\r\n  setGenotypesDrugClassesData,\r\n  setGenotypesDrugsData,\r\n  setGenotypesDrugsData2,\r\n  setGenotypesYearData,\r\n  setKODiversityData,\r\n  setKODiversityGraphView,\r\n  setTrendsKPGraphDrugClass,\r\n  setTrendsKPGraphView,\r\n  setCurrentSliderValue,\r\n} from '../../stores/slices/graphSlice.ts';\r\nimport {\r\n  filterData,\r\n  getYearsData,\r\n  getMapData,\r\n  getGenotypesData,\r\n  getCountryDisplayName,\r\n  getKODiversityData,\r\n  getConvergenceData\r\n} from './filters';\r\nimport { ResetButton } from '../Elements/ResetButton/ResetButton';\r\nimport { generatePalleteForGenotypes } from '../../util/colorHelper';\r\nimport { SelectCountry } from '../Elements/SelectCountry';\r\nimport { drugsKP, defaultDrugsForDrugResistanceGraphST } from '../../util/drugs';\r\nimport countries from '../../util/countries';\r\n\r\nexport const DashboardPage = () => {\r\n  const [data, setData] = useState([]);\r\n  const [currentConvergenceGroupVariable, setCurrentConvergenceGroupVariable] = useState('COUNTRY_ONLY');\r\n  const [currentConvergenceColourVariable, setCurrentConvergenceColourVariable] = useState('DATE');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const actualCountry = useAppSelector((state) => state.dashboard.actualCountry);\r\n  const countriesForFilter = useAppSelector((state) => state.graph.countriesForFilter);\r\n  const yearsForFilter = useAppSelector((state) => state.dashboard.years);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n  const convergenceGroupVariable = useAppSelector((state) => state.graph.convergenceGroupVariable);\r\n  const convergenceColourVariable = useAppSelector((state) => state.graph.convergenceColourVariable);\r\n\r\n  // This function is only called once, after the csv is read. It gets all the static and dynamic data\r\n  // that came from the csv file and sets all the data the organism needs to show\r\n  function getInfoFromData(response) {\r\n    const responseData = response.data;\r\n    dispatch(setTotalGenomes(responseData.length));\r\n    dispatch(setActualGenomes(responseData.length));\r\n\r\n    const genotypes = [...new Set(responseData.map((x) => x.GENOTYPE))];\r\n    if (organism === 'typhi') {\r\n      genotypes.sort((a, b) => a.localeCompare(b));\r\n      dispatch(setGenotypesForFilter(genotypes));\r\n    }\r\n\r\n    const years = [...new Set(responseData.map((x) => x.DATE))];\r\n    // const countries = [...new Set(responseData.map((x) => getCountryDisplayName(x.COUNTRY_ONLY)))];\r\n    const PMID = [...new Set(responseData.map((x) => x.PMID))];\r\n\r\n    years.sort();\r\n    // countries.sort();\r\n\r\n    dispatch(setTotalGenotypes(genotypes.length));\r\n    dispatch(setActualGenotypes(genotypes.length));\r\n    dispatch(setYears(years));\r\n    dispatch(setTimeInitial(years[0]));\r\n    dispatch(setActualTimeInitial(years[0]));\r\n    dispatch(setTimeFinal(years[years.length - 1]));\r\n    dispatch(setActualTimeFinal(years[years.length - 1]));\r\n    dispatch(setCountriesForFilter(countries));\r\n    dispatch(setPMID(PMID));\r\n\r\n    dispatch(setMapData(getMapData({ data: responseData, countries, organism })));\r\n\r\n    const genotypesData = getGenotypesData({ data: responseData, genotypes, organism });\r\n    const genotypeDataGreaterThanZero = genotypesData.genotypesDrugsData.filter(x => x.totalCount > 0);\r\n    dispatch(setGenotypesDrugsData(genotypesData.genotypesDrugsData));\r\n    dispatch(setGenotypesDrugsData2(genotypesData.genotypesDrugsData));\r\n    dispatch(setFrequenciesGraphSelectedGenotypes(genotypesData.genotypesDrugsData.slice(0, 5).map((x) => x.name)));\r\n    dispatch(setCustomDropdownMapView(genotypeDataGreaterThanZero.filter(x => x.totalCount >= 20).slice(0, 1).map((x) => x.name)));\r\n    dispatch(setGenotypesDrugClassesData(genotypesData.genotypesDrugClassesData));\r\n\r\n    const yearsData = getYearsData({\r\n      data: responseData,\r\n      years,\r\n      organism,\r\n      getUniqueGenotypes: true\r\n    });\r\n\r\n    if (organism === 'klebe') {\r\n      console.log(\"yearsData.uniqueGenotypes\", yearsData.uniqueGenotypes)\r\n      // dispatch(setColorPallete(generatePalleteForGenotypes(yearsData.uniqueGenotypes)));\r\n      dispatch(setGenotypesForFilter(yearsData.uniqueGenotypes));\r\n\r\n      const KODiversityData = getKODiversityData({ data: responseData });\r\n      dispatch(setKODiversityData(KODiversityData));\r\n\r\n      const convergenceData = getConvergenceData({\r\n        data: responseData,\r\n        groupVariable: convergenceGroupVariable,\r\n        // colourVariable: convergenceColourVariable,\r\n        colourVariable: convergenceGroupVariable\r\n      });\r\n      dispatch(setConvergenceColourPallete(generatePalleteForGenotypes(convergenceData.colourVariables)));\r\n      dispatch(setConvergenceData(convergenceData.data));\r\n    }\r\n\r\n    dispatch(setGenotypesYearData(yearsData.genotypesData));\r\n    dispatch(setDrugsYearData(yearsData.drugsData));\r\n    dispatch(setGenotypesAndDrugsYearData(yearsData.genotypesAndDrugsData));\r\n    console.log(\"genotypesDrugsData\", genotypesData.genotypesDrugsData);\r\n    return responseData;\r\n  }\r\n\r\n  // This function reads the csv file and set specific filters accordingly to the current organism\r\n  async function getData(endpoint) {\r\n    dispatch(setLoadingData(true));\r\n\r\n    await axios\r\n      .get(`${API_ENDPOINT}filters/${endpoint}`)\r\n      .then((response) => {\r\n        const newData = getInfoFromData(response);\r\n        dispatch(setDataset('All'));\r\n\r\n        switch (organism) {\r\n          case 'typhi':\r\n            dispatch(setMapView('CipNS'));\r\n            dispatch(setDrugResistanceGraphView(defaultDrugsForDrugResistanceGraphST));\r\n            dispatch(setDeterminantsGraphDrugClass('Ciprofloxacin NS'));\r\n            break;\r\n          case 'klebe':\r\n            dispatch(setMapView('No. Samples'));\r\n            dispatch(setDrugResistanceGraphView(drugsKP));\r\n            dispatch(setDeterminantsGraphDrugClass('Carbapenems'));\r\n            dispatch(setTrendsKPGraphDrugClass('Carbapenems'));\r\n            dispatch(setKODiversityGraphView('K_locus'));\r\n            dispatch(setTrendsKPGraphView('number'));\r\n            dispatch(setConvergenceGroupVariable('COUNTRY_ONLY'));\r\n            dispatch(setConvergenceColourVariable('DATE'));\r\n            setCurrentConvergenceGroupVariable('COUNTRY_ONLY');\r\n            setCurrentConvergenceColourVariable('DATE');\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n\r\n        setData(newData);\r\n      })\r\n      .finally(() => {\r\n        dispatch(setLoadingData(false));\r\n      });\r\n  }\r\n\r\n  // This useEffect is called everytime the organism changes, it resets all data and filters and\r\n  // call the function to read the specific organism csv\r\n  useEffect(() => {\r\n    if (organism !== 'none') {\r\n      console.log('change organism');\r\n      dispatch(\r\n        setCollapses({\r\n          determinants: false,\r\n          distribution: false,\r\n          drugResistance: false,\r\n          frequencies: false,\r\n          trendsKP: false,\r\n          KODiversity: false,\r\n          convergence: false\r\n        })\r\n      );\r\n      setData([]);\r\n      dispatch(setDataset(''));\r\n      dispatch(setActualTimeInitial(''));\r\n      dispatch(setActualTimeFinal(''));\r\n      dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n      dispatch(setActualCountry('All'));\r\n      dispatch(setMapData([]));\r\n      dispatch(setGenotypesYearData([]));\r\n      dispatch(setDrugsYearData([]));\r\n      dispatch(setGenotypesDrugsData([]));\r\n      dispatch(setGenotypesDrugClassesData([]));\r\n      dispatch(setGenotypesAndDrugsYearData([]));\r\n      dispatch(setKODiversityData([]));\r\n      dispatch(setConvergenceData([]));\r\n      dispatch(setDeterminantsGraphDrugClass(''));\r\n      dispatch(setTrendsKPGraphDrugClass(''));\r\n      dispatch(setMapView(''));\r\n      dispatch(setFrequenciesGraphView('percentage'));\r\n      dispatch(setDeterminantsGraphView('percentage'));\r\n      dispatch(setDistributionGraphView('number'));\r\n      dispatch(setConvergenceColourPallete({}));\r\n      dispatch(setIfCustom(false));\r\n      \r\n      dispatch(setCurrentSliderValue(20));\r\n\r\n      switch (organism) {\r\n        case 'typhi':\r\n          getData('getDataFromCSV');\r\n          break;\r\n        case 'klebe':\r\n          getData('getDataFromCSVKlebe');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [organism]);\r\n\r\n  // This useEffect is called everytime the main filters are changed, it does not need to read the csv file again.\r\n  // It filters accordingly to the filters give. Is also called when the reset button is pressed.\r\n  useEffect(() => {\r\n    if (data.length > 0 && canGetData) {\r\n      // console.log('update data', dataset, actualTimeInitial, actualTimeFinal, actualCountry);\r\n\r\n      const filters = filterData({ data, dataset, actualTimeInitial, actualTimeFinal, organism, actualCountry });\r\n      const filteredData = filters.data.filter(\r\n        (x) => actualCountry === 'All' || getCountryDisplayName(x.COUNTRY_ONLY) === actualCountry\r\n      );\r\n\r\n      if (\r\n        convergenceGroupVariable !== currentConvergenceGroupVariable ||\r\n        convergenceColourVariable !== currentConvergenceColourVariable\r\n      ) {\r\n        // console.log('update variables', convergenceGroupVariable, convergenceColourVariable);\r\n        setCurrentConvergenceGroupVariable(convergenceGroupVariable);\r\n        setCurrentConvergenceColourVariable(convergenceColourVariable);\r\n\r\n        const convergenceData = getConvergenceData({\r\n          data: filteredData,\r\n          groupVariable: convergenceGroupVariable,\r\n          // colourVariable: convergenceColourVariable,\r\n          colourVariable: convergenceGroupVariable\r\n        });\r\n        dispatch(setConvergenceColourPallete(generatePalleteForGenotypes(convergenceData.colourVariables)));\r\n        dispatch(setConvergenceData(convergenceData.data));\r\n      } else {\r\n        dispatch(setActualGenomes(filters.genomesCount));\r\n        dispatch(setActualGenotypes(filters.genotypesCount));\r\n        dispatch(setListPMID(filters.listPMID));\r\n        \r\n\r\n        dispatch(setMapData(getMapData({ data: filters.data, countries: countriesForFilter, organism })));\r\n\r\n        const genotypesData = getGenotypesData({\r\n          data: filteredData,\r\n          genotypes: genotypesForFilter,\r\n          organism\r\n        });\r\n        const genotypeDataGreaterThanZero = genotypesData.genotypesDrugsData.filter(x => x.totalCount > 0);\r\n        dispatch(setGenotypesDrugsData(genotypeDataGreaterThanZero));\r\n        dispatch(setFrequenciesGraphSelectedGenotypes(genotypesData.genotypesDrugsData.slice(0, 5).map((x) => x.name)));\r\n        dispatch(setGenotypesDrugClassesData(genotypesData.genotypesDrugClassesData));\r\n        dispatch(setCustomDropdownMapView(genotypeDataGreaterThanZero.filter(x => x.totalCount >= 20).slice(0, 1).map((x) => x.name)));\r\n\r\n\r\n        const yearsData = getYearsData({\r\n          data: filteredData,\r\n          years: yearsForFilter,\r\n          organism\r\n        });\r\n        dispatch(setGenotypesYearData(yearsData.genotypesData));\r\n        dispatch(setDrugsYearData(yearsData.drugsData));\r\n        dispatch(setGenotypesAndDrugsYearData(yearsData.genotypesAndDrugsData));\r\n\r\n        if (organism === 'klebe') {\r\n          const KODiversityData = getKODiversityData({ data: filteredData });\r\n          dispatch(setKODiversityData(KODiversityData));\r\n\r\n          const convergenceData = getConvergenceData({\r\n            data: filteredData,\r\n            groupVariable: convergenceGroupVariable,\r\n            // colourVariable: convergenceColourVariable,\r\n            colourVariable: convergenceGroupVariable\r\n          });\r\n          dispatch(setConvergenceColourPallete(generatePalleteForGenotypes(convergenceData.colourVariables)));\r\n          dispatch(setConvergenceData(convergenceData.data));\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    canGetData,\r\n    dataset,\r\n    actualTimeInitial,\r\n    actualTimeFinal,\r\n    actualCountry,\r\n    convergenceGroupVariable,\r\n    convergenceColourVariable\r\n  ]);\r\n\r\n  return (\r\n    <MainLayout isHomePage>\r\n      <Map />\r\n      <SelectCountry />\r\n      <Graphs />\r\n      <DownloadData />\r\n      <Footer />\r\n      <ResetButton data={data} />\r\n    </MainLayout>\r\n  );\r\n};","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    },\r\n    minHeight: '500px'\r\n  },\r\n  cardContent: {\r\n    margin: '0px 2%'\r\n  },\r\n  paragraph: {\r\n    textAlign: 'justify'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Card, CardContent, Typography } from '@mui/material';\r\nimport { MainLayout } from '../Layout';\r\nimport { useStyles } from './AboutMUI';\r\nimport { Footer } from '../Elements/Footer';\r\n\r\nexport const AboutPage = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MainLayout>\r\n      <Card className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography variant=\"body1\" className={classes.paragraph}>\r\n            AMRnet is a data visualisation dashboard that makes genome-derived antimicrobial resistance(AMR) data\r\n            accessible to a wide range of stakeholders including policy makers.\r\n          </Typography>\r\n\r\n          <Typography variant=\"body1\" className={classes.paragraph}>\r\n            AMRnet visualisations will be geared towards showing national annual prevalence estimates and trends, that\r\n            can be broken down and explored in terms of underlying genotypes and AMR mechanisms, for bacterial pathogens\r\n            of public health importance.\r\n          </Typography>\r\n\r\n          <Typography variant=\"body1\" className={classes.paragraph}>\r\n            The concept is based on the{' '}\r\n            <a href=\"https://github.com/zadyson/TyphiNET\" target=\"_blank\" rel=\"noreferrer\">\r\n              TyphiNET dashboard\r\n            </a>\r\n            , which serves data on the typhoid fever pathogen <i>Salmonella Typhi</i>.\r\n          </Typography>\r\n\r\n          <Typography variant=\"body1\" className={classes.paragraph}>\r\n            Find out more about the project{' '}\r\n            <a href=\"https://www.lshtm.ac.uk/amrnet\" target=\"_blank\" rel=\"noreferrer\">\r\n              here\r\n            </a>\r\n            .\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Footer />\r\n    </MainLayout>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    },\r\n    minHeight: '500px'\r\n  },\r\n  cardContent: {\r\n    margin: '0px 2%'\r\n  },\r\n  paragraph: {\r\n    textAlign: 'justify'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Card, CardContent, Typography } from '@mui/material';\r\nimport { MainLayout } from '../Layout';\r\nimport { useStyles } from './UserGuideMUI';\r\nimport { Footer } from '../Elements/Footer';\r\n\r\nexport const UserGuidePage = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MainLayout>\r\n      <Card className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography variant=\"body1\" className={classes.paragraph}>\r\n            Under development, please see the TyphiNET{' '}\r\n            <a href=\"https://github.com/zadyson/TyphiNET/wiki\" target=\"_blank\" rel=\"noreferrer\">\r\n              wiki\r\n            </a>{' '}\r\n            for details.\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Footer />\r\n    </MainLayout>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    },\r\n    minHeight: '500px'\r\n  },\r\n  cardContent: {\r\n    margin: '0px 2%'\r\n  },\r\n  paragraph: {\r\n    textAlign: 'justify'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Card, CardContent, Typography } from '@mui/material';\r\nimport { MainLayout } from '../Layout';\r\nimport { useStyles } from './DatabaseMUI';\r\nimport { Footer } from '../Elements/Footer';\r\n\r\nexport const DatabasePage = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MainLayout>\r\n      <Card className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography variant=\"body1\" className={classes.paragraph}>\r\n            Why do we use it? It is a long established fact that a reader will be distracted by the readable content of\r\n            a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal\r\n            distribution of letters, as opposed to using 'Content here, content here', making it look like readable\r\n            English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model\r\n            text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions\r\n            have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\r\n            Where does it come from? Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in\r\n            a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin\r\n            professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur,\r\n            from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the\r\n            undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\"\r\n            (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of\r\n            ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\",\r\n            comes from a line in section 1.10.32. The standard chunk of Lorem Ipsum used since the 1500s is reproduced\r\n            below for those interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are\r\n            also reproduced in their exact original form, accompanied by English versions from the 1914 translation by\r\n            H. Rackham.\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Footer />\r\n    </MainLayout>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    },\r\n    minHeight: '500px'\r\n  },\r\n  cardContent: {\r\n    margin: '0px 2%'\r\n  },\r\n  paragraph: {\r\n    textAlign: 'justify'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Card, CardContent, Typography } from '@mui/material';\r\nimport { MainLayout } from '../Layout';\r\nimport { useStyles } from './DocumentationMUI';\r\nimport { Footer } from '../Elements/Footer';\r\n\r\nexport const DocumentationPage = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MainLayout>\r\n      <Card className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography variant=\"body1\" className={classes.paragraph}>\r\n            Under development, please see the TyphiNET{' '}\r\n            <a href=\"https://github.com/zadyson/TyphiNET/wiki\" target=\"_blank\" rel=\"noreferrer\">\r\n              wiki\r\n            </a>{' '}\r\n            for details.\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Footer />\r\n    </MainLayout>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    },\r\n    minHeight: '500px'\r\n  },\r\n  cardContent: {\r\n    maxWidth: '600px',\r\n    margin: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '24px',\r\n    padding: '50px !important',\r\n\r\n    '@media (max-width: 500px)': {\r\n      padding: '24px !important'\r\n    }\r\n  },\r\n  row: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    gap: '24px',\r\n\r\n    '@media (max-width: 600px)': {\r\n      flexDirection: 'column'\r\n    }\r\n  },\r\n  submitButton: {\r\n    marginTop: '16px !important',\r\n    height: '50px',\r\n    color: '#fff !important'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { MainLayout } from '../Layout';\r\nimport { useStyles } from './ContactMUI';\r\nimport TextField from '@mui/material/TextField';\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport { Card, CardContent } from '@mui/material';\r\nimport { Footer } from '../Elements/Footer';\r\nimport LoadingButton from '@mui/lab/LoadingButton/LoadingButton';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst defaultValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  message: ''\r\n};\r\n\r\nconst requiredValues = ['firstName', 'lastName', 'email'];\r\n\r\nconst email = new RegExp('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$');\r\n\r\nexport const ContactPage = () => {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [formValues, setFormValues] = useState(defaultValues);\r\n  const [formErrors, setFormErrors] = useState({});\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    setFormValues({ ...formValues, [name]: value });\r\n  };\r\n\r\n  const sendEmail = async () => {\r\n    const errors = {};\r\n    const required = 'This field is required.';\r\n\r\n    requiredValues.forEach((key) => {\r\n      if (!formValues[key]) {\r\n        errors[key] = required;\r\n      }\r\n    });\r\n\r\n    if (!!formValues.email && !email.test(formValues.email)) {\r\n      errors.email = 'This field is invalid.';\r\n    }\r\n\r\n    setFormErrors(errors);\r\n\r\n    if (Object.keys(errors).length === 0) {\r\n      try {\r\n        setLoading(true);\r\n\r\n        await axios.post(`${API_ENDPOINT}email`, formValues);\r\n        setFormValues(defaultValues);\r\n        window.alert('Message successfully sent!');\r\n      } catch (error) {\r\n        window.alert('Error while sending message. Please try again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainLayout>\r\n      <Card className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <div className={classes.row}>\r\n            <TextField\r\n              required\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              label=\"First name\"\r\n              fullWidth\r\n              variant=\"standard\"\r\n              value={formValues.firstName}\r\n              error={!!formErrors.firstName}\r\n              helperText={formErrors.firstName}\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              required\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              label=\"Last name\"\r\n              fullWidth\r\n              variant=\"standard\"\r\n              value={formValues.lastName}\r\n              error={!!formErrors.lastName}\r\n              helperText={formErrors.lastName}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <TextField\r\n            required\r\n            id=\"email\"\r\n            name=\"email\"\r\n            label=\"Email address\"\r\n            fullWidth\r\n            type=\"email\"\r\n            variant=\"standard\"\r\n            value={formValues.email}\r\n            error={!!formErrors.email}\r\n            helperText={formErrors.email}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            id=\"message\"\r\n            name=\"message\"\r\n            label=\"Add a message\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={formValues.message}\r\n            onChange={handleChange}\r\n          />\r\n          <LoadingButton className={classes.submitButton} variant=\"contained\" loading={loading} onClick={sendEmail}>\r\n            Submit\r\n          </LoadingButton>\r\n        </CardContent>\r\n      </Card>\r\n      <Footer />\r\n    </MainLayout>\r\n  );\r\n};\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport appReducer from './slices/appSlice';\r\nimport deashboardReducer from './slices/dashboardSlice';\r\nimport mapReducer from './slices/mapSlice';\r\nimport graphReducer from './slices/graphSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n    dashboard: deashboardReducer,\r\n    map: mapReducer,\r\n    graph: graphReducer\r\n  },\r\n  middleware: (getDefaultMiddleware) => {\r\n    return getDefaultMiddleware({\r\n      serializableCheck: false\r\n    });\r\n  }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import './App.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createTheme, ThemeProvider } from '@mui/material';\r\nimport { Provider } from 'react-redux';\r\nimport { AdminPage } from './components/Admin';\r\nimport { DashboardPage } from './components/Dashboard';\r\nimport { AboutPage } from './components/About';\r\nimport { UserGuidePage } from './components/UserGuide';\r\nimport { DatabasePage } from './components/Database';\r\nimport { DocumentationPage } from './components/Documentation';\r\nimport { ContactPage } from './components/Contact';\r\nimport { HashRouter, Route, Routes } from 'react-router-dom';\r\nimport { store } from './stores/store.ts';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1fbbd3'\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      'Montserrat',\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      '\"Roboto\"',\r\n      '\"Oxygen\"',\r\n      '\"Ubuntu\"',\r\n      '\"Cantarell\"',\r\n      '\"Fira Sans\"',\r\n      '\"Droid Sans\"',\r\n      '\"Helvetica Neue\"',\r\n      'sans-serif'\r\n    ].join(',')\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <ThemeProvider theme={theme}>\r\n          <div className=\"App\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<DashboardPage />} />\r\n              <Route path=\"/admin\" element={<AdminPage />} />\r\n              <Route path=\"/about\" element={<AboutPage />} />\r\n              <Route path=\"/user-guide\" element={<UserGuidePage />} />\r\n              <Route path=\"/database\" element={<DatabasePage />} />\r\n              <Route path=\"/documentation\" element={<DocumentationPage />} />\r\n              <Route path=\"/contact\" element={<ContactPage />} />\r\n            </Routes>\r\n          </div>\r\n        </ThemeProvider>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}