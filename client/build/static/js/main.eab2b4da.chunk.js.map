{"version":3,"sources":["assets/img/logo-typhinet-prod.png","assets/img/eu_flag.jpg","constants.js","util/colorHelper.js","pages/dashboard/materialUI.js","pages/dashboard/filters.js","pages/dashboard/index.js","pages/admin/materialUI.js","pages/admin/index.js","App.js","registerServiceWorker.js","reportWebVitals.js","index.js"],"names":["API_ENDPOINT","getColorForGenotype","genotype","getColorForDrug","drug","getColorForTetracyclines","tetA","useStyles","makeStyles","theme","formControlSelect","marginBottom","marginTop","minWidth","color","borderBottomColor","formControlSelectCountryRegion","alignItems","select","fontWeight","fontFamily","fontSize","selectYear","width","borderColor","selectCountry","textAlign","selectCountryValues","typography","typographyEndYear","tbg","inputLabel","paddingBottom","tooltipButton","height","marginLeft","tooltipTitle","tooltipIcon","backgroundColor","borderWidth","borderRadius","CustomCircularProgress","withStyles","root","position","top","left","CircularProgress","CustomToggleButton","padding","selected","ToggleButton","Buttons","styled","div","ButtonClearSelect","button","WMCDTemplate","GENOTYPES","GENOTYPES_LIST","TOTAL","H58","MDR","XDR","DCS","AzithR","CipI","CipR","CipI_R","STAD","TOTAL_OCCURRENCE","WMCountData","currentData","data","displayName","elementToCount","parentName","childName","h58","other","cipI","JSON","parse","some","e","name","COUNTRY_ONLY","country","find","countryIndex","findIndex","parent","index","count","push","total","forEach","g","percentage","Math","round","toFixed","item","parseFloat","undefined","aux","CipIs","filter","x","type","aux2","length","WMCountDataResults","worldMapCurrent","sort","a","b","localeCompare","filterForComponents","minYear","maxYear","dataset","region","results","amr","genotypes","worldMapResults","PMIDResults","auxWM","worldMapComplementaryResults","worldMapG","worldMapH58","worldMapSTAD","worldMapMDR","worldMapXDR","worldMapAZITH","worldMapCIPR","worldMapCIPI","RFWGResults","DRTResults","AMRResults","GDResults","Ampicillin","Azithromycin","Chloramphenicol","ESBL","Sulphonamides","Tetracyclines","Trimethoprim","DRTData","empty","DATE","TRAVEL","toLowerCase","includes","REGION_IN_COUNTRY","indexOf","WMCDAux","stringify","GENOTYPE","chartData","RFWGData","totalS","index2","drugsPercentage","Susceptible","currentRFWG","currentDRT","ChartData","fluoroR","fluoroI","cotrim","trime","Object","keys","key","total2","AZITH","CHLO","COTRIM","genes","i","join","SULPH","TRIM","TETRA","AMRData","GDData","PMID","WMCDResults","element","top10","maxSum","ceil","AMRDataResults","DashboardPage","classes","useState","coordinates","zoom","controlMapPosition","setControlMapPosition","worldMapSamplesData","setWorldMapSamplesData","worldMapComplementaryData","setWorldMapComplementaryData","worldMapGenotypesData","setWorldMapGenotypesData","worldMapH58Data","setWorldMapH58Data","worldMapMDRData","setWorldMapMDRData","worldMapSTADData","setWorldMapSTADData","worldMapXDRData","setWorldMapXDRData","worldMapAZITHData","setWorldMapAZITHData","worldMapCIPIData","setWorldMapCIPIData","worldMapCIPRData","setWorldMapCIPRData","plotAmrClassChart","setPlotAmrClassChart","plotDrugsAndGenotypesChart","setPlotDrugsAndGenotypesChart","plotPopulationStructureChart","setPlotPopulationStructureChart","plotDrugTrendsChart","setPlotDrugTrendsChart","captureControlMapInProgress","setCaptureControlMapInProgress","captureControlChartRFWGInProgress","setCaptureControlChartRFWGInProgress","captureControlChartDRTInProgress","setCaptureControlChartDRTInProgress","captureControlChartGDInProgress","setCaptureControlChartGDInProgress","captureControlChartRFWAGInProgress","setCaptureControlChartRFWAGInProgress","captureReportInProgress","setCaptureReportInProgress","tooltipContent","setTooltipContent","React","timeInitial","setTimeInitial","timeFinal","setTimeFinal","actualTimeInitial","setActualTimeInitial","actualTimeFinal","setActualTimeFinal","years","setYears","countriesForFilter","setCountriesForFilter","setRegionsForFilter","actualCountry","setActualCountry","actualRegion","setActualRegion","populationStructureFilter","setPopulationStructureFilter","value","id","populationStructureFilterOptions","RFWGFilterOptions","amrClassFilterOptions","amrClassFilterforFilterOptions","RFWGFilter","setRFWGFilter","amrClassesForFilter","drtClassesForFilter","trendClassesForFilter","trendDropdownOptions","RFWGDropdownOptions","setRFWGDropdownOptions","amrClassFilter","setAmrClassFilter","RDWAGDataviewFilter","setRDWAGDataviewFilter","drugTrendsChartData","setDrugTrendsChartData","drugsAndGenotypesChartData","setDrugsAndGenotypesChartData","populationStructureChartData","setPopulationStructureChartData","amrClassChartData","setAmrClassChartData","mapView","setMapView","setDataset","totalGenomes","setTotalGenomes","actualGenomes","setActualGenomes","totalGenotypes","setTotalGenotypes","actualGenotypes","setActualGenotypes","appLoading","setAppLoading","setLastUpdated","countryPMID","setCountryPMID","trendValues","setTrendValues","RFWGValues","setRFWGValues","desktop","mobile","hoverColor","window","innerHeight","innerWidth","dimensions","setDimensions","formatDate","date","moment","format","useEffect","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","removeEventListener","axios","get","then","res","Date","mapSamplesColorScale","domain","mapRedColorScale","p","parseInt","mapRedColorScaleForSensitive","tooltip","useCallback","positionY","width1","width2","wrapperS","stroke","chart","y","wrapperStyle","cursor","fill","content","active","payload","label","reverse","className","quantities","style","map","dataKey","imgOnLoadPromise","obj","Promise","resolve","reject","onload","onerror","maxH","margin","bottom","right","maxBarSize","strokeDasharray","interval","tick","allowDataOverflow","allowDecimals","angle","offset","props","entry","zIndex","stackId","teste","barCategoryGap","amrClassChartTooltip","allowEscapeViewBox","armClassFilterComponent","info","dataAMR","slice","layout","justifyContent","bars","barSize","temp","fontsize","strokeWidth","colors1","colors2","colors3","dataDRT","TCFF","toString","tickCount","connectNulls","activeDot","values","aux3","stopLoading","names","brokenNames","ids","doc","jsPDF","unit","orientation","IPW","internal","pageSize","getWidth","typhinetLogo","Image","src","typhinetLogoImg","addImage","euFlag","euFlagImg","setFontSize","setTextColor","paragraph1","paragraph2","paragraph3","paragraph4","paragraph5","paragraph6","paragraph7","paragraph8","setFont","text","align","maxWidth","line","addPage","svgAsPngUri","document","getElementById","scale","uri","canvas","createElement","ctx","getContext","mapImg","mapImgPromise","drawImage","img","toDataURL","actualMapView","actualTimePeriodRange","img2","img3","names2","url","domtoimage","toJpeg","quality","bgcolor","dataUrl","subtitleH","imgWidth","API","getImageProperties","floor","texts","spaceBetween","drugs","RFWGCount","setFillColor","rect","img4","img5","save","graph","graphImg","graphImgPromise","toPng","cHeight","logoHeight","legendHeight","filterHeight","subtitleHeight","imgHeight","fillStyle","fillRect","font","fillText","legendImg","legendImgPromise","typhinetLogoPromise","base64","download","textHeight","legendImgoPromise","centerWidth","h","w","capturePicture","cols_to_remove","indexes","csv","split","lines","currentIndex","newLines","j","newCSV","dowloadBaseSpreadsheet","generateMapLegendOptions","percentageSteps","n","legends","Array","renderMapLegend","FormControl","fullWidth","title","placement","IconButton","icon","faInfoCircle","size","Select","onChange","evt","target","MenuItem","setData","setCurrentData","init","setInit","allCountryRegions","setAllCountryRegions","loading","setLoading","auxTGenotypes","auxYears","auxCountries","auxRegions","unshift","update","alt","display","flexDirection","projectionConfig","rotate","center","onMoveEnd","geography","geographies","geo","sample","s","properties","NAME","d","darkGray","lineage","countH58","isH58","onClick","onMouseLeave","onMouseEnter","additionalInfo","samples","genotypeInfo","simpleGenotypeInfo","smallerThan20","MDRs","mdrInfo","STADs","stadInfo","XDRs","xdrInfo","AZs","azInfo","cipR","cipIInfo","cipRInfo2","cipIRInfo","CipRs","cipRInfo","default","outline","hover","pressed","rsmKey","Typography","ToggleButtonGroup","exclusive","newDataset","gutterBottom","Zoom","in","c","Tooltip","faCrosshairs","pos","faPlus","faMinus","faCamera","thickness","paddingRight","options","searchable","labelField","multi","clearable","separator","contentRenderer","state","itemRenderer","itemIndex","methods","isSelected","addItem","checked","valueField","clearRenderer","clearAll","selectAll","InputLabel","o","paddingLeft","areAllSelected","getElementsByClassName","isValue","paddingTop","faTable","marginRight","faFilePdf","href","rel","open","faEnvelope","faGithub","faTwitter","flex","Fab","innerText","click","text2","faUndoAlt","cellON","off","tableID","tablePadding","actionsCell","borderLeft","stickyCell","actionsHeaderCell","stickyHeaderCell","changesTable","maxHeight","viewButton","resetButton","uploadButton","checkChangesButton","dialog","flexWrap","input","input2","whiteSpace","toolbar","borderBottom","deleteSelected","checkboxCell","checkbox","tableRowRoot","tableRowSelected","box","textAlignLast","userSelect","letterSpacing","choosePage","opacity","selectFilter","header","headerTitle","rowHeader","deleteChangeButton","border","ColorButton","Button","ColorButton3","ColorButton4","ColorButton5","StyledHeaderCell","head","palette","common","black","white","body","TableCell","CustomTableContainer","TableContainer","CustomTableSortLabel","TableSortLabel","createData","changes","AdminPage","rows","setRows","originalData","setOriginalData","tableKeys","setTableKeys","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","currentRow","setCurrentRow","setOpen","open2","setOpen2","open3","setOpen3","open4","setOpen4","open5","setOpen5","open6","setOpen6","open7","setOpen7","open8","setOpen8","resultMessage","setResultMessage","setSelected","search","setSearch","filters","setFilters","filterOptions","setFilterOptions","filteredData","setFilteredData","isLoading","setIsLoading","startProgress","setStartProgress","loadingMessage","setLoadingMessage","currentChange","setCurrentChange","exceptions","descendingComparator","changeView","resetChanges","added","genome","gIndex","splice","deleted","updated","old","betterChanges","entries","updates","point","new","handleUpload","handleCheckChanges","message","post","getChangeData","finally","checkChanges","showPopup","Status","getData","catch","error","changeData","updatedAt","toLocaleString","aux4","aux5","response","pass","EnhancedTableToolbar","numSelected","Toolbar","sx","variant","component","placeholder","onCancelSearch","onRequestSearch","faTrashAlt","EnhancedTableHead","onRequestSort","onSelectAllClick","rowCount","TableHead","TableRow","Checkbox","indeterminate","headCell","sortDirection","direction","property","event","stopPropagation","displayEmpty","onOpen","onClose","option","Paper","Table","stickyHeader","TableBody","row","r","t","newSelecteds","array","comparator","stabilizedThis","el","stableSort","getComparator","isItemSelected","dataRow","role","selectedIndex","newSelected","concat","handleClick","cell","random","handleEdit","faEdit","handleDelete","disableUnderline","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","ActionsComponent","useTheme","Box","flexShrink","ml","disabled","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","max","Dialog","dialogTransition","DialogTitle","DialogContent","DialogContentText","DialogActions","deleteRow","autoFocus","TextField","defaultValue","rowIndex","inputs","editRow","addRow","times","parts","LZString","compress","current","uploadChanges","deleteRows","deleteChange","App","to","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","primary","main","ReactDOM","render","StrictMode","ThemeProvider","URL","process","origin","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"w/qiDAAe,MAA0B,+CCA1B,MAA0B,oC,SCC5BA,EAAe,6BCCfC,EAAsB,SAACC,GAClC,OAAQA,GACN,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,UACL,IAAK,UACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,IACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,YACL,IAAK,YACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UAGT,IAAK,QACH,MAAO,UACT,IAAK,UACL,IAAK,cACH,MAAO,UACT,IAAK,aACH,MAAO,QACT,IAAK,UACL,IAAK,cACL,IAAK,cACH,MAAO,UACT,IAAK,UACL,I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S,MAAOkS,OAAOE,YAElB,GAAG,KAIH,OAFAF,OAAOoB,iBAAiB,SAAUV,GAE3B,SAACI,GACNd,OAAOqB,oBAAoB,SAAUX,EACvC,CACF,IAEA,OAAoB9H,mBAClB,CACE,IACA,QACA,QACA,QACA,MACA,QACA,QACA,QACA,MACA,QACA,QACA,QACA,QACA,MACA,QACA,IACA,QACA,QACA,MACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,MACA,QACA,QACA,QACA,QACA,MACA,QACA,QACA,QACA,QACA,QACA,MACA,QACA,MACA,QACA,QACA,IACA,QACA,QACA,MACA,QACA,QACA,MACA,QACA,QACA,MACA,QACA,QACA,YACA,YACA,MACA,MACA,QACA,QACA,QACA,QACA,IACA,MACA,QACA,MACA,QACA,QACA,QACqB,QACrB,UACA,aACA,cACA,UACA,cACA,cACA,UACA,eACAnF,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,cAAcD,EAAE,KApF9BS,GAqFN,kBArFe,GAwFhBqM,qBAAU,WACRa,IAAMC,IAAI,GAAD,OAAIhV,EAAY,sBAAqBiV,MAAK,SAACC,GAClDnC,GAAe,IAAIoC,KAAKD,EAAIzQ,MAC9B,GACF,GAAG,IAGH,IAAM2Q,GAAuB,SAACC,GAC5B,OAAIA,GAAU,GAAKA,GAAU,EACpB,UACEA,GAAU,IAAMA,GAAU,GAC5B,UACEA,GAAU,IAAMA,GAAU,GAC5B,UACEA,GAAU,KAAOA,GAAU,IAC7B,UACEA,GAAU,IACZ,eADF,CAGT,EAEMC,GAAmB,SAACpP,GACxB,IAAMqP,EAAIC,SAAStP,GACnB,OAAIqP,GAAK,GACA,UACEA,GAAK,GACP,UACEA,GAAK,EACP,UAEA,SAEX,EAEME,GAA+B,SAACvP,GACpC,IAAMqP,EAAIhP,WAAWL,GACrB,OAAIqP,EAAI,GACC,UACEA,EAAI,GACN,UACEA,EAAI,GACN,UACEA,EAAI,GACN,UAEF,SACT,EAGMG,GAAUtG,IAAMuG,aACpB,SAACC,EAAWC,EAAQC,EAAQ5O,EAAM6O,EAAUC,GAA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","file":"static/js/main.eab2b4da.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-typhinet-prod.f503745b.png\";","export default __webpack_public_path__ + \"static/media/eu_flag.77134ad3.jpg\";","// Static routes to run the app. Only use one: local or heroku.\r\nexport const API_ENDPOINT = \"http://localhost:8080/api/\";\r\n//export const API_ENDPOINT = \"https://typhinetdev.herokuapp.com/api/\";\r\n","\r\n// Helper for genotype color\r\nexport const getColorForGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case '0':\r\n    case '0.0.1':\r\n    case '0.0.2':\r\n    case '0.0.3':\r\n    case '0.1.0':\r\n    case '0.1':\r\n    case '0.1.1':\r\n    case '0.1.2':\r\n    case '0.1.3':\r\n      return \"#808080\";\r\n    case '1.1':\r\n    case '1.1.1':\r\n    case '1.1.2':\r\n    case '1.1.3':\r\n    case '1.1.4':\r\n      return \"#ffff00\";\r\n    case '1.2':\r\n    case '1.2.1':\r\n      return \"#ffd700\";\r\n    case '2':\r\n    case '2.0.0':\r\n    case '2.0.1':\r\n    case '2.0.2':\r\n      return \"#32cd32\";\r\n    case '2.1.0':\r\n    case '2.1':\r\n    case '2.1.1':\r\n    case '2.1.2':\r\n    case '2.1.3':\r\n    case '2.1.4':\r\n    case '2.1.5':\r\n    case '2.1.6':\r\n    case '2.1.7':\r\n    case '2.1.8':\r\n    case '2.1.9':\r\n    case '2.1.7.1':\r\n    case '2.1.7.2':\r\n      return \"#adff2f\";\r\n    case '2.2':\r\n    case '2.2.0':\r\n    case '2.2.1':\r\n    case '2.2.2':\r\n    case '2.2.3':\r\n    case '2.2.4':\r\n      return \"#98fb98\";\r\n    case '2.3':\r\n    case '2.3.1':\r\n    case '2.3.2':\r\n    case '2.3.3':\r\n    case '2.3.4':\r\n    case '2.3.5':\r\n      return \"#6b8e23\";\r\n    case '2.4.0':\r\n    case '2.4':\r\n    case '2.4.1':\r\n      return \"#2e8b57\";\r\n    case '2.5.0':\r\n    case '2.5':\r\n    case '2.5.1':\r\n    case '2.5.2':\r\n      return \"#006400\";\r\n    case '3.0.0':\r\n    case '3':\r\n    case '3.0.1':\r\n    case '3.0.2':\r\n      return \"#0000cd\";\r\n    case '3.1.0':\r\n    case '3.1':\r\n    case '3.1.1':\r\n    case '3.1.2':\r\n      return \"#4682b4\";\r\n    case '3.2.1':\r\n    case '3.2':\r\n    case '3.2.2':\r\n      return \"#00bfff\";\r\n    case '3.3.0':\r\n    case '3.3':\r\n    case '3.3.1':\r\n    case '3.3.2':\r\n    case '3.3.2.Bd1':\r\n    case '3.3.2.Bd2':\r\n      return \"#1e90ff\";\r\n    case '3.4':\r\n      return \"#6a5acd\";\r\n    case '3.5':\r\n    case '3.5.1':\r\n    case '3.5.2':\r\n    case '3.5.3':\r\n    case '3.5.4':\r\n      return \"#4b0082\";\r\n    case '4':\r\n    case '4.1.0':\r\n    case '4.1':\r\n    case '4.1.1':\r\n      return \"#8b0000\";\r\n    case '4.2':\r\n    case '4.2.1':\r\n    case '4.2.2':\r\n    case '4.2.3':\r\n      return \"#ff6347\";\r\n    // case '4.3':\r\n    // case '4.3.0':\r\n    case '4.3.1':\r\n      return \"#ff0000\";\r\n    case '4.3.1.1':\r\n    case '4.3.1.1.EA1':\r\n      return '#f1b6da';\r\n    case '4.3.1.1.P1':\r\n      return \"black\";\r\n    case '4.3.1.2':\r\n    case '4.3.1.2.EA2':\r\n    case '4.3.1.2.EA3':\r\n      return \"#c51b7d\";\r\n    case '4.3.1.3':\r\n    case '4.3.1.3.Bdq':\r\n      return \"#fb8072\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForAMR = (amr) => {\r\n  switch (amr) {\r\n    case 'No AMR detected':\r\n      return \"#addd8e\";\r\n    case 'MDR_DCS':\r\n      return \"#9e9ac8\"\r\n    case 'MDR':\r\n      return \"red\"\r\n    case 'DCS':\r\n      return \"#6baed6\"\r\n    case 'AzithR_MDR':\r\n      return \"#a50f15\"\r\n    case 'AzithR_DCS':\r\n      return \"#7a0177\"\r\n    case 'AzithR_DCS_MDR':\r\n      return \"#54278f\"\r\n    case 'XDR':\r\n      return \"black\"\r\n    case 'AMR':\r\n      return \"#ffeda0\"\r\n    case 'AMR_DCS':\r\n      return \"#fd8d3c\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForSimpleGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case 'H58':\r\n      return \"green\";\r\n    case 'Non-H58':\r\n      return \"red\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForDrug = (drug) => {\r\n  switch (drug) {\r\n    case 'Azithromycin':\r\n      return \"rgb(144,211,199)\";\r\n    case 'Fluoroquinolones (CipI/R)':\r\n      return \"rgb(255,236,120)\";\r\n    case 'ESBL':\r\n      return \"#DB90F0\";\r\n    case 'Chloramphenicol':\r\n      return \"rgb(249,129,117)\";\r\n    case 'Ampicillin':\r\n      return \"rgb(129,178,210)\";\r\n    case 'Co-trimoxazole':\r\n      return \"rgb(252,180,105)\";\r\n    case 'Sulphonamides':\r\n      return \"rgb(180,221,112)\";\r\n    case 'Trimethoprim':\r\n      return \"rgb(102,102,255)\";\r\n    case 'Tetracyclines':\r\n      return \"rgb(251,207,229)\";\r\n    case 'Susceptible':\r\n      return \"lightGray\";\r\n    case 'Fluoroquinolones (CipI)':\r\n      return \"#98fb98\";\r\n    case 'Fluoroquinolones (CipR)':\r\n      return \"#9e9ac8\";\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForIncType = (incType) => {\r\n  switch (incType) {\r\n    case 'IncX1':\r\n      return 'rgb(174,227,154)'\r\n    case 'IncFIA(HI1)':\r\n      return 'rgb(138,35,139)'\r\n    case 'IncFIB(pHCM2)':\r\n      return 'rgb(163,215,30)'\r\n    case 'IncA/C2':\r\n      return 'rgb(69,51,214)'\r\n    case 'IncP1':\r\n      return 'rgb(223,207,231)'\r\n    case 'IncFIA(HI1)/IncHI1A/IncHI1B(R27)':\r\n      return 'rgb(66,69,94)'\r\n    case 'Col(BS512)':\r\n      return 'rgb(251,172,246)'\r\n    case 'IncHI1A/IncHI1B(R27)':\r\n      return 'rgb(34,151,67)'\r\n    case 'IncN':\r\n      return 'rgb(238,83,190)'\r\n    case 'IncHI1B(R27)':\r\n      return 'rgb(68,242,112)'\r\n    case 'p0111':\r\n      return 'rgb(251,45,76)'\r\n    case 'IncHI1A':\r\n      return 'rgb(101,230,249)'\r\n    case 'IncI1':\r\n      return 'rgb(123,44,49)'\r\n    case 'IncY':\r\n      return 'rgb(231,173,121)'\r\n    case 'IncFIB(AP001918)':\r\n      return 'rgb(32,80,46)'\r\n    case 'IncFIB(K)':\r\n      return 'rgb(53,136,209)'\r\n    case 'IncHI2/IncHI2A':\r\n      return 'rgb(115,140,78)'\r\n    case 'Col440I':\r\n      return 'rgb(159,4,252)'\r\n    case 'Col156':\r\n      return 'rgb(244,212,3)'\r\n    case 'Col440II/Col440II':\r\n      return 'rgb(17,160,170)'\r\n    case 'IncFIA(HI1)/IncHI1A':\r\n      return 'rgb(251,120,16)'\r\n    case 'ColRNAI':\r\n      return 'rgb(91,67,11)'\r\n    case 'ColpVC':\r\n      return 'rgb(248,117,116)'\r\n    case 'IncX3':\r\n      return 'rgb(190,177,231)'\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}\r\n\r\nexport const getColorForTetracyclines = (tetA) => {\r\n  switch (tetA) {\r\n    case 'tetA(A)':\r\n      return 'rgb(174,227,154)'\r\n    case 'tetA(B)':\r\n      return '#D7AEF7'\r\n    case 'tetA(C)':\r\n      return '#FFEC78'\r\n    case 'tetA(D)':\r\n      return '#FCB469'\r\n    case 'tetA(AB)':\r\n      return 'rgb(223,207,231)'\r\n    case 'tetA(ABC)':\r\n      return 'rgb(66,69,94)'\r\n    case 'tetA(ABD)':\r\n      return 'rgb(251,172,246)'\r\n    case 'tetA(ABCD)':\r\n      return 'rgb(34,151,67)'\r\n    case 'tetA(AC)':\r\n      return 'rgb(238,83,190)'\r\n    case 'tetA(ACD)':\r\n      return 'rgb(68,242,112)'\r\n    case 'tetA(AD)':\r\n      return 'rgb(251,45,76)'\r\n    case 'tetA(BC)':\r\n      return 'rgb(101,230,249)'\r\n    case 'tetA(BD)':\r\n      return 'rgb(123,44,49)'\r\n    case 'tetA(BCD)':\r\n      return 'rgb(231,173,121)'\r\n    case 'tetA(CD)':\r\n      return 'rgb(32,80,46)'\r\n    default:\r\n      return \"#F5F4F6\";\r\n  }\r\n}","import { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport styled from \"@emotion/styled\";\r\n\r\n// CSS like classes\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControlSelect: {\r\n        marginBottom: 12,\r\n        marginTop: 2,\r\n        minWidth: 120,\r\n        '&.label.Mui-focused': {\r\n            color: \"rgb(31, 187, 211)\",\r\n        },\r\n        '&:not(.Mui-error).MuiInput-underline:after': {\r\n            borderBottomColor: \"rgb(31, 187, 211)\",\r\n        },\r\n    },\r\n    formControlSelectCountryRegion: {\r\n        marginBottom: 16,\r\n        marginTop: 2,\r\n        minWidth: 120,\r\n        '&.label.Mui-focused': {\r\n            color: \"rgb(31, 187, 211)\",\r\n        },\r\n        '&:not(.Mui-error).MuiInput-underline:after': {\r\n            borderBottomColor: \"rgb(31, 187, 211)\",\r\n        },\r\n        alignItems: \"center\"\r\n    },\r\n    select: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\",\r\n        fontSize: 14\r\n    },\r\n    selectYear: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\",\r\n        fontSize: 14,\r\n        width: '85px',\r\n        '&:before': {\r\n            borderColor: 'rgba(0, 0, 0, 0.12)',\r\n        }\r\n    },\r\n    selectCountry: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\",\r\n        width: 200,\r\n        textAlign: \"left\"\r\n    },\r\n    selectCountryValues: {\r\n        fontWeight: 600,\r\n        fontFamily: \"Montserrat\"\r\n    },\r\n    typography: {\r\n        fontWeight: 500,\r\n        fontFamily: \"Montserrat\",\r\n        color: \"rgb(117,117,117)\",\r\n        fontSize: 12\r\n    },\r\n    typographyEndYear: {\r\n        fontWeight: 500,\r\n        fontFamily: \"Montserrat\",\r\n        color: \"rgb(117,117,117)\",\r\n        fontSize: 12\r\n    },\r\n    tbg: {\r\n        marginTop: 5\r\n    },\r\n    inputLabel: {\r\n        fontSize: 12,\r\n        fontWeight: 500,\r\n        fontFamily: \"Montserrat\",\r\n        paddingBottom: 5\r\n    },\r\n    tooltipButton: {\r\n        height: 15.5,\r\n        width: 15.5,\r\n        marginLeft: 5\r\n    },\r\n    tooltipTitle: {\r\n        fontSize: 12\r\n    },\r\n    tooltipIcon: {\r\n        color: \"white\",\r\n        backgroundColor: \"black\",\r\n        borderColor: \"black\",\r\n        borderWidth: 1,\r\n        borderRadius: \"50%\"\r\n    }\r\n}));\r\n\r\n// Loading circular progress for the map and charts download buttons\r\nconst CustomCircularProgress = withStyles({\r\n    root: {\r\n        color: \"rgb(31, 187, 211)\",\r\n        position: \"absolute\",\r\n        top: -5,\r\n        left: -6\r\n    }\r\n})(CircularProgress);\r\n\r\n// Options for dataset ToggleButtonGroup\r\nconst CustomToggleButton = withStyles({\r\n    root: {\r\n        padding: \"2px 8px\",\r\n        fontFamily: \"Montserrat\",\r\n        fontWeight: 600\r\n    },\r\n    selected: {\r\n        backgroundColor: 'rgb(31, 187, 211) !important',\r\n        color: \"white !important\"\r\n    }\r\n})(ToggleButton);\r\n\r\n// Wrapper for the ButtonClearSelect component (below)\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n\r\n  & div {\r\n    margin: 0 0 0 10px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\n// 'Clear all' and 'reset' buttons from the dropdowns on RFWG and DRT charts\r\nconst ButtonClearSelect = styled.button`\r\n  background: none;\r\n  border: 1px solid #555;\r\n  color: #555;\r\n  border-radius: 3px;\r\n  margin: 0 10px 0;\r\n  padding: 3px 5px;\r\n  font-size: 10px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &.clear {\r\n    color: tomato;\r\n    border: 1px solid tomato;\r\n  }\r\n\r\n  :hover {\r\n    border: 1px solid deepskyblue;\r\n    color: deepskyblue;\r\n  }\r\n`;\r\n\r\nexport { useStyles, CustomCircularProgress, CustomToggleButton, Buttons, ButtonClearSelect };","const WMCDTemplate = {\r\n  GENOTYPES: {\r\n    GENOTYPES_LIST: [],\r\n    TOTAL: 0,\r\n  },\r\n  H58: 0,\r\n  MDR: 0,\r\n  XDR: 0,\r\n  DCS: 0,\r\n  AzithR: 0,\r\n  CipI: 0,\r\n  CipR: 0,\r\n  CipI_R: 0,\r\n  STAD: 0,\r\n  TOTAL_OCCURRENCE: 0,\r\n};\r\n\r\nfunction WMCDAux(currentData, data) {\r\n  currentData = JSON.parse(currentData);\r\n\r\n  currentData[\"TOTAL_OCCURRENCE\"]++;\r\n  if (\r\n    currentData[\"GENOTYPES\"][\"GENOTYPES_LIST\"].indexOf(data[\"GENOTYPE\"]) === -1\r\n  ) {\r\n    currentData[\"GENOTYPES\"][\"GENOTYPES_LIST\"].push(data[\"GENOTYPE\"]);\r\n    currentData[\"GENOTYPES\"][\"TOTAL\"]++;\r\n  }\r\n\r\n  if (data[\"GENOTYPE_SIMPLE\"] === \"H58\") {\r\n    currentData[\"H58\"]++;\r\n  }\r\n  if (data[\"MDR\"] === \"MDR\") {\r\n    currentData[\"MDR\"]++;\r\n  }\r\n  if (data[\"XDR\"] === \"XDR\") {\r\n    currentData[\"XDR\"]++;\r\n  }\r\n  if (data[\"dcs_category\"] === \"DCS\") {\r\n    currentData[\"DCS\"]++;\r\n  }\r\n  if (data[\"azith_pred_pheno\"] === \"AzithR\") {\r\n    currentData[\"AzithR\"]++;\r\n  }\r\n  if (data[\"cip_pred_pheno\"] === \"CipI\") {\r\n    currentData[\"CipI\"]++;\r\n    currentData[\"CipI_R\"]++;\r\n  }\r\n  if (data[\"cip_pred_pheno\"] === \"CipR\") {\r\n    currentData[\"CipR\"]++;\r\n    currentData[\"CipI_R\"]++;\r\n  }\r\n  if (data[\"amr_category\"] === \"No AMR detected\") {\r\n    currentData[\"STAD\"]++;\r\n  }\r\n\r\n  return currentData;\r\n}\r\n\r\nfunction WMCDResults(worldMapComplementaryResults) {\r\n  worldMapComplementaryResults = JSON.parse(worldMapComplementaryResults);\r\n\r\n  for (let data in worldMapComplementaryResults) {\r\n    worldMapComplementaryResults[data][\"H58\"] =\r\n      (worldMapComplementaryResults[data][\"H58\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    worldMapComplementaryResults[data][\"MDR\"] =\r\n      (worldMapComplementaryResults[data][\"MDR\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    worldMapComplementaryResults[data][\"XDR\"] =\r\n      (worldMapComplementaryResults[data][\"XDR\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    worldMapComplementaryResults[data][\"DCS\"] =\r\n      (worldMapComplementaryResults[data][\"DCS\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    worldMapComplementaryResults[data][\"AzithR\"] =\r\n      (worldMapComplementaryResults[data][\"AzithR\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    worldMapComplementaryResults[data][\"CipI\"] =\r\n      (worldMapComplementaryResults[data][\"CipI\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    worldMapComplementaryResults[data][\"CipR\"] =\r\n      (worldMapComplementaryResults[data][\"CipR\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    worldMapComplementaryResults[data][\"CipI_R\"] =\r\n      (worldMapComplementaryResults[data][\"CipI_R\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    worldMapComplementaryResults[data][\"STAD\"] =\r\n      (worldMapComplementaryResults[data][\"STAD\"] /\r\n        worldMapComplementaryResults[data][\"TOTAL_OCCURRENCE\"]) *\r\n      100;\r\n    delete worldMapComplementaryResults[data].TOTAL_OCCURRENCE;\r\n  }\r\n  return worldMapComplementaryResults;\r\n}\r\n\r\nfunction WMCountData(\r\n  currentData,\r\n  data,\r\n  displayName,\r\n  elementToCount,\r\n  parentName,\r\n  childName,\r\n  h58 = false,\r\n  other = \"\",\r\n  cipI = false\r\n) {\r\n  currentData = JSON.parse(currentData);\r\n\r\n  if (!currentData.some((e) => e.name === data.COUNTRY_ONLY)) {\r\n    currentData.push({\r\n      name: data.COUNTRY_ONLY,\r\n      displayName: displayName,\r\n      total: 1,\r\n      [parentName]: [{ [childName]: data[elementToCount], count: 1 }],\r\n    });\r\n    if (elementToCount !== \"GENOTYPE\")\r\n      currentData[currentData.length - 1].percentage = 0;\r\n    if (!h58 && elementToCount !== \"GENOTYPE\")\r\n      currentData[currentData.length - 1].count = 0;\r\n  } else {\r\n    const country = currentData.find((e) => e.name === data[\"COUNTRY_ONLY\"]);\r\n    const countryIndex = currentData.findIndex(\r\n      (e) => e.name === data[\"COUNTRY_ONLY\"]\r\n    );\r\n\r\n    if (\r\n      !country[parentName].some((e) => e[childName] === data[elementToCount])\r\n    ) {\r\n      country[parentName].push({\r\n        [childName]: data[elementToCount],\r\n        count: 1,\r\n      });\r\n    } else {\r\n      let parent = country[parentName].find(\r\n        (e) => e[childName] === data[elementToCount]\r\n      );\r\n      let index = country[parentName].findIndex(\r\n        (e) => e[childName] === data[elementToCount]\r\n      );\r\n      parent.count = parent.count + 1;\r\n      country[parentName][index] = parent;\r\n    }\r\n    country.total = country.total + 1;\r\n\r\n    if (h58) {\r\n      country[parentName].forEach((g, index) => {\r\n        let percentage = (g.count / country.total) * 100;\r\n        if (Math.round(percentage) !== percentage) {\r\n          percentage = percentage.toFixed(2);\r\n        }\r\n        g.percentage = percentage;\r\n      });\r\n    } else if (other !== \"\") {\r\n      country[parentName].forEach((item, index) => {\r\n        if (item[childName] === other) {\r\n          let percentage = (item.count / country.total) * 100;\r\n          if (Math.round(percentage) !== percentage)\r\n            percentage = percentage.toFixed(2);\r\n          percentage = parseFloat(percentage);\r\n          country.percentage = percentage;\r\n          country.count = item.count;\r\n        }\r\n      });\r\n      if (country.percentage === undefined) {\r\n        country.percentage = parseFloat(0);\r\n      }\r\n      if (country.count === undefined) {\r\n        country.count = 0;\r\n      }\r\n    } else if (cipI) {\r\n      let aux = country.CipIs.filter((x) => x.type === \"CipI\");\r\n      let aux2 = country.CipIs.filter((x) => x.type === \"CipR\");\r\n      if (aux.length) {\r\n        aux[0].percentage = (aux[0].count / country.total) * 100;\r\n        aux = aux[0].count;\r\n      } else aux = 0;\r\n      if (aux2.length) {\r\n        aux2[0].percentage = (aux2[0].count / country.total) * 100;\r\n        aux2 = aux2[0].count;\r\n      } else aux2 = 0;\r\n\r\n      let percentage = ((aux + aux2) / country.total) * 100;\r\n      if (Math.round(percentage) !== percentage)\r\n        percentage = percentage.toFixed(2);\r\n      percentage = parseFloat(percentage);\r\n      country.percentage = percentage;\r\n      country.count = aux + aux2;\r\n      if (country.percentage === undefined) country.percentage = parseFloat(0);\r\n      if (country.count === undefined) country.count = 0;\r\n    }\r\n\r\n    currentData[countryIndex] = country;\r\n  }\r\n\r\n  return currentData;\r\n}\r\n\r\nfunction WMCountDataResults(worldMapCurrent, parentName) {\r\n  worldMapCurrent = JSON.parse(worldMapCurrent);\r\n  worldMapCurrent.forEach((country) => {\r\n    country[parentName].sort((a, b) => b.count - a.count);\r\n  });\r\n  worldMapCurrent.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n  return worldMapCurrent;\r\n}\r\n\r\nfunction ChartData(RFWGData, DRTData, data) {\r\n  RFWGData = JSON.parse(RFWGData);\r\n  DRTData = JSON.parse(DRTData);\r\n\r\n  let index = RFWGData.findIndex((x) => x.name === data.GENOTYPE);\r\n  if (index === -1) {\r\n    RFWGData.push({ name: data.GENOTYPE, total: 0, totalS: 0 });\r\n    index = RFWGData.length - 1;\r\n  }\r\n  RFWGData[index].totalS += 1;\r\n\r\n  let index2 = DRTData.findIndex((x) => x.name === data.DATE);\r\n  if (index2 === -1) {\r\n    DRTData.push({\r\n      name: data.DATE,\r\n      total: 0,\r\n      drugsPercentage: {},\r\n      Azithromycin: 0,\r\n      \"Fluoroquinolones (CipI/R)\": 0,\r\n      ESBL: 0,\r\n      Chloramphenicol: 0,\r\n      Ampicillin: 0,\r\n      \"Co-trimoxazole\": 0,\r\n      Sulphonamides: 0,\r\n      Trimethoprim: 0,\r\n      Tetracyclines: 0,\r\n      Susceptible: 0,\r\n      \"Fluoroquinolones (CipR)\": 0,\r\n    });\r\n    index2 = DRTData.length - 1;\r\n  }\r\n  DRTData[index2].total += 1;\r\n\r\n  const currentRFWG = RFWGData[index];\r\n  const currentDRT = DRTData[index2];\r\n\r\n  if (data[\"azith_pred_pheno\"] === \"AzithR\") {\r\n    if (currentRFWG[\"Azithromycin\"] === undefined)\r\n      currentRFWG[\"Azithromycin\"] = 1;\r\n    else currentRFWG[\"Azithromycin\"] += 1;\r\n    currentDRT[\"Azithromycin\"] += 1;\r\n  }\r\n  if (data[\"cip_pred_pheno\"] === \"CipR\" || data[\"cip_pred_pheno\"] === \"CipI\") {\r\n    if (currentRFWG[\"Fluoroquinolones (CipI/R)\"] === undefined)\r\n      currentRFWG[\"Fluoroquinolones (CipI/R)\"] = 1;\r\n    else currentRFWG[\"Fluoroquinolones (CipI/R)\"] += 1;\r\n    currentDRT[\"Fluoroquinolones (CipI/R)\"] += 1;\r\n  }\r\n  if (data[\"ESBL_category\"] === \"ESBL\") {\r\n    if (currentRFWG[\"ESBL\"] === undefined) currentRFWG[\"ESBL\"] = 1;\r\n    else currentRFWG[\"ESBL\"] += 1;\r\n    currentDRT[\"ESBL\"] += 1;\r\n  }\r\n  if (data[\"chloramphenicol_category\"] === \"ChlR\") {\r\n    if (currentRFWG[\"Chloramphenicol\"] === undefined)\r\n      currentRFWG[\"Chloramphenicol\"] = 1;\r\n    else currentRFWG[\"Chloramphenicol\"] += 1;\r\n    currentDRT[\"Chloramphenicol\"] += 1;\r\n  }\r\n  if (data[\"blaTEM-1D\"] === \"1\") {\r\n    if (currentRFWG[\"Ampicillin\"] === undefined) currentRFWG[\"Ampicillin\"] = 1;\r\n    else currentRFWG[\"Ampicillin\"] += 1;\r\n    currentDRT[\"Ampicillin\"] += 1;\r\n  }\r\n  if (data[\"co_trim\"] === \"1\") {\r\n    if (currentRFWG[\"Co-trimoxazole\"] === undefined)\r\n      currentRFWG[\"Co-trimoxazole\"] = 1;\r\n    else currentRFWG[\"Co-trimoxazole\"] += 1;\r\n    currentDRT[\"Co-trimoxazole\"] += 1;\r\n  }\r\n  if (data[\"sul_any\"] === \"1\") {\r\n    if (currentRFWG[\"Sulphonamides\"] === undefined)\r\n      currentRFWG[\"Sulphonamides\"] = 1;\r\n    else currentRFWG[\"Sulphonamides\"] += 1;\r\n    currentDRT[\"Sulphonamides\"] += 1;\r\n  }\r\n  if (data[\"dfra_any\"] === \"1\") {\r\n    if (currentRFWG[\"Trimethoprim\"] === undefined)\r\n      currentRFWG[\"Trimethoprim\"] = 1;\r\n    else currentRFWG[\"Trimethoprim\"] += 1;\r\n    currentDRT[\"Trimethoprim\"] += 1;\r\n  }\r\n  if (data[\"tetracycline_category\"] === \"TetR\") {\r\n    if (currentRFWG[\"Tetracyclines\"] === undefined)\r\n      currentRFWG[\"Tetracyclines\"] = 1;\r\n    else currentRFWG[\"Tetracyclines\"] += 1;\r\n    currentDRT[\"Tetracyclines\"] += 1;\r\n  }\r\n  if (data[\"amr_category\"] === \"No AMR detected\") {\r\n    if (currentRFWG[\"Susceptible\"] === undefined)\r\n      currentRFWG[\"Susceptible\"] = 1;\r\n    else currentRFWG[\"Susceptible\"] += 1;\r\n    currentDRT[\"Susceptible\"] += 1;\r\n  } else {\r\n    currentRFWG.total += 1;\r\n  }\r\n  if (data[\"cip_pred_pheno\"] === \"CipR\") {\r\n    if (currentRFWG[\"Fluoroquinolones (CipR)\"] === undefined)\r\n      currentRFWG[\"Fluoroquinolones (CipR)\"] = 1;\r\n    else currentRFWG[\"Fluoroquinolones (CipR)\"] += 1;\r\n    currentDRT[\"Fluoroquinolones (CipR)\"] += 1;\r\n  }\r\n\r\n  return [RFWGData, DRTData];\r\n}\r\n\r\nfunction DRTDataResults(DRTData) {\r\n  DRTData = JSON.parse(DRTData);\r\n  DRTData.forEach((element) => {\r\n    const drugsPercentage = {};\r\n    for (const key in element) {\r\n      if (key !== \"name\" && key !== \"total\") {\r\n        const aux = (element[key] * 100) / element.total;\r\n        drugsPercentage[key] = element[key];\r\n        element[key] = aux;\r\n      }\r\n    }\r\n    element.drugsPercentage = drugsPercentage;\r\n  });\r\n  return DRTData;\r\n}\r\n\r\nfunction AMRData(currentData, data) {\r\n  currentData = JSON.parse(currentData);\r\n  const fluoroR = [\r\n    \"3_QRDR + qnrS\",\r\n    \"3_QRDR + qnrB\",\r\n    \"3_QRDR\",\r\n    \"2_QRDR + qnrS\",\r\n    \"2_QRDR + qnrB\",\r\n    \"1_QRDR + qnrS\",\r\n    \"1_QRDR + qnrB\",\r\n  ];\r\n  const fluoroI = [\"2_QRDR\", \"1_QRDR\", \"0_QRDR + qnrS\", \"0_QRDR + qnrB\"];\r\n  const cotrim = [\r\n    \"dfrA1\",\r\n    \"dfrA5\",\r\n    \"dfrA7\",\r\n    \"dfrA14\",\r\n    \"dfrA15\",\r\n    \"dfrA17\",\r\n    \"dfrA18\",\r\n  ];\r\n  const trime = [\r\n    \"dfrA1\",\r\n    \"dfrA14\",\r\n    \"dfrA15\",\r\n    \"dfrA17\",\r\n    \"dfrA18\",\r\n    \"dfrA5\",\r\n    \"dfrA7\",\r\n  ];\r\n\r\n  Object.keys(currentData).forEach((key) => {\r\n    let index = currentData[key].findIndex((x) => x.genotype === data.GENOTYPE);\r\n    if (index === -1) {\r\n      currentData[key].push({ genotype: data.GENOTYPE, total: 0, total2: 0 });\r\n      index = currentData[key].length - 1;\r\n    }\r\n    if (key === \"Azithromycin\") {\r\n      const AZITH = data[\"azith_pred_pheno\"];\r\n      if (AZITH === \"AzithR\") {\r\n        currentData[key][index].total += 1;\r\n        currentData[key][index].total2 += 1;\r\n        if (\r\n          data[\"ereA\"] === \"1\" &&\r\n          data[\"acrB_R717Q\"] === \"1\" &&\r\n          data[\"acrB_R717L\" == \"1\"]\r\n        ) {\r\n          const name = \"ereA + acrB_R717Q + acrB_R717L\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        } else {\r\n          if (data[\"ereA\"] === \"1\" && data[\"acrB_R717Q\"] === \"1\") {\r\n            const name = \"ereA + acrB_R717Q\";\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          } else if (data[\"ereA\"] === \"1\" && data[\"acrB_R717L\"] === \"1\") {\r\n            const name = \"ereA + acrB_R717L\";\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          } else if (data[\"acrB_R717Q\"] === \"1\" && data[\"acrB_R717L\"] === \"1\") {\r\n            const name = \"acrB_R717Q + acrB_R717L\";\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          } else if (data[\"ereA\"] === \"1\") {\r\n            const name = \"ereA\";\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          } else if (data[\"acrB_R717Q\"] === \"1\") {\r\n            const name = \"acrB_R717Q\";\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          } else if (data[\"acrB_R717L\"] === \"1\") {\r\n            const name = \"acrB_R717L\";\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          }\r\n        }\r\n      } else if (AZITH === \"AzithS\") {\r\n        currentData[key][index].total2 += 1;\r\n        const name = \"None\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === \"Fluoroquinolones (CipI/R)\") {\r\n      const DCS = data[\"dcs_mechanisms\"];\r\n      if (DCS === \"0_QRDR\") {\r\n        currentData[key][index].total2 += 1;\r\n        const name = \"None (CipS)\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      } else if (fluoroR.includes(DCS)) {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        const name = DCS + \" (CipR)\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      } else if (fluoroI.includes(DCS)) {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        const name = DCS + \" (CipI)\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === \"ESBL\") {\r\n      const ESBL = data[\"ESBL_category\"];\r\n      if (ESBL === \"ESBL\") {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        // if (data[\"blaCTX-M-12\"] === \"1\") {\r\n        //   const name = \"blaCTX-M-12\";\r\n        //   if (currentData[key][index][name] === undefined) {\r\n        //     currentData[key][index][name] = 1;\r\n        //   } else {\r\n        //     currentData[key][index][name] += 1;\r\n        //   }\r\n        // }\r\n        if (data[\"blaCTX-M-15_23\"] === \"1\") {\r\n          const name = \"blaCTX-M-15\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data[\"blaOXA-7\"] === \"1\") {\r\n          const name = \"blaOXA-7\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data[\"blaSHV-12\"] === \"1\") {\r\n          const name = \"blaSHV-12\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data[\"blaCTX-M-55\"] === \"1\") {\r\n          const name = \"blaCTX-M-55\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n      } else if (ESBL === \"Non-ESBL\") {\r\n        currentData[key][index].total2 += 1;\r\n        const name = \"None\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === \"Chloramphenicol\") {\r\n      const CHLO = data[\"chloramphenicol_category\"];\r\n      if (CHLO === \"ChlR\") {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        if (data[\"catA1\"] === \"1\" && data[\"cmlA\"] === \"1\") {\r\n          const name = \"catA1 + cmlA\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        } else {\r\n          if (data[\"catA1\"] === \"1\") {\r\n            const name = \"catA1\";\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          }\r\n          if (data[\"cmlA\"] === \"1\") {\r\n            const name = \"cmlA\";\r\n            if (currentData[key][index][name] === undefined) {\r\n              currentData[key][index][name] = 1;\r\n            } else {\r\n              currentData[key][index][name] += 1;\r\n            }\r\n          }\r\n        }\r\n      } else if (CHLO === \"ChlS\") {\r\n        currentData[key][index].total2 += 1;\r\n        const name = \"None\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === \"Ampicillin\") {\r\n      currentData[key][index].total2 += 1;\r\n      //   if (data[\"blaTEM-1D\"] === \"1\" && data[\"blaOXA-1\"] === \"1\") {\r\n      //     currentData[key][index].total += 1;\r\n      //     const name = \"blaTEM-1D + blaOXA-1\";\r\n      //     if (currentData[key][index][name] === undefined) {\r\n      //       currentData[key][index][name] = 1;\r\n      //     } else {\r\n      //       currentData[key][index][name] += 1;\r\n      //     }\r\n      //   } else\r\n\r\n      if (data[\"blaTEM-1D\"] === \"1\") {\r\n        currentData[key][index].total += 1;\r\n        const name = \"blaTEM-1D\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n      //   else if (data[\"blaOXA-1\"] === \"1\") {\r\n      //     currentData[key][index].total += 1;\r\n      //     const name = \"blaOXA-1\";\r\n      //     if (currentData[key][index][name] === undefined) {\r\n      //       currentData[key][index][name] = 1;\r\n      //     } else {\r\n      //       currentData[key][index][name] += 1;\r\n      //     }\r\n      //   }\r\n      else {\r\n        const name = \"None\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === \"Co-trimoxazole\") {\r\n      const COTRIM = data[\"co_trim\"];\r\n      if (COTRIM === \"1\") {\r\n        const genes = [];\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        for (const i in cotrim) {\r\n          if (data[cotrim[i]] === \"1\") {\r\n            genes.push(cotrim[i]);\r\n          }\r\n        }\r\n        if (data[\"sul1\"] === \"1\") {\r\n          genes.push(\"sul1\");\r\n        }\r\n        if (data[\"sul2\"] === \"1\") {\r\n          genes.push(\"sul2\");\r\n        }\r\n        const name = genes.join(\" + \");\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      } else if (COTRIM === \"0\") {\r\n        currentData[key][index].total2 += 1;\r\n        const name = \"None\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === \"Sulphonamides\") {\r\n      const SULPH = data[\"sul_any\"];\r\n      if (SULPH === \"1\") {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        if (data[\"sul1\"] === \"1\" && data[\"sul2\"] === \"1\") {\r\n          const name = \"sul1 + sul2\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        } else if (data[\"sul1\"] === \"1\") {\r\n          const name = \"sul1\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        } else if (data[\"sul2\"] === \"1\") {\r\n          const name = \"sul2\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n      } else if (SULPH === \"0\") {\r\n        currentData[key][index].total2 += 1;\r\n        const name = \"None\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === \"Trimethoprim\") {\r\n      const TRIM = data[\"dfra_any\"];\r\n      if (TRIM === \"1\") {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        if (data[\"dfrA7\"] === \"1\" && data[\"dfrA14\"] === \"1\") {\r\n          const name = \"dfrA7 + dfrA14\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        } else {\r\n          for (const i in trime) {\r\n            if (data[trime[i]] === \"1\") {\r\n              const name = trime[i];\r\n              if (currentData[key][index][name] === undefined) {\r\n                currentData[key][index][name] = 1;\r\n              } else {\r\n                currentData[key][index][name] += 1;\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      } else if (TRIM === \"0\") {\r\n        currentData[key][index].total2 += 1;\r\n        const name = \"None\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    } else if (key === \"Tetracyclines\") {\r\n      const TETRA = data[\"tetracycline_category\"];\r\n      if (TETRA === \"TetR\") {\r\n        currentData[key][index].total2 += 1;\r\n        currentData[key][index].total += 1;\r\n        if (data[\"tetA(A)\"] === \"1\") {\r\n          const name = \"tetA(A)\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data[\"tetA(B)\"] === \"1\") {\r\n          const name = \"tetA(B)\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data[\"tetA(C)\"] === \"1\") {\r\n          const name = \"tetA(C)\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n        if (data[\"tetA(D)\"] === \"1\") {\r\n          const name = \"tetA(D)\";\r\n          if (currentData[key][index][name] === undefined) {\r\n            currentData[key][index][name] = 1;\r\n          } else {\r\n            currentData[key][index][name] += 1;\r\n          }\r\n        }\r\n      } else if (TETRA === \"TetS\") {\r\n        currentData[key][index].total2 += 1;\r\n        const name = \"None\";\r\n        if (currentData[key][index][name] === undefined) {\r\n          currentData[key][index][name] = 1;\r\n        } else {\r\n          currentData[key][index][name] += 1;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return currentData;\r\n}\r\n\r\nfunction AMRDataResults(AMRData) {\r\n  AMRData = JSON.parse(AMRData);\r\n\r\n  Object.keys(AMRData).forEach((key) => {\r\n    const data = AMRData[key];\r\n\r\n    const top10 = [];\r\n    data.forEach((element) => {\r\n      if (top10.length < 10) {\r\n        top10.push(element);\r\n      } else {\r\n        top10.sort(function (a, b) {\r\n          if (a.total === b.total && a.genotype > b.genotype) return -1;\r\n          return a.total > b.total ? -1 : 1;\r\n        });\r\n        if (element.total === top10[9].total) {\r\n          if (element.genotype > top10[9].genotype) top10[9] = element;\r\n        }\r\n        if (element.total > top10[9].total) top10[9] = element;\r\n      }\r\n    });\r\n    top10.sort(function (a, b) {\r\n      if (a.total === b.total && a.genotype > b.genotype) return -1;\r\n      return a.total > b.total ? -1 : 1;\r\n    });\r\n    top10.push({\r\n      maxSum: data.length === 0 ? 0 : Math.ceil(data[0].total2 / 50) * 50,\r\n    });\r\n\r\n    AMRData[key] = top10;\r\n  });\r\n\r\n  return AMRData;\r\n}\r\n\r\nfunction GDData(currentData, data) {\r\n  currentData = JSON.parse(currentData);\r\n\r\n  const index = currentData.findIndex((x) => x.name === data.DATE);\r\n  if (index === -1) {\r\n    currentData.push({\r\n      name: data.DATE,\r\n      [data.GENOTYPE]: 1,\r\n      total: 1,\r\n    });\r\n  } else {\r\n    currentData[index].total += 1;\r\n    if (currentData[index][data.GENOTYPE] === undefined)\r\n      currentData[index][data.GENOTYPE] = 1;\r\n    else currentData[index][data.GENOTYPE] += 1;\r\n  }\r\n\r\n  return currentData;\r\n}\r\n\r\nexport function filterForComponents({\r\n  country,\r\n  minYear,\r\n  maxYear,\r\n  dataset,\r\n  region,\r\n  data,\r\n  amr,\r\n}) {\r\n  const [results, genotypes, worldMapResults, PMIDResults] = [[], [], [], []];\r\n  let [\r\n    aux,\r\n    auxWM,\r\n    worldMapComplementaryResults,\r\n    worldMapG,\r\n    worldMapH58,\r\n    worldMapSTAD,\r\n    worldMapMDR,\r\n    worldMapXDR,\r\n    worldMapAZITH,\r\n    worldMapCIPR,\r\n    worldMapCIPI,\r\n    RFWGResults,\r\n    DRTResults,\r\n    AMRResults,\r\n    GDResults,\r\n  ] = [null, null, {}, [], [], [], [], [], [], [], [], [], [], {}, []];\r\n  AMRResults = {\r\n    Ampicillin: [],\r\n    Azithromycin: [],\r\n    Chloramphenicol: [],\r\n    \"Co-trimoxazole\": [],\r\n    ESBL: [],\r\n    \"Fluoroquinolones (CipI/R)\": [],\r\n    Sulphonamides: [],\r\n    Tetracyclines: [],\r\n    Trimethoprim: [],\r\n  };\r\n\r\n  const empty = [\"\", \"-\"];\r\n  data.forEach((x) => {\r\n    aux = true;\r\n    auxWM = true; // WM = World Map\r\n\r\n    // Validation if row will be used, this will allways happen\r\n    if (country !== \"All\" && x.COUNTRY_ONLY !== country) auxWM = false;\r\n    if (x.DATE < minYear || x.DATE > maxYear) aux = false;\r\n    if (dataset !== \"All\" && x.TRAVEL !== dataset.toLowerCase()) aux = false;\r\n    if (\r\n      country !== \"All\" &&\r\n      region !== \"All\" &&\r\n      (empty.includes(x.REGION_IN_COUNTRY) || region !== x.REGION_IN_COUNTRY)\r\n    )\r\n      auxWM = false;\r\n\r\n    // If this passes than it's data for the map\r\n    if (aux && !empty.includes(x.COUNTRY_ONLY)) {\r\n      let displayName = x.COUNTRY_ONLY;\r\n      if (x.COUNTRY_ONLY === \"Democratic Republic of the Congo\")\r\n        displayName = \"Dem. Rep. Congo\";\r\n      else if (x.COUNTRY_ONLY === \"Central African Republic\")\r\n        displayName = \"Central African Rep.\";\r\n      else if (\r\n        x.COUNTRY_ONLY === \"Ivory Coast\" ||\r\n        x.COUNTRY_ONLY === \"Cote d'Ivoire\"\r\n      )\r\n        displayName = \"Côte d'Ivoire\";\r\n      else if (x.COUNTRY_ONLY === \"East Timor\") displayName = \"Timor-Leste\";\r\n      else if (x.COUNTRY_ONLY === \"State of Palestine\")\r\n        displayName = \"Palestine\";\r\n      else if (x.COUNTRY_ONLY === \"Dominican Republic\")\r\n        displayName = \"Dominican Rep.\";\r\n      else if (x.COUNTRY_ONLY === \"Viet Nam\") displayName = \"Vietnam\";\r\n      else if (x.COUNTRY_ONLY === \"USA\")\r\n        displayName = \"United States of America\";\r\n      else if (x.COUNTRY_ONLY === \"Cape Verde\")\r\n        displayName = \"Cabo Verde\";\r\n      else if (x.COUNTRY_ONLY === \"Turks and Caicos Islands\")\r\n        displayName = \"Turks and Caicos Is.\";\r\n\r\n      // WORLD MAP\r\n      if (!worldMapResults.some((e) => e.name === x.COUNTRY_ONLY)) {\r\n        worldMapResults.push({\r\n          name: x.COUNTRY_ONLY,\r\n          displayName: displayName,\r\n          count: 1,\r\n        });\r\n      } else {\r\n        let aux2 = worldMapResults.find((e) => e.name === x.COUNTRY_ONLY);\r\n        let countryIndex = worldMapResults.findIndex(\r\n          (e) => e.name === x.COUNTRY_ONLY\r\n        );\r\n        aux2.count += 1;\r\n        worldMapResults[countryIndex] = aux2;\r\n      }\r\n\r\n      // WORLD MAP COMPLEMENTARY DATA FOR WORLD MAP (lines 572-583)\r\n      if (worldMapComplementaryResults[displayName] === undefined)\r\n        worldMapComplementaryResults[displayName] = WMCDTemplate;\r\n      worldMapComplementaryResults[displayName] = WMCDAux(\r\n        JSON.stringify(worldMapComplementaryResults[displayName]),\r\n        x\r\n      );\r\n\r\n      // WORLD MAP DATA FOR EACH MAPVIEW\r\n      worldMapG = WMCountData(\r\n        JSON.stringify(worldMapG),\r\n        x,\r\n        displayName,\r\n        \"GENOTYPE\",\r\n        \"genotypes\",\r\n        \"lineage\"\r\n      );\r\n      worldMapH58 = WMCountData(\r\n        JSON.stringify(worldMapH58),\r\n        x,\r\n        displayName,\r\n        \"GENOTYPE_SIMPLE\",\r\n        \"genotypes\",\r\n        \"type\",\r\n        true\r\n      );\r\n      worldMapSTAD = WMCountData(\r\n        JSON.stringify(worldMapSTAD),\r\n        x,\r\n        displayName,\r\n        \"amr_category\",\r\n        \"STADs\",\r\n        \"type\",\r\n        false,\r\n        \"No AMR detected\"\r\n      );\r\n      worldMapMDR = WMCountData(\r\n        JSON.stringify(worldMapMDR),\r\n        x,\r\n        displayName,\r\n        \"MDR\",\r\n        \"MDRs\",\r\n        \"type\",\r\n        false,\r\n        \"MDR\"\r\n      );\r\n      worldMapXDR = WMCountData(\r\n        JSON.stringify(worldMapXDR),\r\n        x,\r\n        displayName,\r\n        \"XDR\",\r\n        \"XDRs\",\r\n        \"type\",\r\n        false,\r\n        \"XDR\"\r\n      );\r\n      worldMapAZITH = WMCountData(\r\n        JSON.stringify(worldMapAZITH),\r\n        x,\r\n        displayName,\r\n        \"azith_pred_pheno\",\r\n        \"AZs\",\r\n        \"type\",\r\n        false,\r\n        \"AzithR\"\r\n      );\r\n      worldMapCIPR = WMCountData(\r\n        JSON.stringify(worldMapCIPR),\r\n        x,\r\n        displayName,\r\n        \"cip_pred_pheno\",\r\n        \"CipRs\",\r\n        \"type\",\r\n        false,\r\n        \"CipR\"\r\n      );\r\n      worldMapCIPI = WMCountData(\r\n        JSON.stringify(worldMapCIPI),\r\n        x,\r\n        displayName,\r\n        \"cip_pred_pheno\",\r\n        \"CipIs\",\r\n        \"type\",\r\n        false,\r\n        \"\",\r\n        true\r\n      );\r\n    }\r\n\r\n    // If this passes than it's data for the graphs\r\n    if (aux && auxWM) {\r\n      results.push(x);\r\n      if (!genotypes.includes(x.GENOTYPE)) genotypes.push(x.GENOTYPE);\r\n\r\n      let chartData = ChartData(\r\n        JSON.stringify(RFWGResults),\r\n        JSON.stringify(DRTResults),\r\n        x\r\n      );\r\n      RFWGResults = chartData[0];\r\n      DRTResults = chartData[1];\r\n      AMRResults = AMRData(JSON.stringify(AMRResults), x);\r\n      GDResults = GDData(JSON.stringify(GDResults), x);\r\n\r\n      if (x.COUNTRY_ONLY === country) {\r\n        if (!PMIDResults.includes(x.PMID)) {\r\n          PMIDResults.push(x.PMID);\r\n        }\r\n      }\r\n    }\r\n  });\r\n  // Here are some ordenations and filters for the information before it is returned to the dashboard. IT IS IMPORTANT FOR THE CODE\r\n  worldMapComplementaryResults = WMCDResults(\r\n    JSON.stringify(worldMapComplementaryResults)\r\n  );\r\n  worldMapG = WMCountDataResults(JSON.stringify(worldMapG), \"genotypes\");\r\n  worldMapH58 = WMCountDataResults(JSON.stringify(worldMapH58), \"genotypes\");\r\n  worldMapSTAD = WMCountDataResults(JSON.stringify(worldMapSTAD), \"STADs\");\r\n  worldMapMDR = WMCountDataResults(JSON.stringify(worldMapMDR), \"MDRs\");\r\n  worldMapXDR = WMCountDataResults(JSON.stringify(worldMapXDR), \"XDRs\");\r\n  worldMapAZITH = WMCountDataResults(JSON.stringify(worldMapAZITH), \"AZs\");\r\n  worldMapCIPR = WMCountDataResults(JSON.stringify(worldMapCIPR), \"CipRs\");\r\n  worldMapCIPI = WMCountDataResults(JSON.stringify(worldMapCIPI), \"CipIs\");\r\n  RFWGResults.sort((a, b) => b.total - a.total);\r\n  DRTResults = DRTResults.filter((item) => item.total >= 10);\r\n  DRTResults.sort((a, b) => a.name.localeCompare(b.name));\r\n  DRTResults = DRTDataResults(JSON.stringify(DRTResults));\r\n  AMRResults = AMRDataResults(JSON.stringify(AMRResults));\r\n  GDResults.sort((a, b) => a.name - b.name);\r\n\r\n  return [\r\n    results, // ALL ROWS\r\n    genotypes.length, // Number of genotypes\r\n    worldMapResults, // Data for World Map Samples\r\n    worldMapComplementaryResults, // Data for World Map Complementary Data\r\n    worldMapG, // World Map Genotypes data\r\n    worldMapH58, // WM H58 data\r\n    worldMapSTAD, // WM Sensitive to all drugs data\r\n    worldMapMDR, // WM MDR data\r\n    worldMapXDR, // WM XDR data\r\n    worldMapAZITH, // WM AzithR data\r\n    worldMapCIPR, // WM CipR data\r\n    worldMapCIPI, // WM CipI data\r\n    PMIDResults, // PMID data\r\n    RFWGResults, // Data for Resistance frequencies within genotypes graph\r\n    DRTResults, // Data for Drug resistance trends graph\r\n    AMRResults, // Data for Resistance determinants within genotypes graph\r\n    GDResults, // DATA for Genotype distribution graph\r\n  ];\r\n}\r\n","import \"./index.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Sphere,\r\n  Graticule,\r\n  ZoomableGroup,\r\n} from \"react-simple-maps\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { Tooltip as IconTooltip } from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TooltipMaterialUI from \"@material-ui/core/Tooltip\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  Label,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  Brush,\r\n  LineChart,\r\n  Line,\r\n  Legend,\r\n} from \"recharts\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlus,\r\n  faMinus,\r\n  faCrosshairs,\r\n  faCamera,\r\n  faTable,\r\n  faFilePdf,\r\n  faInfoCircle,\r\n  faUndoAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport download from \"downloadjs\";\r\nimport { svgAsPngUri } from \"save-svg-as-png\";\r\nimport typhinetLogoImg from \"../../assets/img/logo-typhinet-prod.png\";\r\nimport euFlagImg from \"../../assets/img/eu_flag.jpg\";\r\nimport geography from \"../../assets/world-50m.json\";\r\nimport { API_ENDPOINT } from \"../../constants\";\r\nimport {\r\n  getColorForGenotype,\r\n  getColorForDrug,\r\n  getColorForTetracyclines,\r\n} from \"../../util/colorHelper\";\r\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { Select as DropDownSelect } from \"react-dropdown-select\";\r\nimport \"rodal/lib/rodal.css\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport {\r\n  useStyles,\r\n  CustomCircularProgress,\r\n  CustomToggleButton,\r\n  Buttons,\r\n  ButtonClearSelect,\r\n} from \"./materialUI\";\r\nimport moment from \"moment\";\r\nimport { filterForComponents } from \"./filters\";\r\n\r\nconst DashboardPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [controlMapPosition, setControlMapPosition] = useState({\r\n    coordinates: [0, 0],\r\n    zoom: 1,\r\n  });\r\n\r\n  const [worldMapSamplesData, setWorldMapSamplesData] = useState([]);\r\n  const [worldMapComplementaryData, setWorldMapComplementaryData] = useState(\r\n    {}\r\n  );\r\n  const [worldMapGenotypesData, setWorldMapGenotypesData] = useState([]);\r\n  const [worldMapH58Data, setWorldMapH58Data] = useState([]);\r\n  const [worldMapMDRData, setWorldMapMDRData] = useState([]);\r\n  const [worldMapSTADData, setWorldMapSTADData] = useState([]);\r\n  const [worldMapXDRData, setWorldMapXDRData] = useState([]);\r\n  const [worldMapAZITHData, setWorldMapAZITHData] = useState([]);\r\n  const [worldMapCIPIData, setWorldMapCIPIData] = useState([]);\r\n  const [worldMapCIPRData, setWorldMapCIPRData] = useState([]);\r\n\r\n  const [plotAmrClassChart, setPlotAmrClassChart] = useState(function () { });\r\n  const [plotDrugsAndGenotypesChart, setPlotDrugsAndGenotypesChart] = useState(\r\n    function () { }\r\n  );\r\n  const [plotPopulationStructureChart, setPlotPopulationStructureChart] =\r\n    useState(function () { });\r\n  const [plotDrugTrendsChart, setPlotDrugTrendsChart] = useState(\r\n    function () { }\r\n  );\r\n\r\n  const [captureControlMapInProgress, setCaptureControlMapInProgress] =\r\n    useState(false);\r\n  const [\r\n    captureControlChartRFWGInProgress,\r\n    setCaptureControlChartRFWGInProgress,\r\n  ] = useState(false);\r\n  const [\r\n    captureControlChartDRTInProgress,\r\n    setCaptureControlChartDRTInProgress,\r\n  ] = useState(false);\r\n  const [captureControlChartGDInProgress, setCaptureControlChartGDInProgress] =\r\n    useState(false);\r\n  const [\r\n    captureControlChartRFWAGInProgress,\r\n    setCaptureControlChartRFWAGInProgress,\r\n  ] = useState(false);\r\n  const [captureReportInProgress, setCaptureReportInProgress] = useState(false);\r\n  const [tooltipContent, setTooltipContent] = useState(null);\r\n\r\n  const [timeInitial, setTimeInitial] = React.useState(0);\r\n  const [timeFinal, setTimeFinal] = React.useState(0);\r\n  const [actualTimeInitial, setActualTimeInitial] = React.useState(0);\r\n  const [actualTimeFinal, setActualTimeFinal] = React.useState(0);\r\n  const [years, setYears] = useState([0, 0]);\r\n\r\n  const [countriesForFilter, setCountriesForFilter] = React.useState([\"All\"]);\r\n  const [regionsForFilter, setRegionsForFilter] = React.useState([\"All\"]);\r\n  const [actualCountry, setActualCountry] = useState(\"All\");\r\n  const [actualRegion, setActualRegion] = useState(\"All\");\r\n\r\n  // const [actualContinent, setActualContinent] = useState(\"All\");\r\n  // const [continentOptions] = useState(['All', 'Africa', 'Asia', 'Central America', 'Europe', 'North America', 'Oceania', 'South America'])\r\n\r\n  const [populationStructureFilter, setPopulationStructureFilter] =\r\n    React.useState(1);\r\n  const [populationStructureFilterOptions] = useState([\r\n    { value: \"Number of genomes\", id: 1 },\r\n    { value: \"Percentage per year\", id: 2 },\r\n  ]);\r\n  const [RFWGFilterOptions] = useState([\r\n    { value: \"Number of genomes\", id: 1 },\r\n    { value: \"Percentage within genotype\", id: 2 },\r\n  ]);\r\n  const [amrClassFilterOptions] = useState([\r\n    { value: \"Number of genomes\", id: 1 },\r\n    { value: \"Percentage per genotype\", id: 2 },\r\n  ]);\r\n  const [amrClassFilterforFilterOptions] = useState([\r\n    { value: \"Ampicillin\", id: 0 },\r\n    { value: \"Azithromycin\", id: 1 },\r\n    { value: \"Chloramphenicol\", id: 2 },\r\n    { value: \"Co-trimoxazole\", id: 3 },\r\n    { value: \"ESBL\", id: 4 },\r\n    { value: \"Fluoroquinolones (CipI/R)\", id: 5 },\r\n    { value: \"Sulphonamides\", id: 6 },\r\n    { value: \"Tetracyclines\", id: 7 },\r\n    { value: \"Trimethoprim\", id: 8 },\r\n  ]);\r\n\r\n  const [RFWGFilter, setRFWGFilter] = React.useState(2);\r\n  const [amrClassesForFilter] = useState([\r\n    \"Ampicillin\",\r\n    \"Azithromycin\",\r\n    \"Chloramphenicol\",\r\n    \"Co-trimoxazole\",\r\n    \"ESBL\",\r\n    \"Fluoroquinolones (CipI/R)\",\r\n    \"Sulphonamides\",\r\n    \"Tetracyclines\",\r\n    \"Trimethoprim\",\r\n  ]);\r\n  const [drtClassesForFilter] = useState([\r\n    \"Ampicillin\",\r\n    \"Azithromycin\",\r\n    \"Chloramphenicol\",\r\n    \"Co-trimoxazole\",\r\n    \"ESBL\",\r\n    \"Fluoroquinolones (CipI/R)\",\r\n    \"Susceptible\",\r\n    \"Sulphonamides\",\r\n    \"Tetracyclines\",\r\n    \"Trimethoprim\",\r\n  ]);\r\n  const [trendClassesForFilter] = useState([\r\n    \"Ampicillin\",\r\n    \"Azithromycin\",\r\n    \"Chloramphenicol\",\r\n    /*\"Fluoroquinolone (CipI)\",*/ \"Fluoroquinolones (CipR)\",\r\n    \"Co-trimoxazole\",\r\n    \"ESBL\",\r\n    \"Fluoroquinolones (CipI/R)\",\r\n    \"Susceptible\",\r\n    \"Sulphonamides\",\r\n    \"Tetracyclines\",\r\n    \"Trimethoprim\",\r\n  ]);\r\n  const [trendDropdownOptions] = useState([\r\n    { value: \"Ampicillin\", id: 0 },\r\n    { value: \"Azithromycin\", id: 1 },\r\n    { value: \"Chloramphenicol\", id: 2 },\r\n    /*{value: \"Fluoroquinolone (CipI)\", id: 3},*/ {\r\n      value: \"Fluoroquinolones (CipR)\",\r\n      id: 3,\r\n    },\r\n    { value: \"Co-trimoxazole\", id: 4 },\r\n    { value: \"ESBL\", id: 5 },\r\n    { value: \"Fluoroquinolones (CipI/R)\", id: 6 },\r\n    { value: \"Susceptible\", id: 7 },\r\n    { value: \"Sulphonamides\", id: 8 },\r\n    { value: \"Tetracyclines\", id: 9 },\r\n    { value: \"Trimethoprim\", id: 10 },\r\n  ]);\r\n  const [RFWGDropdownOptions, setRFWGDropdownOptions] = useState([]);\r\n  const [amrClassFilter, setAmrClassFilter] = React.useState(\r\n    amrClassesForFilter[5]\r\n  );\r\n  const [RDWAGDataviewFilter, setRDWAGDataviewFilter] = React.useState(2);\r\n\r\n  const [drugTrendsChartData, setDrugTrendsChartData] = useState([]);\r\n  const [drugsAndGenotypesChartData, setDrugsAndGenotypesChartData] = useState(\r\n    []\r\n  );\r\n  const [populationStructureChartData, setPopulationStructureChartData] =\r\n    useState([]);\r\n  const [amrClassChartData, setAmrClassChartData] = useState({});\r\n\r\n  const [mapView, setMapView] = React.useState(\"CipI\");\r\n  const [dataset, setDataset] = React.useState(\"All\");\r\n  const [totalGenomes, setTotalGenomes] = useState(0);\r\n  const [actualGenomes, setActualGenomes] = useState(0);\r\n  const [totalGenotypes, setTotalGenotypes] = useState(0);\r\n  const [actualGenotypes, setActualGenotypes] = useState(0);\r\n  const [appLoading, setAppLoading] = useState(true);\r\n  const [lastUpdated, setLastUpdated] = useState(\"\");\r\n  const [countryPMID, setCountryPMID] = useState([]);\r\n\r\n  const [trendValues, setTrendValues] = React.useState(trendDropdownOptions);\r\n  const [RFWGValues, setRFWGValues] = React.useState([]);\r\n\r\n  const [desktop] = useState(767);\r\n  const [mobile] = useState(500);\r\n\r\n  const [hoverColor] = useState(\"#D2F1F6\");\r\n\r\n  const [dimensions, setDimensions] = React.useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth,\r\n  });\r\n\r\n  // Helper function for getting height and width of window\r\n  function debounce(fn, ms) {\r\n    let timer;\r\n    return (_) => {\r\n      clearTimeout(timer);\r\n      timer = setTimeout((_) => {\r\n        timer = null;\r\n        fn.apply(this, arguments);\r\n      }, ms);\r\n    };\r\n  }\r\n\r\n  // Format selected date\r\n  function formatDate(date) {\r\n    return moment(date).format(\"ddd MMM DD YYYY HH:mm:ss\");\r\n  }\r\n\r\n  // Watcher for window resize\r\n  useEffect(() => {\r\n    const debouncedHandleResize = debounce(function handleResize() {\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth,\r\n      });\r\n    }, 1000);\r\n\r\n    window.addEventListener(\"resize\", debouncedHandleResize);\r\n\r\n    return (_) => {\r\n      window.removeEventListener(\"resize\", debouncedHandleResize);\r\n    };\r\n  });\r\n\r\n  const [genotypes] = useState(\r\n    [\r\n      \"0\",\r\n      \"0.0.1\",\r\n      \"0.0.2\",\r\n      \"0.0.3\",\r\n      \"0.1\",\r\n      \"0.1.1\",\r\n      \"0.1.2\",\r\n      \"0.1.3\",\r\n      \"1.1\",\r\n      \"1.1.1\",\r\n      \"1.1.2\",\r\n      \"1.1.3\",\r\n      \"1.1.4\",\r\n      \"1.2\",\r\n      \"1.2.1\",\r\n      \"2\",\r\n      \"2.0.1\",\r\n      \"2.0.2\",\r\n      \"2.1\",\r\n      \"2.1.1\",\r\n      \"2.1.2\",\r\n      \"2.1.3\",\r\n      \"2.1.4\",\r\n      \"2.1.5\",\r\n      \"2.1.6\",\r\n      \"2.1.7\",\r\n      \"2.1.8\",\r\n      \"2.1.9\",\r\n      \"2.1.7.1\",\r\n      \"2.1.7.2\",\r\n      \"2.2\",\r\n      \"2.2.1\",\r\n      \"2.2.2\",\r\n      \"2.2.3\",\r\n      \"2.2.4\",\r\n      \"2.3\",\r\n      \"2.3.1\",\r\n      \"2.3.2\",\r\n      \"2.3.3\",\r\n      \"2.3.4\",\r\n      \"2.3.5\",\r\n      \"2.4\",\r\n      \"2.4.1\",\r\n      \"2.5\",\r\n      \"2.5.1\",\r\n      \"2.5.2\",\r\n      \"3\",\r\n      \"3.0.1\",\r\n      \"3.0.2\",\r\n      \"3.1\",\r\n      \"3.1.1\",\r\n      \"3.1.2\",\r\n      \"3.2\",\r\n      \"3.2.1\",\r\n      \"3.2.2\",\r\n      \"3.3\",\r\n      \"3.3.1\",\r\n      \"3.3.2\",\r\n      \"3.3.2.Bd1\",\r\n      \"3.3.2.Bd2\",\r\n      \"3.4\",\r\n      \"3.5\",\r\n      \"3.5.1\",\r\n      \"3.5.2\",\r\n      \"3.5.3\",\r\n      \"3.5.4\",\r\n      \"4\",\r\n      \"4.1\",\r\n      \"4.1.1\",\r\n      \"4.2\",\r\n      \"4.2.1\",\r\n      \"4.2.2\",\r\n      \"4.2.3\",\r\n      /*'4.3', '4.3.0', */ \"4.3.1\",\r\n      \"4.3.1.1\",\r\n      \"4.3.1.1.P1\",\r\n      \"4.3.1.1.EA1\",\r\n      \"4.3.1.2\",\r\n      \"4.3.1.2.EA2\",\r\n      \"4.3.1.2.EA3\",\r\n      \"4.3.1.3\",\r\n      \"4.3.1.3.Bdq\",\r\n    ].sort((a, b) => a.localeCompare(b))\r\n  );\r\n\r\n  // Get date from the las update on the table from admin page\r\n  useEffect(() => {\r\n    axios.get(`${API_ENDPOINT}mongo/lastUpdated`).then((res) => {\r\n      setLastUpdated(new Date(res.data));\r\n    });\r\n  }, []);\r\n\r\n  // Colors for the No. Samples label\r\n  const mapSamplesColorScale = (domain) => {\r\n    if (domain >= 1 && domain <= 9) {\r\n      return \"#4575b4\";\r\n    } else if (domain >= 10 && domain <= 19) {\r\n      return \"#91bfdb\";\r\n    } else if (domain >= 20 && domain <= 99) {\r\n      return \"#addd8e\";\r\n    } else if (domain >= 100 && domain <= 299) {\r\n      return \"#fee090\";\r\n    } else if (domain >= 300) {\r\n      return \"#fc8d59\";\r\n    }\r\n  };\r\n\r\n  const mapRedColorScale = (percentage) => {\r\n    const p = parseInt(percentage);\r\n    if (p >= 51) {\r\n      return \"#A20F17\";\r\n    } else if (p >= 11) {\r\n      return \"#DD2C24\";\r\n    } else if (p >= 3) {\r\n      return \"#FA694A\";\r\n    } else {\r\n      return \"#FAAD8F\";\r\n    }\r\n  };\r\n\r\n  const mapRedColorScaleForSensitive = (percentage) => {\r\n    const p = parseFloat(percentage);\r\n    if (p > 90) {\r\n      return \"#727272\";\r\n    } else if (p > 50) {\r\n      return \"#FAAD8F\";\r\n    } else if (p > 20) {\r\n      return \"#FA694A\";\r\n    } else if (p > 10) {\r\n      return \"#DD2C24\";\r\n    }\r\n    return \"#A20F17\";\r\n  };\r\n\r\n  // Tooltip for all graphs but the Resistance determinants within genotypes\r\n  const tooltip = React.useCallback(\r\n    (positionY, width1, width2, sort, wrapperS, stroke, chart = -1) => {\r\n      return (\r\n        <Tooltip\r\n          position={{\r\n            y:\r\n              dimensions.width < mobile\r\n                ? positionY[0]\r\n                : dimensions.width < desktop\r\n                  ? positionY[1]\r\n                  : positionY[2],\r\n            x: dimensions.width < mobile ? -10 : 0,\r\n          }}\r\n          wrapperStyle={wrapperS}\r\n          cursor={{ fill: hoverColor }}\r\n          content={({ active, payload, label }) => {\r\n            if (payload !== null) {\r\n              if (payload[0]?.payload.name === \"\") {\r\n                return null;\r\n              }\r\n\r\n              if (sort) {\r\n                payload.sort((a, b) => b.value - a.value);\r\n                payload = payload.reverse();\r\n              }\r\n              if (active) {\r\n                return (\r\n                  <div className=\"my-tooltip\">\r\n                    <div className=\"my-tooltip-title\">\r\n                      <span className=\"my-tooltip-title-label\">{label}</span>\r\n                      {chart === 0 && (\r\n                        <span className=\"my-tooltip-title-total\">\r\n                          {\"N = \" + payload[0].payload.totalS}\r\n                        </span>\r\n                      )}\r\n                      {chart === 4 && (\r\n                        <span className=\"my-tooltip-title-total\">\r\n                          {\"N = \" + payload[0].payload.quantities.totalS}\r\n                        </span>\r\n                      )}\r\n                      {chart === 1 && (\r\n                        <span className=\"my-tooltip-title-total\">\r\n                          {\"N = \" + payload[0].payload.total}\r\n                        </span>\r\n                      )}\r\n                      {chart === 2 && (\r\n                        <span className=\"my-tooltip-title-total\">\r\n                          {\"N = \" + payload[0].payload.total}\r\n                        </span>\r\n                      )}\r\n                      {chart === 3 && (\r\n                        <span className=\"my-tooltip-title-total\">\r\n                          {\"N = \" + payload[0].payload.total}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    <div\r\n                      className=\"my-tooltip-content\"\r\n                      style={{ width: width1 }}\r\n                    >\r\n                      {payload.reverse().map((item, index) => {\r\n                        let percentage =\r\n                          (item.value / item.payload.total) * 100;\r\n                        if (chart === 1) {\r\n                          percentage =\r\n                            (item.payload.drugsPercentage[item.dataKey] /\r\n                              item.payload.total) *\r\n                            100;\r\n                        }\r\n                        if (chart === 0) {\r\n                          percentage = (item.value / item.payload.totalS) * 100;\r\n                        }\r\n                        percentage = Math.round(percentage * 100) / 100;\r\n                        if (\r\n                          (populationStructureFilter === 2 && chart === 3) ||\r\n                          (RFWGFilter === 2 && chart === 4)\r\n                        ) {\r\n                          percentage = Math.round(item.value * 100) / 100;\r\n                        }\r\n                        if (\r\n                          chart === 1 &&\r\n                          item.payload.drugsPercentage[item.dataKey] === 0\r\n                        ) {\r\n                          return null;\r\n                        }\r\n                        return (\r\n                          <div\r\n                            key={index + item}\r\n                            className=\"my-tooltip-content-individual\"\r\n                            style={{ width: width2 }}\r\n                          >\r\n                            <div\r\n                              className=\"my-tooltip-content-square\"\r\n                              style={{\r\n                                backgroundColor: stroke\r\n                                  ? item.stroke\r\n                                  : item.fill,\r\n                              }}\r\n                            />\r\n                            <div className=\"my-tooltip-content-info\">\r\n                              <span\r\n                                className=\"my-tooltip-content-name\"\r\n                                style={{\r\n                                  width:\r\n                                    dimensions.width < mobile ? \"80%\" : \"100%\",\r\n                                }}\r\n                              >\r\n                                {item.name}\r\n                              </span>\r\n                              <span className=\"my-tooltip-content-count\">\r\n                                N ={\" \"}\r\n                                {(populationStructureFilter === 2 &&\r\n                                  chart === 3) ||\r\n                                  (RFWGFilter === 2 && chart === 4)\r\n                                  ? item.payload.quantities[item.name]\r\n                                  : chart === 1\r\n                                    ? item.payload.drugsPercentage[item.dataKey]\r\n                                    : item.value}\r\n                              </span>\r\n                              <span className=\"my-tooltip-content-percent\">\r\n                                {percentage}%\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            }\r\n            return null;\r\n          }}\r\n        />\r\n      );\r\n    },\r\n    [\r\n      desktop,\r\n      dimensions,\r\n      mobile,\r\n      populationStructureFilter,\r\n      RFWGFilter,\r\n      hoverColor,\r\n    ]\r\n  );\r\n\r\n  // Genotype Distribution graph\r\n  useEffect(() => {\r\n    const plotPopulationStructureChart = () => {\r\n      if (populationStructureFilter === 1) {\r\n        /* QUANTITY */\r\n        let maxH = 0;\r\n        for (\r\n          let index = 0;\r\n          index < populationStructureChartData.length;\r\n          index++\r\n        ) {\r\n          if (populationStructureChartData[index].total > maxH) {\r\n            maxH = populationStructureChartData[index].total;\r\n          }\r\n        }\r\n        maxH = Math.ceil(maxH / 50) * 50;\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={350}\r\n              data={populationStructureChartData}\r\n              margin={{\r\n                top: 20,\r\n                bottom: 5,\r\n                right: 0,\r\n              }}\r\n              maxBarSize={62}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                padding={{ left: 5, right: 5 }}\r\n                dataKey=\"name\"\r\n                interval=\"preserveStartEnd\"\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis\r\n                domain={[0, maxH]}\r\n                allowDataOverflow={true}\r\n                allowDecimals={false}\r\n                width={70}\r\n              >\r\n                <Label\r\n                  angle={-90}\r\n                  position=\"insideLeft\"\r\n                  className=\"PSC-label\"\r\n                  offset={6}\r\n                >\r\n                  Number of genomes\r\n                </Label>\r\n              </YAxis>\r\n              {populationStructureChartData.length > 0 && (\r\n                <Brush\r\n                  dataKey=\"name\"\r\n                  height={20}\r\n                  stroke={\"rgb(31, 187, 211)\"}\r\n                />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"PSC-legend\">\r\n                      <div className=\"PSC-legend-div\">\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry;\r\n                          return (\r\n                            <div\r\n                              key={index + \"PSC_2\"}\r\n                              className=\"PSC-legend-info\"\r\n                            >\r\n                              <div\r\n                                className=\"PSC-legend-info-circle\"\r\n                                style={{ backgroundColor: color }}\r\n                              />\r\n                              <span className=\"PSC-legend-info-name\">\r\n                                {dataKey}\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {tooltip(\r\n                [290, 290, 260],\r\n                dimensions.width < 620 ? 250 : 530,\r\n                dimensions.width > 620 ? \"20%\" : \"50%\",\r\n                false,\r\n                { zIndex: 100, top: 20, right: -20 },\r\n                false,\r\n                2\r\n              )}\r\n              {genotypes.map((item, i) => (\r\n                <Bar\r\n                  key={i + \"PSC_Q\"}\r\n                  dataKey={item}\r\n                  stackId={0}\r\n                  fill={getColorForGenotype(item)}\r\n                />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      } else {\r\n        /* PERCENTAGE */\r\n        let maxH = 100;\r\n\r\n        let teste = JSON.parse(JSON.stringify(populationStructureChartData));\r\n        teste.forEach((element) => {\r\n          element[\"quantities\"] = {};\r\n          const keys = Object.keys(element);\r\n          for (const key in keys) {\r\n            if (\r\n              keys[key] !== \"name\" &&\r\n              keys[key] !== \"total\" &&\r\n              keys[key] !== \"quantities\"\r\n            ) {\r\n              let aux = keys[key];\r\n              element.quantities[aux] = element[aux];\r\n              element[aux] = (element[aux] * 100) / element.total;\r\n            }\r\n          }\r\n        });\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={350}\r\n              data={teste}\r\n              margin={{\r\n                top: 20,\r\n                bottom: 5,\r\n                right: 0,\r\n              }}\r\n              maxBarSize={62}\r\n              barCategoryGap={\"10%\"}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                padding={{ left: 5, right: 5 }}\r\n                dataKey=\"name\"\r\n                interval=\"preserveStartEnd\"\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis\r\n                domain={[0, maxH]}\r\n                allowDataOverflow={true}\r\n                allowDecimals={false}\r\n                width={70}\r\n              >\r\n                <Label\r\n                  angle={-90}\r\n                  position=\"insideLeft\"\r\n                  className=\"PSC-label\"\r\n                  offset={6}\r\n                >\r\n                  % Genomes per year\r\n                </Label>\r\n              </YAxis>\r\n              {teste.length > 0 && (\r\n                <Brush\r\n                  dataKey=\"name\"\r\n                  height={20}\r\n                  stroke={\"rgb(31, 187, 211)\"}\r\n                />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"PSC-legend\">\r\n                      <div className=\"PSC-legend-div\">\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry;\r\n                          return (\r\n                            <div\r\n                              key={index + \"PSC\"}\r\n                              className=\"PSC-legend-info\"\r\n                            >\r\n                              <div\r\n                                className=\"PSC-legend-info-circle\"\r\n                                style={{ backgroundColor: color }}\r\n                              />\r\n                              <span className=\"PSC-legend-info-name\">\r\n                                {dataKey}\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {tooltip(\r\n                [290, 290, 260],\r\n                dimensions.width < 620 ? 250 : 530,\r\n                dimensions.width > 620 ? \"20%\" : \"50%\",\r\n                false,\r\n                { zIndex: 100, top: 20, right: -20 },\r\n                false,\r\n                3\r\n              )}\r\n              {genotypes.map((item, i) => (\r\n                <Bar\r\n                  key={i + \"PSC_P\"}\r\n                  dataKey={item}\r\n                  stackId=\"a\"\r\n                  fill={getColorForGenotype(item)}\r\n                />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      }\r\n    };\r\n    setPlotPopulationStructureChart(plotPopulationStructureChart);\r\n  }, [\r\n    dimensions.width,\r\n    genotypes,\r\n    populationStructureChartData,\r\n    populationStructureFilter,\r\n    tooltip,\r\n  ]);\r\n\r\n  // Resistance determinants within genotypes graph and tooltip\r\n  useEffect(() => {\r\n    const amrClassChartTooltip = () => {\r\n      return (\r\n        <Tooltip\r\n          position={{ x: 0, y: 230 }}\r\n          wrapperStyle={{ zIndex: 100, top: 50 }}\r\n          allowEscapeViewBox={{ x: true, y: true }}\r\n          cursor={{ fill: hoverColor }}\r\n          content={({ active, payload, label }) => {\r\n            if (payload !== null) {\r\n              if (active) {\r\n                return (\r\n                  <div className=\"my-tooltip\">\r\n                    <div className=\"my-tooltip-title\">\r\n                      <span className=\"my-tooltip-title-label\">{label}</span>\r\n                      <span className=\"my-tooltip-title-total\">\r\n                        {\"N = \" + payload[0].payload.total2}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"my-tooltip-content amr-tooltip-content\">\r\n                      {payload.reverse().map((item, index) => {\r\n                        let percentage;\r\n                        if (RDWAGDataviewFilter === 1) {\r\n                          percentage = (item.value / item.payload.total2) * 100;\r\n                        } else {\r\n                          percentage = item.value;\r\n                        }\r\n                        percentage = Math.round(percentage * 100) / 100;\r\n                        return (\r\n                          <div\r\n                            key={index + \"tooltip\"}\r\n                            className=\"amr-tooltip-content-individual\"\r\n                          >\r\n                            <div\r\n                              className=\"my-tooltip-content-square\"\r\n                              style={{ backgroundColor: item.fill }}\r\n                            />\r\n                            <div className=\"amr-tooltip-content-info\">\r\n                              <span className=\"amr-tooltip-content-name\">\r\n                                {item.name}\r\n                              </span>\r\n                              <span className=\"my-tooltip-content-count\">\r\n                                N ={\" \"}\r\n                                {RDWAGDataviewFilter === 2\r\n                                  ? item.payload.percentage[item.name]\r\n                                  : item.value}\r\n                              </span>\r\n                              <span className=\"my-tooltip-content-percent\">\r\n                                {percentage}%\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            }\r\n\r\n            return null;\r\n          }}\r\n        />\r\n      );\r\n    };\r\n\r\n    const armClassFilterComponent = (info) => {\r\n      let maxSum = 0;\r\n      const amr = amrClassChartData[amrClassFilter];\r\n      if (amr && amr[amr.length - 1] !== undefined) {\r\n        maxSum = amr[amr.length - 1].maxSum;\r\n      }\r\n\r\n      let dataAMR = amr?.slice(0, amr.length - 1);\r\n      if (dataAMR === undefined) dataAMR = [];\r\n\r\n      if (RDWAGDataviewFilter === 1) {\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={dataAMR}\r\n              margin={{\r\n                top: 20,\r\n                left: 0,\r\n                bottom: 5,\r\n                right: 0,\r\n              }}\r\n              layout=\"horizontal\"\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                padding={{ left: 5, right: 5 }}\r\n                dataKey=\"genotype\"\r\n                type={\"category\"}\r\n                interval={dimensions.width < 1700 ? 1 : 0}\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis\r\n                domain={[0, maxSum]}\r\n                type={\"number\"}\r\n                allowDecimals={false}\r\n                width={70}\r\n              >\r\n                <Label\r\n                  angle={-90}\r\n                  position=\"insideLeft\"\r\n                  className=\"RDWAG-label\"\r\n                  offset={6}\r\n                >\r\n                  Number of occurrences\r\n                </Label>\r\n              </YAxis>\r\n              {dataAMR.length > 0 && (\r\n                <Brush\r\n                  dataKey=\"genotype\"\r\n                  height={20}\r\n                  stroke={\"rgb(31, 187, 211)\"}\r\n                />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RDWAG-legend\">\r\n                      <div\r\n                        className=\"RDWAG-legend-div\"\r\n                        style={{\r\n                          justifyContent:\r\n                            amrClassFilter === \"Ampicillin\" ||\r\n                              amrClassFilter === \"Fluoroquinolones (CipI/R)\"\r\n                              ? \"\"\r\n                              : \"space-between\",\r\n                        }}\r\n                      >\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry;\r\n                          return (\r\n                            <div\r\n                              key={index + \"RDWAG-legend\"}\r\n                              className=\"RDWAG-legend-info\"\r\n                            >\r\n                              <div\r\n                                className=\"RDWAG-legend-info-circle\"\r\n                                style={{ backgroundColor: color }}\r\n                              />\r\n                              <span className=\"RDWAG-legend-info-name\">\r\n                                {dataKey}\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {amrClassChartTooltip()}\r\n              {info.bars.map((item, i) => {\r\n                return (\r\n                  <Bar\r\n                    key={i + \"RDWAG_Q\"}\r\n                    dataKey={item[0]}\r\n                    fill={item[1]}\r\n                    stackId=\"a\"\r\n                    barSize={30}\r\n                  />\r\n                );\r\n              })}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      } else if (RDWAGDataviewFilter === 2) {\r\n        let temp = JSON.parse(JSON.stringify(dataAMR));\r\n\r\n        temp.forEach((element) => {\r\n          element.percentage = {};\r\n          for (const key in element) {\r\n            if (\r\n              ![\"genotype\", \"total\", \"total2\", \"percentage\"].includes(key) &&\r\n              !key.includes(\"error\")\r\n            ) {\r\n              const aux = (element[key] * 100) / element.total2;\r\n              element.percentage[key] = element[key];\r\n              element[key] = aux;\r\n            }\r\n          }\r\n        });\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              height={300}\r\n              data={temp}\r\n              margin={{\r\n                top: 20,\r\n                left: 0,\r\n                bottom: 5,\r\n                right: 0,\r\n              }}\r\n              layout=\"horizontal\"\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                padding={{ left: 5, right: 5 }}\r\n                dataKey=\"genotype\"\r\n                type={\"category\"}\r\n                interval={dimensions.width < 1700 ? 1 : 0}\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis\r\n                domain={[0, 100]}\r\n                type={\"number\"}\r\n                allowDecimals={false}\r\n                width={70}\r\n                allowDataOverflow={true}\r\n              >\r\n                <Label\r\n                  angle={-90}\r\n                  position=\"insideLeft\"\r\n                  className=\"RDWAG-label\"\r\n                  offset={6}\r\n                >\r\n                  % Genomes\r\n                </Label>\r\n              </YAxis>\r\n              {temp.length > 0 && (\r\n                <Brush\r\n                  dataKey=\"genotype\"\r\n                  height={20}\r\n                  stroke={\"rgb(31, 187, 211)\"}\r\n                />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RDWAG-legend\">\r\n                      <div\r\n                        className=\"RDWAG-legend-div\"\r\n                        style={{\r\n                          justifyContent:\r\n                            amrClassFilter === \"Ampicillin\" ||\r\n                              amrClassFilter === \"Fluoroquinolones (CipI/R)\"\r\n                              ? \"\"\r\n                              : \"space-between\",\r\n                        }}\r\n                      >\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry;\r\n                          return (\r\n                            <div\r\n                              key={index + \"RDWAG-legend-2\"}\r\n                              className=\"RDWAG-legend-info\"\r\n                            >\r\n                              <div\r\n                                className=\"RDWAG-legend-info-circle\"\r\n                                style={{ backgroundColor: color }}\r\n                              />\r\n                              <span className=\"RDWAG-legend-info-name\">\r\n                                {dataKey}\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              {amrClassChartTooltip()}\r\n              {info.bars.map((item, i) => {\r\n                return (\r\n                  <Bar\r\n                    key={i + \"RDWAG_P\"}\r\n                    dataKey={item[0]}\r\n                    fill={item[1]}\r\n                    stackId=\"a\"\r\n                    barSize={30}\r\n                  />\r\n                );\r\n              })}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      }\r\n    };\r\n\r\n    const plotAmrClassChart = () => {\r\n      switch (amrClassFilter) {\r\n        case \"Azithromycin\":\r\n          return armClassFilterComponent({\r\n            left: -5,\r\n            fontsize: 14,\r\n            strokeWidth: 1,\r\n            width: null,\r\n            bars: [\r\n              [\"ereA\", \"#9e9ac8\"],\r\n              [\"acrB_R717Q\", \"#addd8e\"],\r\n              [\"acrB_R717L\", \"#FBCFE5\"],\r\n              [\"ereA + acrB_R717Q\", \"#FFEC78\"],\r\n              [\"ereA + acrB_R717L\", \"#66c2a4\"],\r\n              [\"acrB_R717Q + acrB_R717L\", \"#fd8d3c\"],\r\n              [\"ereA + acrB_R717Q + acrB_R717L\", \"#6baed6\"],\r\n              [\"None\", \"#B9B9B9\"],\r\n            ],\r\n          });\r\n        case \"Fluoroquinolones (CipI/R)\":\r\n          return armClassFilterComponent({\r\n            left: 10,\r\n            fontsize: 14,\r\n            strokeWidth: 0.5,\r\n            width: 3,\r\n            bars: [\r\n              [\"3_QRDR + qnrS (CipR)\", \"black\"],\r\n              [\"3_QRDR + qnrB (CipR)\", \"#660000\"],\r\n              [\"3_QRDR (CipR)\", \"#cc0000\"],\r\n              [\"2_QRDR + qnrS (CipR)\", \"#ff6666\"],\r\n              [\"2_QRDR + qnrB (CipR)\", \"#ffcccc\"],\r\n              [\"2_QRDR (CipI)\", \"#ff6600\"],\r\n              [\"1_QRDR + qnrS (CipR)\", \"#660066\"],\r\n              [\"1_QRDR + qnrB (CipR)\", \"#993399\"],\r\n              [\"1_QRDR (CipI)\", \"#ffcc00\"],\r\n              [\"0_QRDR + qnrS (CipI)\", \"#009999\"],\r\n              [\"0_QRDR + qnrB (CipI)\", \"#0066cc\"],\r\n              [\"None (CipS)\", \"#B9B9B9\"],\r\n            ],\r\n          });\r\n        case \"Chloramphenicol\":\r\n          return armClassFilterComponent({\r\n            left: 3,\r\n            fontsize: 14,\r\n            strokeWidth: 1,\r\n            width: null,\r\n            bars: [\r\n              [\"cmlA\", \"#addd8e\"],\r\n              [\"catA1\", \"#9e9ac8\"],\r\n              [\"catA1 + cmlA\", \"#FFEC78\"],\r\n              [\"None\", \"#B9B9B9\"],\r\n            ],\r\n          });\r\n        case \"Ampicillin\":\r\n          return armClassFilterComponent({\r\n            left: 3,\r\n            fontsize: 14,\r\n            strokeWidth: 1,\r\n            width: null,\r\n            bars: [\r\n              [\"blaTEM-1D\", \"#addd8e\"],\r\n              [\"None\", \"#B9B9B9\"],\r\n            ],\r\n          });\r\n        case \"Sulphonamides\":\r\n          return armClassFilterComponent({\r\n            left: 3,\r\n            fontsize: 14,\r\n            strokeWidth: 1,\r\n            width: null,\r\n            bars: [\r\n              [\"sul2\", \"#ffeda0\"],\r\n              [\"sul1\", \"#fd8d3c\"],\r\n              [\"sul1 + sul2\", \"#B4DD70\"],\r\n              [\"None\", \"#B9B9B9\"],\r\n            ],\r\n          });\r\n        case \"Trimethoprim\":\r\n          return armClassFilterComponent({\r\n            left: 3,\r\n            fontsize: 14,\r\n            strokeWidth: 0.5,\r\n            width: 3,\r\n            bars: [\r\n              [\"dfrA1\", \"#B4DD70\"],\r\n              [\"dfrA5\", \"#D7AEF7\"],\r\n              [\"dfrA7\", \"#FFEC78\"],\r\n              [\"dfrA14\", \"#6baed6\"],\r\n              [\"dfrA7 + dfrA14\", \"#fd8d3c\"],\r\n              [\"dfrA15\", \"#FBCFE5\"],\r\n              [\"dfrA17\", \"#FCB469\"],\r\n              [\"dfrA18\", \"#66c2a4\"],\r\n              [\"None\", \"#B9B9B9\"],\r\n            ],\r\n          });\r\n        case \"Co-trimoxazole\":\r\n          let cotrim = [\r\n            \"dfrA1\",\r\n            \"dfrA5\",\r\n            \"dfrA7\",\r\n            \"dfrA14\",\r\n            \"dfrA15\",\r\n            \"dfrA17\",\r\n            \"dfrA18\",\r\n          ];\r\n          let colors1 = [\r\n            \"#ffeda0\",\r\n            \"#fd8d3c\",\r\n            \"#addd8e\",\r\n            \"#9e9ac8\",\r\n            \"#6baed6\",\r\n            \"#7a0177\",\r\n            \"#54278f\",\r\n          ];\r\n          let colors2 = [\r\n            \"#a50f15\",\r\n            \"#6a5acd\",\r\n            \"#f1b6da\",\r\n            \"#fb8072\",\r\n            \"#4682b4\",\r\n            \"#2e8b57\",\r\n            \"#98fb98\",\r\n          ];\r\n          let colors3 = [\r\n            \"#fcc5c0\",\r\n            \"#bcbddc\",\r\n            \"#fdd0a2\",\r\n            \"#c994c7\",\r\n            \"#9ecae1\",\r\n            \"#a8ddb5\",\r\n            \"#fc9272\",\r\n          ];\r\n          let bars = [[\"None\", \"#B9B9B9\"]];\r\n\r\n          for (const index in cotrim) {\r\n            bars.push([cotrim[index] + \" + sul1\", colors1[index]]);\r\n            bars.push([cotrim[index] + \" + sul2\", colors2[index]]);\r\n            bars.push([cotrim[index] + \" + sul1 + sul2\", colors3[index]]);\r\n          }\r\n          bars.push([\"dfrA7 + dfrA14 + sul1 + sul2\", \"#F54CEB\"]);\r\n\r\n          return armClassFilterComponent({\r\n            left: 3,\r\n            fontsize: 14,\r\n            strokeWidth: 0.5,\r\n            width: 3,\r\n            bars: bars,\r\n          });\r\n        case \"Tetracyclines\":\r\n          return armClassFilterComponent({\r\n            left: 3,\r\n            fontsize: 14,\r\n            strokeWidth: 1,\r\n            width: null,\r\n            bars: [\r\n              [\"tetA(D)\", getColorForTetracyclines(\"tetA(D)\")],\r\n              [\"tetA(C)\", getColorForTetracyclines(\"tetA(C)\")],\r\n              [\"tetA(B)\", getColorForTetracyclines(\"tetA(B)\")],\r\n              [\"tetA(A)\", getColorForTetracyclines(\"tetA(A)\")],\r\n              [\"None\", \"#B9B9B9\"],\r\n            ],\r\n          });\r\n        case \"ESBL\":\r\n          return armClassFilterComponent({\r\n            left: 3,\r\n            fontsize: 14,\r\n            strokeWidth: 1,\r\n            width: null,\r\n            bars: [\r\n              [\"blaSHV-12\", \"#addd8e\"],\r\n              [\"blaOXA-7\", \"#9e9ac8\"],\r\n              [\"blaCTX-M-15\", \"#6baed6\"],\r\n              [\"blaCTX-M-55\", \"#FBCFE5\"],\r\n              [\"None\", \"#B9B9B9\"],\r\n            ],\r\n          });\r\n        default:\r\n          return null;\r\n      }\r\n    };\r\n    setPlotAmrClassChart(plotAmrClassChart);\r\n  }, [\r\n    RDWAGDataviewFilter,\r\n    amrClassChartData,\r\n    amrClassFilter,\r\n    dimensions.width,\r\n    hoverColor,\r\n  ]);\r\n\r\n  // Drug Resistance Trends graph\r\n  useEffect(() => {\r\n    const plotDrugTrendsChart = () => {\r\n      let dataDRT = drugTrendsChartData;\r\n      for (const index in dataDRT) {\r\n        for (const i in trendClassesForFilter) {\r\n          const TCFF = trendClassesForFilter[i];\r\n          if (!(TCFF.toString() in dataDRT[index])) {\r\n            dataDRT[index][TCFF] = 0;\r\n            dataDRT[index].drugsPercentage[TCFF] = 0;\r\n          }\r\n        }\r\n      }\r\n\r\n      return (\r\n        <ResponsiveContainer width=\"90%\">\r\n          <LineChart\r\n            data={dataDRT}\r\n            margin={{\r\n              top: 20,\r\n              bottom: 5,\r\n              right: 0,\r\n              left: -5,\r\n            }}\r\n            height={582}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              tickCount={20}\r\n              allowDecimals={false}\r\n              type=\"number\"\r\n              padding={{ left: 20, right: 20 }}\r\n              dataKey=\"name\"\r\n              domain={[\"dataMin\", \"dataMax\"]}\r\n              interval={\"preserveStartEnd\"}\r\n              tick={{ fontSize: 14 }}\r\n            />\r\n            <YAxis\r\n              tickCount={6}\r\n              padding={{ top: 20, bottom: 20 }}\r\n              allowDecimals={false}\r\n              width={70}\r\n            >\r\n              <Label\r\n                angle={-90}\r\n                position=\"insideLeft\"\r\n                className=\"DRT-label\"\r\n                offset={12}\r\n              >\r\n                Resistant (%)\r\n              </Label>\r\n            </YAxis>\r\n            {drugTrendsChartData.length > 0 && (\r\n              <Brush dataKey=\"name\" height={20} stroke={\"rgb(31, 187, 211)\"} />\r\n            )}\r\n\r\n            <Legend\r\n              content={(props) => {\r\n                const { payload } = props;\r\n                return (\r\n                  <div className=\"DRT-legend\">\r\n                    <div\r\n                      className=\"DRT-legend-div\"\r\n                      style={{\r\n                        justifyContent:\r\n                          dimensions.width < 1585 ? \"space-between\" : \"\",\r\n                      }}\r\n                    >\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div\r\n                            key={index + \"DRT-legend\"}\r\n                            className=\"DRT-legend-info\"\r\n                          >\r\n                            <div\r\n                              className=\"DRT-legend-info-circle\"\r\n                              style={{ backgroundColor: color }}\r\n                            />\r\n                            <span className=\"DRT-legend-info-name\">\r\n                              {dataKey}\r\n                            </span>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n            {tooltip(\r\n              [160, 275, 255],\r\n              dimensions.width < mobile ? 250 : 325,\r\n              \"50%\",\r\n              true,\r\n              { zIndex: 100, top: 175, right: 0 },\r\n              true,\r\n              1\r\n            )}\r\n            {trendClassesForFilter.map((item, i) => (\r\n              <Line\r\n                key={i + \"DRTLine\"}\r\n                dataKey={item}\r\n                strokeWidth={2}\r\n                stroke={getColorForDrug(item)}\r\n                connectNulls\r\n                type=\"monotone\"\r\n                activeDot={timeInitial === timeFinal ? true : false}\r\n              />\r\n            ))}\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      );\r\n    };\r\n\r\n    setPlotDrugTrendsChart(plotDrugTrendsChart);\r\n  }, [\r\n    dimensions.width,\r\n    drugTrendsChartData,\r\n    mobile,\r\n    timeFinal,\r\n    timeInitial,\r\n    tooltip,\r\n    trendClassesForFilter,\r\n  ]);\r\n\r\n  // Resistance frequencies within genotypes graph\r\n  useEffect(() => {\r\n    const plotDrugsAndGenotypesChart = () => {\r\n      let aux = JSON.parse(JSON.stringify(drugsAndGenotypesChartData));\r\n\r\n      const aux2 = [];\r\n      for (let index = 0; index < aux.length; index++) {\r\n        const percentage = (aux[index].total / aux[index].totalS) * 100;\r\n        aux2.push({\r\n          value: aux[index].name,\r\n          label:\r\n            aux[index].name +\r\n            ` (total N=${aux[index].totalS}, ${Math.round(percentage * 100) / 100\r\n            }% resistant)`,\r\n          id: index,\r\n        });\r\n      }\r\n      setRFWGDropdownOptions(aux2);\r\n\r\n      const values = RFWGValues.map((x) => x.value);\r\n      aux = aux.filter((x) => values.includes(x.name));\r\n\r\n      if (RFWGFilter === 1) {\r\n        return (\r\n          <ResponsiveContainer width=\"90%\">\r\n            <BarChart\r\n              data={aux}\r\n              margin={{\r\n                top: 20,\r\n                left: -5,\r\n                bottom: 5,\r\n                right: 0,\r\n              }}\r\n              height={582}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                padding={{ left: 5, right: 5 }}\r\n                dataKey=\"name\"\r\n                interval={dimensions.width < mobile ? 1 : 0}\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis allowDecimals={false} width={71}>\r\n                <Label\r\n                  angle={-90}\r\n                  position=\"insideLeft\"\r\n                  className=\"RFWG-label\"\r\n                  offset={12}\r\n                >\r\n                  Number of genomes\r\n                </Label>\r\n              </YAxis>\r\n              {drugsAndGenotypesChartData.length > 0 && (\r\n                <Brush\r\n                  dataKey=\"name\"\r\n                  height={20}\r\n                  stroke={\"rgb(31, 187, 211)\"}\r\n                />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RFWG-legend\">\r\n                      <div\r\n                        className=\"RFWG-legend-div\"\r\n                        style={{\r\n                          justifyContent:\r\n                            dimensions.width < 1585 ? \"space-between\" : \"\",\r\n                        }}\r\n                      >\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry;\r\n                          return (\r\n                            <div\r\n                              key={index + \"RFWG-legend\"}\r\n                              className=\"RFWG-legend-info\"\r\n                            >\r\n                              <div\r\n                                className=\"RFWG-legend-info-circle\"\r\n                                style={{ backgroundColor: color }}\r\n                              />\r\n                              <span className=\"RFWG-legend-info-name\">\r\n                                {dataKey}\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n              {tooltip(\r\n                [155, 270, 270],\r\n                dimensions.width < mobile ? 250 : 325,\r\n                \"50%\",\r\n                false,\r\n                { zIndex: 100, top: 160 },\r\n                false,\r\n                0\r\n              )}\r\n              {drtClassesForFilter.map((item, i) => (\r\n                <Bar\r\n                  key={i + \"DRT_Q\"}\r\n                  dataKey={item}\r\n                  fill={getColorForDrug(item)}\r\n                />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      } else {\r\n        const teste = JSON.parse(JSON.stringify(aux));\r\n        teste.forEach((element) => {\r\n          element[\"quantities\"] = {};\r\n          const keys = Object.keys(element);\r\n          for (const key in keys) {\r\n            if (\r\n              ![\"name\", \"total\", \"quantities\", \"totalS\"].includes(keys[key])\r\n            ) {\r\n              let aux3 = keys[key];\r\n              element.quantities[aux3] = element[aux3];\r\n              element[aux3] = (element[aux3] * 100) / element.totalS;\r\n            }\r\n            element.quantities[\"totalS\"] = element.totalS;\r\n          }\r\n        });\r\n\r\n        return (\r\n          <ResponsiveContainer width=\"90%\" height=\"100%\">\r\n            <BarChart\r\n              data={teste}\r\n              margin={{\r\n                top: 20,\r\n                left: -5,\r\n                bottom: 5,\r\n                right: 0,\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                padding={{ left: 5, right: 5 }}\r\n                dataKey=\"name\"\r\n                interval={dimensions.width < mobile ? 1 : 0}\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis domain={[0, 100]} allowDecimals={false} width={70}>\r\n                <Label\r\n                  angle={-90}\r\n                  position=\"insideLeft\"\r\n                  className=\"RFWG-label\"\r\n                  offset={12}\r\n                >\r\n                  Percentage within genotype (%)\r\n                </Label>\r\n              </YAxis>\r\n              {teste.length > 0 && (\r\n                <Brush\r\n                  dataKey=\"name\"\r\n                  height={20}\r\n                  stroke={\"rgb(31, 187, 211)\"}\r\n                />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className=\"RFWG-legend\">\r\n                      <div\r\n                        className=\"RFWG-legend-div\"\r\n                        style={{\r\n                          justifyContent:\r\n                            dimensions.width < 1585 ? \"space-between\" : \"\",\r\n                        }}\r\n                      >\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry;\r\n                          return (\r\n                            <div\r\n                              key={index + \"RFWG-legend-2\"}\r\n                              className=\"RFWG-legend-info\"\r\n                            >\r\n                              <div\r\n                                className=\"RFWG-legend-info-circle\"\r\n                                style={{ backgroundColor: color }}\r\n                              />\r\n                              <span className=\"RFWG-legend-info-name\">\r\n                                {dataKey}\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n              {tooltip(\r\n                [155, 270, 270],\r\n                dimensions.width < mobile ? 250 : 325,\r\n                \"50%\",\r\n                false,\r\n                { zIndex: 100, top: 160 },\r\n                false,\r\n                4\r\n              )}\r\n              {drtClassesForFilter.map((item, i) => (\r\n                <Bar\r\n                  key={i + \"DRT_P\"}\r\n                  dataKey={item}\r\n                  fill={getColorForDrug(item)}\r\n                />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      }\r\n    };\r\n    setPlotDrugsAndGenotypesChart(plotDrugsAndGenotypesChart);\r\n  }, [\r\n    RFWGFilter,\r\n    RFWGValues,\r\n    dimensions.width,\r\n    drtClassesForFilter,\r\n    drugsAndGenotypesChartData,\r\n    mobile,\r\n    tooltip,\r\n  ]);\r\n\r\n  // Helper for loading images to the report\r\n  function imgOnLoadPromise(obj) {\r\n    return new Promise((resolve, reject) => {\r\n      obj.onload = () => resolve(obj);\r\n      obj.onerror = reject;\r\n    });\r\n  }\r\n\r\n  // Stop loadings\r\n  const [stopLoading] = useState(() => (index) => {\r\n    switch (index) {\r\n      case 0:\r\n        setCaptureControlMapInProgress(false);\r\n        break;\r\n      case 1:\r\n        setCaptureControlChartRFWGInProgress(false);\r\n        break;\r\n      case 2:\r\n        setCaptureControlChartDRTInProgress(false);\r\n        break;\r\n      case 3:\r\n        setCaptureControlChartGDInProgress(false);\r\n        break;\r\n      case 4:\r\n        setCaptureControlChartRFWAGInProgress(false);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  // Start loadings\r\n  const [capturePicture] = useState(() => async (id, index, info = {}) => {\r\n    switch (index) {\r\n      case 0:\r\n        setCaptureControlMapInProgress(true);\r\n        setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\r\n        break;\r\n      case 1:\r\n        setCaptureControlChartRFWGInProgress(true);\r\n        break;\r\n      case 2:\r\n        setCaptureControlChartDRTInProgress(true);\r\n        break;\r\n      case 3:\r\n        setCaptureControlChartGDInProgress(true);\r\n        break;\r\n      case 4:\r\n        setCaptureControlChartRFWAGInProgress(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    const names = [\r\n      \"Resistance frequencies within genotypes\",\r\n      \"Drug resistance trends\",\r\n      \"Genotype distribution\",\r\n      \"Resistance determinants within genotypes\",\r\n    ];\r\n    const brokenNames = [\r\n      [\"Resistance frequencies\", \"within genotypes\"],\r\n      [\"Resistance determinants\", \"within all genotypes\"],\r\n    ];\r\n\r\n    if (index === 5) {\r\n      let ids = [\"RFWG\", \"RFWAG\", \"DRT\", \"GD\"];\r\n\r\n      var doc = new jsPDF({ unit: \"mm\", format: \"a4\", orientation: \"l\" });\r\n\r\n      const IPW = doc.internal.pageSize.getWidth() / 2;\r\n\r\n      let typhinetLogo = new Image();\r\n      typhinetLogo.src = typhinetLogoImg;\r\n      doc.addImage(typhinetLogo, \"PNG\", 110, 8, 80, 26);\r\n\r\n      let euFlag = new Image();\r\n      euFlag.src = euFlagImg;\r\n      doc.addImage(euFlag, \"JPG\", 237, 148.2, 6, 4);\r\n\r\n      let date = new Date();\r\n      date = moment(date).format(\"ddd MMM DD YYYY HH:mm:ss\");\r\n\r\n      doc.setFontSize(12);\r\n      doc.setTextColor(0, 0, 0);\r\n\r\n      const paragraph1 = `This report was generated at [${formatDate(\r\n        new Date()\r\n      )}] using TyphiNET (http://typhi.net), a data data visualisation platform that draws genome-derived data on antimicrobial resistance and genotypes from Typhi Pathogenwatch (http://pathogen.watch).`;\r\n      const paragraph2 = `TyphiNET data were last updated on October 10 2022. For code and further details please see: https://github.com/zadyson/TyphiNET.`;\r\n      const paragraph3 = `The genotypes reported here are defined in Dyson & Holt (2021), J. Infect. Dis.`;\r\n      const paragraph4 = `Antimicrobial resistance determinants are described in the Typhi Pathogenwatch paper, Argimón et al. 2021, Nat. Commun.`;\r\n      const paragraph5 = `Travel-associated cases are attributed to the country of travel, not the country of isolation (see Ingle et al. 2019, PLoS NTDs).`;\r\n      const paragraph6 = `TyphiNET presents data aggregated from >100 studies. Individual genome information, including derived genotype and AMR calls, sequence data accession numbers, and source information (PubMedID for citation) can be downloaded as a spreadsheet from the TyphiNET website (http://typhi.net).`;\r\n      const paragraph7 = `Studies contributing genomes representing infections originating from ${info.country\r\n        } have the following PubMed IDs (PMIDs): ${info.PMID.join(\", \")}.`;\r\n      const paragraph8 = `This project has received funding from the the Wellcome Trust (Open Research Fund, 219692/Z/19/Z) and the  European Union's Horizon 2020 research and innovation programme under the Marie Sklodowska-Curie grant agreement No 845681.`;\r\n      doc.setFont(undefined, \"bold\");\r\n      doc.text(`TyphiNET report [${formatDate(new Date())}]`, 20, 50, {\r\n        align: \"justify\",\r\n        maxWidth: 255,\r\n      });\r\n      doc.setFont(undefined, \"normal\");\r\n      doc.text(paragraph1, 20, 65, { align: \"justify\", maxWidth: 255 });\r\n      doc.text(paragraph2, 20, 82, { align: \"justify\", maxWidth: 255 });\r\n      doc.text(paragraph3, 20, 99, { align: \"justify\", maxWidth: 255 });\r\n      doc.text(paragraph4, 20, 106, { align: \"justify\", maxWidth: 255 });\r\n      doc.text(paragraph5, 20, 113, { align: \"justify\", maxWidth: 255 });\r\n      doc.text(paragraph6, 20, 125, { align: \"justify\", maxWidth: 255 });\r\n      doc.text(paragraph8, 20, 147, { align: \"justify\", maxWidth: 255 });\r\n      if (info.country !== \"All\") {\r\n        doc.text(paragraph7, 20, 164, { align: \"justify\", maxWidth: 255 });\r\n      }\r\n\r\n      doc.line(0, 200, 300, 200);\r\n      doc.setFontSize(10);\r\n      doc.text(`Source: typhi.net [${date}]`, IPW, 206, { align: \"center\" });\r\n\r\n      doc.addPage(\"a4\", \"l\");\r\n      doc.setFontSize(25);\r\n      doc.text(\"Global Overview of\", 77, 12);\r\n      doc.setFont(undefined, \"italic\");\r\n      doc.text(\"Salmonella\", 154, 12);\r\n      doc.setFont(undefined, \"normal\");\r\n      doc.text(\"Typhi\", 200, 12);\r\n\r\n      await svgAsPngUri(document.getElementById(\"control-map\"), {\r\n        scale: 4,\r\n        backgroundColor: \"white\",\r\n        width: 1200,\r\n        left: -200,\r\n      }).then(async (uri) => {\r\n        let canvas = document.createElement(\"canvas\");\r\n        let ctx = canvas.getContext(\"2d\");\r\n\r\n        let mapImg = document.createElement(\"img\");\r\n        let mapImgPromise = imgOnLoadPromise(mapImg);\r\n        mapImg.src = uri;\r\n        await mapImgPromise;\r\n\r\n        canvas.width = 1400;\r\n        canvas.height = 700;\r\n        ctx.drawImage(mapImg, 0, 0, canvas.width, canvas.height);\r\n        var img = canvas.toDataURL(\"image/png\");\r\n        doc.addImage(img, \"PNG\", 0, 45, 298, 155);\r\n      });\r\n\r\n      let actualMapView = info.mapView;\r\n      switch (actualMapView) {\r\n        case \"MDR\":\r\n          actualMapView = \"Multidrug resistant (MDR)\";\r\n          break;\r\n        case \"XDR\":\r\n          actualMapView = \"Extensively drug resistant (XDR)\";\r\n          break;\r\n        case \"Azith\":\r\n          actualMapView = \"Azithromycin resistant\";\r\n          break;\r\n        case \"CipI\":\r\n          actualMapView = \"Ciprofloxacin nonsusceptible (CipI/R)\";\r\n          break;\r\n        case \"CipR\":\r\n          actualMapView = \"Ciprofloxacin resistant (CipR)\";\r\n          break;\r\n        case \"H58 / Non-H58\":\r\n          actualMapView = \"H58 genotype\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      doc.setFontSize(12);\r\n      const dataset =\r\n        info.dataset === \"All\"\r\n          ? \"All (local + travel)\"\r\n          : info.dataset === \"Local\"\r\n            ? \"Locally isolated\"\r\n            : \"Travel isolates\";\r\n\r\n      doc.setFont(undefined, \"bold\");\r\n      doc.text(info.mapView, 8, 20);\r\n      doc.setFont(undefined, \"normal\");\r\n      doc.text(`Total ${info.actualGenomes} genomes`, 8, 25);\r\n      doc.text(\"Dataset: \" + dataset, 8, 30);\r\n      doc.text(\r\n        \"Time period: \" +\r\n        info.actualTimePeriodRange[0] +\r\n        \" to \" +\r\n        info.actualTimePeriodRange[1],\r\n        8,\r\n        35\r\n      );\r\n      doc.text(\"Country: \" + info.country, 8, 40);\r\n      // doc.text(\"Region: \" + info.region, 8, 45);\r\n\r\n      if (info.mapView === \"Dominant Genotype\") {\r\n        var img = new Image();\r\n        img.src = \"legends/MapView_DominantGenotype.png\";\r\n        doc.addImage(img, \"PNG\", 68, 19, 219, 27);\r\n      } else if (info.mapView === \"No. Samples\") {\r\n        var img2 = new Image();\r\n        img2.src = \"legends/MapView_NoSamples.png\";\r\n        doc.addImage(img2, \"PNG\", 250, 15, 35, 35);\r\n      } else {\r\n        var img3 = new Image();\r\n        img3.src = \"legends/MapView_Others.png\";\r\n        doc.addImage(img3, \"PNG\", 250, 15, 35, 35);\r\n      }\r\n\r\n      doc.line(0, 200, 300, 200);\r\n      doc.setFontSize(10);\r\n      doc.text(`Source: typhi.net [${date}]`, IPW, 206, { align: \"center\" });\r\n\r\n      doc.addPage(\"a4\", \"l\");\r\n      const names2 = [\r\n        \"Resistance frequencies within genotypes\",\r\n        \"Resistance determinants within genotypes\",\r\n        \"Drug resistance trends\",\r\n        \"Genotype distribution\",\r\n      ];\r\n      for (let index = 0; index < ids.length; index++) {\r\n        let url;\r\n        await domtoimage\r\n          .toJpeg(document.getElementById(ids[index]), {\r\n            quality: 1,\r\n            bgcolor: \"white\",\r\n          })\r\n          .then(function (dataUrl) {\r\n            url = dataUrl;\r\n          });\r\n\r\n        let subtitleH = 0;\r\n        if (index === 0 || index === 1 || index === 2) {\r\n          subtitleH = 3;\r\n        }\r\n        subtitleH += 3;\r\n\r\n        doc.addImage(url, \"PNG\", 5, 15 + subtitleH);\r\n\r\n        let imgWidth = jsPDF.API.getImageProperties(url).width;\r\n        imgWidth = Math.floor(imgWidth * 0.264583);\r\n        doc.setFontSize(11);\r\n        const texts = [\" \", \" \", \" \", \" \"];\r\n        let spaceBetween = -4;\r\n        if (dimensions.width < 1750) {\r\n          spaceBetween = 13;\r\n        }\r\n\r\n        let drugs = [];\r\n        for (let i = 0; i < info.drugs.length; i++) {\r\n          drugs.push(info.drugs[i].value);\r\n        }\r\n        if (drugs.length === 0) {\r\n          drugs.push(\"None\");\r\n        }\r\n\r\n        doc.text(texts[index], imgWidth + spaceBetween, 23 + subtitleH, {\r\n          align: \"justify\",\r\n          maxWidth: 50,\r\n        });\r\n\r\n        doc.setFontSize(14);\r\n        if (index === 1) {\r\n          doc.text(names2[index] + \" : \" + info.amrClassFilter, 23, 10);\r\n        } else {\r\n          doc.text(names2[index], 23, 10);\r\n        }\r\n        doc.setFontSize(9);\r\n\r\n        if (index === 0) {\r\n          doc.text(`Top Genotypes (up to ${info.RFWGCount})`, 23, 15);\r\n        }\r\n        if (index === 1) {\r\n          doc.text(\"Top Genotypes (up to 10)\", 23, 15);\r\n        }\r\n        if (index === 2) {\r\n          doc.text(\"Data are plotted for years with N >= 10 genomes\", 23, 15);\r\n        }\r\n\r\n        doc.setFontSize(12);\r\n        doc.text(`Total ${info.actualGenomes} genomes`, 230, 30);\r\n        doc.text(\"Dataset: \" + dataset, 230, 35);\r\n        doc.text(\r\n          \"Time period: \" +\r\n          info.actualTimePeriodRange[0] +\r\n          \" to \" +\r\n          info.actualTimePeriodRange[1],\r\n          230,\r\n          40\r\n        );\r\n        doc.text(\"Country: \" + info.country, 230, 45);\r\n        // doc.text(\"Region: \" + info.region, 230, 50);\r\n\r\n        if (index === 3) {\r\n          doc.setFillColor(255, 255, 255);\r\n          doc.rect(\r\n            22,\r\n            info.dimensions.width < info.desktop ? 120 : 110,\r\n            300,\r\n            100,\r\n            \"F\"\r\n          );\r\n        } else if (index === 1) {\r\n          doc.setFillColor(255, 255, 255);\r\n          doc.rect(22, 113, 300, 100, \"F\");\r\n        }\r\n\r\n        if (index === 1) {\r\n          var img4 = new Image();\r\n          if (info.amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n            img4.src = \"legends/Fluoroquinolones (CipI-R).png\";\r\n          } else {\r\n            img4.src = \"legends/\" + info.amrClassFilter + \".png\";\r\n          }\r\n          doc.addImage(img4, \"PNG\", 22, 107 + subtitleH);\r\n        } else if (index === 3) {\r\n          var img5 = new Image();\r\n          img5.src = \"legends/Genotype_Distribution.png\";\r\n          doc.addImage(\r\n            img5,\r\n            \"PNG\",\r\n            22,\r\n            (info.dimensions.width < info.desktop ? 115 : 108) + subtitleH\r\n          );\r\n        }\r\n        doc.line(0, 200, 300, 200);\r\n        doc.setFontSize(10);\r\n        doc.text(`Source: typhi.net [${date}]`, IPW, 206, { align: \"center\" });\r\n        if (index < ids.length - 1) {\r\n          doc.addPage(\"a4\", \"l\");\r\n        }\r\n      }\r\n\r\n      doc.save(\"TyphiNET - Report.pdf\");\r\n      setCaptureReportInProgress(false);\r\n    } else if (index !== 0) {\r\n      let graph = document.getElementById(id);\r\n      let canvas = document.createElement(\"canvas\");\r\n      let ctx = canvas.getContext(\"2d\");\r\n      let graphImg = document.createElement(\"img\");\r\n      let graphImgPromise = imgOnLoadPromise(graphImg);\r\n\r\n      await domtoimage\r\n        .toPng(graph, { quality: 0.1, bgcolor: \"white\" })\r\n        .then(function (dataUrl) {\r\n          graphImg.src = dataUrl;\r\n        });\r\n\r\n      let cHeight = 20;\r\n      let logoHeight = 100;\r\n      let legendHeight = 0;\r\n      let filterHeight = 80;\r\n      let subtitleHeight = 0;\r\n      if (id === \"RFWG\" || id === \"RFWAG\" || id === \"DRT\") {\r\n        cHeight += 20;\r\n        subtitleHeight = 20;\r\n      }\r\n      let imgHeight = graphImg.height;\r\n      if (id === \"RFWAG\" || id === \"GD\") {\r\n        imgHeight -= 200;\r\n      }\r\n\r\n      if (id === \"GD\" || id === \"RFWAG\") legendHeight = 40;\r\n\r\n      let imgWidth = graphImg.width;\r\n      if (id === \"RFWAG\") {\r\n        imgWidth += 130;\r\n        if (info.amrClassFilter === \"Azithromycin\") {\r\n          imgWidth += 100;\r\n        } else if (info.amrClassFilter === \"Co-trimoxazole\") {\r\n          imgWidth += 195;\r\n        } else if (info.amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n          imgWidth += 250;\r\n        }\r\n      } else if (id === \"GD\") {\r\n        imgWidth += 370;\r\n      }\r\n\r\n      await graphImgPromise;\r\n      canvas.width = imgWidth;\r\n\r\n      canvas.height =\r\n        imgHeight +\r\n        cHeight +\r\n        logoHeight +\r\n        legendHeight +\r\n        filterHeight +\r\n        subtitleHeight +\r\n        60;\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      ctx.font = \"18px Montserrat\";\r\n      ctx.fillStyle = \"black\";\r\n      ctx.textAlign = \"center\";\r\n\r\n      ctx.drawImage(graphImg, 10, cHeight + logoHeight + subtitleHeight);\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillRect(60, canvas.height - 130, 800, 300);\r\n      ctx.fillStyle = \"black\";\r\n\r\n      if (id === \"RFWG\") {\r\n        ctx.fillText(brokenNames[0][0], canvas.width / 2, 10 + logoHeight);\r\n        ctx.fillText(brokenNames[0][1], canvas.width / 2, 30 + logoHeight);\r\n        ctx.font = \"12px Montserrat\";\r\n        ctx.fillText(\r\n          `Top Genotypes (up to ${info.RFWGCount})`,\r\n          canvas.width / 2,\r\n          32 + logoHeight + subtitleHeight\r\n        );\r\n      } else if (id === \"RFWAG\") {\r\n        ctx.fillText(brokenNames[1][0], canvas.width / 2, 10 + logoHeight);\r\n        ctx.fillText(brokenNames[1][1], canvas.width / 2, 30 + logoHeight);\r\n        ctx.font = \"12px Montserrat\";\r\n        ctx.fillText(\r\n          \"Top Genotypes (up to 10)\",\r\n          canvas.width / 2,\r\n          32 + logoHeight + subtitleHeight\r\n        );\r\n      } else if (id === \"DRT\") {\r\n        ctx.fillText(names[index - 1], canvas.width / 2, 10 + logoHeight);\r\n        ctx.font = \"12px Montserrat\";\r\n        ctx.fillText(\r\n          \"Data are plotted for years with N ≥ 10 genomes\",\r\n          canvas.width / 2,\r\n          32 + logoHeight + subtitleHeight\r\n        );\r\n      } else {\r\n        ctx.fillText(names[index - 1], canvas.width / 2, 10 + logoHeight);\r\n      }\r\n\r\n      if (id === \"RFWAG\" || id === \"GD\") {\r\n        let legendImg = document.createElement(\"img\");\r\n        let legendImgPromise = imgOnLoadPromise(legendImg);\r\n        if (id === \"RFWAG\") {\r\n          if (info.amrClassFilter === \"Fluoroquinolones (CipI/R)\") {\r\n            legendImg.src = \"legends/Fluoroquinolones (CipI-R).png\";\r\n          } else {\r\n            if (\r\n              info.amrClassFilter === \"Trimethoprim\" ||\r\n              info.amrClassFilter === \"Co-trimoxazole\"\r\n            ) {\r\n              info.amrClassFilter += \"2\";\r\n            }\r\n            legendImg.src = \"legends/\" + info.amrClassFilter + \".png\";\r\n          }\r\n        } else {\r\n          legendImg.src = \"legends/Genotype_Distribution_2.png\";\r\n        }\r\n        await legendImgPromise;\r\n\r\n        ctx.drawImage(\r\n          legendImg,\r\n          graphImg.width,\r\n          logoHeight + subtitleHeight + 12 + cHeight\r\n        );\r\n      }\r\n\r\n      let typhinetLogo = document.createElement(\"img\");\r\n      let typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n      typhinetLogo.src = typhinetLogoImg;\r\n      await typhinetLogoPromise;\r\n      ctx.drawImage(typhinetLogo, 10, 10, 170, 55);\r\n\r\n      ctx.fillStyle = \"black\";\r\n      ctx.font = \"14px Montserrat\";\r\n      ctx.textAlign = \"start\";\r\n      ctx.fillText(\"Dataset: \" + info.dataset, 10, canvas.height - 92);\r\n      ctx.fillText(\r\n        \"Time period: \" +\r\n        info.actualTimePeriodRange[0] +\r\n        \" to \" +\r\n        info.actualTimePeriodRange[1],\r\n        10,\r\n        canvas.height - 70\r\n      );\r\n      ctx.fillText(\"Country: \" + info.country, 10, canvas.height - 48);\r\n      // ctx.fillText(\"Region: \" + info.region, 10, canvas.height - 26);\r\n\r\n      const base64 = canvas.toDataURL();\r\n      stopLoading(index);\r\n      download(base64, \"TyphiNET - \" + names[index - 1] + \".png\");\r\n    } else {\r\n      svgAsPngUri(document.getElementById(id), {\r\n        scale: 4,\r\n        backgroundColor: \"white\",\r\n        width: 1200,\r\n        left: -200,\r\n      }).then(async (uri) => {\r\n        let canvas = document.createElement(\"canvas\");\r\n        let ctx = canvas.getContext(\"2d\");\r\n\r\n        let mapImg = document.createElement(\"img\");\r\n        let mapImgPromise = imgOnLoadPromise(mapImg);\r\n        mapImg.src = uri;\r\n        await mapImgPromise;\r\n\r\n        let cWidth = 3600;\r\n        let cHeight = 1800;\r\n        let textHeight = 240;\r\n        let legendHeight = 0;\r\n        if (info.mapView === \"Dominant Genotype\") {\r\n          legendHeight = 440;\r\n        }\r\n\r\n        canvas.width = cWidth;\r\n        canvas.height = cHeight + textHeight + legendHeight;\r\n\r\n        ctx.fillStyle = \"white\";\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        ctx.font = \"bolder 50px Montserrat\";\r\n        ctx.fillStyle = \"black\";\r\n        ctx.textAlign = \"center\";\r\n        ctx.fillText(\r\n          \"Global Overview of Salmonella Typhi\",\r\n          canvas.width / 2,\r\n          80\r\n        );\r\n        ctx.font = \"35px Montserrat\";\r\n        ctx.textAlign = \"center\";\r\n\r\n        let actualMapView = info.mapView;\r\n        switch (actualMapView) {\r\n          case \"MDR\":\r\n            actualMapView = \"Multidrug resistant (MDR)\";\r\n            break;\r\n          case \"XDR\":\r\n            actualMapView = \"Extensively drug resistant (XDR)\";\r\n            break;\r\n          case \"Azith\":\r\n            actualMapView = \"Azithromycin resistant\";\r\n            break;\r\n          case \"CipI\":\r\n            actualMapView = \"Ciprofloxacin nonsusceptible (CipI/R)\";\r\n            break;\r\n          case \"CipR\":\r\n            actualMapView = \"Ciprofloxacin resistant (CipR)\";\r\n            break;\r\n          case \"H58 / Non-H58\":\r\n            actualMapView = \"H58 genotype\";\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n\r\n        ctx.fillText(\"Map view: \" + actualMapView, canvas.width / 2, 140);\r\n        ctx.fillText(\"Dataset: \" + info.dataset, canvas.width / 2, 190);\r\n        ctx.fillText(\r\n          \"Time period: \" +\r\n          info.actualTimePeriodRange[0] +\r\n          \" to \" +\r\n          info.actualTimePeriodRange[1],\r\n          canvas.width / 2,\r\n          240\r\n        );\r\n\r\n        ctx.drawImage(mapImg, 0, textHeight, canvas.width, cHeight);\r\n\r\n        let legendImg = document.createElement(\"img\");\r\n        let legendImgoPromise = imgOnLoadPromise(legendImg);\r\n        let h;\r\n        let w;\r\n        if (info.mapView === \"Dominant Genotype\") {\r\n          legendImg.src = \"legends/MapView_DominantGenotype.png\";\r\n          await legendImgoPromise;\r\n          let centerWidth = (canvas.width - 1731) / 2;\r\n          ctx.drawImage(\r\n            legendImg,\r\n            centerWidth,\r\n            canvas.height - legendHeight - 20,\r\n            1731,\r\n            420\r\n          );\r\n        } else if (info.mapView === \"No. Samples\") {\r\n          legendImg.src = \"legends/MapView_NoSamples.png\";\r\n          await legendImgoPromise;\r\n          h = 350;\r\n          w = 310;\r\n          ctx.drawImage(\r\n            legendImg,\r\n            canvas.width - w - 15,\r\n            canvas.height - h - 10,\r\n            w,\r\n            h\r\n          );\r\n        } else {\r\n          legendImg.src = \"legends/MapView_Others.png\";\r\n          await legendImgoPromise;\r\n          h = 350;\r\n          w = 280;\r\n          ctx.drawImage(\r\n            legendImg,\r\n            canvas.width - w - 25,\r\n            canvas.height - h - 20,\r\n            w,\r\n            h\r\n          );\r\n        }\r\n\r\n        let typhinetLogo = document.createElement(\"img\");\r\n        let typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n        typhinetLogo.src = typhinetLogoImg;\r\n        await typhinetLogoPromise;\r\n        ctx.drawImage(typhinetLogo, 25, 25, 500, 200);\r\n\r\n        const base64 = canvas.toDataURL();\r\n        stopLoading(index);\r\n        download(base64, \"TyphiNET - Global Overview Salmonella Typhi.png\");\r\n      });\r\n    }\r\n  });\r\n\r\n  // Download spreadsheet\r\n  const [dowloadBaseSpreadsheet] = useState(() => () => {\r\n    axios.get(`${API_ENDPOINT}file/download`).then((res) => {\r\n      let cols_to_remove = [\r\n        \"azith_pred_pheno\",\r\n        \"ACCESSION\",\r\n        \"COUNTRY_ONLY\",\r\n        \"REGION_IN_COUNTRY\",\r\n        \"LOCATION\",\r\n        \"ACCURACY\",\r\n        \"LATITUDE\",\r\n        \"LONGITUDE\",\r\n        \"REFERENCE\",\r\n        \"MLST ST (EnteroBase)\",\r\n        \"MLST PROFILE (EnteroBase)\",\r\n        \"GENOTYPHI SNPs CALLED\",\r\n        \"Genome ID\",\r\n        \"Version\",\r\n        \"Organism Name\",\r\n        \"Organism ID\",\r\n        \"Species Name\",\r\n        \"Species ID\",\r\n        \"Genus Name\",\r\n        \"Genus ID\",\r\n        \"Reference ID\",\r\n        \"Matching Hashes\",\r\n        \"p-Value\",\r\n        'Mash Distance',\r\n        \"cip_pred_pheno\",\r\n        \"dcs_category\",\r\n        \"amr_category\",\r\n        \"num_qrdr\",\r\n        \"num_acrb\",\r\n        \"ESBL_category\",\r\n        \"chloramphenicol_category\",\r\n        \"tetracycline_category\",\r\n        \"cip_pheno_qrdr_gene\",\r\n        \"dcs_mechanisms\",\r\n        \"num_amr_genes\",\r\n        \"dfra_any\",\r\n        \"sul_any\",\r\n        \"co_trim\",\r\n        \"GENOTYPE_SIMPLE\",\r\n        \"h58_genotypes\",\r\n      ];\r\n      let indexes = [];\r\n      let csv = res.data.split(\"\\n\");\r\n      let lines = [];\r\n\r\n      for (let index = 0; index < csv.length; index++) {\r\n        let line = csv[index].split(\",\");\r\n        lines.push(line);\r\n      }\r\n\r\n      for (let index = 0; index < cols_to_remove.length; index++) {\r\n        let currentIndex = lines[0].indexOf(cols_to_remove[index]);\r\n        indexes.push(currentIndex);\r\n      }\r\n      indexes.sort();\r\n      indexes.reverse();\r\n\r\n      let newLines = [];\r\n      for (let j = 0; j < lines.length; j++) {\r\n        let aux = [];\r\n        for (let i = 0; i < lines[j].length; i++) {\r\n          if (!indexes.includes(i)) {\r\n            aux.push(lines[j][i]);\r\n          }\r\n        }\r\n        newLines.push(aux);\r\n      }\r\n\r\n      let newCSV = \"\";\r\n      for (let i = 0; i < newLines.length; i++) {\r\n        let aux = \"\";\r\n        for (let index = 0; index < newLines[i].length; index++) {\r\n          aux += newLines[i][index];\r\n          if (index !== newLines[i].length - 1) {\r\n            aux += \",\";\r\n          }\r\n        }\r\n        if (i !== newLines.length - 1) {\r\n          aux += \"\\n\";\r\n        }\r\n        newCSV += aux;\r\n      }\r\n\r\n      download(newCSV, \"TyphiNET_Database.csv\");\r\n    });\r\n  });\r\n\r\n  const [dowloadCurrentDataSpreadsheet] = useState(() => () => { });\r\n\r\n  // Component for map view's options\r\n  const generateMapLegendOptions = () => {\r\n    // let percentageSteps2 = ['1', '2', '10', '50']\r\n    let percentageSteps = [\"1\", \"3\", \"11\", \"51\"];\r\n    let percentageStepsSensitive = [\"10\", \"20\", \"50\", \"90\", \"100\"];\r\n    const otherViews = [\"CipI\", \"CipR\", \"Azith\", \"MDR\", \"XDR\"];\r\n\r\n    if (otherViews.includes(mapView)) {\r\n      return (\r\n        <>\r\n          <div className=\"samples-info\">\r\n            <div className=\"color samples-info-insufficient-data\" />\r\n            <span>Insufficient data</span>\r\n          </div>\r\n          <div className=\"samples-info\">\r\n            <div className=\"color samples-info-zero-percent\" />\r\n            <span>0%</span>\r\n          </div>\r\n          {percentageSteps.map((n) => {\r\n            return (\r\n              <div key={n} className=\"samples-info\">\r\n                <div\r\n                  className=\"color\"\r\n                  style={{ backgroundColor: mapRedColorScale(n) }}\r\n                />\r\n                {n === \"1\" && <span>{\"1 - 2\"}%</span>}\r\n                {n === \"3\" && <span>{\"3 - 10\"}%</span>}\r\n                {n === \"11\" && <span>{\"11 - 50\"}%</span>}\r\n                {n === \"51\" && <span>{\"51 - 100\"}%</span>}\r\n              </div>\r\n            );\r\n          })}\r\n        </>\r\n      );\r\n    }\r\n\r\n    switch (mapView) {\r\n      case \"Sensitive to all drugs\":\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-insufficient-data\" />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            {percentageStepsSensitive.map((n) => {\r\n              return (\r\n                <div key={n} className=\"samples-info\">\r\n                  <div\r\n                    className=\"color\"\r\n                    style={{ backgroundColor: mapRedColorScaleForSensitive(n) }}\r\n                  />\r\n                  {n === \"10\" && <span>{\"0 - 10\"}%</span>}\r\n                  {n === \"20\" && <span>{\"10 - 20\"}%</span>}\r\n                  {n === \"50\" && <span>{\"20 - 50\"}%</span>}\r\n                  {n === \"90\" && <span>{\"50 - 90\"}%</span>}\r\n                  {n === \"100\" && <span>{\"90 - 100\"}%</span>}\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        );\r\n      case \"No. Samples\":\r\n        let legends = [\"1 - 9\", \"10 - 19\", \"20 - 99\", \"100 - 299\", \">= 300\"];\r\n        let aux = [1, 10, 20, 100, 300];\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-insufficient-data\" />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            {[...Array(5).keys()].map((n, i) => {\r\n              return (\r\n                <div key={n + i} className=\"samples-info\">\r\n                  <div\r\n                    className=\"color\"\r\n                    style={{ backgroundColor: mapSamplesColorScale(aux[n]) }}\r\n                  />\r\n                  <span>{legends[n]}</span>\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        );\r\n      case \"Dominant Genotype\":\r\n        return (\r\n          <div className=\"map-legend-DG\">\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-insufficient-data\" />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            {genotypes.map((g, n) => {\r\n              return (\r\n                <div key={n + \"DG\"} className=\"samples-info\">\r\n                  <div\r\n                    className=\"color\"\r\n                    style={{ backgroundColor: getColorForGenotype(g) }}\r\n                  />\r\n                  <span>{g}</span>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      case \"H58 / Non-H58\":\r\n        return (\r\n          <>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-insufficient-data\" />\r\n              <span>Insufficient data</span>\r\n            </div>\r\n            <div className=\"samples-info\">\r\n              <div className=\"color samples-info-zero-percent\" />\r\n              <span>0%</span>\r\n            </div>\r\n            {percentageSteps.map((g, n) => {\r\n              return (\r\n                <div key={n + \"H58\"} className=\"samples-info\">\r\n                  <div\r\n                    className=\"color\"\r\n                    style={{ backgroundColor: mapRedColorScale(g) }}\r\n                  />\r\n                  {g === \"1\" && <span>{\"1 - 2\"}%</span>}\r\n                  {g === \"3\" && <span>{\"3 - 10\"}%</span>}\r\n                  {g === \"11\" && <span>{\"11 - 50\"}%</span>}\r\n                  {g === \"51\" && <span>{\"51 - 100\"}%</span>}\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Map upper right buttons component\r\n  const renderMapLegend = () => {\r\n    const mapLegends = [\r\n      [\"MDR\", \"Multidrug resistant (MDR)\"],\r\n      [\"XDR\", \"Extensively drug resistant (XDR)\"],\r\n      [\"Azith\", \"Azithromycin resistant\"],\r\n      [\"CipI\", \"Ciprofloxacin nonsusceptible (CipI/R)\"],\r\n      [\"CipR\", \"Ciprofloxacin resistant (CipR)\"],\r\n      [\"Sensitive to all drugs\", \"Sensitive to all drugs\"],\r\n      [\"Dominant Genotype\", \"Dominant Genotype\"],\r\n      [\"H58 / Non-H58\", \"H58 genotype\"],\r\n      [\"No. Samples\", \"No. Samples\"],\r\n    ];\r\n    return (\r\n      <div className=\"map-legend\">\r\n        <FormControl fullWidth className={classes.formControlSelect}>\r\n          <div className=\"map-legend-formcontrol-div map-legend-formcontrol-div-pad\">\r\n            <div className=\"map-legend-formcontrol-label\">Select map view</div>\r\n            <IconTooltip\r\n              title={\r\n                <div className={classes.tooltipTitle}>\r\n                  Percentage frequency data is shown only for countries with\r\n                  N≥20 genomes\r\n                </div>\r\n              }\r\n              placement=\"top\"\r\n            >\r\n              <IconButton className={classes.tooltipButton}>\r\n                <FontAwesomeIcon\r\n                  icon={faInfoCircle}\r\n                  size=\"xs\"\r\n                  className={classes.tooltipIcon}\r\n                />\r\n              </IconButton>\r\n            </IconTooltip>\r\n          </div>\r\n          <Select\r\n            value={mapView}\r\n            onChange={(evt) => setMapView(evt.target.value)}\r\n            fullWidth\r\n            className={classes.select}\r\n          >\r\n            {mapLegends.map((n, i) => {\r\n              return (\r\n                <MenuItem\r\n                  key={i + \"mapview\"}\r\n                  className={classes.select}\r\n                  value={n[0]}\r\n                >\r\n                  {n[1]}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n        {generateMapLegendOptions()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // The variables and functions between the two dotted lines below represents the new method for filtering the data on the dashboard\r\n  //-------------------------------------------------------------------------------------------------------------------\r\n  const [data, setData] = useState([]);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [init, setInit] = useState(false);\r\n  const [allCountryRegions, setAllCountryRegions] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Get data from the csv file, filter it and set all initial values for the dashboard\r\n  // The CSV is only read ONCE in this function, after that the data passes only through the \"filterForComponents\" function from the filters.js file\r\n  useEffect(() => {\r\n    axios.get(`${API_ENDPOINT}filters/getDataFromCSV`).then((res) => {\r\n      // console.log('Getting Data');\r\n      setData(res.data);\r\n      setTotalGenomes(res.data.length);\r\n\r\n      let [auxTGenotypes, auxYears, auxCountries, auxRegions] = [\r\n        [],\r\n        [],\r\n        [],\r\n        {},\r\n      ];\r\n      let empty = [\"\", \"-\"];\r\n      res.data.forEach((x) => {\r\n        if (!auxTGenotypes.includes(x.GENOTYPE)) auxTGenotypes.push(x.GENOTYPE);\r\n        if (!auxYears.includes(x.DATE) && !empty.includes(x.DATE))\r\n          auxYears.push(x.DATE);\r\n        if (\r\n          !auxCountries.includes(x.COUNTRY_ONLY) &&\r\n          !empty.includes(x.COUNTRY_ONLY)\r\n        ) {\r\n          auxCountries.push(x.COUNTRY_ONLY);\r\n          auxRegions[x.COUNTRY_ONLY] = [];\r\n        }\r\n        if (\r\n          !empty.includes(x.COUNTRY_ONLY) &&\r\n          !empty.includes(x.REGION_IN_COUNTRY) &&\r\n          !auxRegions[x.COUNTRY_ONLY].includes(x.REGION_IN_COUNTRY)\r\n        ) {\r\n          auxRegions[x.COUNTRY_ONLY].push(x.REGION_IN_COUNTRY);\r\n        }\r\n      });\r\n      auxYears.sort();\r\n      auxCountries.sort();\r\n      auxCountries.unshift(\"All\");\r\n\r\n      setTotalGenotypes(auxTGenotypes.length);\r\n      setTimeInitial(auxYears[0]);\r\n      setActualTimeInitial(auxYears[0]);\r\n      setTimeFinal(auxYears[auxYears.length - 1]);\r\n      setActualTimeFinal(auxYears[auxYears.length - 1]);\r\n      setYears(auxYears);\r\n      setCountriesForFilter(auxCountries);\r\n      setAllCountryRegions(auxRegions);\r\n\r\n      // console.log('FINISH');\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  // Update regions after country changes.\r\n  // This was made apart from the normal filters because we already have all regions from all countries and it is not necessary\r\n  // to loop through all the data again.\r\n  useEffect(() => {\r\n    if (init) {\r\n      setActualRegion(\"All\");\r\n      if (actualCountry !== \"All\") {\r\n        const auxRegions = allCountryRegions[actualCountry];\r\n        auxRegions.sort();\r\n        auxRegions.unshift(\"All\");\r\n        setRegionsForFilter(auxRegions);\r\n      }\r\n    }\r\n  }, [init, actualCountry, allCountryRegions]);\r\n\r\n  // This function checks for changes on any of the filters and changes the loading status of the apge to TRUE.\r\n  // This triggers the function below this one (filterForComponents) and updates the data shown on the page\r\n  useEffect(() => {\r\n    if (init) {\r\n      // console.log('Something changed');\r\n      setLoading(true);\r\n    }\r\n  }, [\r\n    init,\r\n    dataset,\r\n    actualTimeInitial,\r\n    actualTimeFinal,\r\n    actualCountry,\r\n    actualRegion,\r\n  ]);\r\n\r\n  // Watcher from changes from filter on the dashboard, this way data is passed through the filters.js file and returns\r\n  useEffect(() => {\r\n    function update() {\r\n      if (init && loading) {\r\n        // console.log('Updating...');\r\n        const aux = filterForComponents({\r\n          data: data,\r\n          dataset: dataset,\r\n          country: actualCountry,\r\n          minYear: actualTimeInitial,\r\n          maxYear: actualTimeFinal,\r\n          region: actualRegion,\r\n        });\r\n        setCurrentData(aux[0]);\r\n        setActualGenomes(aux[0].length);\r\n        setActualGenotypes(aux[1]);\r\n        setWorldMapSamplesData(aux[2]);\r\n        setWorldMapComplementaryData(aux[3]);\r\n        setWorldMapGenotypesData(aux[4]);\r\n        setWorldMapH58Data(aux[5]);\r\n        setWorldMapSTADData(aux[6]);\r\n        setWorldMapMDRData(aux[7]);\r\n        setWorldMapXDRData(aux[8]);\r\n        setWorldMapAZITHData(aux[9]);\r\n        setWorldMapCIPRData(aux[10]);\r\n        setWorldMapCIPIData(aux[11]);\r\n        setCountryPMID(aux[12]);\r\n        setDrugsAndGenotypesChartData(aux[13]);\r\n        setDrugTrendsChartData(aux[14]);\r\n        setAmrClassChartData(aux[15]);\r\n        setPopulationStructureChartData(aux[16]);\r\n        setAppLoading(false);\r\n        setLoading(false);\r\n      }\r\n    }\r\n    update();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [loading]);\r\n\r\n  //-------------------------------------------------------------------------------------------------------------------\r\n\r\n  return (\r\n    <div className=\"dashboard\" style={{ height: \"100vh\" }}>\r\n      {/* Mobile toolbar */}\r\n      <div className=\"menu-bar-mobile\">\r\n        <img\r\n          className=\"logoImageMenu-mobile\"\r\n          src={typhinetLogoImg}\r\n          alt=\"TyphiNET\"\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          padding:\r\n            dimensions.width > 770 ? \"16px 16px 0px 16px\" : \"16x 0px 0px 0px\",\r\n          display: appLoading ? \"none\" : \"\",\r\n          backgroundColor: \"#E5E5E5\",\r\n        }}\r\n      >\r\n        {/* Logo and information on genotypes and genomes */}\r\n        <div className=\"info-wrapper\">\r\n          {dimensions.width > desktop && (\r\n            <>\r\n              <div className=\"typhinet-logo\">\r\n                <img\r\n                  className=\"typhinet-logo-image\"\r\n                  src={typhinetLogoImg}\r\n                  alt=\"TyphiNET\"\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n          <div className=\"card card-padding\">\r\n            <span>Total Genomes</span>\r\n            {totalGenomes === actualGenomes ? (\r\n              <span className=\"value\">{totalGenomes}</span>\r\n            ) : (\r\n              <span className=\"value\">\r\n                {actualGenomes}\r\n                <span className=\"value-total\">/{totalGenomes}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className=\"card\">\r\n            <span>Total Genotypes</span>\r\n            {totalGenotypes === actualGenotypes ? (\r\n              <span className=\"value\">{totalGenotypes}</span>\r\n            ) : (\r\n              <span className=\"value\">\r\n                {actualGenotypes}\r\n                <span className=\"value-total\">/{totalGenotypes}</span>\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* Map Wrapper*/}\r\n        <div className=\"map-filters-wrapper\">\r\n          <h2>\r\n            Global Overview of <i>Salmonella</i> Typhi\r\n          </h2>\r\n          <div\r\n            className=\"map-filters-wrapper-inside\"\r\n            style={{\r\n              flexDirection: dimensions.width > desktop ? \"row\" : \"column\",\r\n            }}\r\n          >\r\n            {/* Map -> all map views and information */}\r\n            <div className=\"map-wrapper\">\r\n              <ComposableMap\r\n                id=\"control-map\"\r\n                data-tip=\"\"\r\n                projectionConfig={{\r\n                  rotate: [-10, 0, 0],\r\n                  scale: 210,\r\n                }}\r\n                className=\"composable-map\"\r\n              >\r\n                <ZoomableGroup\r\n                  zoom={controlMapPosition.zoom}\r\n                  center={controlMapPosition.coordinates}\r\n                  onMoveEnd={(position) => {\r\n                    setControlMapPosition(position);\r\n                  }}\r\n                >\r\n                  <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n                  <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n                  <Geographies geography={geography}>\r\n                    {({ geographies }) => {\r\n                      return geographies.map((geo) => {\r\n                        const sample = worldMapSamplesData.find(\r\n                          (s) =>\r\n                            s.displayName === geo.properties.NAME\r\n                          // && (actualContinent === \"All\" ||\r\n                          //   geo.properties.CONTINENT === actualContinent)\r\n                        );\r\n\r\n                        const d =\r\n                          worldMapComplementaryData[geo.properties.NAME];\r\n                        let country;\r\n\r\n                        let fill = \"lightgrey\";\r\n                        let darkGray = \"#727272\";\r\n                        let zeroPercentColor = \"#A20F17\";\r\n\r\n                        switch (mapView) {\r\n                          case \"No. Samples\":\r\n                            if (sample && sample.count !== 0) {\r\n                              fill = mapSamplesColorScale(sample.count);\r\n                            } else if (sample && sample.count === 0) {\r\n                              fill = \"#F5F4F6\";\r\n                            }\r\n                            break;\r\n                          case \"Dominant Genotype\":\r\n                            country = worldMapGenotypesData.find(\r\n                              (s) =>\r\n                                s.displayName === geo.properties.NAME\r\n                              // && (actualContinent === \"All\" ||\r\n                              //   geo.properties.CONTINENT === actualContinent)\r\n                            );\r\n                            if (country !== undefined) {\r\n                              const temp = country.genotypes;\r\n                              temp.sort((a, b) =>\r\n                                a.count <= b.count ? 1 : -1\r\n                              );\r\n                              if (sample) {\r\n                                fill = getColorForGenotype(temp[0].lineage);\r\n                              }\r\n                            }\r\n                            break;\r\n                          case \"H58 / Non-H58\":\r\n                            country = worldMapH58Data.find(\r\n                              (s) =>\r\n                                s.displayName === geo.properties.NAME\r\n                              // && (actualContinent === \"All\" ||\r\n                              //   geo.properties.CONTINENT === actualContinent)\r\n                            );\r\n                            if (country !== undefined) {\r\n                              let countH58 = 0;\r\n                              const isH58 = country.genotypes.find(\r\n                                (g) => g.type === \"H58\"\r\n                              );\r\n                              if (isH58 !== undefined) {\r\n                                countH58 = isH58.count;\r\n                              }\r\n\r\n                              if (country.total >= 20 && countH58 > 0) {\r\n                                fill = mapRedColorScale(isH58.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray;\r\n                              }\r\n                            }\r\n                            break;\r\n                          case \"MDR\":\r\n                            country = worldMapMDRData.find(\r\n                              (s) =>\r\n                                s.displayName === geo.properties.NAME\r\n                              // && (actualContinent === \"All\" ||\r\n                              //   geo.properties.CONTINENT === actualContinent)\r\n                            );\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray;\r\n                              }\r\n                            }\r\n                            break;\r\n                          case \"Sensitive to all drugs\":\r\n                            country = worldMapSTADData.find(\r\n                              (s) =>\r\n                                s.displayName === geo.properties.NAME\r\n                              // && (actualContinent === \"All\" ||\r\n                              //   geo.properties.CONTINENT === actualContinent)\r\n                            );\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScaleForSensitive(\r\n                                  country.percentage\r\n                                );\r\n                              } else if (country.total >= 20) {\r\n                                fill = zeroPercentColor;\r\n                              }\r\n                            }\r\n                            break;\r\n                          case \"XDR\":\r\n                            country = worldMapXDRData.find(\r\n                              (s) =>\r\n                                s.displayName === geo.properties.NAME\r\n                              // && (actualContinent === \"All\" ||\r\n                              //   geo.properties.CONTINENT === actualContinent)\r\n                            );\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray;\r\n                              }\r\n                            }\r\n                            break;\r\n                          case \"Azith\":\r\n                            country = worldMapAZITHData.find(\r\n                              (s) =>\r\n                                s.displayName === geo.properties.NAME\r\n                              // && (actualContinent === \"All\" ||\r\n                              //   geo.properties.CONTINENT === actualContinent)\r\n                            );\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray;\r\n                              }\r\n                            }\r\n                            break;\r\n                          case \"CipI\":\r\n                            country = worldMapCIPIData.find(\r\n                              (s) =>\r\n                                s.displayName === geo.properties.NAME\r\n                              // && (actualContinent === \"All\" ||\r\n                              //   geo.properties.CONTINENT === actualContinent)\r\n                            );\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray;\r\n                              }\r\n                            }\r\n                            break;\r\n                          case \"CipR\":\r\n                            country = worldMapCIPRData.find(\r\n                              (s) =>\r\n                                s.displayName === geo.properties.NAME\r\n                              // && (actualContinent === \"All\" ||\r\n                              //   geo.properties.CONTINENT === actualContinent)\r\n                            );\r\n                            if (country !== undefined) {\r\n                              if (country.total >= 20 && country.count > 0) {\r\n                                fill = mapRedColorScale(country.percentage);\r\n                              } else if (country.total >= 20) {\r\n                                fill = darkGray;\r\n                              }\r\n                            }\r\n                            break;\r\n                          default:\r\n                            break;\r\n                        }\r\n\r\n                        return (\r\n                          <Geography\r\n                            key={geo.rsmKey}\r\n                            geography={geo}\r\n                            cursor=\"pointer\"\r\n                            fill={fill}\r\n                            onClick={() => {\r\n                              if (d !== undefined && sample !== undefined) {\r\n                                setActualCountry(sample.name);\r\n                              }\r\n                            }}\r\n                            onMouseLeave={() => {\r\n                              setTooltipContent(null);\r\n                            }}\r\n                            onMouseEnter={() => {\r\n                              const { NAME } = geo.properties;\r\n                              switch (mapView) {\r\n                                case \"No. Samples\":\r\n                                  if (sample !== undefined && d !== undefined) {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      additionalInfo: {\r\n                                        samples: sample.count,\r\n                                        genotypes: d.GENOTYPES.TOTAL,\r\n                                        H58:\r\n                                          Math.round(d.H58) !== d.H58\r\n                                            ? d.H58.toFixed(2)\r\n                                            : d.H58,\r\n                                        MDR:\r\n                                          Math.round(d.MDR) !== d.MDR\r\n                                            ? d.MDR.toFixed(2)\r\n                                            : d.MDR,\r\n                                        XDR:\r\n                                          Math.round(d.XDR) !== d.XDR\r\n                                            ? d.XDR.toFixed(2)\r\n                                            : d.XDR,\r\n                                        // DCS:\r\n                                        //   Math.round(d.DCS) !== d.DCS\r\n                                        //     ? d.DCS.toFixed(2)\r\n                                        //     : d.DCS,\r\n                                        CipI:\r\n                                          Math.round(d.CipI) !== d.CipI\r\n                                            ? d.CipI.toFixed(2)\r\n                                            : d.CipI,\r\n                                        CipR:\r\n                                          Math.round(d.CipR) !== d.CipR\r\n                                            ? d.CipR.toFixed(2)\r\n                                            : d.CipR,\r\n                                        CipI_R:\r\n                                          Math.round(d.CipI_R) !== d.CipI_R\r\n                                            ? d.CipI_R.toFixed(2)\r\n                                            : d.CipI_R,\r\n                                        AzithR:\r\n                                          Math.round(d.AzithR) !== d.AzithR\r\n                                            ? d.AzithR.toFixed(2)\r\n                                            : d.AzithR,\r\n                                        STAD:\r\n                                          Math.round(d.STAD) !== d.STAD\r\n                                            ? d.STAD.toFixed(2)\r\n                                            : d.STAD,\r\n                                      },\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n                                  break;\r\n                                case \"Dominant Genotype\":\r\n                                  if (country !== undefined) {\r\n                                    let temp = country.genotypes;\r\n                                    temp.sort((a, b) =>\r\n                                      a.count <= b.count ? 1 : -1\r\n                                    );\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                      genotypeInfo: temp,\r\n                                    });\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n                                  break;\r\n                                case \"H58 / Non-H58\":\r\n                                  if (\r\n                                    country !== undefined &&\r\n                                    country.genotypes.length > 0\r\n                                  ) {\r\n                                    let countH58 = 0;\r\n                                    const isH58 = country.genotypes.find(\r\n                                      (g) => g.type === \"H58\"\r\n                                    );\r\n                                    if (isH58 !== undefined) {\r\n                                      countH58 = isH58.count;\r\n                                    }\r\n\r\n                                    if (country.total >= 20 && countH58 > 0) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        simpleGenotypeInfo: country.genotypes,\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true,\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n\r\n                                  break;\r\n                                case \"MDR\":\r\n                                  if (\r\n                                    country !== undefined &&\r\n                                    country.MDRs.length > 0\r\n                                  ) {\r\n                                    if (\r\n                                      country.total >= 20 &&\r\n                                      country.count > 0\r\n                                    ) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        mdrInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        },\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true,\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n                                  break;\r\n                                case \"Sensitive to all drugs\":\r\n                                  if (\r\n                                    country !== undefined &&\r\n                                    country.STADs.length > 0\r\n                                  ) {\r\n                                    if (\r\n                                      country.total >= 20 &&\r\n                                      country.count > 0\r\n                                    ) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        stadInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        },\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true,\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n                                  break;\r\n                                case \"XDR\":\r\n                                  if (\r\n                                    country !== undefined &&\r\n                                    country.XDRs.length > 0\r\n                                  ) {\r\n                                    if (\r\n                                      country.total >= 20 &&\r\n                                      country.count > 0\r\n                                    ) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        xdrInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        },\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true,\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n                                  break;\r\n                                case \"Azith\":\r\n                                  if (\r\n                                    country !== undefined &&\r\n                                    country.AZs.length > 0\r\n                                  ) {\r\n                                    if (\r\n                                      country.total >= 20 &&\r\n                                      country.count > 0\r\n                                    ) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        azInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        },\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true,\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n                                  break;\r\n                                case \"CipI\":\r\n                                  if (\r\n                                    country !== undefined &&\r\n                                    country.CipIs.length > 0\r\n                                  ) {\r\n                                    if (\r\n                                      country.total >= 20 &&\r\n                                      country.count > 0\r\n                                    ) {\r\n                                      let cipI = country.CipIs.filter(\r\n                                        (x) => x.type === \"CipI\"\r\n                                      );\r\n                                      if (cipI.length) {\r\n                                        cipI = cipI[0];\r\n                                        if (\r\n                                          Math.round(cipI.percentage) !==\r\n                                          cipI.percentage\r\n                                        )\r\n                                          cipI.percentage =\r\n                                            cipI.percentage.toFixed(2);\r\n                                        cipI.percentage = parseFloat(\r\n                                          cipI.percentage\r\n                                        );\r\n                                      } else {\r\n                                        cipI = {\r\n                                          count: 0,\r\n                                          percentage: 0,\r\n                                        };\r\n                                      }\r\n                                      let cipR = country.CipIs.filter(\r\n                                        (x) => x.type === \"CipR\"\r\n                                      );\r\n                                      if (cipR.length) {\r\n                                        cipR = cipR[0];\r\n                                        if (\r\n                                          Math.round(cipR.percentage) !==\r\n                                          cipR.percentage\r\n                                        )\r\n                                          cipR.percentage =\r\n                                            cipR.percentage.toFixed(2);\r\n                                        cipR.percentage = parseFloat(\r\n                                          cipR.percentage\r\n                                        );\r\n                                      } else {\r\n                                        cipR = {\r\n                                          count: 0,\r\n                                          percentage: 0,\r\n                                        };\r\n                                      }\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        cipIInfo: {\r\n                                          count: cipI.count,\r\n                                          percentage: cipI.percentage,\r\n                                        },\r\n                                        cipRInfo2: {\r\n                                          count: cipR.count,\r\n                                          percentage: cipR.percentage,\r\n                                        },\r\n                                        cipIRInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        },\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true,\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n                                  break;\r\n                                case \"CipR\":\r\n                                  if (\r\n                                    country !== undefined &&\r\n                                    country.CipRs.length > 0\r\n                                  ) {\r\n                                    if (\r\n                                      country.total >= 20 &&\r\n                                      country.count > 0\r\n                                    ) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        cipRInfo: {\r\n                                          count: country.count,\r\n                                          percentage: country.percentage,\r\n                                        },\r\n                                      });\r\n                                    } else if (country.total >= 20) {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                        smallerThan20: true,\r\n                                      });\r\n                                    } else {\r\n                                      setTooltipContent({\r\n                                        name: NAME,\r\n                                      });\r\n                                    }\r\n                                  } else {\r\n                                    setTooltipContent({\r\n                                      name: NAME,\r\n                                    });\r\n                                  }\r\n                                  break;\r\n                                default:\r\n                                  break;\r\n                              }\r\n                            }}\r\n                            style={{\r\n                              default: {\r\n                                outline: \"none\",\r\n                              },\r\n                              hover: {\r\n                                stroke: \"#607D8B\",\r\n                                strokeWidth: 1,\r\n                                outline: \"none\",\r\n                              },\r\n                              pressed: {\r\n                                fill: \"#FF5722\",\r\n                                stroke: \"#607D8B\",\r\n                                strokeWidth: 1,\r\n                                outline: \"none\",\r\n                              },\r\n                            }}\r\n                          />\r\n                        );\r\n                      })\r\n                    }\r\n\r\n                    }\r\n                  </Geographies>\r\n                </ZoomableGroup>\r\n              </ComposableMap>\r\n              {/* Map legend */}\r\n              {dimensions.width > desktop && (\r\n                <div className=\"map-upper-right-buttons\">\r\n                  {renderMapLegend()}\r\n                </div>\r\n              )}\r\n              {dimensions.width > desktop && (\r\n                // Dataset Filter\r\n                <div className=\"map-upper-left-buttons \">\r\n                  <div\r\n                    className=\"map-filters\"\r\n                    style={{\r\n                      width:\r\n                        dimensions.width > desktop\r\n                          ? 200\r\n                          : \"-webkit-fill-available\",\r\n                    }}\r\n                  >\r\n                    <span\r\n                      className=\"map-filters-label\"\r\n                      style={{\r\n                        marginBottom: dimensions.width > desktop ? 20 : 10,\r\n                      }}\r\n                    >\r\n                      Filters\r\n                    </span>\r\n                    <div\r\n                      style={{\r\n                        marginBottom: dimensions.width > desktop ? 16 : 8,\r\n                      }}\r\n                    >\r\n                      <Typography className={classes.typography}>\r\n                        Select dataset\r\n                      </Typography>\r\n                      <ToggleButtonGroup\r\n                        value={dataset}\r\n                        exclusive\r\n                        size=\"small\"\r\n                        className={classes.tbg}\r\n                        onChange={(evt, newDataset) => {\r\n                          if (newDataset !== null) setDataset(newDataset);\r\n                        }}\r\n                      >\r\n                        <CustomToggleButton value=\"All\">All</CustomToggleButton>\r\n                        <CustomToggleButton value=\"Local\">\r\n                          Local\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"Travel\">\r\n                          Travel\r\n                        </CustomToggleButton>\r\n                      </ToggleButtonGroup>\r\n                    </div>\r\n                    <div className=\"margin-div\">\r\n                      {years.length > 2 && (\r\n                        <div className=\"my-year-range\">\r\n                          <div>\r\n                            <Typography\r\n                              gutterBottom\r\n                              className={classes.typography}\r\n                            >\r\n                              Start year\r\n                            </Typography>\r\n                            <Select\r\n                              value={actualTimeInitial}\r\n                              onChange={(evt, value) =>\r\n                                setActualTimeInitial(value.props.value)\r\n                              }\r\n                              className={classes.selectYear}\r\n                              fullWidth\r\n                            >\r\n                              {years\r\n                                ?.filter((x) => x <= actualTimeFinal)\r\n                                .map((n, i) => {\r\n                                  return (\r\n                                    <MenuItem\r\n                                      key={i + \"timeperiod\"}\r\n                                      className={classes.select}\r\n                                      value={n}\r\n                                    >\r\n                                      {n}\r\n                                    </MenuItem>\r\n                                  );\r\n                                })}\r\n                            </Select>\r\n                          </div>\r\n                          <div className=\"my-divider\"></div>\r\n                          <div className=\"my-year-range-row\">\r\n                            <Typography\r\n                              gutterBottom\r\n                              className={classes.typographyEndYear}\r\n                            >\r\n                              End year\r\n                            </Typography>\r\n                            <Select\r\n                              value={actualTimeFinal}\r\n                              onChange={(evt, value) =>\r\n                                setActualTimeFinal(value.props.value)\r\n                              }\r\n                              className={classes.selectYear}\r\n                              fullWidth\r\n                            >\r\n                              {years\r\n                                ?.filter((x) => x >= actualTimeInitial)\r\n                                .map((n, i) => {\r\n                                  return (\r\n                                    <MenuItem\r\n                                      key={i + \"timeperiod2\"}\r\n                                      className={classes.select}\r\n                                      value={n}\r\n                                    >\r\n                                      {n}\r\n                                    </MenuItem>\r\n                                  );\r\n                                })}\r\n                            </Select>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {/* Map controllers */}\r\n              <div className=\"map-lower-left-buttons\">\r\n                <Zoom\r\n                  in={\r\n                    controlMapPosition.zoom !== 1 ||\r\n                    controlMapPosition.coordinates.some((c) => c !== 0)\r\n                  }\r\n                >\r\n                  <TooltipMaterialUI\r\n                    title={<span className=\"my-font\">Recenter Map</span>}\r\n                    placement=\"right\"\r\n                  >\r\n                    <div\r\n                      className=\"button\"\r\n                      onClick={() =>\r\n                        setControlMapPosition({ coordinates: [0, 0], zoom: 1 })\r\n                      }\r\n                    >\r\n                      <FontAwesomeIcon icon={faCrosshairs} />\r\n                    </div>\r\n                  </TooltipMaterialUI>\r\n                </Zoom>\r\n                <TooltipMaterialUI\r\n                  title={<span className=\"my-font\">Zoom In</span>}\r\n                  placement=\"right\"\r\n                >\r\n                  <div\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      if (controlMapPosition.zoom >= 4) return;\r\n                      setControlMapPosition((pos) => ({\r\n                        ...pos,\r\n                        zoom: pos.zoom * 2,\r\n                      }));\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n                <TooltipMaterialUI\r\n                  title={<span className=\"my-font\">Zoom Out</span>}\r\n                  placement=\"right\"\r\n                >\r\n                  <div\r\n                    className=\"button\"\r\n                    onClick={() => {\r\n                      if (controlMapPosition.zoom <= 1) return;\r\n                      if (controlMapPosition.zoom / 2 === 1) {\r\n                        setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\r\n                      } else {\r\n                        setControlMapPosition((pos) => ({\r\n                          ...pos,\r\n                          zoom: pos.zoom / 2,\r\n                        }));\r\n                      }\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faMinus} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n              </div>\r\n              {/* Download map button */}\r\n              <div className=\"map-lower-right-buttons\">\r\n                <TooltipMaterialUI\r\n                  title={<span className=\"my-font\">Download Map as PNG</span>}\r\n                  placement=\"left\"\r\n                >\r\n                  <div\r\n                    className={`button ${captureControlMapInProgress && \"disabled\"\r\n                      }`}\r\n                    onClick={() => {\r\n                      if (!captureControlMapInProgress)\r\n                        capturePicture(\"control-map\", 0, {\r\n                          mapView: mapView,\r\n                          dataset: dataset,\r\n                          actualTimePeriodRange: [\r\n                            actualTimeInitial,\r\n                            actualTimeFinal,\r\n                          ],\r\n                        });\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon icon={faCamera} />\r\n                  </div>\r\n                </TooltipMaterialUI>\r\n                {captureControlMapInProgress && (\r\n                  <CustomCircularProgress\r\n                    size={54}\r\n                    thickness={4}\r\n                    style={{ top: 5, left: -7 }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            {/* Map filters and legends for mobile */}\r\n            {!(dimensions.width > desktop) && (\r\n              <div className=\"wrapper-map-legend\">\r\n                {/* Legend */}\r\n                {renderMapLegend()}\r\n                {/* Filters */}\r\n                <div>\r\n                  <div\r\n                    className=\"map-filters-mobile\"\r\n                    style={{\r\n                      width:\r\n                        dimensions.width > desktop\r\n                          ? 200\r\n                          : \"-webkit-fill-available\",\r\n                    }}\r\n                  >\r\n                    <span\r\n                      className=\"map-filters-label\"\r\n                      style={{\r\n                        marginBottom: dimensions.width > desktop ? 20 : 10,\r\n                      }}\r\n                    >\r\n                      Filters\r\n                    </span>\r\n                    {/* Dataset Filter */}\r\n                    <div\r\n                      style={{\r\n                        marginBottom: dimensions.width > desktop ? 16 : 8,\r\n                      }}\r\n                    >\r\n                      <Typography className={classes.typography}>\r\n                        Select dataset\r\n                      </Typography>\r\n                      <ToggleButtonGroup\r\n                        value={dataset}\r\n                        exclusive\r\n                        size=\"small\"\r\n                        className={classes.tbg}\r\n                        onChange={(evt, newDataset) => {\r\n                          if (newDataset !== null) setDataset(newDataset);\r\n                        }}\r\n                      >\r\n                        <CustomToggleButton value=\"All\">All</CustomToggleButton>\r\n                        <CustomToggleButton value=\"Local\">\r\n                          Local\r\n                        </CustomToggleButton>\r\n                        <CustomToggleButton value=\"Travel\">\r\n                          Travel\r\n                        </CustomToggleButton>\r\n                      </ToggleButtonGroup>\r\n                    </div>\r\n                    {/* Year Filter */}\r\n                    <div className=\"margin-div\">\r\n                      <div className=\"my-year-range\">\r\n                        <div className=\"my-year-range-row\">\r\n                          <Typography\r\n                            gutterBottom\r\n                            className={classes.typography}\r\n                          >\r\n                            Start year\r\n                          </Typography>\r\n                          <Select\r\n                            value={actualTimeInitial}\r\n                            onChange={(evt, value) =>\r\n                              setActualTimeInitial(value.props.value)\r\n                            }\r\n                            className={classes.select}\r\n                            fullWidth\r\n                          >\r\n                            {years.map((n, i) => {\r\n                              return (\r\n                                <MenuItem\r\n                                  key={i + \"year\"}\r\n                                  className={classes.select}\r\n                                  value={n}\r\n                                >\r\n                                  {n}\r\n                                </MenuItem>\r\n                              );\r\n                            })}\r\n                          </Select>\r\n                        </div>\r\n                        <div className=\"my-divider\"></div>\r\n                        <div className=\"my-year-range-row\">\r\n                          <Typography\r\n                            gutterBottom\r\n                            className={classes.typographyEndYear}\r\n                          >\r\n                            End year\r\n                          </Typography>\r\n                          <Select\r\n                            value={actualTimeFinal}\r\n                            onChange={(evt, value) =>\r\n                              setActualTimeFinal(value.props.value)\r\n                            }\r\n                            className={classes.select}\r\n                            fullWidth\r\n                          >\r\n                            {years.map((n, i) => {\r\n                              return (\r\n                                <MenuItem\r\n                                  key={i + \"year2\"}\r\n                                  className={classes.select}\r\n                                  value={n}\r\n                                >\r\n                                  {n}\r\n                                </MenuItem>\r\n                              );\r\n                            })}\r\n                          </Select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {/* Map Tooltips */}\r\n            <ReactTooltip>\r\n              {tooltipContent && (\r\n                <div className=\"tooltip-map\">\r\n                  <span className=\"country\">{tooltipContent.name}</span>\r\n                  {tooltipContent.additionalInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>\r\n                        Samples: {tooltipContent.additionalInfo.samples}\r\n                      </span>\r\n                      <span>\r\n                        Genotypes: {tooltipContent.additionalInfo.genotypes}\r\n                      </span>\r\n                      <span>H58: {tooltipContent.additionalInfo.H58}%</span>\r\n                      <span>MDR: {tooltipContent.additionalInfo.MDR}%</span>\r\n                      <span>XDR: {tooltipContent.additionalInfo.XDR}%</span>\r\n                      {/* <span>DCS: {tooltipContent.additionalInfo.DCS}%</span> */}\r\n                      <span>\r\n                        AzithR: {tooltipContent.additionalInfo.AzithR}%\r\n                      </span>\r\n                      <span>CipI: {tooltipContent.additionalInfo.CipI}%</span>\r\n                      <span>CipR: {tooltipContent.additionalInfo.CipR}%</span>\r\n                      <span>\r\n                        CipI/R: {tooltipContent.additionalInfo.CipI_R}%\r\n                      </span>\r\n                      <span>\r\n                        Susceptible: {tooltipContent.additionalInfo.STAD}%\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.genotypeInfo && (\r\n                    <div className=\"additional-info margin-div\">\r\n                      {tooltipContent.genotypeInfo.map((genotype, index) => {\r\n                        if (index < 5) {\r\n                          return (\r\n                            <div\r\n                              key={index + \"genotypeInfo\"}\r\n                              className=\"genotype\"\r\n                            >\r\n                              <div\r\n                                className=\"color\"\r\n                                style={{\r\n                                  backgroundColor: getColorForGenotype(\r\n                                    genotype.lineage\r\n                                  ),\r\n                                }}\r\n                              />\r\n                              <span>\r\n                                {genotype.lineage}: {genotype.count}\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        } else return null;\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.simpleGenotypeInfo && (\r\n                    <div className=\"additional-info margin-div\">\r\n                      {tooltipContent.simpleGenotypeInfo[0].type === \"H58\" ? (\r\n                        <span>\r\n                          {tooltipContent.simpleGenotypeInfo[0].type}:{\" \"}\r\n                          {tooltipContent.simpleGenotypeInfo[0].count} (\r\n                          {tooltipContent.simpleGenotypeInfo[0].percentage}%)\r\n                        </span>\r\n                      ) : tooltipContent.simpleGenotypeInfo.length > 1 &&\r\n                        tooltipContent.simpleGenotypeInfo[1].type === \"H58\" ? (\r\n                        <span>\r\n                          {tooltipContent.simpleGenotypeInfo[1].type}:{\" \"}\r\n                          {tooltipContent.simpleGenotypeInfo[1].count} (\r\n                          {tooltipContent.simpleGenotypeInfo[1].percentage}%)\r\n                        </span>\r\n                      ) : (\r\n                        <span>H58: 0 (0%)</span>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.mdrInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>\r\n                        MDR: {tooltipContent.mdrInfo.count} (\r\n                        {tooltipContent.mdrInfo.percentage}%)\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.stadInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>\r\n                        Susceptible: {tooltipContent.stadInfo.count} (\r\n                        {tooltipContent.stadInfo.percentage}%)\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.xdrInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>\r\n                        XDR: {tooltipContent.xdrInfo.count} (\r\n                        {tooltipContent.xdrInfo.percentage}%)\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.azInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>\r\n                        AzithR: {tooltipContent.azInfo.count} (\r\n                        {tooltipContent.azInfo.percentage}%)\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.cipIInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>\r\n                        CipI/R: {tooltipContent.cipIRInfo.count} (\r\n                        {tooltipContent.cipIRInfo.percentage}%)\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {tooltipContent.cipRInfo && (\r\n                    <div className=\"additional-info\">\r\n                      <span>\r\n                        CipR: {tooltipContent.cipRInfo.count} (\r\n                        {tooltipContent.cipRInfo.percentage}%)\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  {!tooltipContent.xdrInfo &&\r\n                    !tooltipContent.mdrInfo &&\r\n                    !tooltipContent.stadInfo &&\r\n                    !tooltipContent.azInfo &&\r\n                    !tooltipContent.cipIInfo &&\r\n                    !tooltipContent.cipRInfo &&\r\n                    !tooltipContent.simpleGenotypeInfo &&\r\n                    !tooltipContent.genotypeInfo &&\r\n                    !tooltipContent.additionalInfo && (\r\n                      <div className=\"additional-info\">\r\n                        <span>\r\n                          {tooltipContent.smallerThan20\r\n                            ? \"0%\"\r\n                            : \"Insufficient data\"}\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                </div>\r\n              )}\r\n            </ReactTooltip>\r\n          </div>\r\n        </div>\r\n        {/* Chart Wrapper */}\r\n        <div className=\"chart-wrapper\">\r\n          <h2 className=\"showing-data\">\r\n            Now showing: {dataset} data from{\" \"}\r\n            {actualCountry === \"All\" ? \"all countries\" : actualCountry} from{\" \"}\r\n            {actualTimeInitial} to {actualTimeFinal}\r\n          </h2>\r\n          <div\r\n            className=\"country-region-div\"\r\n            style={{ flexDirection: dimensions.width > 560 ? \"row\" : \"column\" }}\r\n          >\r\n            {/* Select country dropdown */}\r\n            <FormControl className={classes.formControlSelectCountryRegion}>\r\n              <label className=\"select-country-label\">\r\n                Select country (or click map)\r\n              </label>\r\n              <Select\r\n                value={actualCountry}\r\n                onChange={(evt) => {\r\n                  setActualCountry(evt.target.value);\r\n                }}\r\n                fullWidth\r\n                className={classes.selectCountry}\r\n              >\r\n                {countriesForFilter.map((country, index) => {\r\n                  return (\r\n                    <MenuItem\r\n                      key={index + \"countriesFilter\"}\r\n                      className={classes.selectCountryValues}\r\n                      value={country}\r\n                    >\r\n                      {country}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            {dimensions.width > 560 && (\r\n              <div className=\"country-region-spacer\"></div>\r\n            )}\r\n            {/* Select region dropdown */}\r\n            {/* <FormControl className={`${classes.formControlSelectCountryRegion}`}>\r\n              <label className=\"select-country-label\">Select region</label>\r\n              <Select\r\n                value={actualRegion}\r\n                onChange={evt => { setActualRegion(evt.target.value) }}\r\n                fullWidth\r\n                className={classes.selectCountry}\r\n              >\r\n                {regionsForFilter.map((region, index) => {\r\n                  return (\r\n                    <MenuItem key={index + \"regionFilter\"} className={classes.selectCountryValues} value={region}>\r\n                      {region}\r\n                    </MenuItem>\r\n                  )\r\n                })}\r\n              </Select>\r\n            </FormControl> */}\r\n          </div>\r\n          {/* Charts */}\r\n          <div className=\"chart-wrapper-div\">\r\n            <div\r\n              className=\"chart-wrapper-div2\"\r\n              style={{\r\n                flexDirection: dimensions.width > desktop ? \"row\" : \"column\",\r\n                paddingBottom: dimensions.width > desktop ? 20 : 0,\r\n              }}\r\n            >\r\n              <div\r\n                className=\"chart-wrapper-div3\"\r\n                style={{ paddingRight: dimensions.width < mobile ? 0 : 10 }}\r\n              >\r\n                {/* Resistance frequencies within genotypes CHART */}\r\n                <div className=\"chart-wrapper-RFWA\">\r\n                  <div className=\"chart-wrapper-RFWA-div\">\r\n                    <span className=\"chart-title chart-wrapper-RFWA-title\">\r\n                      Resistance frequencies within genotypes\r\n                    </span>\r\n                    {/* Download chart */}\r\n                    <div className=\"chart-wrapper-RFWA-download\">\r\n                      <TooltipMaterialUI\r\n                        title={\r\n                          <span className=\"my-font\">Download Chart as PNG</span>\r\n                        }\r\n                        placement=\"right\"\r\n                      >\r\n                        <div\r\n                          className={`button ${captureControlChartRFWGInProgress && \"disabled\"\r\n                            }`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartRFWGInProgress)\r\n                              capturePicture(\"RFWG\", 1, {\r\n                                mapView: mapView,\r\n                                dataset: dataset,\r\n                                actualTimePeriodRange: [\r\n                                  actualTimeInitial,\r\n                                  actualTimeFinal,\r\n                                ],\r\n                                country: actualCountry,\r\n                                region: actualRegion,\r\n                                RFWGCount: RFWGValues.length,\r\n                              });\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartRFWGInProgress && (\r\n                        <CustomCircularProgress size={44} thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {/* Labels */}\r\n                  <span className=\"chart-title chart-wrapper-RFWA-top\">\r\n                    Top Genotypes (up to {RFWGValues.length})\r\n                  </span>\r\n                  <div\r\n                    className=\"chart-wrapper-RFWA-view\"\r\n                    style={{ width: dimensions.width > 790 ? \"71%\" : \"260px\" }}\r\n                  >\r\n                    <div className=\"chart-wrapper-DRT-view-drugs\">\r\n                      <div className=\"chart-wrapper-DRT-view-drugs-label\">\r\n                        Data view\r\n                      </div>\r\n                      <IconTooltip\r\n                        title={\r\n                          <div className={classes.tooltipTitle}>\r\n                            Select up to 7 genotypes\r\n                          </div>\r\n                        }\r\n                        placement=\"top\"\r\n                      >\r\n                        <IconButton className={classes.tooltipButton}>\r\n                          <FontAwesomeIcon\r\n                            icon={faInfoCircle}\r\n                            size=\"xs\"\r\n                            className={classes.tooltipIcon}\r\n                          />\r\n                        </IconButton>\r\n                      </IconTooltip>\r\n                    </div>\r\n                    {/* Data view dropdown */}\r\n                    <FormControl\r\n                      fullWidth\r\n                      className={classes.formControlSelect}\r\n                    >\r\n                      <DropDownSelect\r\n                        options={RFWGFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[\r\n                          {\r\n                            value: RFWGFilterOptions[RFWGFilter - 1].value,\r\n                            id: RFWGFilter,\r\n                          },\r\n                        ]}\r\n                        onChange={(evt) => {\r\n                          setRFWGFilter(evt[0].id);\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                    {/* Genotypes select dropdown */}\r\n                    <FormControl\r\n                      id=\"DDS2\"\r\n                      fullWidth\r\n                      className={classes.formControlSelect}\r\n                    >\r\n                      <DropDownSelect\r\n                        options={RFWGDropdownOptions}\r\n                        multi={true}\r\n                        searchable={false}\r\n                        clearable={true}\r\n                        separator={true}\r\n                        labelField={\"label\"}\r\n                        values={RFWGDropdownOptions.slice(0, 5)}\r\n                        className=\"dropdown-select\"\r\n                        contentRenderer={({ props, state }) => {\r\n                          return (\r\n                            <div className=\"chart-wrapper-DRT-view-drugs-select\">\r\n                              {state.values.length} of {props.options.length}{\" \"}\r\n                              Selected\r\n                            </div>\r\n                          );\r\n                        }}\r\n                        itemRenderer={({\r\n                          item,\r\n                          itemIndex,\r\n                          props,\r\n                          state,\r\n                          methods,\r\n                        }) => {\r\n                          return (\r\n                            <div\r\n                              key={item[props.valueField]}\r\n                              onClick={() => {\r\n                                if (RFWGValues.length >= 7) {\r\n                                  if (methods.isSelected(item)) {\r\n                                    methods.addItem(item);\r\n                                  }\r\n                                } else {\r\n                                  methods.addItem(item);\r\n                                }\r\n                              }}\r\n                            >\r\n                              <div className=\"chart-wrapper-DRT-view-drugs-select-options\">\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  checked={methods.isSelected(item)}\r\n                                  onChange={() => { }}\r\n                                />\r\n                                &nbsp;&nbsp;&nbsp;{item[props.labelField]}\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        }}\r\n                        clearRenderer={({ props, state, methods }) => {\r\n                          return (\r\n                            <Buttons>\r\n                              {state.values.length > 0 ? (\r\n                                <ButtonClearSelect\r\n                                  id=\"DSButton2\"\r\n                                  className=\"clear\"\r\n                                  onClick={methods.clearAll}\r\n                                  checked={false}\r\n                                >\r\n                                  Clear all\r\n                                </ButtonClearSelect>\r\n                              ) : (\r\n                                <ButtonClearSelect\r\n                                  id=\"DSButton2\"\r\n                                  onClick={() => {\r\n                                    methods.selectAll(\r\n                                      RFWGDropdownOptions.slice(0, 5)\r\n                                    );\r\n                                  }}\r\n                                  checked={true}\r\n                                >\r\n                                  Reset\r\n                                </ButtonClearSelect>\r\n                              )}\r\n                            </Buttons>\r\n                          );\r\n                        }}\r\n                        onChange={(values) => {\r\n                          setRFWGValues(values);\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"RFWG\">{plotDrugsAndGenotypesChart}</div>\r\n                </div>\r\n                {/* Resistance determinants within genotypes CHART */}\r\n                <div className=\"chart-wrapper-RDWAG\">\r\n                  <div className=\"chart-wrapper-RDWAG-div\">\r\n                    <span className=\"chart-title chart-wrapper-RDWAG-title\">\r\n                      Resistance determinants within genotypes\r\n                    </span>\r\n                    {/* Download chart */}\r\n                    <div className=\"chart-wrapper-RDWAG-download\">\r\n                      <TooltipMaterialUI\r\n                        title={\r\n                          <span className=\"my-font\">Download Chart as PNG</span>\r\n                        }\r\n                        placement=\"right\"\r\n                      >\r\n                        <div\r\n                          className={`button ${captureControlChartRFWAGInProgress && \"disabled\"\r\n                            }`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartRFWAGInProgress)\r\n                              capturePicture(\"RFWAG\", 4, {\r\n                                mapView: mapView,\r\n                                dataset: dataset,\r\n                                actualTimePeriodRange: [\r\n                                  actualTimeInitial,\r\n                                  actualTimeFinal,\r\n                                ],\r\n                                country: actualCountry,\r\n                                amrClassFilter: amrClassFilter,\r\n                                region: actualRegion,\r\n                              });\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartRFWAGInProgress && (\r\n                        <CustomCircularProgress size={44} thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {/* Labels */}\r\n                  <span className=\"chart-title chart-wrapper-RDWAG-top\">\r\n                    Top Genotypes (up to 10)\r\n                  </span>\r\n                  <div\r\n                    className=\"chart-wrapper-RDWAG-view\"\r\n                    style={{\r\n                      width: dimensions.width > desktop ? \"71%\" : \"90%\",\r\n                    }}\r\n                  >\r\n                    <InputLabel className={classes.inputLabel}>\r\n                      Select Drug Class\r\n                    </InputLabel>\r\n                    {/* Drug class dropdown */}\r\n                    <FormControl\r\n                      fullWidth\r\n                      className={classes.formControlSelect}\r\n                    >\r\n                      <DropDownSelect\r\n                        options={amrClassFilterforFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[\r\n                          {\r\n                            value: amrClassFilter,\r\n                            id: amrClassFilterforFilterOptions.find(\r\n                              (o) => o.value === amrClassFilter\r\n                            ).id,\r\n                          },\r\n                        ]}\r\n                        onChange={(evt) => {\r\n                          setAmrClassFilter(evt[0].value);\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                    <InputLabel className={classes.inputLabel}>\r\n                      Data view\r\n                    </InputLabel>\r\n                    {/* Data view dropdown */}\r\n                    <FormControl\r\n                      fullWidth\r\n                      className={classes.formControlSelect}\r\n                    >\r\n                      <DropDownSelect\r\n                        options={amrClassFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[\r\n                          {\r\n                            value:\r\n                              amrClassFilterOptions[RDWAGDataviewFilter - 1]\r\n                                .value,\r\n                            id: RDWAGDataviewFilter,\r\n                          },\r\n                        ]}\r\n                        onChange={(evt) => {\r\n                          setRDWAGDataviewFilter(evt[0].id);\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"RFWAG\">{plotAmrClassChart}</div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"chart-wrapper-div3\"\r\n                style={{\r\n                  paddingLeft: dimensions.width < mobile ? 0 : 10,\r\n                  marginTop: dimensions.width < desktop ? 50 : 0,\r\n                }}\r\n              >\r\n                {/* Drug resistance trends CHART */}\r\n                <div className=\"chart-wrapper-DRT\">\r\n                  <div className=\"chart-wrapper-DRT-div\">\r\n                    <span className=\"chart-title chart-wrapper-DRT-title\">\r\n                      Drug resistance trends\r\n                    </span>\r\n                    {/* Download button */}\r\n                    <div className=\"chart-wrapper-DRT-download\">\r\n                      <TooltipMaterialUI\r\n                        title={\r\n                          <span className=\"my-font\">Download Chart as PNG</span>\r\n                        }\r\n                        placement=\"right\"\r\n                      >\r\n                        <div\r\n                          className={`button ${captureControlChartDRTInProgress && \"disabled\"\r\n                            }`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartDRTInProgress)\r\n                              capturePicture(\"DRT\", 2, {\r\n                                mapView: mapView,\r\n                                dataset: dataset,\r\n                                actualTimePeriodRange: [\r\n                                  actualTimeInitial,\r\n                                  actualTimeFinal,\r\n                                ],\r\n                                country: actualCountry,\r\n                                drugs: trendValues,\r\n                                region: actualRegion,\r\n                              });\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartDRTInProgress && (\r\n                        <CustomCircularProgress size={44} thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {/* Labels */}\r\n                  <span className=\"chart-title chart-wrapper-RFWA-top\">\r\n                    Data are plotted for years with N ≥ 10 genomes\r\n                  </span>\r\n                  {dimensions.width > desktop && (\r\n                    <span className=\"chart-title\"></span>\r\n                  )}\r\n                  <div\r\n                    className=\"chart-wrapper-DRT-view\"\r\n                    style={{ width: dimensions.width > 790 ? \"71%\" : \"260px\" }}\r\n                  >\r\n                    <div className=\"chart-wrapper-DRT-view-drugs\">\r\n                      <div className=\"chart-wrapper-DRT-view-drugs-label\">\r\n                        Drugs view\r\n                      </div>\r\n                    </div>\r\n                    {/* Drugs dropdown */}\r\n                    <FormControl\r\n                      id=\"DDS\"\r\n                      fullWidth\r\n                      className={classes.formControlSelect}\r\n                    >\r\n                      <DropDownSelect\r\n                        options={trendDropdownOptions}\r\n                        multi={true}\r\n                        searchable={false}\r\n                        clearable={true}\r\n                        separator={true}\r\n                        labelField={\"value\"}\r\n                        values={trendDropdownOptions}\r\n                        className=\"dropdown-select\"\r\n                        contentRenderer={({ props, state }) => {\r\n                          return (\r\n                            <div className=\"chart-wrapper-DRT-view-drugs-select\">\r\n                              {state.values.length} of {props.options.length}{\" \"}\r\n                              Selected\r\n                            </div>\r\n                          );\r\n                        }}\r\n                        itemRenderer={({\r\n                          item,\r\n                          itemIndex,\r\n                          props,\r\n                          state,\r\n                          methods,\r\n                        }) => (\r\n                          <div\r\n                            key={item[props.valueField]}\r\n                            onClick={() => methods.addItem(item)}\r\n                          >\r\n                            <div className=\"chart-wrapper-DRT-view-drugs-select-options\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                checked={methods.isSelected(item)}\r\n                                onChange={() => { }}\r\n                              />\r\n                              &nbsp;&nbsp;&nbsp;{item[props.labelField]}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        clearRenderer={({ props, state, methods }) => {\r\n                          return (\r\n                            <Buttons>\r\n                              {methods.areAllSelected() ? (\r\n                                <ButtonClearSelect\r\n                                  id=\"DSButton\"\r\n                                  className=\"clear\"\r\n                                  onClick={methods.clearAll}\r\n                                  checked={false}\r\n                                >\r\n                                  Clear all\r\n                                </ButtonClearSelect>\r\n                              ) : (\r\n                                <ButtonClearSelect\r\n                                  id=\"DSButton\"\r\n                                  onClick={methods.selectAll}\r\n                                  checked={true}\r\n                                >\r\n                                  Select all\r\n                                </ButtonClearSelect>\r\n                              )}\r\n                            </Buttons>\r\n                          );\r\n                        }}\r\n                        onChange={(values) => {\r\n                          const doc = document.getElementById(\"DRT\");\r\n                          const lines =\r\n                            doc.getElementsByClassName(\"recharts-line\");\r\n                          for (let index = 0; index < lines.length; index++) {\r\n                            const isValue = values.some((e) => e.id === index);\r\n                            lines[index].style.display = isValue\r\n                              ? \"block\"\r\n                              : \"none\";\r\n                          }\r\n                          setTrendValues(values);\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"DRT\">{plotDrugTrendsChart}</div>\r\n                </div>\r\n                {/* Genotype distribution CHART */}\r\n                <div className=\"chart-wrapper-GD\">\r\n                  <div className=\"chart-wrapper-GD-div\">\r\n                    <span className=\"chart-title chart-wrapper-GD-title\">\r\n                      Genotype distribution\r\n                    </span>\r\n                    {/* Download chart */}\r\n                    <div className=\"chart-wrapper-GD-download\">\r\n                      <TooltipMaterialUI\r\n                        title={\r\n                          <span className=\"my-font\">Download Chart as PNG</span>\r\n                        }\r\n                        placement=\"right\"\r\n                      >\r\n                        <div\r\n                          className={`button ${captureControlChartGDInProgress && \"disabled\"\r\n                            }`}\r\n                          onClick={() => {\r\n                            if (!captureControlChartGDInProgress)\r\n                              capturePicture(\"GD\", 3, {\r\n                                mapView: mapView,\r\n                                dataset: dataset,\r\n                                actualTimePeriodRange: [\r\n                                  actualTimeInitial,\r\n                                  actualTimeFinal,\r\n                                ],\r\n                                country: actualCountry,\r\n                                region: actualRegion,\r\n                              });\r\n                          }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faCamera} size=\"sm\" />\r\n                        </div>\r\n                      </TooltipMaterialUI>\r\n                      {captureControlChartGDInProgress && (\r\n                        <CustomCircularProgress size={44} thickness={4} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {dimensions.width > desktop && (\r\n                    <span className=\"chart-title chart-wrapper-GD-space\"></span>\r\n                  )}\r\n                  <div\r\n                    className=\"chart-wrapper-GD-view\"\r\n                    style={{\r\n                      paddingTop: dimensions.width > desktop ? \"67px\" : \"\",\r\n                      width: dimensions.width > desktop ? \"71%\" : \"90%\",\r\n                    }}\r\n                  >\r\n                    <InputLabel className={classes.inputLabel}>\r\n                      Data view\r\n                    </InputLabel>\r\n                    {/* Data view dropdown */}\r\n                    <FormControl\r\n                      fullWidth\r\n                      className={classes.formControlSelect}\r\n                    >\r\n                      <DropDownSelect\r\n                        options={populationStructureFilterOptions}\r\n                        searchable={false}\r\n                        labelField={\"value\"}\r\n                        values={[\r\n                          {\r\n                            value:\r\n                              populationStructureFilterOptions[\r\n                                populationStructureFilter - 1\r\n                              ].value,\r\n                            id: populationStructureFilter,\r\n                          },\r\n                        ]}\r\n                        onChange={(evt) => {\r\n                          setPopulationStructureFilter(evt[0].id);\r\n                        }}\r\n                        className=\"dropdown-select\"\r\n                      />\r\n                    </FormControl>\r\n                  </div>\r\n                  <div id=\"GD\">{plotPopulationStructureChart}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Download spreadsheet and report wrappper */}\r\n            <div\r\n              className=\"wrapper-download-sheet-button\"\r\n              style={{\r\n                flexDirection: dimensions.width > desktop ? \"row\" : \"column\",\r\n                padding:\r\n                  dimensions.width < desktop\r\n                    ? \"0px 12px 12px 12px\"\r\n                    : \"50px 12px 12px 12px\",\r\n                width: \"-webkit-fill-available\",\r\n              }}\r\n            >\r\n              {/* Download spreadsheet */}\r\n              <TooltipMaterialUI\r\n                title={\r\n                  <span className=\"my-font\">\r\n                    Genome line list - including source information,\r\n                    genome-derived AMR and genotype information, and citations\r\n                    for each genome; pulled from Pathogenwatch.\r\n                  </span>\r\n                }\r\n                placement=\"top\"\r\n              >\r\n                <div\r\n                  className=\"download-sheet-button\"\r\n                  onClick={() => dowloadBaseSpreadsheet()}\r\n                >\r\n                  <FontAwesomeIcon icon={faTable} style={{ marginRight: 8 }} />\r\n                  <span>Download database (CSV format, 3.5MB)</span>\r\n                </div>\r\n              </TooltipMaterialUI>\r\n              {/* Download report */}\r\n              <div\r\n                style={{\r\n                  marginTop: dimensions.width > desktop ? 0 : 20,\r\n                  marginLeft: dimensions.width > desktop ? 20 : 0,\r\n                }}\r\n                className={`download-sheet-button`}\r\n                onClick={() => {\r\n                  if (!captureReportInProgress) {\r\n                    setCaptureReportInProgress(true);\r\n                    capturePicture(\"\", 5, {\r\n                      mapView: mapView,\r\n                      dataset: dataset,\r\n                      actualTimePeriodRange: [\r\n                        actualTimeInitial,\r\n                        actualTimeFinal,\r\n                      ],\r\n                      country: actualCountry,\r\n                      region: actualRegion,\r\n                      amrClassFilter: amrClassFilter,\r\n                      actualGenomes: actualGenomes,\r\n                      drugs: trendValues,\r\n                      dimensions: dimensions,\r\n                      desktop: desktop,\r\n                      RFWGCount: RFWGValues.length,\r\n                      PMID: countryPMID,\r\n                    });\r\n                  }\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faFilePdf} style={{ marginRight: 8 }} />\r\n                <span>Download report from current view</span>\r\n                {captureReportInProgress && (\r\n                  <div\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      paddingBottom: 32,\r\n                      paddingRight: 20,\r\n                    }}\r\n                  >\r\n                    <CustomCircularProgress\r\n                      size={44}\r\n                      thickness={4}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: -5,\r\n                        left: -6,\r\n                        color: \"white\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* About info */}\r\n        <div className=\"about-wrapper\">\r\n          <h2>About TyphiNET</h2>\r\n          <p>\r\n            The TyphiNET dashboard collates antimicrobial resistance (AMR) and\r\n            genotype (lineage) information extracted from whole genome sequence\r\n            (WGS) data from the bacterial pathogen <i> Salmonella</i> Typhi, the\r\n            agent of typhoid fever.\r\n          </p>\r\n          <p>\r\n            AMR determinants identified in the genome assemblies using\r\n            Pathogenwatch are used to define drug resistance variables as\r\n            follows.Multidrug resistance(MDR): resistance determinants for\r\n            chloramphenicol (<i>catA1</i> or <i>cmlA</i>), ampicillin (\r\n            <i>bla</i>TEM-1D, <i>bla</i>OXA-7), and co-trimoxazole (at least one{\" \"}\r\n            <i>dfrA</i> gene and at least one <i>sul</i> gene). Ciprofloxacin\r\n            non-susceptible (CipI/R): one or more of the quinolone resistance\r\n            determining region(QRDR) mutations at <i>gyrA</i>-83, <i>gyrA</i>\r\n            -87, <i>parC</i>-80, <i>parC</i>-84, <i>gyrB</i>-464 or presence of\r\n            a plasmid - mediated quinolone resistance(PMQR) gene(<i>qnrB</i>,{\" \"}\r\n            <i>qnrD</i> , <i>qnrS</i>). Ciprofloxacin resistant (CipR): QRDR\r\n            triple mutant (<i>gyrA</i>-83 and <i>gyrA</i>-87, together with\r\n            either <i>parC</i>-80 or <i>parC</i>-84), or plasmid - mediated\r\n            quinolone resistance(PMQR) together with <i>gyrA</i>-83, <i>gyrA</i>\r\n            -87 and/or <i>gyrB</i>-464. Third - generation cephalosporin\r\n            resistance (3 GCR): presence of an extended - spectrum\r\n            beta-lactamase(ESBL) (<i>bla</i>CTX-M-12, <i>bla</i>CTX-M-15,{\" \"}\r\n            <i>bla</i>CTX-M-23, <i>bla</i>CTX-M-55, <i>bla</i>SHV-12) or{\" \"}\r\n            <i>ampC</i> gene.Extreme drug resistance(XDR): MDR plus CipR plus 3\r\n            GCR. Azithromycin resistance(AziR): mutation at <i>acrB</i>-717\r\n            and/or gene <i>ereA</i>. See{\" \"}\r\n            <a\r\n              href=\"https://www.nature.com/articles/s41467-021-23091-2\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Argimon et al, 2021\r\n            </a>{\" \"}\r\n            for details.\r\n          </p>\r\n          <p>\r\n            <b>Data:</b> Data are sourced regularly from Typhi{\" \"}\r\n            <a href=\"https://pathogen.watch/\" target=\"_blank\" rel=\"noreferrer\">\r\n              Pathogenwatch\r\n            </a>\r\n            , and filtered to include only genomes from unbiased sampling frames\r\n            (e.g. routine or project - based enteric fever surveillance, as\r\n            opposed to AMR - focused sampling), based on curation by the {\" \"}\r\n            <a href=\"https://www.typhoidgenomics.org/\" target=\"_blank\" rel=\"noreferrer\">\r\n              Global Typhoid Genomics Consortium\r\n            </a>. \r\n            The database can be downloaded using the button below.\r\n            <p>\r\n            <b>Documentation:</b> Full documentation for the dashboard is available {\" \"}\r\n            <a href=\"https://github.com/zadyson/TyphiNET/wiki\" target=\"_blank\" rel=\"noreferrer\">\r\n              here\r\n            </a>.\r\n            </p>\r\n            Information on genotype definitions can be found in{\" \"}\r\n            <a\r\n              href=\"https://academic.oup.com/jid/article/224/Supplement_7/S775/6358992?login=true\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Dyson & Holt, 2021\r\n            </a>\r\n            .\r\n          </p>\r\n          <p>\r\n            <b>Team:</b> The TyphiNET dashboard is coordinated by {\" \"}\r\n            <a href=\"https://scholar.google.com.au/citations?hl=en&user=klhFnE0AAAAJ\" target=\"_blank\" rel=\"noreferrer\">\r\n              Dr Zoe Dyson\r\n            </a>\r\n            , {\" \"}\r\n            <a href=\"https://scholar.google.com.au/citations?hl=en&user=O2dcz5MAAAAJ\" target=\"_blank\" rel=\"noreferrer\">\r\n              Dr Louise Cerdeira\r\n            </a>\r\n             &amp; {\" \"}\r\n            <a href=\"https://holtlab.net/\" target=\"_blank\" rel=\"noreferrer\">\r\n              Prof Kat Holt\r\n            </a>\r\n             , with support from  the Wellcome Trust (Open Research Fund, 219692/Z/19/Z),\r\n             the European Union's Horizon 2020 research and innovation programme under the Marie\r\n            Sklodowska-Curie grant agreement No 845681.\r\n            <img\r\n              className=\"euFlagImage\"\r\n              src={euFlagImg}\r\n              alt=\"EU_FLAG\"\r\n              height=\"20\"\r\n            />\r\n            , the{\" \"}\r\n            <a href=\"https://www.lshtm.ac.uk/\" target=\"_blank\" rel=\"noreferrer\">\r\n              London School of Hygiene and Tropical Medicine\r\n            </a>{\" \"}\r\n            &amp;{\" \"}\r\n            <a href=\"https://www.monash.edu/\" target=\"_blank\" rel=\"noreferrer\">\r\n              Monash University\r\n            </a>\r\n            .\r\n          </p>\r\n        </div>\r\n        {/* Footer */}\r\n        <div className=\"footer-buttons-wrapper\">\r\n          {/* Contact Button */}\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open(\"mailto:dashboard@typhi.net\", \"_blank\");\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faEnvelope} className=\"fontawesome-icon\" />\r\n            <span>Contact</span>\r\n          </div>\r\n          {/* Documentation Button */}\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open(\"https://github.com/zadyson/TyphiNET/wiki\", \"_blank\");\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} className=\"fontawesome-icon\" />\r\n            <span>Documentation</span>\r\n          </div>\r\n          {/* Github Button */}\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open(\"https://github.com/zadyson/TyphiNET\", \"_blank\");\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} className=\"fontawesome-icon\" />\r\n            <span>GitHub</span>\r\n          </div>\r\n          {/* Twitter Button */}\r\n          <div\r\n            className=\"flex-button\"\r\n            onClick={() => {\r\n              window.open(\"https://twitter.com/typhinet\", \"_blank\");\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faTwitter} className=\"fontawesome-icon\" />\r\n            <span>Twitter</span>\r\n          </div>\r\n        </div>\r\n        <div style={{ flex: 1 }} />\r\n        <div className=\"footer\">\r\n          <span>\r\n            Data obtained from:{\" \"}\r\n            <a href=\"https://pathogen.watch\" rel=\"noreferrer\" target=\"_blank\">\r\n              pathogen watch project\r\n            </a>{\" \"}\r\n            on 10/10/2022.{\" \"}\r\n            <a href=\"https://holtlab.net\" rel=\"noreferrer\" target=\"_blank\">\r\n              Holt Lab\r\n            </a>\r\n          </span>\r\n        </div>\r\n        {/* FAB reset filters */}\r\n        <div\r\n          className=\"fab-button\"\r\n          style={{ width: dimensions.width < mobile ? \"48px\" : \"56px\" }}\r\n        >\r\n          <TooltipMaterialUI\r\n            title={<span className=\"my-font\">Reset Configurations</span>}\r\n            placement=\"left\"\r\n          >\r\n            <Fab\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n              size={dimensions.width < mobile ? \"medium\" : \"large\"}\r\n              onClick={() => {\r\n                setDataset(\"All\");\r\n                setActualTimeInitial(timeInitial);\r\n                setActualTimeFinal(timeFinal);\r\n                setActualCountry(\"All\");\r\n                setActualRegion(\"All\");\r\n                setMapView(\"CipI\");\r\n                setControlMapPosition({ coordinates: [0, 0], zoom: 1 });\r\n                setPopulationStructureFilter(1);\r\n                setAmrClassFilter(amrClassesForFilter[5]);\r\n                setRDWAGDataviewFilter(2);\r\n                setRFWGFilter(2);\r\n                // setActualContinent(\"All\");\r\n                const text = document.getElementById(\"DSButton\");\r\n                if (text.innerText === \"SELECT ALL\") {\r\n                  text.click();\r\n                }\r\n                const text2 = document.getElementById(\"DSButton2\");\r\n                if (text2.innerText === \"RESET\") {\r\n                  text2.click();\r\n                }\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon={faUndoAlt} size=\"lg\" color=\"white\" />\r\n            </Fab>\r\n          </TooltipMaterialUI>\r\n        </div>\r\n        {/* Loading */}\r\n        {loading && <div className=\"loading-2\">Loading...</div>}\r\n      </div>\r\n      {/* Loading Screen */}\r\n      {appLoading && (\r\n        <div className=\"loading\">\r\n          {dimensions.width > desktop && (\r\n            <img\r\n              className=\"logoImageMenu-loading\"\r\n              src={typhinetLogoImg}\r\n              alt=\"TyphiNET\"\r\n            />\r\n          )}\r\n          <Loader\r\n            className=\"my-loader\"\r\n            type=\"Circles\"\r\n            color=\"#D91E45\"\r\n            height={70}\r\n            width={70}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n","import { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// CircularProgress for 'Submit data' and 'Look for changes' dialogs\r\nconst CustomCircularProgress = withStyles({\r\n  root: {\r\n      color: \"rgb(31, 187, 211)\"\r\n  }\r\n})(CircularProgress);\r\n\r\n// CSS like classes\r\nconst useStyles = makeStyles({\r\n    cellON: {\r\n        backgroundColor: '#e9f9fc'\r\n    },\r\n    off: {},\r\n    tableID : {\r\n        position: 'sticky',\r\n        right: 0\r\n    },\r\n    tablePadding: {\r\n        marginTop: '16px'\r\n    },\r\n    actionsCell:{\r\n      borderLeft: '1px solid rgba(224, 224, 224, 1)',\r\n      backgroundColor: 'white'\r\n    },\r\n    stickyCell: {\r\n        position: 'sticky',\r\n        right: 0,\r\n        borderLeft: '1px solid rgba(224, 224, 224, 1)',\r\n        backgroundColor: 'white'\r\n    },\r\n    actionsHeaderCell: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      borderLeft: '1px solid rgba(224, 224, 224, 1)'\r\n    },\r\n    stickyHeaderCell: {\r\n        position: 'sticky',\r\n        right: 0,\r\n        backgroundColor: 'black',\r\n        color: 'white',\r\n        borderLeft: '1px solid rgba(224, 224, 224, 1)'\r\n    },\r\n    changesTable: {\r\n        maxHeight: '400px',\r\n        marginBottom: 32\r\n    },\r\n    viewButton: {\r\n        width: 80\r\n    },\r\n    resetButton: {\r\n        width: 150,\r\n        height: 40,\r\n        marginRight: 16,\r\n        marginLeft: 16\r\n    },\r\n    uploadButton: {\r\n        width: 150,\r\n        height: 40\r\n    },\r\n    checkChangesButton: {\r\n      width: 100,\r\n      height: 40\r\n    }, \r\n    dialog: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap'\r\n    },\r\n    input: {\r\n        marginBottom: 16\r\n    },\r\n    input2: {\r\n        marginBottom: 16\r\n    },\r\n    currentData: {\r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      whiteSpace: 'nowrap',\r\n      paddingRight: 8\r\n    },\r\n    toolbar: {\r\n      backgroundColor: 'black',\r\n      borderBottom: '1px solid white',\r\n      justifyContent: 'space-between'\r\n    },\r\n    deleteSelected: {\r\n      color: 'red'\r\n    },\r\n    checkboxCell: {\r\n      backgroundColor: 'black'\r\n    },\r\n    checkbox: {\r\n      color: 'white'\r\n    },\r\n    tableRowRoot: {\r\n      \"&$tableRowSelected, &$tableRowSelected:hover\": {\r\n        backgroundColor: '#e9f9fc'\r\n      }\r\n    },\r\n    tableRowSelected: {\r\n      backgroundColor: '#e9f9fc'\r\n    },\r\n    box: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      paddingLeft: 16\r\n    },\r\n    select: {\r\n      textAlign: 'right',\r\n      paddingLeft: 8,\r\n      textAlignLast: 'right',\r\n      minWidth: 50,\r\n      userSelect: 'none',\r\n      borderRadius: 0,\r\n      font: 'inherit',\r\n      letterSpacing: 'inherit',\r\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n      fontSize: 14,\r\n      backgroundColor: 'transparent',\r\n      '&:focus': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n      marginRight: 12,\r\n    },\r\n    choosePage: {\r\n      opacity: 0.87,\r\n      whiteSpace: 'nowrap',\r\n      paddingLeft: 8\r\n    },\r\n    selectFilter: {\r\n      backgroundColor: 'white',\r\n      textAlign: 'start'\r\n    },\r\n    header: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'stretch'\r\n    },\r\n    headerTitle:{\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'flex-start'\r\n    },\r\n    rowHeader: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'flex-start'\r\n    },\r\n    deleteChangeButton: {\r\n      backgroundColor: 'grey',\r\n      width: 35,\r\n      borderRadius: 5,\r\n      color: 'white',\r\n      border: '1px solid rgba(0, 0, 0, 0.23)',\r\n      '&:hover': {\r\n        color: 'white',\r\n        backgroundColor: '#4F4F4F'\r\n      },\r\n    },\r\n    // dialogTransition: {\r\n    //   transition: 'none'\r\n    // }\r\n  });\r\n\r\n// Load button from the changes table\r\nconst ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: 'grey',\r\n      color: 'white',\r\n      '&:hover': {\r\n        color: 'white',\r\n        backgroundColor: '#4F4F4F'\r\n      },\r\n      marginRight: '16px'\r\n    },\r\n}))(Button);\r\n\r\n// 'Reset changes' and 'Add new entry' buttons\r\nconst ColorButton3 = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: 'white',\r\n      color: '#1FBBD3',\r\n      '&:hover': {\r\n        color: 'black',\r\n        backgroundColor: '#CFCFCF'\r\n      },\r\n      borderColor: '#1FBBD3'\r\n    },\r\n}))(Button);\r\n\r\n// Submit changes button\r\nconst ColorButton4 = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: '#1FBBD3',\r\n      color: 'white',\r\n      '&:hover': {\r\n        color: 'white',\r\n        backgroundColor: '#188C9E'\r\n      }\r\n    },\r\n}))(Button);\r\n\r\n// Refresh button\r\nconst ColorButton5 = withStyles((theme) => ({\r\n  root: {\r\n    color: 'black',\r\n    borderColor: 'black',\r\n    backgroundColor: 'transparent',\r\n    '&:hover': {\r\n      backgroundColor: '#CFCFCF'\r\n    },\r\n    fontWeight: 'bold'\r\n  },\r\n}))(Button);\r\n\r\n// Header cell for both tables\r\nconst StyledHeaderCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n\r\n// Wrapper for data table\r\nconst CustomTableContainer = withStyles((theme) => ({\r\n    root: {\r\n        maxHeight: '600px'\r\n    }\r\n}))(TableContainer);\r\n\r\n// Label for header cells from the data table with order buttons\r\nconst CustomTableSortLabel = withStyles((theme) => ({\r\n    root: {\r\n        color: 'white',\r\n        \"&:hover\": {\r\n        color: 'white',\r\n      },\r\n      '&$active': {\r\n        color: 'white',\r\n      },\r\n    },\r\n    active: {},\r\n    icon: {\r\n        color: 'inherit !important'\r\n    },\r\n}))(TableSortLabel);\r\n\r\n\r\nexport { useStyles, ColorButton, ColorButton3, ColorButton4, ColorButton5, StyledHeaderCell, CustomTableContainer, CustomTableSortLabel, CustomCircularProgress};","import './index.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Tooltip, Toolbar, Typography, Checkbox, Box, IconButton, Select, MenuItem, FormControl } from '@material-ui/core';\r\nimport { FirstPage, LastPage, KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt, faEdit, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { useStyles, ColorButton, ColorButton3, ColorButton4, ColorButton5, StyledHeaderCell, CustomTableContainer, CustomTableSortLabel, CustomCircularProgress } from './materialUI'\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport axios from 'axios';\r\nimport LZString from 'lz-string';\r\nimport Loader from \"react-loader-spinner\";\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nfunction createData(id, date, changes) {\r\n    return { id, date, changes };\r\n}\r\n\r\nconst AdminPage = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [rows, setRows] = useState([])\r\n    const [data, setData] = useState([])\r\n    const [originalData, setOriginalData] = useState([])\r\n    const [currentData, setCurrentData] = useState(0)\r\n    const [tableKeys, setTableKeys] = useState([])\r\n    const [page, setPage] = useState(0)\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('NAME');\r\n    const [currentRow, setCurrentRow] = useState({})\r\n    const [open, setOpen] = React.useState(false);\r\n    const [open2, setOpen2] = React.useState(false);\r\n    const [open3, setOpen3] = React.useState(false);\r\n    const [open4, setOpen4] = React.useState(false);\r\n    const [open5, setOpen5] = React.useState(false);\r\n    const [open6, setOpen6] = React.useState(false);\r\n    const [open7, setOpen7] = React.useState(false);\r\n    const [open8, setOpen8] = React.useState(false);\r\n    const [resultMessage, setResultMessage] = React.useState(\"\");\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [search, setSearch] = React.useState(\"\");\r\n    const [filters, setFilters] = React.useState({});\r\n    const [filterOptions, setFilterOptions] = React.useState({});\r\n    const [filteredData, setFilteredData] = React.useState([]);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [startProgress, setStartProgress] = React.useState(false);\r\n    const [loadingMessage, setLoadingMessage] = React.useState(\"\");\r\n    const [currentChange, setCurrentChange] = React.useState(null);\r\n\r\n    const [exceptions] = React.useState([\"NAME\", \"ACCESION\", \"Genome ID\", \"LATITUDE\", \"LONGITUDE\", \"LOCATION\", \"Mash Distance\", \"Matching Hashes\", \"SANGER LANE\", \"STRAIN\"]);\r\n\r\n    // Change table page\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    // Change number of rows per page and return to first page\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    // Sort table by selected column in asc or desc\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    // Helper function for getComparator\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    // Main function to return data ordered to table\r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n    // Comparator to order table for stableSort\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n\r\n    // Change current view of the table to another ID, this also resets all changes made on the table\r\n    function changeView(id) {\r\n        resetChanges()\r\n        setData(originalData)\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n        if (id > 0) {\r\n            for (let index = 0; index < id; index++) {\r\n                Object.keys(rows[index].changes.added).forEach(element => {\r\n                    const genome = rows[index].changes.added[element]\r\n                    const gIndex = aux.findIndex(x => x.NAME === genome.NAME)\r\n                    aux.splice(gIndex, 1)\r\n                });\r\n\r\n                Object.keys(rows[index].changes.deleted).forEach(element => {\r\n                    const genome = rows[index].changes.deleted[element]\r\n                    aux.push(genome)\r\n                    aux.sort((a, b) => a.NAME < b.NAME ? -1 : 1)\r\n                });\r\n\r\n                Object.keys(rows[index].changes.updated).forEach(element => {\r\n                    const keys = rows[index].changes.updated[element]\r\n                    for (const key in keys) {\r\n                        const genome = aux.filter(x => x.NAME === element)\r\n                        if (genome.length > 0) {\r\n                            genome[0][key] = keys[key].old\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            setData(aux)\r\n        }\r\n        setCurrentData(id)\r\n    }\r\n\r\n    // Beautify text for changes\r\n    function betterChanges(changes) {\r\n        const aux = JSON.parse(JSON.stringify(changes))\r\n        const added = Object.keys(aux.added).length > 0 ? Object.keys(aux.added).join(\", \") + \".\" : \"\"\r\n        const deleted = (Object.keys(aux.deleted).length > 0 ? (Object.keys(aux.deleted).join(\", \")) + \".\" : \"\")\r\n        let updated = \"\"\r\n\r\n        if (Object.keys(aux.updated).length > 0) {\r\n            updated = Object.entries(aux.updated).map(x => {\r\n                const updates = Object.entries(x[1])\r\n                const changes = updates.map((y, i) => {\r\n                    const point = i === updates.length - 1 ? \".\" : \"\"\r\n                    return y[0] + \" (new: \" + y[1].new + \", old: \" + y[1].old + \")\" + point\r\n                });\r\n                return x[0] + \": \" + changes.join(\", \");\r\n            })\r\n        }\r\n\r\n        const text = []\r\n        if (added !== \"\") text.push([\"ADDED\", added])\r\n        if (deleted !== \"\") text.push([\"DELETED\", deleted])\r\n        if (updated !== \"\") text.push([\"UPDATED\", updated])\r\n        return text\r\n    }\r\n\r\n    // The five handlers below are mediators between the button and the dialog. They set specific informations before opening the dialogs.\r\n    function handleDelete(row) {\r\n        setCurrentRow(row)\r\n        setOpen(true)\r\n    }\r\n    function handleDeleteChange(id) {\r\n        setCurrentChange(id)\r\n        setOpen8(true)\r\n    }\r\n    function handleEdit(row) {\r\n        setCurrentRow(row)\r\n        setOpen2(true)\r\n    }\r\n    function handleUpload() {\r\n        setOpen4(true)\r\n    }\r\n    function handleCheckChanges(message) {\r\n        setResultMessage(message);\r\n        setOpen5(true);\r\n    }\r\n\r\n    // Delete chosen change\r\n    async function deleteChange() {\r\n        axios.post(`${API_ENDPOINT}mongo/deleteChange`, { id: currentChange - 1 })\r\n            .then((res) => {\r\n                getChangeData(res.data)\r\n                setCurrentData(0)\r\n            })\r\n            .finally(() => {\r\n                setOpen8(false)\r\n            })\r\n    }\r\n\r\n    // Check if there were any new changes on the database and updates the table\r\n    async function checkChanges(showPopup = true) {\r\n        setStartProgress(true);\r\n        setLoading(true);\r\n        return await axios.get(`${API_ENDPOINT}mongo/checkForChanges`)\r\n            .then(async (res) => {\r\n                if (res.data.Status === \"Changes\") {\r\n                    await resetChanges();\r\n                    await getData();\r\n                    if (showPopup) {\r\n                        handleCheckChanges('Changes were found. Tables updated.');\r\n                    }\r\n                    return true\r\n                } else if (res.data.Status === \"No Changes\") {\r\n                    if (showPopup) {\r\n                        handleCheckChanges('No changes found.');\r\n                    }\r\n                    return false\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                if (showPopup) {\r\n                    handleCheckChanges('Could not check for changes. Try again later.');\r\n                }\r\n                return false\r\n            })\r\n            .finally(() => {\r\n                setOpen7(false)\r\n                setLoading(false);\r\n                setStartProgress(false);\r\n            })\r\n    }\r\n\r\n    // Handler for select all rows button\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = filteredData.map((n) => n.NAME);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    // Handler for selecting specific row\r\n    const handleClick = (name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    // Delete selected row\r\n    function deleteRow() {\r\n        const index = data.findIndex(x => x.NAME === currentRow.NAME)\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n        aux.splice(index, 1)\r\n        setData(aux)\r\n        setOpen(false)\r\n    }\r\n\r\n    // If more than one row is selected than delete all of them\r\n    function deleteRows() {\r\n        const aux = JSON.parse(JSON.stringify(filteredData))\r\n        const aux2 = JSON.parse(JSON.stringify(data))\r\n        selected.forEach(row => {\r\n            const index = aux.findIndex(x => x.NAME === row);\r\n            if (index !== -1) {\r\n                aux.splice(index, 1)\r\n            }\r\n            const index2 = aux2.findIndex(x => x.NAME === row);\r\n            if (index2 !== -1) {\r\n                aux2.splice(index2, 1)\r\n            }\r\n        })\r\n        setData(aux2)\r\n        setFilteredData(aux)\r\n        setSelected([])\r\n        setOpen6(false)\r\n    }\r\n\r\n    // Edit selected row\r\n    function editRow() {\r\n        const row = {}\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n\r\n        const rowIndex = aux.findIndex(x => x.NAME === currentRow.NAME)\r\n\r\n        const inputs = document.getElementsByClassName('MuiOutlinedInput-input')\r\n        Object.values(inputs).forEach(input => {\r\n            row[input.id] = input.value\r\n        });\r\n\r\n        aux[rowIndex] = row\r\n        setData(aux)\r\n        setOpen2(false)\r\n        setResultMessage(`Row ${currentRow.NAME} edited with success!`)\r\n        setOpen5(true)\r\n    }\r\n\r\n    // Add new row\r\n    function addRow() {\r\n        const row = {}\r\n        const aux = JSON.parse(JSON.stringify(data))\r\n\r\n        const inputs = document.getElementsByClassName('MuiOutlinedInput-input')\r\n        Object.values(inputs).forEach(input => {\r\n            row[input.id] = input.value\r\n        });\r\n\r\n        aux.push(row)\r\n        aux.sort((a, b) => a.NAME < b.NAME ? -1 : 1)\r\n        setData(aux)\r\n        setOpen3(false)\r\n        setResultMessage(`Row ${row.NAME} added with success!`)\r\n        setOpen5(true)\r\n    }\r\n\r\n    // Reset all changes made on the table\r\n    async function resetChanges() {\r\n        setSearch(\"\")\r\n        let aux = JSON.parse(JSON.stringify(filters))\r\n        for (const key in aux) {\r\n            aux[key] = \"\"\r\n        }\r\n        setFilters(aux)\r\n        setPage(0)\r\n        setRowsPerPage(10)\r\n        setCurrentData(0)\r\n        setData(originalData)\r\n    }\r\n\r\n    // Upload changes on the current table to the database\r\n    function uploadChanges() {\r\n        setLoading(true)\r\n        setStartProgress(true);\r\n        setResultMessage(\"\")\r\n        const times = Math.ceil(data.length / 1500)\r\n        const parts = []\r\n        for (let index = 0; index < times; index++) {\r\n            if (times === 0) {\r\n                break\r\n            }\r\n            if (times === index - 1) {\r\n                if (times === 1) {\r\n                    parts.push([data])\r\n                } else {\r\n                    parts.push([data.slice((times - 1) * 1500)])\r\n                }\r\n            } else {\r\n                parts.push([data.slice(index * 1500, (index * 1500) + 1500)])\r\n            }\r\n            axios.post(`${API_ENDPOINT}mongo/upload/admin`, {\r\n                data: LZString.compress(JSON.stringify(parts[parts.length - 1])),\r\n                parts: times,\r\n                current: index + 1\r\n            })\r\n                .then((res) => {\r\n                    if (res.data !== '' && res.data.Status === 'Uploaded') {\r\n                        axios.get(`${API_ENDPOINT}mongo/download`)\r\n                            .then(async () => {\r\n                                await checkChanges()\r\n                                setResultMessage(\"Upload and download completed!\")\r\n                            })\r\n                            .catch(() => {\r\n                                setResultMessage(\"Something went wrong with the download, please try again later!\")\r\n                            })\r\n                            .finally(() => {\r\n                                setStartProgress(false)\r\n                                setLoading(false)\r\n                                setOpen4(false)\r\n                                setOpen5(true)\r\n                            })\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    setStartProgress(false)\r\n                    setLoading(false)\r\n                    setOpen4(false)\r\n                    setResultMessage(\"Something went wrong with the upload, please try again later!\")\r\n                    setOpen5(true)\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    // Helper for function getData to get only the changes\r\n    function getChangeData(changeData) {\r\n        let aux = []\r\n        for (let index = 0; index < changeData.length - 1; index++) {\r\n            const date = new Date(changeData[index].updatedAt)\r\n            aux.push(\r\n                createData(index + 1, date.toLocaleString(), changeData[index].changes)\r\n            )\r\n        }\r\n        setRows(aux)\r\n    }\r\n\r\n    // Main function to get data for all the admin page\r\n    async function getData() {\r\n        await axios.get(`${API_ENDPOINT}file/databaseLog`)\r\n            .then((res) => {\r\n                let data = res.data\r\n\r\n                getChangeData(data)\r\n\r\n                let aux2 = Object.values(data[data.length - 1].data)\r\n                let aux4 = {}\r\n                let aux5 = {}\r\n\r\n                Object.keys(aux2[0]).forEach(key => {\r\n                    if (!exceptions.includes(key)) {\r\n                        aux4[key] = \"\"\r\n                        aux5[key] = []\r\n                        let options = aux2.map(value => value[key]);\r\n                        options.forEach(x => {\r\n                            if (!aux5[key].includes(x)) {\r\n                                aux5[key].push(x)\r\n                            }\r\n                        })\r\n                        aux5[key].sort()\r\n                    }\r\n                });\r\n\r\n                setData(aux2)\r\n                setFilters(aux4)\r\n                setFilterOptions(aux5)\r\n                setFilteredData(JSON.parse(JSON.stringify(aux2)))\r\n                setOriginalData(JSON.parse(JSON.stringify(aux2)))\r\n                setTableKeys(Object.keys(aux2[0]))\r\n            })\r\n    }\r\n\r\n    // Check for changes when admin page is opened and get data\r\n    useEffect(() => {\r\n        setLoadingMessage(\"Checking for changes...\")\r\n        checkChanges(false).then((response) => {\r\n            if (!response) {\r\n                getData().finally(() => {\r\n                    setIsLoading(false);\r\n                });\r\n            } else {\r\n                setIsLoading(false);\r\n            }\r\n        }).finally(() => {\r\n            setLoadingMessage(\"\")\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    // Watcher for filtering columns and search\r\n    useEffect(() => {\r\n        let aux = JSON.parse(JSON.stringify(data))\r\n        if (search === \"\" && Object.values(filters).join(\"\") === \"\") {\r\n            setFilteredData(aux)\r\n        } else {\r\n            let s = search.toLowerCase()\r\n\r\n            aux = aux.filter(x => {\r\n                let pass = true\r\n                Object.keys(x).forEach(y => {\r\n                    if (!exceptions.includes(y) && filters[y] !== \"\" && x[y] !== filters[y]) {\r\n                        pass = false\r\n                    }\r\n                    if (search !== \"\" && !Object.values(x).join(\" \").toLowerCase().includes(s)) {\r\n                        pass = false\r\n                    }\r\n                })\r\n                return pass\r\n            })\r\n\r\n            setFilteredData(aux)\r\n        }\r\n    }, [search, data, filters, exceptions])\r\n\r\n    // Component table toolbar (Above table header)\r\n    const EnhancedTableToolbar = (props) => {\r\n        const { numSelected } = props;\r\n\r\n        return (\r\n            <Toolbar className={classes.toolbar}>\r\n                {numSelected > 0 ? (\r\n                    <Typography\r\n                        sx={{ flex: '1 1 100%' }}\r\n                        color=\"inherit\"\r\n                        variant=\"subtitle1\"\r\n                        component=\"div\"\r\n                        className={classes.currentData}\r\n                    >\r\n                        {numSelected} selected\r\n                    </Typography>\r\n                ) : (\r\n                    <Typography\r\n                        sx={{ flex: '1 1 100%' }}\r\n                        variant=\"h6\"\r\n                        id=\"tableTitle\"\r\n                        component=\"div\"\r\n                        className={classes.currentData}\r\n                    >\r\n                        <b>DATA ID:</b> {currentData}\r\n                    </Typography>\r\n                )}\r\n\r\n                <SearchBar\r\n                    value={search}\r\n                    placeholder={\"Search and press enter...\"}\r\n                    onCancelSearch={() => {\r\n                        setSearch(\"\")\r\n                        setPage(0)\r\n                    }}\r\n                    onRequestSearch={(value) => {\r\n                        setSearch(value)\r\n                        setPage(0)\r\n                    }}\r\n                />\r\n\r\n                {numSelected > 0 ? (\r\n                    <Tooltip title=\"Delete\">\r\n                        <IconButton onClick={() => setOpen6(true)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt} className={classes.deleteSelected} />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                ) : null}\r\n\r\n\r\n            </Toolbar>\r\n        );\r\n    };\r\n\r\n    // Component table header\r\n    function EnhancedTableHead(props) {\r\n        const { classes, order, orderBy, onRequestSort, onSelectAllClick, numSelected, rowCount } = props;\r\n        const createSortHandler = (property) => (event) => {\r\n            onRequestSort(event, property);\r\n        };\r\n\r\n        return data.length > 0 && (\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell padding=\"checkbox\" className={classes.checkboxCell}>\r\n                        <Checkbox\r\n                            color=\"primary\"\r\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                            checked={rowCount > 0 && numSelected === rowCount}\r\n                            onChange={onSelectAllClick}\r\n                            className={classes.checkbox}\r\n                        />\r\n                    </TableCell>\r\n                    {tableKeys.map((headCell) => (\r\n                        <StyledHeaderCell\r\n                            key={headCell + 'table'}\r\n                            align={'center'}\r\n                            sortDirection={orderBy === headCell ? order : false}\r\n                        >\r\n                            <CustomTableSortLabel\r\n                                active={orderBy === headCell}\r\n                                direction={orderBy === headCell ? order : 'asc'}\r\n                                onClick={createSortHandler(headCell)}\r\n                                className={classes.rowHeader}\r\n                            >\r\n                                <div className={classes.header}>\r\n                                    <div className={classes.headerTitle}>{headCell}</div>\r\n                                    {!exceptions.includes(headCell) && (\r\n                                        <FormControl>\r\n                                            <Select\r\n                                                value={filters[headCell]}\r\n                                                onChange={(event) => {\r\n                                                    setPage(0)\r\n                                                    let aux = JSON.parse(JSON.stringify(filters))\r\n                                                    aux[headCell] = event.target.value\r\n                                                    setFilters(aux)\r\n                                                    event.stopPropagation()\r\n                                                }}\r\n                                                displayEmpty\r\n                                                className={classes.selectFilter}\r\n                                                onOpen={(event) => event.stopPropagation()}\r\n                                                onClose={(event) => event.stopPropagation()}\r\n                                            >\r\n                                                <MenuItem value=\"\">\r\n                                                    <em>None</em>\r\n                                                </MenuItem>\r\n                                                {filterOptions[headCell].map((option, i) => (<MenuItem key={i + option} value={option}>{option}</MenuItem>))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    )}\r\n                                </div>\r\n                            </CustomTableSortLabel>\r\n                        </StyledHeaderCell>\r\n                    ))}\r\n                    <TableCell className={classes.stickyHeaderCell}>\r\n                        <div className=\"actions\">ACTIONS</div>\r\n                    </TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n        );\r\n    }\r\n\r\n    // Get number of pages for the table\r\n    function NumberOfPages() {\r\n        return Math.ceil(filteredData.length / rowsPerPage)\r\n    }\r\n\r\n    // Component TablePaginationActions\r\n    function TablePaginationActions(props) {\r\n        const theme = useTheme();\r\n        const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n        const handleFirstPageButtonClick = (event) => {\r\n            onPageChange(event, 0);\r\n        };\r\n\r\n        const handleBackButtonClick = (event) => {\r\n            onPageChange(event, page - 1);\r\n        };\r\n\r\n        const handleNextButtonClick = (event) => {\r\n            onPageChange(event, page + 1);\r\n        };\r\n\r\n        const handleLastPageButtonClick = (event) => {\r\n            onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n        };\r\n\r\n        return (\r\n            <Box sx={{ flexShrink: 0, ml: 2.5 }} className={classes.box}>\r\n                <IconButton\r\n                    onClick={handleFirstPageButtonClick}\r\n                    disabled={page === 0}\r\n                    aria-label=\"first page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <LastPage /> : <FirstPage />}\r\n                </IconButton>\r\n                <IconButton\r\n                    onClick={handleBackButtonClick}\r\n                    disabled={page === 0}\r\n                    aria-label=\"previous page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n                </IconButton>\r\n                <IconButton\r\n                    onClick={handleNextButtonClick}\r\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                    aria-label=\"next page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n                </IconButton>\r\n                <IconButton\r\n                    onClick={handleLastPageButtonClick}\r\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                    aria-label=\"last page\"\r\n                >\r\n                    {theme.direction === 'rtl' ? <FirstPage /> : <LastPage />}\r\n                </IconButton>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    TablePaginationActions.propTypes = {\r\n        count: PropTypes.number.isRequired,\r\n        onPageChange: PropTypes.func.isRequired,\r\n        page: PropTypes.number.isRequired,\r\n        rowsPerPage: PropTypes.number.isRequired,\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    return (\r\n        <div className=\"mainDiv\">\r\n            <div className=\"mainDiv-padding\">\r\n                <div className=\"titleActions\">\r\n                    <div className=\"titleButtonRow\">\r\n                        <h2 className=\"title\">MongoDB Admin Page</h2>\r\n                    </div>\r\n                    <div className=\"tooltipSubmitRow\">\r\n                        <ColorButton5 onClick={() => { setOpen7(true) }} variant=\"outlined\" size=\"small\" className={classes.checkChangesButton} >Refresh</ColorButton5>\r\n                        <Tooltip\r\n                            title={<div className=\"tooltipTitle\">Changes are only saved by pressing the <b className=\"boldTooltipText\">SUBMIT CHANGES</b> button</div>}\r\n                            placement=\"left\"\r\n                        >\r\n                            <IconButton>\r\n                                <FontAwesomeIcon icon={faInfoCircle} />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <ColorButton4 onClick={() => { handleUpload() }} variant=\"outlined\" size=\"small\" className={classes.uploadButton} >Submit changes</ColorButton4>\r\n                    </div>\r\n                </div>\r\n                <TableContainer component={Paper} className={classes.changesTable}>\r\n                    <Table stickyHeader size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledHeaderCell>ID</StyledHeaderCell>\r\n                                <StyledHeaderCell>Date</StyledHeaderCell>\r\n                                <StyledHeaderCell align=\"left\">Changes</StyledHeaderCell>\r\n                                <StyledHeaderCell className={classes.actionsHeaderCell} align=\"left\">Actions</StyledHeaderCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow key={'00changes'} className={currentData === 0 ? classes.cellON : classes.off}>\r\n                                <TableCell align=\"left\">{0}</TableCell>\r\n                                <TableCell align=\"left\"></TableCell>\r\n                                <TableCell align=\"left\" width=\"70%\">{'CURRENT DATA'}</TableCell>\r\n                                <TableCell align=\"left\" className={classes.actionsCell}>\r\n                                    <div className=\"tableActions\">\r\n                                        <ColorButton onClick={() => changeView(0)} variant=\"outlined\" size=\"small\" className={classes.viewButton} >Load</ColorButton>\r\n                                    </div>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            {rows.map((row, r) => (\r\n                                <TableRow key={row.id + 'changes'} className={row.id === currentData ? classes.cellON : classes.off}>\r\n                                    <TableCell align=\"left\">{row.id}</TableCell>\r\n                                    <TableCell align=\"left\">{row.date}</TableCell>\r\n                                    <TableCell align=\"left\" width=\"70%\">{betterChanges(row.changes).map((text, t) => (\r\n                                        <div key={`${r}${t}change`} className=\"changesText\">\r\n                                            <div>{text[0]}</div>\r\n                                            &nbsp;{\"entries with name:\"}&nbsp;\r\n                                            {text[0] !== \"UPDATED\"\r\n                                                ? (<div>{text[1]}</div>)\r\n                                                : (\r\n                                                    <div>\r\n                                                        {Object.values(text[1]).map((x, i) => (<div key={x + i}>{x}</div>))}\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    ))}</TableCell>\r\n                                    <TableCell align=\"left\" className={classes.actionsCell}>\r\n                                        <div className=\"tableActions\">\r\n                                            <ColorButton onClick={() => changeView(row.id)} variant=\"outlined\" size=\"small\" className={classes.viewButton} >Load</ColorButton>\r\n                                            <IconButton aria-label=\"deleteChange\" size=\"small\" className={classes.deleteChangeButton} onClick={() => handleDeleteChange(row.id)}>\r\n                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <div className=\"addButton\">\r\n                    <ColorButton4 onClick={() => { handleUpload() }} variant=\"outlined\" size=\"small\" className={classes.uploadButton} >Submit changes</ColorButton4>\r\n                    <ColorButton3\r\n                        onClick={() => {\r\n                            resetChanges()\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className={classes.resetButton}\r\n                    >\r\n                        Reset changes\r\n                    </ColorButton3>\r\n                    <ColorButton3 onClick={() => { setOpen3(true) }} variant=\"outlined\" size=\"small\" className={classes.uploadButton} >Add new entry</ColorButton3>\r\n                </div>\r\n                <Paper className={classes.tablePadding}>\r\n                    <EnhancedTableToolbar numSelected={selected.length} />\r\n                    <CustomTableContainer>\r\n                        <Table stickyHeader size=\"small\" aria-label=\"a dense table\">\r\n                            <EnhancedTableHead\r\n                                numSelected={selected.length}\r\n                                classes={classes}\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                onRequestSort={handleRequestSort}\r\n                                onSelectAllClick={handleSelectAllClick}\r\n                                rowCount={filteredData.length}\r\n                            />\r\n                            <TableBody>\r\n                                {stableSort(filteredData, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.NAME);\r\n                                    return (\r\n                                        <TableRow\r\n                                            key={row.NAME + index}\r\n                                            className={classes.dataRow}\r\n                                            role=\"checkbox\"\r\n                                            hover\r\n                                            aria-checked={isItemSelected}\r\n                                            selected={isItemSelected}\r\n                                            classes={{ selected: classes.tableRowSelected, root: classes.tableRowRoot }}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    color=\"primary\"\r\n                                                    checked={isItemSelected}\r\n                                                    onClick={() => handleClick(row.NAME)}\r\n                                                />\r\n                                            </TableCell>\r\n                                            {Object.values(row).map((cell) => (\r\n                                                <TableCell key={Math.random() + 'cell'} align=\"center\">{cell}</TableCell>\r\n                                            ))}\r\n                                            <TableCell align=\"center\" className={classes.stickyCell}>\r\n                                                <div className=\"tableActions\">\r\n                                                    <IconButton aria-label=\"edit\" size=\"small\" onClick={() => handleEdit(JSON.parse(JSON.stringify(row)))}>\r\n                                                        <FontAwesomeIcon icon={faEdit} className=\"editIcon\" />\r\n                                                    </IconButton>\r\n                                                    <IconButton aria-label=\"delete\" size=\"small\" onClick={() => handleDelete(JSON.parse(JSON.stringify(row)))}>\r\n                                                        <FontAwesomeIcon icon={faTrashAlt} className=\"trashIcon\" />\r\n                                                    </IconButton>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </CustomTableContainer>\r\n                    <div className=\"pagination\">\r\n                        <Typography className={classes.choosePage} variant=\"body2\">Choose Page: </Typography>\r\n                        {filteredData.length > 0 && (<Select\r\n                            value={page}\r\n                            onChange={(event) => { setPage(event.target.value) }}\r\n                            className={classes.select}\r\n                            disableUnderline\r\n                        >\r\n                            {[...Array(NumberOfPages())].map((x, i) => <MenuItem key={x + 'nPage'} value={i}>{i}</MenuItem>)}\r\n                        </Select>)}\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[10, 25, 50, 100]}\r\n                            component=\"div\"\r\n                            count={filteredData.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onPageChange={handleChangePage}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                            ActionsComponent={TablePaginationActions}\r\n                        />\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n            {isLoading && (<div className=\"div-loader\">\r\n                <Loader\r\n                    type=\"Circles\"\r\n                    color=\"white\"\r\n                    height={70}\r\n                    width={70}\r\n                />\r\n                <p className=\"div-loader-msg\">{loadingMessage}</p>\r\n            </div>)}\r\n            <Dialog\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Delete\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure you want to delete {currentRow.NAME} ?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n                    <Button onClick={() => deleteRow()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open2}\r\n                onClose={() => setOpen2(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Edit\"}\r\n                </DialogTitle>\r\n                <DialogContent className={classes.dialog}>\r\n                    {Object.entries(currentRow).map(item => (\r\n                        <TextField key={item[0] + 'input'} id={item[0]} className={classes.input} label={item[0]} variant=\"outlined\" defaultValue={item[1]} />\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen2(false)}>Cancel</Button>\r\n                    <Button onClick={() => editRow()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open3}\r\n                onClose={() => setOpen3(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Add\"}\r\n                </DialogTitle>\r\n                <DialogContent className={classes.dialog}>\r\n                    {data.length > 0 && Object.keys(data[0]).map(item => (\r\n                        <TextField key={item + 'input2'} id={item} className={classes.input2} label={item} variant=\"outlined\" />\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen3(false)}>Cancel</Button>\r\n                    <Button onClick={() => addRow()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open4}\r\n                onClose={() => setOpen4(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Submit data\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Would you like to submit changes to the database and download the new version to TyphiNET ?\r\n                    </DialogContentText>\r\n                    {loading && (<div className=\"spinner\">\r\n                        <CustomCircularProgress></CustomCircularProgress>\r\n                    </div>)}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {!startProgress && (<Button onClick={() => setOpen4(false)}>Cancel</Button>)}\r\n                    {!startProgress && (<Button onClick={() => uploadChanges()} autoFocus>\r\n                        Ok\r\n                    </Button>)}\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open5}\r\n                onClose={() => setOpen5(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Result\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {resultMessage}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen5(false)} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open6}\r\n                onClose={() => setOpen6(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Delete many\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure you want to delete {selected.length} row(s) ?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen6(false)}>Cancel</Button>\r\n                    <Button onClick={() => deleteRows()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open7}\r\n                onClose={() => setOpen7(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Look for changes\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Look for changes in the database? If there are, your current changes in the table below will be reseted.\r\n                    </DialogContentText>\r\n                    {loading && (<div className=\"spinner\">\r\n                        <CustomCircularProgress></CustomCircularProgress>\r\n                    </div>)}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {!startProgress && (<Button onClick={() => setOpen7(false)}>Cancel</Button>)}\r\n                    {!startProgress && (<Button onClick={() => { checkChanges() }} autoFocus>\r\n                        Ok\r\n                    </Button>)}\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open8}\r\n                onClose={() => setOpen8(false)}\r\n                style={classes.dialogTransition}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Delete changes\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure you want to delete change nº {currentChange} ?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen8(false)}>Cancel</Button>\r\n                    <Button onClick={() => deleteChange()} autoFocus>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPage","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport DashboardPage from './pages/dashboard'\r\nimport AdminPage from './pages/admin'\r\n// import typhinetLogoImg from './assets/img/logo-typhinet.png';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <nav>\r\n          <Link to=\"/\"></Link>\r\n          <Link to=\"/admin\"></Link>\r\n        </nav>\r\n        <Switch>\r\n          <Route path=\"/admin\">\r\n            <div>\r\n              <AdminPage/>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <div className=\"App\">\r\n              <div className=\"content\">\r\n                <DashboardPage/>\r\n              </div>\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    // <div className=\"App\">\r\n    //   <div className=\"content\">\r\n    //     <DashboardPage/>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// capture the user experience of a web page\r\n\r\nconst reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\r\n\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1fbbd3',\r\n    }\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}