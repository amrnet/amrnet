{"version":3,"sources":["registerServiceWorker.js","reportWebVitals.js","components/Admin/materialUI.js","constants.js","components/Admin/Admin.js","components/Elements/Header/HeaderMUI.js","assets/img/logo-prod.png","components/Elements/Drawer/DrawerMUI.js","stores/slices/appSlice.ts","stores/hooks.ts","util/menuItems.js","components/Elements/Drawer/Drawer.js","components/Elements/SelectOrganism/SelectOrganismMUI.js","stores/slices/dashboardSlice.ts","components/Elements/SelectOrganism/SelectOrganism.js","components/Elements/InformationCards/InformationCardsMUI.js","components/Elements/InformationCards/InformationCards.js","components/Elements/Header/Header.js","components/Layout/MainLayoutUI.js","components/Layout/MainLayout.js","components/Elements/Map/MapMUI.js","util/colorHelper.js","components/Elements/Map/mapColorHelper.js","components/Elements/Map/BottomLeftControls/BottomLeftControlsMUI.js","stores/slices/mapSlice.ts","components/Elements/Map/BottomLeftControls/BottomLeftControls.js","components/Elements/Map/TopRightControls/TopRightControlsMUI.js","util/genotypes.js","util/mapLegends.js","components/Elements/Map/TopRightControls/TopRightControls.js","components/Elements/Map/TopLeftControls/TopLeftControlsMUI.js","components/Elements/Map/TopLeftControls/TopLeftControls.js","stores/slices/graphSlice.ts","components/Elements/Map/TopRightControls2/TopRightControls2MUI.js","components/Elements/Map/TopRightControls2/TopRightControls2.js","components/Elements/Map/BottomRightControls/BottomRightControlsMUI.js","util/imgOnLoadPromise.js","components/Elements/Map/BottomRightControls/BottomRightControls.js","components/Elements/Map/Map.js","components/Elements/Footer/FooterMUI.js","assets/img/LSHTMLogo2020.jpg","assets/img/Wellcome_Trust_logo.png","components/Elements/Footer/Footer.js","components/Elements/DownloadData/DownloadDataMUI.js","assets/img/eu_flag.jpg","util/graphCards.js","util/drugs.js","components/Elements/Graphs/graphColorHelper.js","util/reportInfoTexts.js","util/convergenceVariablesOptions.js","components/Elements/DownloadData/DownloadData.js","components/Elements/Graphs/GraphsMUI.js","components/Elements/Graphs/DeterminantsGraph/DeterminantsGraphMUI.js","util/isTouchDevice.js","components/Elements/Graphs/DeterminantsGraph/DeterminantsGraph.js","components/Elements/Graphs/FrequenciesGraph/FrequenciesGraphMUI.js","components/Elements/Graphs/FrequenciesGraph/FrequenciesGraph.js","components/Elements/Graphs/DrugResistanceGraph/DrugResistanceGraphMUI.js","components/Elements/Graphs/DrugResistanceGraph/DrugResistanceGraph.js","components/Elements/Graphs/DistributionGraph/DistributionGraphMUI.js","components/Elements/Slider/SliderMUI.js","components/Elements/Slider/SliderSizes.js","components/Elements/Graphs/DistributionGraph/DistributionGraph.js","components/Elements/Graphs/TrendsKPGraph/TrendsKPGraphMUI.js","components/Elements/Graphs/TrendsKPGraph/TrendsKPGraph.js","components/Elements/Graphs/KODiversityGraph/KODiversityGraphMUI.js","components/Elements/Graphs/KODiversityGraph/KODiversityGraph.js","components/Elements/Graphs/ConvergenceGraph/ConvergenceGraphMUI.js","components/Elements/Graphs/ConvergenceGraph/ConvergenceGraph.js","components/Elements/Graphs/Graphs.js","util/drugClassesRules.js","components/Dashboard/filters.js","components/Elements/ResetButton/ResetButtonMUI.js","components/Elements/ResetButton/ResetButton.js","components/Elements/SelectCountry/SelectCountryMUI.js","components/Elements/SelectCountry/SelectCountry.js","components/Dashboard/Dashboard.js","components/About/AboutMUI.js","components/About/About.js","components/UserGuide/UserGuideMUI.js","components/UserGuide/UserGuide.js","components/Database/DatabaseMUI.js","components/Database/Database.js","components/Documentation/DocumentationMUI.js","components/Documentation/Documentation.js","components/Contact/ContactMUI.js","components/Contact/Contact.js","stores/store.ts","App.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","CustomCircularProgress","withStyles","root","color","CircularProgress","useStyles","makeStyles","cellON","backgroundColor","off","tableID","position","right","tablePadding","marginTop","actionsCell","borderLeft","stickyCell","actionsHeaderCell","stickyHeaderCell","changesTable","maxHeight","marginBottom","viewButton","width","resetButton","height","marginRight","marginLeft","uploadButton","checkChangesButton","dialog","display","flexDirection","justifyContent","flexWrap","input","input2","currentData","whiteSpace","paddingRight","toolbar","borderBottom","deleteSelected","checkboxCell","checkbox","tableRowRoot","tableRowSelected","box","alignItems","paddingLeft","select","textAlign","textAlignLast","minWidth","userSelect","borderRadius","font","letterSpacing","fontFamily","fontSize","choosePage","opacity","selectFilter","header","headerTitle","rowHeader","deleteChangeButton","border","searchInputWrapper","maxWidth","searchInput","ColorButton","theme","Button","ColorButton3","borderColor","ColorButton4","ColorButton5","fontWeight","StyledHeaderCell","head","palette","common","black","white","body","TableCell","CustomTableContainer","TableContainer","CustomTableSortLabel","active","icon","TableSortLabel","API_ENDPOINT","createData","id","date","changes","AdminPage","_deleteChange","_checkChanges","_resetChanges","_getData","classes","_useState","useState","_useState2","_slicedToArray","rows","setRows","_useState3","_useState4","data","setData","_useState5","_useState6","originalData","setOriginalData","_useState7","_useState8","setCurrentData","_useState9","_useState10","tableKeys","setTableKeys","_useState11","_useState12","page","setPage","_React$useState","React","_React$useState2","rowsPerPage","setRowsPerPage","_React$useState3","_React$useState4","order","setOrder","_React$useState5","_React$useState6","orderBy","setOrderBy","_useState13","_useState14","currentRow","setCurrentRow","_React$useState7","_React$useState8","open","setOpen","_React$useState9","_React$useState10","open2","setOpen2","_React$useState11","_React$useState12","open3","setOpen3","_React$useState13","_React$useState14","open4","setOpen4","_React$useState15","_React$useState16","open5","setOpen5","_React$useState17","_React$useState18","open6","setOpen6","_React$useState19","_React$useState20","open7","setOpen7","_React$useState21","_React$useState22","open8","setOpen8","_React$useState23","_React$useState24","resultMessage","setResultMessage","_React$useState25","_React$useState26","loading","setLoading","_React$useState27","_React$useState28","selected","setSelected","_React$useState29","_React$useState30","search","setSearch","_React$useState31","_React$useState32","filters","setFilters","_React$useState33","_React$useState34","filterOptions","setFilterOptions","_React$useState35","_React$useState36","filteredData","setFilteredData","_React$useState37","_React$useState38","isLoading","setIsLoading","_React$useState39","_React$useState40","startProgress","setStartProgress","_React$useState41","_React$useState42","loadingMessage","setLoadingMessage","_React$useState43","_React$useState44","currentChange","setCurrentChange","_React$useState45","exceptions","descendingComparator","a","b","changeView","resetChanges","aux","JSON","parse","stringify","_loop","index","Object","keys","added","forEach","element","genome","gIndex","findIndex","x","NAME","splice","deleted","push","sort","updated","key","filter","length","old","betterChanges","join","entries","map","updates","y","i","point","new","text","handleUpload","handleCheckChanges","message","checkChanges","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","showPopup","_args3","arguments","wrap","_context3","prev","next","undefined","axios","get","concat","_x","_callee2","res","_context2","Status","getData","abrupt","stop","apply","finally","sent","_callee4","_context4","getChangeData","changeData","Date","updatedAt","toLocaleString","_callee6","_context6","aux2","values","aux4","aux5","includes","value","useEffect","response","s","toLowerCase","pass","EnhancedTableToolbar","props","numSelected","_jsxs","Toolbar","className","children","Typography","sx","flex","variant","component","_jsx","TextField","placeholder","defaultValue","InputProps","startAdornment","InputAdornment","Search","endAdornment","IconButton","onClick","document","getElementById","edge","Close","onKeyDown","event","Tooltip","title","DeleteOutline","EnhancedTableHead","onRequestSort","onSelectAllClick","rowCount","TableHead","TableRow","padding","Checkbox","indeterminate","checked","onChange","headCell","align","sortDirection","direction","property","FormControl","Select","target","stopPropagation","displayEmpty","onOpen","onClose","MenuItem","option","size","placement","Info","Paper","Table","stickyHeader","TableBody","row","r","t","newSelecteds","n","array","comparator","stabilizedThis","el","stableSort","getComparator","slice","name","isItemSelected","indexOf","dataRow","role","hover","selectedIndex","newSelected","handleClick","cell","Math","random","handleEdit","Edit","handleDelete","disableUnderline","_toConsumableArray","Array","ceil","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","ActionsComponent","useTheme","Box","flexShrink","ml","disabled","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","max","Loader","type","Dialog","style","dialogTransition","DialogTitle","DialogContent","DialogContentText","DialogActions","deleteRow","autoFocus","item","label","rowIndex","inputs","getElementsByClassName","editRow","addRow","times","parts","post","LZString","compress","current","_callee5","_context5","uploadChanges","index2","deleteRows","_callee","_context","deleteChange","headerWrapper","top","zIndex","margin","headerBox","appBar","minHeight","paddingTop","paddingBottom","logo","leftWrapper","columnGap","drawerTitleWrapper","toolbarWrapper","infoCollapse","otherPage","activeItem","activeItemIcon","appSlice","createSlice","initialState","openDrawer","reducers","action","payload","setOpenDrawer","_appSlice$actions","actions","useAppDispatch","useDispatch","useAppSelector","useSelector","menuItems","Home","MenuBook","Storage","Description","Person","Drawer","navigate","useNavigate","useLocation","dispatch","app","handleToggleDrawer","currentPage","pathname","replace","SwipeableDrawer","anchor","List","ListItem","disablePadding","ListItemButton","handleUpdatePage","ListItemIcon","ListItemText","primary","organismSelectWrapper","organismSelect","dashboardSlice","canGetData","globalOverviewLabel","italicLabel","fullLabel","organism","loadingData","actualCountry","totalGenotypes","totalGenomes","actualGenomes","actualGenotypes","timeInitial","timeFinal","actualTimeInitial","actualTimeFinal","years","genotypesForFilter","colorPallete","listPMID","setCanGetData","setGlobalOverviewLabel","setOrganism","setLoadingData","setActualCountry","setTotalGenotypes","setTotalGenomes","setActualGenomes","setActualGenotypes","setTimeInitial","setTimeFinal","setActualTimeInitial","setActualTimeFinal","setYears","setGenotypesForFilter","setColorPallete","setListPMID","_dashboardSlice$actio","organisms","abbr","SelectOrganism","matches1050","useMediaQuery","matches650","dashboard","handleGlobalOverviewLabel","currentOrganism","find","labels","split","org","newValue","inputProps","IconComponent","cardsWrapper","borderTop","rowGap","card","cardContent","actualAndTotalValues","bp1000","InformationCards","matches1000","_Fragment","Divider","orientation","flexItem","Header","showSelect","matches500","setInfoCollapse","AppBar","Menu","src","LogoImg","alt","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","mainLayout","overflowY","boxShadow","childrenWrapper","bottom","alignSelf","MainLayout","_ref$isHomePage","isHomePage","loadingMap","mapWrapper","composableMap","tooltipMap","topControls","country","tooltipInfo","info","getColorForGenotype","genotype","iwanthue","require","generatePalleteForGenotypes","genotypes","colors","clustering","seed","quality","pallete","colorForDrugClassesST","Azithromycin","Chloramphenicol","Ampicillin","Sulphonamides","Trimethoprim","Tetracyclines","Ceftriaxone","colorForDrugClassesKP","ESBL","Carbapenems","lightGrey","darkGrey","hoverColor","samplesColorScale","domain","redColorScale","percentage","sensitiveColorScale","p","parseFloat","bottomLeftControls","left","mapSlice","coordinates","zoom","mapView","tooltipContent","dataset","mapData","ifCustom","setLoadingMap","setPosition","setMapView","setTooltipContent","setDataset","setMapData","setIfCustom","_mapSlice$actions","BottomLeftControls","Zoom","some","coordinate","FilterCenterFocus","_objectSpread","AddCircle","RemoveCircle","topRightControls","labelTooltipIcon","cursor","selectInput","selectMenu","legendWrapper","legend","legendColorBox","legendText","bp700","localeCompare","mapLegends","generalSteps","sensitiveSteps","noSamplesSteps","gradientStyle","ExcludedView","mapViewsWithZeroPercentOption","TopRightControls","matches","getStepBoxColor","step","Card","elevation","CardContent","InfoOutlined","MenuProps","list","backgroundImage","getSteps","topLeftControls","datasetWrapper","yearsWrapper","yearWrapper","menuPaper","datasetOptions","TopLeftControls","gutterBottom","ToggleButtonGroup","exclusive","_event","ToggleButton","paper","child","fullWidth","year","graphSlice","collapses","determinants","distribution","drugResistance","frequencies","trendsKP","KODiversity","convergence","countriesForFilter","genotypesYearData","drugsYearData","genotypesDrugsData","genotypesDrugsData2","genotypesDrugClassesData","genotypesAndDrugsYearData","distributionGraphView","drugResistanceGraphView","frequenciesGraphView","frequenciesGraphSelectedGenotypes","customDropdownMapView","determinantsGraphView","determinantsGraphDrugClass","trendsKPGraphDrugClass","trendsKPGraphView","KODiversityData","KODiversityGraphView","convergenceData","convergenceGroupVariable","convergenceColourVariable","convergenceColourPallete","currentSliderValue","resetBool","maxSliderValue","setCollapse","setCollapses","setCountriesForFilter","setGenotypesYearData","setDrugsYearData","setDistributionGraphView","setDrugResistanceGraphView","setFrequenciesGraphView","setFrequenciesGraphSelectedGenotypes","setCustomDropdownMapView","setGenotypesDrugsData","setGenotypesDrugsData2","setDeterminantsGraphView","setDeterminantsGraphDrugClass","setGenotypesDrugClassesData","setGenotypesAndDrugsYearData","setTrendsKPGraphDrugClass","setTrendsKPGraphView","setKODiversityData","setKODiversityGraphView","setConvergenceData","setConvergenceGroupVariable","setConvergenceColourVariable","setConvergenceColourPallete","setCurrentSliderValue","setResetBool","setMaxSliderValue","_graphSlice$actions","dropdown","frequenciesGraph","selectsWrapper","selectWrapper","labelWrapper","dataViewSelectInput","dataViewSelectMenu","genotypesSelectInput","genotypesSelectButton","genotypesMenuPaper","genotypesSelectMenu","graphWrapper","gap","graph","graphLabel","textAnchor","overflowX","legendItemWrapper","colorCircle","chartTooltipLabel","tooltipWrapper","tooltip","tooltipTitle","gridTemplateColumns","tooltipItemWrapper","gridColumn","tooltipItemBox","tooltipItemStats","overflowWrap","noGenotypeSelected","TopRightControls2","setCurrentTooltip","searchValue2","setSearchValue2","getSelectGenotypeLabel","Number","Susceptible","totalCount","toFixed","handleChangeSelectedGenotypes","_ref$event","_ref$all","all","toUpperCase","multiple","e","DeleteIcon","renderValue","SearchIcon","preventDefault","bottomRightControls","imgOnLoadPromise","obj","Promise","resolve","reject","onload","onerror","BottomRightControls","_handleClick","showAlert","setShowAlert","handleCloseAlert","svgAsPngUri","scale","uri","canvas","ctx","mapImg","mapImgPromise","legendHeight","actualMapView","legendImg","legendImgPromise","legendWidth","typhinetLogo","typhinetLogoPromise","base64","createElement","getContext","cHeight","fillStyle","fillRect","fillText","drawImage","t0","toDataURL","download","finish","CameraAlt","Snackbar","autoHideDuration","Alert","severity","statKey","MDR","XDR","AzithR","CipNS","CipR","Carb","Map","getGenotypeColor","handleOnMouseLeave","ComposableMap","projectionConfig","rotate","ZoomableGroup","center","onMoveEnd","handleOnMoveEnd","Sphere","stroke","strokeWidth","Graticule","Geographies","geography","_ref2","geographies","geo","_countryStats$statKey","countryData","properties","countryStats","stats","fillColor","smallerThan20","showTooltip","GENOTYPE","items","percentCounter","genotypes1","genotypes2","sumCount","_step2","_iterator2","_createForOfIteratorHelper","done","err","f","chroma","colorScale","hex","redColorScale2","Geography","fill","handleOnClick","onMouseLeave","onMouseEnter","_ref$smallerThan","_ref$showTooltip","content","assign","Samples","Genotypes","H58","_step","_iterator","handleOnMouseEnter","default","outline","pressed","rsmKey","ReactTooltip","socialsWrapper","logosWrapper","Footer","LSHTMLogoImg","WellcomeTrustLogoImg","GitHub","downloadDataWrapper","button","textTransform","graphCards","collapse","description","Timeline","BarChart","StackedBarChart","MultilineChart","BubbleChart","drugsST","drugsForDrugResistanceGraphST","defaultDrugsForDrugResistanceGraphST","drugsKP","drugClassesST","drugClassesKP","getColorForDrug","drug","colorsForKODiversityGraph","getSalmonellaTexts","variablesOptions","columnsToRemove","DownloadData","_handleClickDownloadDatabase","_handleClickDownloadPDF","loadingCSV","setLoadingCSV","loadingPDF","setLoadingPDF","listPIMD","formatDate","moment","format","drawFooter","pageHeight","pageWidth","setFontSize","line","drawLegend","secondLegendFactor","_ref2$id","legendData","factor","rectY","_ref2$isGenotype","isGenotype","_ref2$isDrug","isDrug","_ref2$isVariable","isVariable","xSpace","_ref2$twoPages","twoPages","_ref2$factorMultiply","factorMultiply","firstLegendData","secondLegendData","firstLegendFactor","yFactor","xFactor","floor","setFillColor","circle","setFont","replaceAll","addPage","LoadingButton","indexes","csv","lines","currentIndex","reverse","newLines","j","newCSV","startIcon","TableChart","loadingPosition","_ref3","doc","texts","euFlag","mapLegend","isKlebe","cards","legendDrugs","drugClassesBars","drugClassesFactor","genotypesFactor","isYersiniabactin","variablesFactor","group","colour","graphImg","graphImgPromise","legendGenotypes","isTwoPages","jsPDF","unit","internal","pageSize","getWidth","getHeight","Image","addImage","EUFlagImg","img","t1","domtoimage","toPng","bgcolor","rect","save","t2","PictureAsPdf","cardActions","titleWrapper","actionsWrapper","determinantsGraph","isTouchDevice","maxTouchPoints","msMaxTouchPoints","dataViewOptions","DeterminantsGraph","currentTooltip","plotChart","setPlotChart","_genotypesDrugClasses","exclusions","genotypeDrugClassesDataPercentage","structuredClone","handleClickChart","activeLabel","drugClasses","resistantCount","_event$activePayload$","activePayload","_genotypesDrugClasses2","_getDrugClassesBars","ResponsiveContainer","maxBarSize","CartesianGrid","strokeDasharray","XAxis","dataKey","interval","tick","YAxis","allowDataOverflow","allowDecimals","Label","angle","Brush","Legend","entry","ChartTooltip","Bar","stackId","getDrugClasses","noWrap","FrequenciesGraph","genotypeDataPercentage","drugs","drugResistanceGraph","selectButton","noYearSelected","DrugResistanceGraph","drugDataPercentage","getDrugs","handleChangeDrugsView","newValues","hasValue","LineChart","tickCount","Line","connectNulls","activeDot","distributionGraph","selectLabel","sliderCont","noYearSelected2","sliderLabel","sliderSize","SliderSizes","Slider","valueLabelDisplay","min","DistributionGraph","topXGenotypes","setTopXGenotypes","currentEventSelected","setCurrentEventSelected","mp","cur","it","has","set","mapArray","from","colorArray","slicedArray","_ref4","newArrayPercentage","newArray","Other","_ref5","trendsKPGraph","legendDivider","tooltipSubTitle","TrendsKPGraph","tooltipTab","setTooltipTab","_genotypesAndDrugsYea","percentageData","genes","_genotypesAndDrugsYea2","_genotypesAndDrugsYea3","_colorForDrugClassesK4","ComposedChart","_colorForDrugClassesK","_colorForDrugClassesK2","diviserIndex","_colorForDrugClassesK3","Fragment","Tabs","_","Tab","KODiversityGraph","diversity","_KODiversityData$KODi","convergenceGraph","noBubbleSelected","ConvergenceGraph","ScatterChart","ZAxis","range","_payload$","Scatter","Cell","colorLabel","z","Graphs","_handleClickDownload","chartLoadings","setCharLoadings","context","mobileFactor","yPosition","_ref$isGenotype","_ref$isDrug","_ref$isVariable","beginPath","arc","PI","closePath","handleLoading","_defineProperty","CardActions","disableSpacing","d","_x2","heightFactor","logoPromise","handleClickDownload","drugRulesST","columnID","drugRulesForDrugResistanceGraphST","drugRulesKP","columnIDs","drugClassesRulesST","susceptible","rules","drugClassesRulesKP","filterData","newData","TRAVEL","DATE","checkTime","Set","genomesCount","genotypesCount","getCountryDisplayName","COUNTRY_ONLY","PMID","getMapStatsData","columnKey","statsKey","columnData","getMapData","countries","getYearsData","_ref4$getUniqueGenoty","getUniqueGenotypes","drugsData","genotypesAndDrugsData","uniqueGenotypes","genotypesAndDrugsDataUniqueGenotypes","genotypesData","yearData","toString","reduce","accumulator","currentValue","drugStats","rule","drugData","num_resistance_classes","filteredGenotypes","fromEntries","_ref6","drugClass","getKPDrugClassData","drugKey","dataToFilter","sortedStats","_ref9","_ref10","unique","getGenotypesData","_ref13","genotypeData","drugClassResponse","classRule","classRuleName","every","KO_MDR","KO_HV","getKODiversityData","_ref14","K_locus","O_locus","keyData","diversityData","Hv","Bla_Carb_acquired","Bla_ESBL_acquired","aerobactin","Aerobactin","rmpADC","RmpADC","neither","unknownData","total","getVariableValue","dataItem","variable","getConvergenceData","_ref15","groupVariable","colourVariable","variablesCombinations","colourVariables","combination","combinedData","variables","splitCombination","virulence_score","resistance_score","isSusceptible","gene","_ref16","resistantData","g","resistantGenes","ResetButton","Fab","RestartAlt","SelectCountry","DashboardPage","currentConvergenceGroupVariable","setCurrentConvergenceGroupVariable","currentConvergenceColourVariable","setCurrentConvergenceColourVariable","yearsForFilter","getInfoFromData","responseData","yearsData","endpoint","paragraph","AboutPage","href","rel","UserGuidePage","DatabasePage","DocumentationPage","submitButton","defaultValues","firstName","lastName","email","requiredValues","RegExp","ContactPage","formValues","setFormValues","formErrors","setFormErrors","handleChange","required","helperText","errors","test","alert","store","configureStore","reducer","appReducer","deashboardReducer","mapReducer","graphReducer","middleware","getDefaultMiddleware","serializableCheck","createTheme","main","typography","ReactDOM","render","StrictMode","HashRouter","Provider","ThemeProvider","Routes","Route","path","URL","process","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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UAAW,OACXkB,QAAS,OACTC,cAAe,SACf+hB,OAAQ,QAEVwC,QAAS,CAAC,EACVC,YAAa,CAAC,EACdC,KAAM,CAAC,EACPvmB,MAAO,CAAC,EACT,I,UC1DYwmB,GAAsB,SAACC,GAClC,OAAQA,GACN,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,UACL,IAAK,UACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,IACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,YACL,IAAK,YACH,MAAO,UACT,IAAK,MACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,UACL,IAAK,UACL,IAAK,UACH,MAAO,UACT,IAAK,IACL,IAAK,QACL,IAAK,MACL,IAAK,QACH,MAAO,UACT,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,QACH,MAAO,UAGT,IAAK,QACH,MAAO,UACT,IAAK,UACL,IAAK,cACH,MAAO,UACT,IAAK,aACH,MAAO,QACT,IAAK,UACL,IAAK,cACL,IAAK,cACL,IAAK,YACL,IAAK,cACH,MAAO,UACT,IAAK,UACL,IAAK,cACH,MAAO,UACT,QACE,MAAO,UAEb,EAGIC,GAAWC,EAAQ,KACVC,GAA8B,SAACC,GAE1C,GADA7nB,QAAQC,IAAI,mBAAoB4nB,EAAUnX,QACjB,IAArBmX,EAAUnX,OACZ,MAAO,CAAC,EAEV,IAAMoX,EAASJ,GAASG,EAAUnX,OAAO,CACvCqX,WAAY,eACZC,KAAM,MACNC,QAAS,MAGLC,EAAU,CAAC,EAKjB,OAJAL,EAAUjY,SAAQ,SAACK,EAAGiB,GACpBgX,EAAQjY,GAAE,GAAAuC,OAAMsV,EAAO5W,GACzB,IAEOgX,CACT,EAuCaC,GAAwB,CACnCC,aAAc,CACZ,CAAEhP,KAAM,aAAcpY,MAAO,WAC7B,CAAEoY,KAAM,aAAcpY,MAAO,WAC7B,CAAEoY,KAAM,0BAA2BpY,MAAO,WAC1C,CAAEoY,KAAM,OAAQpY,MAAO,YAGzB,mBAAoB,CAClB,CAAEoY,KAAM,wBAAyBpY,MAAO,WACxC,CAAEoY,KAAM,wBAAyBpY,MAAO,WACxC,CAAEoY,KAAM,iBAAkBpY,MAAO,WACjC,CAAEoY,KAAM,wBAAyBpY,MAAO,WACxC,CAAEoY,KAAM,wBAAyBpY,MAAO,WACxC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,uBAAwBpY,MAAO,WACvC,CAAEoY,KAAM,uBAAwBpY,MAAO,WACvC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,uBAAwBpY,MAAO,WACvC,CAAEoY,KAAM,uBAAwBpY,MAAO,SACvC,CAAEoY,KAAM,cAAepY,MAAO,YAEhCqnB,gBAAiB,CACf,CAAEjP,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,eAAgBpY,MAAO,WAC/B,CAAEoY,KAAM,OAAQpY,MAAO,WACvB,CAAEoY,KAAM,OAAQpY,MAAO,YAEzBsnB,WAAY,CACV,CAAElP,KAAM,YAAapY,MAAO,WAC5B,CAAEoY,KAAM,OAAQpY,MAAO,YAEzBunB,cAAe,CACb,CAAEnP,KAAM,OAAQpY,MAAO,WACvB,CAAEoY,KAAM,OAAQpY,MAAO,WACvB,CAAEoY,KAAM,cAAepY,MAAO,WAC9B,CAAEoY,KAAM,OAAQpY,MAAO,YAEzBwnB,aAAc,CACZ,CAAEpP,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,iBAAkBpY,MAAO,WACjC,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,OAAQpY,MAAO,YAEzBynB,cAAe,CACb,CAAErP,KAAM,UAAWpY,MAAO,oBAC1B,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,OAAQpY,MAAO,YASzB0nB,YAAa,CACX,CAAEtP,KAAM,cAAepY,MAAO,WAC9B,CAAEoY,KAAM,cAAepY,MAAO,WAC9B,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,YAAapY,MAAO,WAC5B,CAAEoY,KAAM,OAAQpY,MAAO,YAGzB,gCAAiC,CAC/B,CAAEoY,KAAM,eAAgBpY,MAAO,WAC/B,CAAEoY,KAAM,eAAgBpY,MAAO,WAC/B,CAAEoY,KAAM,sBAAuBpY,MAAO,WACtC,CAAEoY,KAAM,eAAgBpY,MAAO,WAC/B,CAAEoY,KAAM,eAAgBpY,MAAO,WAC/B,CAAEoY,KAAM,sBAAuBpY,MAAO,WACtC,CAAEoY,KAAM,eAAgBpY,MAAO,WAC/B,CAAEoY,KAAM,eAAgBpY,MAAO,WAC/B,CAAEoY,KAAM,sBAAuBpY,MAAO,WACtC,CAAEoY,KAAM,+BAAgCpY,MAAO,WAC/C,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,uBAAwBpY,MAAO,WACvC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,uBAAwBpY,MAAO,WACvC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,uBAAwBpY,MAAO,WACvC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,uBAAwBpY,MAAO,WACvC,CAAEoY,KAAM,OAAQpY,MAAO,aAKd2nB,GAAwB,CACnCC,KAAM,CACJ,CAAExP,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,YAAapY,MAAO,WAC5B,CAAEoY,KAAM,uBAAwBpY,MAAO,WACvC,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,qBAAsBpY,MAAO,WACrC,CAAEoY,KAAM,oBAAqBpY,MAAO,WACpC,CAAEoY,KAAM,mBAAoBpY,MAAO,WACnC,CAAEoY,KAAM,YAAapY,MAAO,WAC5B,CAAEoY,KAAM,eAAgBpY,MAAO,WAC/B,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,sBAAuBpY,MAAO,WACtC,CAAEoY,KAAM,+BAAgCpY,MAAO,WAC/C,CAAEoY,KAAM,qBAAsBpY,MAAO,WACrC,CAAEoY,KAAM,8BAA+BpY,MAAO,WAC9C,CAAEoY,KAAM,sBAAuBpY,MAAO,WACtC,CAAEoY,KAAM,qBAAsBpY,MAAO,WACrC,CAAEoY,KAAM,8BAA+BpY,MAAO,WAC9C,CAAEoY,KAAM,oBAAqBpY,MAAO,WACpC,CAAEoY,KAAM,mBAAoBpY,MAAO,WACnC,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,sBAAuBpY,MAAO,WACtC,CAAEoY,KAAM,qBAAsBpY,MAAO,WACrC,CAAEoY,KAAM,sBAAuBpY,MAAO,WACtC,CAAEoY,KAAM,sBAAuBpY,MAAO,WACtC,CAAEoY,KAAM,sBAAuBpY,MAAO,WACtC,CAAEoY,KAAM,+BAAgCpY,MAAO,WAC/C,CAAEoY,KAAM,qBAAsBpY,MAAO,WACrC,CAAEoY,KAAM,qBAAsBpY,MAAO,WACrC,CAAEoY,KAAM,4BAA6BpY,MAAO,WAC5C,CAAEoY,KAAM,qBAAsBpY,MAAO,WACrC,CAAEoY,KAAM,sBAAuBpY,MAAO,WACtC,CAAEoY,KAAM,oBAAqBpY,MAAO,WACpC,CAAEoY,KAAM,mBAAoBpY,MAAO,WACnC,CAAEoY,KAAM,uBAAwBpY,MAAO,WACvC,CAAEoY,KAAM,mBAAoBpY,MAAO,WACnC,CAAEoY,KAAM,qBAAsBpY,MAAO,WACrC,CAAEoY,KAAM,qBAAsBpY,MAAO,WACrC,CAAEoY,KAAM,mBAAoBpY,MAAO,WACnC,CAAEoY,KAAM,mBAAoBpY,MAAO,WACnC,CAAEoY,KAAM,YAAapY,MAAO,WAC5B,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,oBAAqBpY,MAAO,WACpC,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,sBAAuBpY,MAAO,WACtC,CAAEoY,KAAM,sBAAuBpY,MAAO,WACtC,CAAEoY,KAAM,oBAAqBpY,MAAO,WACpC,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,qBAAsBpY,MAAO,WACrC,CAAEoY,KAAM,8BAA+BpY,MAAO,WAC9C,CAAEoY,KAAM,mBAAoBpY,MAAO,WACnC,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,sBAAuBpY,MAAO,WACtC,CAAEoY,KAAM,+BAAgCpY,MAAO,WAC/C,CAAEoY,KAAM,mBAAoBpY,MAAO,WACnC,CAAEoY,KAAM,cAAepY,MAAO,WAC9B,CAAEoY,KAAM,cAAepY,MAAO,WAC9B,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,oBAAqBpY,MAAO,WACpC,CAAEoY,KAAM,oBAAqBpY,MAAO,WACpC,CAAEoY,KAAM,qBAAsBpY,MAAO,WACrC,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,mBAAoBpY,MAAO,WACnC,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,kBAAmBpY,MAAO,WAClC,CAAEoY,KAAM,OAAQpY,MAAO,WACvB,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,kBAAmBpY,MAAO,WAClC,CAAEoY,KAAM,4BAA6BpY,MAAO,WAC5C,CAAEoY,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,iBAAkBpY,MAAO,WACjC,CAAEoY,KAAM,iBAAkBpY,MAAO,WACjC,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,YAAapY,MAAO,WAC5B,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,YAAapY,MAAO,WAC5B,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,QAASpY,MAAO,YAE1B6nB,YAAa,CACX,CAAEzP,KAAM,WAAYpY,MAAO,WAC3B,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,iBAAkBpY,MAAO,WACjC,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,wBAAyBpY,MAAO,WACxC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,0BAA2BpY,MAAO,WAC1C,CAAEoY,KAAM,yBAA0BpY,MAAO,WACzC,CAAEoY,KAAM,yBAA0BpY,MAAO,WACzC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,kBAAmBpY,MAAO,WAClC,CAAEoY,KAAM,iBAAkBpY,MAAO,WACjC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,iBAAkBpY,MAAO,WACjC,CAAEoY,KAAM,iBAAkBpY,MAAO,WACjC,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,yBAA0BpY,MAAO,WACzC,CAAEoY,KAAM,kBAAmBpY,MAAO,WAClC,CAAEoY,KAAM,kBAAmBpY,MAAO,WAClC,CAAEoY,KAAM,iBAAkBpY,MAAO,WACjC,CAAEoY,KAAM,gBAAiBpY,MAAO,WAChC,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,kBAAmBpY,MAAO,WAClC,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,kBAAmBpY,MAAO,WAClC,CAAEoY,KAAM,iBAAkBpY,MAAO,WACjC,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,kBAAmBpY,MAAO,WAClC,CAAEoY,KAAM,kBAAmBpY,MAAO,WAClC,CAAEoY,KAAM,iBAAkBpY,MAAO,WACjC,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,kBAAmBpY,MAAO,WAClC,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,OAAQpY,MAAO,WACvB,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,oBAAqBpY,MAAO,WACpC,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,kBAAmBpY,MAAO,WAClC,CAAEoY,KAAM,iBAAkBpY,MAAO,WACjC,CAAEoY,KAAM,UAAWpY,MAAO,WAC1B,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,SAAUpY,MAAO,WACzB,CAAEoY,KAAM,QAASpY,MAAO,WACxB,CAAEoY,KAAM,QAASpY,MAAO,aAKf8nB,GAAY,UACZC,GAAW,UAGXC,GAAa,U,qBClfbC,GAAoB,SAACC,GAChC,OAAIA,GAAU,GAAKA,GAAU,EACpB,UACEA,GAAU,IAAMA,GAAU,GAC5B,UACEA,GAAU,IAAMA,GAAU,GAC5B,UACEA,GAAU,KAAOA,GAAU,IAC7B,UACEA,GAAU,IACZ,eADF,CAGT,EAEaC,GAAgB,SAACC,GAE5B,OADUA,EACH,GACE,UAFCA,EAGI,IAHJA,GAGe,GAChB,UAJCA,EAKK,GALLA,GAKe,GAChB,UAEA,SAEX,EAmBaC,GAAsB,SAACD,GAClC,IAAME,EAAIC,WAAWH,GACrB,OAAIE,EAAI,GACC,UACEA,EAAI,GACN,UACEA,EAAI,GACN,UACEA,EAAI,GACN,UAEF,SACT,E,2DCzDMpoB,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCkkB,mBAAoB,CAClB3mB,QAAS,OACTC,cAAe,SACftB,SAAU,WACVmlB,OAAQ,EACR8C,KAAM,GAET,ICkDYC,GAAW9K,aAAY,CAClCxF,KAAM,MACNyF,aAf6B,CAC7BmI,YAAY,EACZxlB,SAAU,CACRmoB,YAAa,CAAC,EAAG,GACjBC,KAAM,GAERC,QAAS,GACTC,eAAgB,KAChBC,QAAS,GACTC,QAAS,GACTC,UAAW,GAMXlL,SAAU,CACRmL,cAAe,SAACpqB,EAAOkf,GACrBlf,EAAMknB,WAAahI,EAAOC,OAC5B,EACAkL,YAAa,SAACrqB,EAAOkf,GACnBlf,EAAM0B,SAAWwd,EAAOC,OAC1B,EACAmL,WAAY,SAACtqB,EAAOkf,GAClBlf,EAAM+pB,QAAU7K,EAAOC,OACzB,EACAoL,kBAAmB,SAACvqB,EAAOkf,GACzBlf,EAAMgqB,eAAiB9K,EAAOC,OAChC,EAEAqL,WAAY,SAACxqB,EAAOkf,GAClBlf,EAAMiqB,QAAU/K,EAAOC,OACzB,EACAsL,WAAY,SAACzqB,EAAOkf,GAClBlf,EAAMkqB,QAAUhL,EAAOC,OACzB,EACAuL,YAAa,SAAC1qB,EAAOkf,GACnBlf,EAAMmqB,SAAWjL,EAAOC,OAC1B,KAIGwL,GAA4Gf,GAAStK,QAA7G+K,GAAWM,GAAXN,YAAaC,GAAUK,GAAVL,WAAYC,GAAiBI,GAAjBJ,kBAAmBC,GAAUG,GAAVH,WAA2BC,IAAFE,GAAbP,cAAyBO,GAAVF,YAAaC,GAAWC,GAAXD,YAEpFd,MAAgB,QCrFlBgB,GAAqB,WAChC,IAAMrjB,EAAUnG,KACVif,EAAWd,KACX7d,EAAW+d,IAAe,SAACzf,GAAK,OAAKA,EAAMiR,IAAIvP,QAAQ,IACvDkgB,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAqBnE,OACE/M,gBAAA,OAAKE,UAAWxN,EAAQmiB,mBAAmB1U,SAAA,CACzCM,eAACuV,KAAI,CAACvE,GAAsB,IAAlB5kB,EAASooB,MAAcpoB,EAASmoB,YAAYiB,MAAK,SAACC,GAAU,OAAoB,IAAfA,CAAgB,IAAE/V,SAC3FM,eAACiB,IAAO,CAACC,MAAM,WAAW4B,UAAU,QAAOpD,SACzCM,eAACS,IAAU,CAACC,QAvBpB,WACEqK,EAASgK,GAAY,CAAER,YAAa,CAAC,EAAG,GAAIC,KAAM,IACpD,EAqB4C9U,SAClCM,eAAC0V,KAAiB,CAACrmB,SAAS,QAAQzD,MAAM,kBAIhDoU,eAACiB,IAAO,CAACC,MAAM,UAAU4B,UAAU,QAAOpD,SACxCM,eAAA,QAAAN,SACEM,eAACS,IAAU,CAAC7U,MAAM,UAAU8U,QA1BpC,WACMtU,EAASooB,MAAQ,GAErBzJ,EAASgK,GAAWY,0BAAC,CAAC,EAAIvpB,GAAQ,IAAEooB,KAAsB,EAAhBpoB,EAASooB,QACrD,EAsB2DzO,SAAuB,SAAbuG,EAAoB5M,SAC/EM,eAAC4V,KAAS,CAACvmB,SAAS,gBAI1B2Q,eAACiB,IAAO,CAACC,MAAM,WAAW4B,UAAU,QAAOpD,SACzCM,eAAA,QAAAN,SACEM,eAACS,IAAU,CAAC7U,MAAM,UAAU8U,QA3BpC,WACMtU,EAASooB,MAAQ,IACjBpoB,EAASooB,KAAO,IAAM,EACxBzJ,EAASgK,GAAY,CAAER,YAAa,CAAC,EAAG,GAAIC,KAAM,KAElDzJ,EAASgK,GAAWY,0BAAC,CAAC,EAAIvpB,GAAQ,IAAEmoB,YAAa,CAAC,EAAG,GAAIC,KAAMpoB,EAASooB,KAAO,MAEnF,EAoB4DzO,SAAuB,SAAbuG,EAAoB5M,SAChFM,eAAC6V,KAAY,CAACxmB,SAAS,kBAMnC,E,UCtDMvD,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvC4lB,iBAAkB,CAChBroB,QAAS,OACTC,cAAe,SACftB,SAAU,WACVkc,IAAK,EACLjc,MAAO,EAEP,UAAW,CACTD,SAAU,aAGdsjB,KAAM,CAAEzgB,aAAc,kBACtB0gB,YAAa,CACXliB,QAAS,OACTC,cAAe,SACf+hB,OAAQ,OAEVxI,MAAO,CACLxZ,QAAS,OACTC,cAAe,MACfgB,WAAY,SACZsa,UAAW,OAEb+M,iBAAkB,CAChBC,OAAQ,WAEVC,YAAa,CACX5mB,SAAU,kBACVmB,WAAY,iBACZ3B,UAAW,SAEbqnB,WAAY,CACV,sBAAuB,CACrB7mB,SAAU,SAGd8mB,cAAe,CACb5pB,UAAW,MACXO,UAAW,QACXskB,UAAW,QAEbgF,OAAQ,CACN3oB,QAAS,OACTiB,WAAY,UAEd2nB,eAAgB,CACdppB,MAAO,OACPE,OAAQ,OACRC,YAAa,OAEfkpB,WAAY,CACVjnB,SAAU,QAEZknB,MAAO,CAAC,EACT,ICxDY9D,GAAY,CACvB,IACA,QACA,QACA,QACA,MACA,QACA,QACA,QACA,MACA,QACA,QACA,QACA,QACA,MACA,QACA,IACA,QACA,QACA,MACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,UACA,MACA,QACA,QACA,QACA,QACA,MACA,QACA,QACA,QACA,QACA,QACA,MACA,QACA,MACA,QACA,QACA,IACA,QACA,QACA,MACA,QACA,QACA,MACA,QACA,QACA,MACA,QACA,QACA,YACA,YACA,MACA,MACA,QACA,QACA,QACA,QACA,UACA,UACA,UACA,IACA,MACA,QACA,MACA,QACA,QACA,QACqB,QACrB,UACA,aACA,cACA,UACA,cACA,cACA,YACA,cACA,UACA,eACAvX,MAAK,SAACvB,EAAGC,GAAC,OAAKD,EAAE6c,cAAc5c,EAAE,ICxFtB6c,GAAa,CACxB,CAAE3X,MAAO,MAAOmI,MAAO,4BAA6BsH,UAAW,CAAC,UAChE,CAAEzP,MAAO,MAAOmI,MAAO,mCAAoCsH,UAAW,CAAC,UACvE,CAAEzP,MAAO,SAAUmI,MAAO,yBAA0BsH,UAAW,CAAC,UAChE,CAAEzP,MAAO,QAASmI,MAAO,wCAAyCsH,UAAW,CAAC,UAC9E,CAAEzP,MAAO,OAAQmI,MAAO,iCAAkCsH,UAAW,CAAC,UACtE,CAAEzP,MAAO,OAAQmI,MAAO,OAAQsH,UAAW,CAAC,UAC5C,CAAEzP,MAAO,OAAQmI,MAAO,cAAesH,UAAW,CAAC,UACnD,CAAEzP,MAAO,yBAA0BmI,MAAO,yBAA0BsH,UAAW,CAAC,QAAS,QAAS,OAAQ,WAC1G,CAAEzP,MAAO,oBAAqBmI,MAAO,oBAAqBsH,UAAW,CAAC,QAAS,QAAS,OAAQ,WAChG,CAAEzP,MAAO,sBAAuBmI,MAAO,sBAAuBsH,UAAW,CAAC,QAAS,QAAS,OAAQ,WACpG,CAAEzP,MAAO,gBAAiBmI,MAAO,eAAgBsH,UAAW,CAAC,UAC7D,CAAEzP,MAAO,cAAemI,MAAO,cAAesH,UAAW,CAAC,QAAS,QAAS,OAAQ,YCHhFmI,GAAe,CAAC,kBAAc,oBAAgB,qBAAiB,QAC/DC,GAAiB,CAAC,UAAW,WAAY,WAAY,WAAY,aACjEC,GAAiB,CAAC,QAAS,UAAW,UAAW,YAAa,UAC9DC,GAAgB,CAAC,kBAAmB,iBAAkB,kBAAmB,oBACzEC,GAAe,CAAC,uBAChBC,GAAgC,CAAC,QAAS,OAAQ,SAAU,MAAO,MAAO,gBAAiB,OAAQ,OAAQ,uBAEpGC,GAAmB,WAC9B,IAAM/kB,EAAUnG,KACVmrB,EAAUtI,aAAc,qBAExB5D,EAAWd,KACX2K,EAAUzK,IAAe,SAACzf,GAAK,OAAKA,EAAMiR,IAAIiZ,OAAO,IACrDH,EAAUtK,IAAe,SAACzf,GAAK,OAAKA,EAAMiR,IAAI8Y,OAAO,IACrDnI,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAC7Da,EAAehD,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU1B,YAAY,IACrED,EAAqB/C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU3B,kBAAkB,IAyCvF,SAASgK,EAAgBC,EAAM/c,GAC7B,OAAQqa,GACN,IAAK,yBAEH,OAAOR,GADK,CAAC,KAAM,KAAM,KAAM,KAAM,OACN7Z,IACjC,IAAK,cAEH,OAAOyZ,GADK,CAAC,EAAG,GAAI,GAAI,IAAK,KACAzZ,IAE/B,IAAK,oBACH,OArCoBiY,EAqCI8E,EApCR,UAAb7K,EAAuB8F,GAAoBC,GAAYlF,EAAakF,IAAa,UA0CtF,QAEE,OAAO0B,GADM,CAAC,OAAQ,OAAQ,QAAS,SACb3Z,IA7ChC,IAA0BiY,CA+C1B,CAMA,OACErS,eAAA,OAAKP,UAAS,GAAArC,OAAKnL,EAAQ6jB,iBAAgB,KAAA1Y,OAAI6Z,EAAUhlB,EAAQskB,MAAQ,IAAK7W,SAC5EM,eAACoX,KAAI,CAACC,UAAW,EAAG5X,UAAWxN,EAAQyd,KAAKhQ,SAC1CH,gBAAC+X,KAAW,CAAC7X,UAAWxN,EAAQ0d,YAAYjQ,SAAA,CAC1CH,gBAAA,OAAKE,UAAWxN,EAAQgV,MAAMvH,SAAA,CAC5BM,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAC,oBAC9BM,eAACiB,IAAO,CACNC,MAAM,iFAEN4B,UAAU,MAAKpD,SAEfM,eAACuX,KAAY,CAAC3rB,MAAM,SAASyD,SAAS,QAAQoQ,UAAWxN,EAAQ8jB,wBAGrE/V,eAACqC,IAAM,CACLvC,QAAQ,WACRhB,MAAO2V,EACP3S,SAlFV,SAA6Bd,GACD,wBAAvBA,EAAMsB,OAAOxD,MACdiM,EAASqK,IAAY,IAErBrK,EAASqK,IAAY,IACvBrK,EAASiK,GAAWhU,EAAMsB,OAAOxD,OACnC,EA6EUuQ,WAAY,CAAE5P,UAAWxN,EAAQgkB,aACjCuB,UAAW,CAAEvlB,QAAS,CAAEwlB,KAAMxlB,EAAQikB,aACtCnQ,SAAuB,SAAbuG,EAAoB5M,SAvB/B+W,GAAWpb,QAAO,SAAC+a,GAAM,OAAKA,EAAO7H,UAAU1P,SAASyN,EAAS,IAyB/C3Q,KAAI,SAACya,EAAQhc,GAC5B,OACE4F,eAAC2C,IAAQ,CAAyB7D,MAAOsX,EAAOtX,MAAMY,SACnD0W,EAAOnP,OADK7M,EAAQ,UAI3B,MAEY,SAAbkS,GAAuBsI,EAAQtZ,OAAS,GACvCiE,gBAAA,OAAKE,UAAWxN,EAAQkkB,cAAczW,SAAA,CACpCH,gBAAA,OAAKE,UAAWxN,EAAQmkB,OAAO1W,SAAA,CAC7BM,eAAC4F,IAAG,CAACnG,UAAWxN,EAAQokB,eAAgB7P,MAAO,CAAEva,gBAAiBynB,MAClE1T,eAAA,QAAMP,UAAWxN,EAAQqkB,WAAW5W,SAAC,yBA1F1CqX,GAA8BlY,SAAS4V,IA6FlClV,gBAAA,OAAKE,UAAWxN,EAAQmkB,OAAO1W,SAAA,CAC7BM,eAAC4F,IAAG,CAACnG,UAAWxN,EAAQokB,eAAgB7P,MAAO,CAAEva,gBAAiB0nB,MAClE3T,eAAA,QAAMP,UAAWxN,EAAQqkB,WAAW5W,SAAC,UAWxCoX,GAAajY,SAAS4V,GACrBlV,gBAAA,OAAoBE,UAAWxN,EAAQmkB,OAAO1W,SAAA,CAC5CM,eAAC4F,IAAG,CACFnG,UAAWxN,EAAQokB,eACnB7P,MAAO,CACLrZ,OAAQ,OACRZ,UAAU,MACVmrB,gBAAiB,0DAGrB1X,eAAA,QAAMP,UAAWxN,EAAQqkB,WAAW5W,SAClCH,gBAAA,OAAKiH,MAAO,CAAC3X,UAAU,OAAQ1B,OAAQ,QAAQuS,SAAA,CAC7CM,eAAA,OAAAN,SAAK,OACLM,eAAA,SACAA,eAAA,SACAA,eAAA,OAAAN,SAAK,gBAEF,UA5GvB,WACE,OAAQ+U,GACN,IAAK,yBACH,OAAOkC,GACT,IAAK,cACH,OAAOC,GACT,IAAK,oBACH,MAda,UAAbtK,EACKmG,GAEAvF,EAYP,IAAK,sBACH,OAAO2J,GACT,QACE,OAAOH,GAEb,CAkGciB,GAAWhc,KAAI,SAACwb,EAAM/c,GAAK,OACzBmF,gBAAA,OAA2BE,UAAWxN,EAAQmkB,OAAO1W,SAAA,CACnDM,eAAC4F,IAAG,CAACnG,UAAWxN,EAAQokB,eAAgB7P,MAAO,CAAEva,gBAAiBirB,EAAgBC,EAAM/c,MACxF4F,eAAA,QAAMP,UAAWxN,EAAQqkB,WAAW5W,SAAEyX,MAAY,QAAA/Z,OAFlChD,GAGZ,aASxB,EC9KMtO,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvC0nB,gBAAiB,CACfnqB,QAAS,OACTC,cAAe,SACftB,SAAU,WACVkc,IAAK,EACL+L,KAAM,EAEN,UAAW,CACTjoB,SAAU,WAEV,iBAAkB,CAChBa,MAAO,QAET,0CAA2C,CACzCA,MAAO,UAIbyiB,KAAM,CAAEzgB,aAAc,kBACtB0gB,YAAa,CACXliB,QAAS,OACTC,cAAe,SACf+hB,OAAQ,MACR5gB,UAAW,SAEbgpB,eAAgB,CACdpqB,QAAS,OACTC,cAAe,UAEjBuoB,YAAa,CACX5mB,SAAU,kBACVmB,WAAY,iBACZ3B,UAAW,SAEbqnB,WAAY,CACV,sBAAuB,CACrB7mB,SAAU,SAGdyoB,aAAc,CACZrqB,QAAS,OACTub,UAAW,MACXJ,WAAY,OAEdmP,YAAa,CACX9qB,MAAO,QAET+qB,UAAW,CACTlrB,UAAW,oBAEbypB,MAAO,CAAC,EACT,I,oBCtCK0B,GAAiB,CAAC,MAAO,QAAS,UAE3BC,GAAkB,WAC7B,IAAMjmB,EAAUnG,KACVmrB,EAAUtI,aAAc,qBAExB5D,EAAWd,KACX0K,EAAUxK,IAAe,SAACzf,GAAK,OAAKA,EAAMiR,IAAIgZ,OAAO,IACrD5H,EAAoB5C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU9B,iBAAiB,IAC/EC,EAAkB7C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU7B,eAAe,IAC3EC,EAAQ9C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU5B,KAAK,IACvDX,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAoBnE,OACEtM,eAAA,OAAKP,UAAS,GAAArC,OAAKnL,EAAQ2lB,gBAAe,KAAAxa,OAAI6Z,EAAUhlB,EAAQskB,MAAQ,IAAK7W,SAC3EM,eAACoX,KAAI,CAACC,UAAW,EAAG5X,UAAWxN,EAAQyd,KAAKhQ,SAC1CH,gBAAC+X,KAAW,CAAC7X,UAAWxN,EAAQ0d,YAAYjQ,SAAA,CAC1CM,eAACL,IAAU,CAACG,QAAQ,KAAIJ,SAAC,YACzBH,gBAAA,OAAKE,UAAWxN,EAAQ4lB,eAAenY,SAAA,CACrCM,eAACL,IAAU,CAACwY,cAAY,EAACrY,QAAQ,UAASJ,SAAC,mBAG3CM,eAACoY,KAAiB,CAACtZ,MAAO6V,EAAS0D,WAAS,EAACxV,KAAK,QAAQf,SA3BpE,SAAsBwW,EAAQlJ,GACX,OAAbA,GACFrE,EAASmK,GAAW9F,GAExB,EAuB4FrJ,SAZtE,UAAbuG,EAY0G5M,SACtGuY,GAAetc,KAAI,SAACiH,EAAQxI,GAAK,OAChC4F,eAACuY,KAAY,CAA0BzZ,MAAO8D,EAAQhX,MAAM,UAAS8T,SAClEkD,GAAM,WAAAxF,OADqBhD,GAEf,SAIrBmF,gBAAA,OAAKE,UAAWxN,EAAQ6lB,aAAapY,SAAA,CACnCH,gBAAA,OAAKE,UAAWxN,EAAQ8lB,YAAYrY,SAAA,CAClCM,eAACL,IAAU,CAACwY,cAAY,EAACrY,QAAQ,UAASJ,SAAC,eAG3CM,eAACqC,IAAM,CACLvC,QAAQ,WACRuP,WAAY,CAAE5P,UAAWxN,EAAQgkB,aACjCuB,UAAW,CAAEvlB,QAAS,CAAEumB,MAAOvmB,EAAQ+lB,UAAWP,KAAMxlB,EAAQikB,aAChEpX,MAAOiO,EACPjL,SAvCd,SAA6BwW,EAAQG,GACnC1N,EAASiD,GAAqByK,EAAMpZ,MAAMP,OAC5C,EAsCc4Z,WAAS,EACT3S,SAAuB,SAAbuG,EAAoB5M,SAE7BuN,EACE5R,QAAO,SAACsd,GAAI,OAAKA,GAAQ3L,CAAe,IACxCrR,KAAI,SAACgd,EAAMve,GACV,OACE4F,eAAC2C,IAAQ,CAA+B7D,MAAO6Z,EAAKjZ,SACjDiZ,GAAI,gBAAAvb,OADwBhD,GAInC,SAGN4F,eAACiQ,KAAO,CAACC,YAAY,WAAWC,UAAQ,IACxC5Q,gBAAA,OAAKE,UAAWxN,EAAQ8lB,YAAYrY,SAAA,CAClCM,eAACL,IAAU,CAACwY,cAAY,EAACrY,QAAQ,UAASJ,SAAC,aAG3CM,eAACqC,IAAM,CACLvC,QAAQ,WACRuP,WAAY,CAAE5P,UAAWxN,EAAQgkB,aACjCuB,UAAW,CAAEvlB,QAAS,CAAEumB,MAAOvmB,EAAQ+lB,UAAWP,KAAMxlB,EAAQikB,aAChEpX,MAAOkO,EACPlL,SA5Dd,SAA2BwW,EAAQG,GACjC1N,EAASkD,GAAmBwK,EAAMpZ,MAAMP,OAC1C,EA2Dc4Z,WAAS,EACT3S,SAAuB,SAAbuG,EAAoB5M,SAE7BuN,EACE5R,QAAO,SAACsd,GAAI,OAAKA,GAAQ5L,CAAiB,IAC1CpR,KAAI,SAACgd,EAAMve,GACV,OACE4F,eAAC2C,IAAQ,CAA6B7D,MAAO6Z,EAAKjZ,SAC/CiZ,GAAI,cAAAvb,OADsBhD,GAIjC,kBAQlB,E,0CC1Cawe,GAAapP,aAAY,CACpCxF,KAAM,QACNyF,aAvC+B,CAC/BoP,UAAW,CACTC,cAAc,EACdC,cAAc,EACdC,gBAAgB,EAChBC,aAAa,EACbC,UAAU,EACVC,aAAa,EACbC,aAAa,GAEfC,mBAAoB,GACpBC,kBAAmB,GACnBC,cAAe,GACfC,mBAAoB,GACpBC,oBAAqB,GACrBC,yBAA0B,GAC1BC,0BAA2B,GAC3BC,sBAAuB,SACvBC,wBAAyB,GACzBC,qBAAsB,aACtBC,kCAAmC,GACnCC,sBAAuB,GACvBC,sBAAuB,aACvBC,2BAA4B,GAC5BC,uBAAwB,GACxBC,kBAAmB,SACnBC,gBAAiB,GACjBC,qBAAsB,UACtBC,gBAAiB,GACjBC,yBAA0B,eAC1BC,0BAA2B,OAC3BC,yBAA0B,CAAC,EAC3BC,mBAAmB,GACnBC,WAAW,EACXC,eAAe,GAMflR,SAAU,CACRmR,YAAa,SAACpwB,EAAOkf,GACnBlf,EAAMmuB,UAAUjP,EAAOC,QAAQzO,KAA+BwO,EAAOC,QAAQ/K,KAC/E,EACAic,aAAc,SAACrwB,EAAOkf,GACpBlf,EAAMmuB,UAAYjP,EAAOC,OAC3B,EACAmR,sBAAuB,SAACtwB,EAAOkf,GAC7Blf,EAAM2uB,mBAAqBzP,EAAOC,OACpC,EACAoR,qBAAsB,SAACvwB,EAAOkf,GAC5Blf,EAAM4uB,kBAAoB1P,EAAOC,OACnC,EACAqR,iBAAkB,SAACxwB,EAAOkf,GACxBlf,EAAM6uB,cAAgB3P,EAAOC,OAC/B,EACAsR,yBAA0B,SAACzwB,EAAOkf,GAChClf,EAAMkvB,sBAAwBhQ,EAAOC,OACvC,EACAuR,2BAA4B,SAAC1wB,EAAOkf,GAClClf,EAAMmvB,wBAA0BjQ,EAAOC,OACzC,EACAwR,wBAAyB,SAAC3wB,EAAOkf,GAC/Blf,EAAMovB,qBAAuBlQ,EAAOC,OACtC,EACAyR,qCAAsC,SAAC5wB,EAAOkf,GAC5Clf,EAAMqvB,kCAAoCnQ,EAAOC,OACnD,EACA0R,yBAA0B,SAAC7wB,EAAOkf,GAChClf,EAAMsvB,sBAAwBpQ,EAAOC,OACvC,EACA2R,sBAAuB,SAAC9wB,EAAOkf,GAC7Blf,EAAM8uB,mBAAqB5P,EAAOC,OACpC,EACA4R,uBAAwB,SAAC/wB,EAAOkf,GAC9Blf,EAAM+uB,oBAAsB7P,EAAOC,OACrC,EACA6R,yBAA0B,SAAChxB,EAAOkf,GAChClf,EAAMuvB,sBAAwBrQ,EAAOC,OACvC,EACA8R,8BAA+B,SAACjxB,EAAOkf,GACrClf,EAAMwvB,2BAA6BtQ,EAAOC,OAC5C,EACA+R,4BAA6B,SAAClxB,EAAOkf,GACnClf,EAAMgvB,yBAA2B9P,EAAOC,OAC1C,EACAgS,6BAA8B,SAACnxB,EAAOkf,GACpClf,EAAMivB,0BAA4B/P,EAAOC,OAC3C,EACAiS,0BAA2B,SAACpxB,EAAOkf,GACjClf,EAAMyvB,uBAAyBvQ,EAAOC,OACxC,EACAkS,qBAAsB,SAACrxB,EAAOkf,GAC5Blf,EAAM0vB,kBAAoBxQ,EAAOC,OACnC,EACAmS,mBAAoB,SAACtxB,EAAOkf,GAC1Blf,EAAM2vB,gBAAkBzQ,EAAOC,OACjC,EACAoS,wBAAyB,SAACvxB,EAAOkf,GAC/Blf,EAAM4vB,qBAAuB1Q,EAAOC,OACtC,EACAqS,mBAAoB,SAACxxB,EAAOkf,GAC1Blf,EAAM6vB,gBAAkB3Q,EAAOC,OACjC,EACAsS,4BAA6B,SAACzxB,EAAOkf,GACnClf,EAAM8vB,yBAA2B5Q,EAAOC,OAC1C,EACAuS,6BAA8B,SAAC1xB,EAAOkf,GACpClf,EAAM+vB,0BAA4B7Q,EAAOC,OAC3C,EACAwS,4BAA6B,SAAC3xB,EAAOkf,GACnClf,EAAMgwB,yBAA2B9Q,EAAOC,OAC1C,EACCyS,sBAAuB,SAAC5xB,EAAOkf,GAC9Blf,EAAMiwB,mBAAqB/Q,EAAOC,OACpC,EACA0S,aAAc,SAAC7xB,EAAOkf,GACpBlf,EAAMkwB,UAAYhR,EAAOC,OAC3B,EACA2S,kBAAmB,SAAC9xB,EAAOkf,GACzBlf,EAAMmwB,eAAiBjR,EAAOC,OAChC,KAIG4S,GA4BH7D,GAAW5O,QA3BbgR,GAAqByB,GAArBzB,sBACAG,GAAwBsB,GAAxBtB,yBACAF,GAAoBwB,GAApBxB,qBACAC,GAAgBuB,GAAhBvB,iBACAJ,GAAW2B,GAAX3B,YACAM,GAA0BqB,GAA1BrB,2BACAL,GAAY0B,GAAZ1B,aACAM,GAAuBoB,GAAvBpB,wBACAC,GAAoCmB,GAApCnB,qCACAC,GAAwBkB,GAAxBlB,yBACAC,GAAqBiB,GAArBjB,sBACAC,GAAsBgB,GAAtBhB,uBACAC,GAAwBe,GAAxBf,yBACAC,GAA6Bc,GAA7Bd,8BACAC,GAA2Ba,GAA3Bb,4BACAC,GAA4BY,GAA5BZ,6BACAC,GAAyBW,GAAzBX,0BACAC,GAAoBU,GAApBV,qBACAC,GAAkBS,GAAlBT,mBACAC,GAAuBQ,GAAvBR,wBACAC,GAAkBO,GAAlBP,mBACAC,GAA2BM,GAA3BN,4BACAC,GAA4BK,GAA5BL,6BACAC,GAA2BI,GAA3BJ,4BACAC,GAAqBG,GAArBH,sBACAC,GAAYE,GAAZF,aACAC,GAAiBC,GAAjBD,kBAGa5D,MAAkB,QCjM3B9sB,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvC4lB,iBAAkB,CAChBroB,QAAS,OACTC,cAAe,SACftB,SAAU,WACVkc,IAAK,EACLjc,MAAO,EACPE,UAAW,QACXU,MAAM,QAEN,6BAA8B,CAC5B,EAEF,4BAA6B,CAC3Bb,SAAU,WACVG,UAAW,MACXU,MAAM,SAQVyvB,SAAS,CACP,wBAAyB,CACvBrtB,SAAU,OACVlC,OAAO,OACPuU,QAAQ,QAIZpT,SAAS,CACP,sBAAuB,CACrBrC,gBAAgB,OAChBL,MAAM,MACN8V,QAAQ,QAIZgO,KAAM,CAAEzgB,aAAc,kBACtB0gB,YAAa,CACXliB,QAAS,OACTC,cAAe,SACf+hB,OAAQ,OAEVkN,iBAAkB,CAChBlvB,QAAS,OACTC,cAAe,SACf8hB,UAAW,gCACX3gB,UAAW,WAEb+tB,eAAgB,CACdnvB,QAAS,OACTC,cAAe,SACf+hB,OAAQ,OAEVoN,cAAe,CACbpvB,QAAS,OACTC,cAAe,SACf+hB,OAAQ,OAEVqN,aAAc,CACZrvB,QAAS,OACTC,cAAe,MACfgB,WAAY,SACZsa,UAAW,OAEb+M,iBAAkB,CAChBC,OAAQ,WAET/O,MAAO,CACNxZ,QAAS,OACTC,cAAe,MACfgB,WAAY,SACZsa,UAAW,OAEb+T,oBAAqB,CACnB1tB,SAAU,kBACVmB,WAAY,iBACZkR,QAAS,+BAEXsb,mBAAoB,CAClB,sBAAuB,CACrB3tB,SAAU,SAGd4tB,qBAAsB,CACpB5tB,SAAU,kBACVmB,WAAY,iBACZkR,QAAS,gCACTtU,YAAa,oBAEf8vB,sBAAuB,CACrB/vB,OAAQ,OACRkC,SAAU,iBACVqS,QAAS,qBACT1T,WAAY,SACZ5B,SAAU,WACVC,MAAO,QAET8wB,mBAAoB,CAClBrwB,UAAW,oBAEbswB,oBAAqB,CACnB,sBAAuB,CACrB1b,QAAS,mBAEX,wBAAyB,CACvBrS,SAAU,SAGdguB,aAAc,CACZzU,WAAY,OACZnb,QAAS,OACTC,cAAe,MACf4vB,IAAK,OACLnwB,OAAQ,QAER,6BAA8B,CAC5BO,cAAe,SACfP,OAAQ,SAGZowB,MAAO,CACLpwB,OAAQ,OACRF,MAAO,MAEP,6BAA8B,CAC5BA,MAAO,QAGT,4BAA6B,CAC3BA,MAAO,OACPE,OAAQ,UAGZqwB,WAAY,CACVC,WAAY,UAEdtH,cAAe,CACb1oB,QAAS,OACTC,cAAe,SACfgwB,UAAW,OACX9vB,SAAU,OACVT,OAAQ,QACRmwB,IAAK,MACL5b,QAAS,cACTrU,WAAY,QAEdswB,kBAAmB,CACjBlwB,QAAS,OACTiB,WAAY,SACZsa,UAAW,MACX/a,aAAc,OAEhB2vB,YAAa,CACXzwB,OAAQ,OACRF,MAAO,OACPgC,aAAc,MACdF,SAAU,QAEZ8uB,kBAAmB,CACjB5xB,gBAAiB,OACjByV,QAAS,MACT7R,OAAQ,iCAEViuB,eAAgB,CACd7wB,MAAO,MACPgC,aAAc,MACdhD,gBAAiB,UACjBmlB,UAAW,OAEX,6BAA8B,CAC5BnkB,MAAO,OACPE,OAAQ,UAGZ4wB,QAAS,CACP9wB,MAAO,OACPE,OAAQ,OACRM,QAAS,OACTC,cAAe,UAEjBswB,aAAc,CACZvwB,QAAS,OACTC,cAAe,MACfsb,UAAW,MACXta,WAAY,WACZgT,QAAS,gBACTvT,aAAc,kBAEhBumB,eAAgB,CACdjnB,QAAS,OACTwwB,oBAAqB,kBACrBrwB,SAAU,OACV0vB,IAAK,OACL5b,QAAS,OACT0P,UAAW,QAEb8M,mBAAoB,CAClBzwB,QAAS,OACTC,cAAe,MACfsb,UAAW,MACXmV,WAAY,UAEdC,eAAgB,CACdjxB,OAAQ,OACRF,MAAO,OACP4C,OAAQ,iCACRgQ,KAAM,QAERwe,iBAAkB,CAChB5wB,QAAS,OACTC,cAAe,SAEf,yBAA0B,CACxB4wB,aAAc,aAGlBC,mBAAoB,CAClB9wB,QAAS,OACTE,eAAgB,SAChBe,WAAY,SACZvB,OAAQ,QAEX,ICxNYqxB,GAAoB,WAC/B,IAAMvsB,EAAUnG,KAChBoG,EAA4BC,mBAAS,MAA9BssB,EAAmCpsB,YAAAH,EAAA,GAAlB,GACxBM,EAAwCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA7CksB,EAAYjsB,EAAA,GAAEksB,EAAelsB,EAAA,GAC9BsY,EAAWd,KACXqC,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAC7DmN,EAAsBtP,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM9D,mBAAmB,IAC/EO,EAAwB7P,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMvD,qBAAqB,IAQzF,SAAS4E,EAAuBvM,GAE9B,IAAM2B,EAAa6K,QAASxM,EAASyM,YAAczM,EAAS0M,WAAc,KAAKC,QAAQ,IAEvF,MAAM,GAAN5hB,OAAUiV,EAASrO,KAAI,cAAA5G,OAAaiV,EAAS0M,WAAU,MAAA3hB,OAAK4W,EAAU,iBACxE,CAOA,SAASiL,EAA6B9zB,GAAiC,IAAD+zB,EAAA/zB,EAA7B6V,aAAK,IAAAke,EAAG,KAAIA,EAAAC,EAAAh0B,EAAEi0B,IACrD,QADwD,IAAAD,GAAQA,EAI9D,OAFApU,EAASwQ,GAAyB,UAClCkD,EAAkB,MAIpB,IACY3f,EACRkC,EADFsB,OAAUxD,MAGyB,KAAjCkb,EAAsB1e,QAAiBwD,EAAMxD,OAAS,KAIrC,IAAjBwD,EAAMxD,QACRmjB,EAAkB,MAEpB1T,EAASwQ,GAAyBzc,IACpC,CApCAC,qBAAU,WACR0f,EAAkB,KAEpB,GAAG,CAAChF,EAAqBO,IAwC3B,IAAM1hB,EA7BKmhB,EA6BqCpe,QAAO,SAACgX,GAAQ,OAC9DA,EAASrO,KAAKnF,SAAS6f,EAAaxf,gBAAkBmT,EAASrO,KAAKnF,SAAS6f,EAAaW,cAAc,IAKxG,OAFFz0B,QAAQC,IAAI,wBAAyBmvB,EAAsB1e,QAC1D1Q,QAAQC,IAAI,eAAgB6zB,GAEzB1e,eAAA,OAAKP,UAAS,GAAArC,OAAKnL,EAAQ6jB,kBAAmBpW,SAC5CM,eAACoX,KAAI,CAACC,UAAW,EAAG5X,UAAWxN,EAAQyd,KAAKhQ,SAC1CH,gBAAC+X,KAAW,CAAC7X,UAAWxN,EAAQ0qB,iBAAiBjd,SAAA,CAC/CM,eAAA,OAAKP,UAAWxN,EAAQgV,MAAMvH,SAC5BM,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAC,wBAE9BH,gBAAC8C,IAAM,CACLid,UAAQ,EAER7tB,GAAG,gBACHqN,MAAOkb,EACPlY,SAAU,SAACd,GAAK,OAAKie,EAA8B,CAAEje,SAAQ,EAC7D+E,SAAuB,SAAbuG,EACV9J,cAAY,EACZE,QAAS,SAAC6c,GAAC,OAAKZ,EAAgB,GAAG,EACnCne,aACER,eAACS,IAAU,CACToC,KAAK,QACL/C,QAAQ,WACRL,UAAWxN,EAAQirB,sBACnBxc,QAAS,kBAAMue,EAA8B,CAAEG,KAAK,GAAO,EAC3DrZ,SAAuB,SAAbuG,GAAwD,IAAjC0N,EAAsB1e,OACvD1P,MAAM,QACN8T,SAEaM,eAACwf,KAAU,CAACnwB,SAAS,YAGtCggB,WAAY,CAAE5P,UAAWxN,EAAQgrB,sBACjCzF,UAAW,CAAEvlB,QAAS,CAAEumB,MAAOvmB,EAAQkrB,mBAAoB1F,KAAMxlB,EAAQmrB,sBACzEqC,YAAa,SAACnoB,GAAQ,OACA,IAApBA,EAASgE,OACP0E,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAEpI,IAE/B0I,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAA,GAAAtC,OAAK9F,EAASgE,OAAM,eAClD,EACFoE,SAAA,CAEDM,eAACC,IAAS,CACR4C,KAAK,QACLkE,WAAS,EACT7G,YAAY,oBACZ+G,MAAM,kBACNnH,QAAQ,WACRM,WAAY,CACVC,eACEL,eAACM,IAAc,CAAClU,SAAS,QAAOsT,SAC9BM,eAAC0f,KAAU,OAIjB9f,GAAI,CAAE3S,MAAM,MAAOub,OAAO,SAC1B1G,SAAU,SAAAyd,GAAC,OAhEFve,EAgEqBue,GA/DtCI,sBACNhB,EAAgB3d,EAAMsB,OAAOxD,OAF9B,IAAwBkC,CAgEuB,EAChCD,UAAW,SAACwe,GAAC,OAAKA,EAAEhd,iBAAiB,IAEtCjK,EAAaqD,KAAI,SAAC0W,EAAUjY,GAAK,OAChCmF,gBAACoD,IAAQ,CAAqC7D,MAAOuT,EAASrO,KAAMvE,UAAWxN,EAAQyqB,SAAShd,SAAA,CAC9FM,eAAC2B,IAAQ,CAAC/B,GAAI,CAAC8B,QAAS,MAAOtU,YAAY,OAAQyU,QAASmY,EAAsB9V,QAAQmO,EAASrO,OAAS,IAC5GhE,eAAC6L,KAAY,CAACC,QAAS8S,EAAuBvM,OAAe,sBAAAjV,OAF1BhD,GAG1B,aAO3B,E,oBCxIMtO,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvC0vB,oBAAqB,CACnBnyB,QAAS,OACTC,cAAe,SACftB,SAAU,WACVmlB,OAAQ,EACRllB,MAAO,GAEV,I,oBCTM,SAASwzB,GAAiBC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BH,EAAII,OAAS,kBAAMF,EAAQF,EAAK,EAChCA,EAAIK,QAAUF,CAChB,GACF,C,yBCMaG,GAAsB,WAAO,IAADC,EACjCpuB,EAAUnG,KAChBoG,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCgF,EAAO9E,EAAA,GAAE+E,EAAU/E,EAAA,GAC1BI,EAAkCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAA1C8tB,EAAS7tB,EAAA,GAAE8tB,EAAY9tB,EAAA,GAExBsY,EAAWd,KACXqC,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAC7DmI,EAAUtK,IAAe,SAACzf,GAAK,OAAKA,EAAMiR,IAAI8Y,OAAO,IACrDE,EAAUxK,IAAe,SAACzf,GAAK,OAAKA,EAAMiR,IAAIgZ,OAAO,IACrD5H,EAAoB5C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU9B,iBAAiB,IAC/EC,EAAkB7C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU7B,eAAe,IAC3Eb,EAAsBhC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU1C,mBAAmB,IA+FzF,SAASqU,IACPD,GAAa,EACf,CAEA,OACEhhB,gBAAA,OAAKE,UAAWxN,EAAQ2tB,oBAAoBlgB,SAAA,CAC1CM,eAACiB,IAAO,CAACC,MAAM,sBAAsB4B,UAAU,OAAMpD,SACnDM,eAAA,QAAAN,SACEM,eAACS,IAAU,CAAC7U,MAAM,UAAU8U,QAvGuD,WAEjE,OAAA2f,KAAA/jB,YAAAC,cAAAC,MAA1B,SAAAc,IAAA,IAAAnS,EAAA,OAAAoR,cAAAM,MAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,OAE0D,OADxD7F,GAAW,GACX4T,EAASgK,GAAY,CAAER,YAAa,CAAC,EAAG,GAAIC,KAAM,KAAMhX,EAAAT,KAAA,EAAAS,EAAAR,KAAA,EAGhDyjB,uBAAY9f,SAASC,eAAe,uBAAwB,CAChE8f,MAAO,EACPz0B,gBAAiB,QACjBgB,MAAO,KACPonB,MAAO,MACNjqB,MAAK,SAADiT,GAAA,OAAAlS,KAAAmR,YAAAC,cAAAC,MAAC,SAAA0L,EAAOyY,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAhlB,cAAAM,MAAA,SAAAsL,GAAA,cAAAA,EAAApL,KAAAoL,EAAAnL,MAAA,OAMC,OALb4jB,EAASjgB,SAAS6gB,cAAc,UAChCX,EAAMD,EAAOa,WAAW,MAExBX,EAASngB,SAAS6gB,cAAc,OAChCT,EAAgBlB,GAAiBiB,GACrCA,EAAOpQ,IAAMiQ,EAAIxY,EAAAnL,KAAA,EACX+jB,EAAc,KAAD,EAEJ,KACC,KACG,IACbC,EAAe,IAErBJ,EAAO3zB,MALQ,KAMf2zB,EAAOzzB,OAASu0B,KAAuBV,EAEvCH,EAAIc,UAAY,QAChBd,EAAIe,SAAS,EAAG,EAAGhB,EAAO3zB,MAAO2zB,EAAOzzB,QAExC0zB,EAAI3xB,KAAO,yBACX2xB,EAAIc,UAAY,QAChBd,EAAIhyB,UAAY,SAChBgyB,EAAIgB,SAAS,sBAADzkB,OAAuB+O,EAAoBE,WAAauU,EAAO3zB,MAAQ,EAAG,IACtF4zB,EAAI3xB,KAAO,kBACX2xB,EAAIhyB,UAAY,SAEVoyB,EAAgBxK,GAAWzH,MAAK,SAACnU,GAAC,OAAKA,EAAEiE,QAAU2V,CAAO,IAAExN,MAElE4Z,EAAIgB,SAAS,aAAeZ,EAAeL,EAAO3zB,MAAQ,EAAG,KAC7D4zB,EAAIgB,SAAS,YAAclN,EAASiM,EAAO3zB,MAAQ,EAAG,KACtD4zB,EAAIgB,SAAS,gBAAkB9U,EAAoB,OAASC,EAAiB4T,EAAO3zB,MAAQ,EAAG,KAE/F4zB,EAAIiB,UAAUhB,EAAQ,EAtBH,IAsBkBF,EAAO3zB,MAvB5B,MAyBVi0B,EAAYvgB,SAAS6gB,cAAc,OACnCL,EAAmBtB,GAAiBqB,GACtCE,EAAc,IAAGjZ,EAAA4Z,GAEbtN,EAAOtM,EAAAnL,KACR,sBADQmL,EAAA4Z,GACW,GAInB,gBAJmB5Z,EAAA4Z,GAIN,GAGb,2BAHa5Z,EAAA4Z,GAGW,GAGxB,wBAHwB5Z,EAAA4Z,GAGH,oBAR2C,OADnEX,EAA2B,UAAb9U,EAAuB,KAAO,KAC5C4U,EAAUxQ,IAAG,oCAAAtT,OAAuCkP,EAAQ,QAAOnE,EAAAxK,OAAA,oBAGnB,OAAhDujB,EAAUxQ,IAAM,gCAAgCvI,EAAAxK,OAAA,oBAGA,OAAhDujB,EAAUxQ,IAAM,gCAAgCvI,EAAAxK,OAAA,oBAGC,OAAjDujB,EAAUxQ,IAAM,iCAAiCvI,EAAAxK,OAAA,oBAGJ,OAA7CujB,EAAUxQ,IAAM,6BAA6BvI,EAAAxK,OAAA,2BAAAwK,EAAAnL,KAAA,GAI3CmkB,EAAiB,KAAD,GAWK,OAV3BN,EAAIiB,UACFZ,EACAN,EAAO3zB,MAAQ,EAAIm0B,EAAc,EACjCR,EAAOzzB,OAAS6zB,EAAe,GAC/BI,EACAJ,GAGIK,EAAe1gB,SAAS6gB,cAAc,OACtCF,EAAsBzB,GAAiBwB,GAC7CA,EAAa3Q,IAAMC,GAAQxI,EAAAnL,KAAA,GACrBskB,EAAoB,KAAD,GAGQ,OAFjCT,EAAIiB,UAAUT,EAAc,GAAI,GAAI,IAAK,KAEnCE,EAASX,EAAOoB,YAAW7Z,EAAAnL,KAAA,GAC3BilB,KAASV,EAAQ,mDAAmD,KAAD,oBAAApZ,EAAAvK,OAAA,GAAAsK,EAAA,MAC1ErK,MAAA,KAAAjB,UAAE,SAAD,EAAAY,EAAAR,KAAA,gBAAAQ,EAAAT,KAAA,EAAAS,EAAAukB,GAAAvkB,EAAA,SAEF+iB,GAAa,GAAM,QAED,OAFC/iB,EAAAT,KAAA,GAEnB5F,GAAW,GAAOqG,EAAA0kB,OAAA,6BAAA1kB,EAAAI,OAAA,GAAAN,EAAA,yBAErBO,MAAA,KAAAjB,UAAA,EAUyDmJ,SAAuB,SAAbuG,GAAuBpV,EAAQwI,SACxFxI,EAAU8I,eAACnU,KAAgB,CAACD,MAAM,UAAUiX,KAAM,KAAS7C,eAACmiB,KAAS,CAAC9yB,SAAS,gBAItF2Q,eAACoiB,KAAQ,CAACttB,KAAMwrB,EAAW+B,iBAAkB,IAAM3f,QAAS8d,EAAiB9gB,SAC3EM,eAACsiB,KAAK,CAAC5f,QAAS8d,EAAkB+B,SAAS,QAAQ3iB,GAAI,CAAE3S,MAAO,QAASyS,SAAC,wEAMlF,ECzHM8iB,GAAU,CACdC,IAAK,MACL,gBAAiB,MACjBC,IAAK,MACLC,OAAQ,SACRC,MAAO,QACPC,KAAM,OACN,yBAA0B,cAC1BrP,KAAM,OACNsP,KAAM,QAGKC,GAAM,WACjB,IAAM9wB,EAAUnG,KACVmrB,EAAUtI,aAAc,qBAExB5D,EAAWd,KACX7d,EAAW+d,IAAe,SAACzf,GAAK,OAAKA,EAAMiR,IAAIvP,QAAQ,IACvDwoB,EAAUzK,IAAe,SAACzf,GAAK,OAAKA,EAAMiR,IAAIiZ,OAAO,IACrDH,EAAUtK,IAAe,SAACzf,GAAK,OAAKA,EAAMiR,IAAI8Y,OAAO,IACrDC,EAAiBvK,IAAe,SAACzf,GAAK,OAAKA,EAAMiR,IAAI+Y,cAAc,IACnEvI,EAAsBhC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU1C,mBAAmB,IACnFG,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAC7Da,EAAehD,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU1B,YAAY,IAErE6M,EAAwB7P,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMvD,qBAAqB,IACnFnF,EAAW1K,IAAe,SAACzf,GAAK,OAAKA,EAAMiR,IAAIkZ,QAAQ,IAE7D,SAASmO,EAAiB3Q,GACxB,MAAoB,UAAb/F,EAAuB8F,GAAoBC,GAAYlF,EAAakF,IAAa,SAC1F,CAQA,SAAS4Q,IACPlY,EAASkK,GAAkB,MAC7B,CAiGA,OACEjV,eAACoX,KAAI,CAAC3X,UAAWxN,EAAQyd,KAAKhQ,SAC5BH,gBAAC+X,KAAW,CAAC7X,UAAWxN,EAAQ0d,YAAYjQ,SAAA,CAC1CH,gBAACI,IAAU,CAACwY,cAAY,EAACrY,QAAQ,KAAKtP,WAAY,OAAOkP,SAAA,CAAC,kBACxC,IACF,SAAb4M,EACC,GAEA/M,gBAAA,QAAAG,SAAA,CAAM,MACDM,eAAA,KAAAN,SAAIyM,EAAoBC,cAAgB,IAAED,EAAoBlF,YAIvE1H,gBAAA,OAAKE,UAAWxN,EAAQ4f,WAAWnS,SAAA,CACjCM,eAACkjB,iBAAa,CACZzjB,UAAWxN,EAAQ6f,cACnBrgB,GAAG,sBACH,WAAS,GACT0xB,iBAAkB,CAChBC,OAAQ,EAAE,GAAI,EAAG,GACjB1C,MAAO,KACPhhB,SAEFH,gBAAC8jB,iBAAa,CACZ7O,KAAMpoB,EAASooB,KACf8O,OAAQl3B,EAASmoB,YACjBgP,UAAW,SAACzkB,IAlCxB,SAAyBA,GACvBiM,EAASgK,GAAYjW,GACvB,CAiCc0kB,CAAgB1kB,EAClB,EAAEY,SAAA,CAEFM,eAACyjB,UAAM,CAACC,OAAO,UAAUC,YAAa,KACtC3jB,eAAC4jB,aAAS,CAACF,OAAO,UAAUC,YAAa,KACzC3jB,eAAC6jB,eAAW,CAACC,UAAWA,GAAUpkB,SAC/B,SAAAqkB,GAEC,OAFaA,EAAXC,YAEiBroB,KAAI,SAACsoB,GAAS,IAADC,EACxBC,EAAcvP,EAAQ5F,MAAK,SAAChI,GAAI,OAAKA,EAAKhD,OAASigB,EAAIG,WAAWtpB,IAAI,IACtEupB,EAA0B,OAAXF,QAAW,IAAXA,OAAW,EAAXA,EAAaG,MAC9BC,EAAY7Q,GACZ8Q,GAAgB,EAChBC,GAAc,EAElB,GAAIN,EAAa,CACf,IAAI9e,EAAQ,EAEZ,OAAQoP,GACN,IAAK,cAED8P,EADEJ,EAAY9e,MAAQ,EACVwO,GAAkBsQ,EAAY9e,OjB0SxC,UiBtSJ,MACF,IAAK,oBAEHkf,EAAYvB,EADMqB,EAAaK,SAASC,MACD,GAAG3gB,MAC1C,MACF,IAAK,sBACH,IAAI4gB,EAAiB,EACfC,EAAaR,EAAaK,SAASC,MAErCG,EAAa,GACjBD,EAAWrqB,SAAQ,SAAC6X,GACd2H,EAAsBnb,SAASwT,EAASrO,OACxC8gB,EAAW7pB,KAAKoX,GAClBuS,GAAkBvS,EAAShN,KAC/B,IAGA,IAAI0f,EAAW,EAEf,GAAID,EAAWxpB,OAAS,EAAI,CAAC,IACM0pB,EADPC,EAAAC,aACHJ,GAAU,IAAjC,IAAAG,EAAAhmB,MAAA+lB,EAAAC,EAAAzhB,KAAA2hB,MAAmC,CACjCJ,GADiBC,EAAAlmB,MACIuG,KACvB,CAAC,OAAA+f,GAAAH,EAAA1F,EAAA6F,EAAA,SAAAH,EAAAI,GAAA,CACH,CACGlB,EAAY9e,OAAO,IAAMyf,EAAWxpB,OAAS,OAE5B2B,IAAf6nB,IACDP,EhB3MA,SAACvQ,GAC7B,IAAME,EAAIzO,SAASuO,GAWnB,OARmBsR,KAAO5E,MAAM,CAAC,UAAW,UAAW,UAAW,WAMpD6E,CAHerR,EAAI,KAGcsR,KAGjD,CgB8L0CC,EAAiBV,EAASH,EAAgB,KAAK5F,QAAQ,KAG9DmF,EAAY9e,OAAO,KAC1Bkf,EAAY5Q,GACZ6Q,GAAgB,GAElB,MACF,IAAK,yBACL,IAAK,gBACL,IAAK,MACL,IAAK,MACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,OACL,IAAK,OACHnf,EAAsC,QAAjC6e,EAAGG,EAAa7B,GAAQ/N,WAAS,IAAAyP,OAAA,EAA9BA,EAAgC7e,MACpC8e,EAAY9e,OAAS,IAAMA,EAAQ,GAEnCkf,EADc,2BAAZ9P,EACUR,GAAoBoQ,EAAa7B,GAAQ/N,IAAUT,YAEnDD,GAAcsQ,EAAa7B,GAAQ/N,IAAUT,YAE3DyQ,GAAc,GACLN,EAAY9e,OAAS,KAE5Bkf,EADc,2BAAZ9P,EjBgPA,UiB7OUd,GAEd6Q,GAAgB,GAMxB,CAEA,OACExkB,eAAC0lB,aAAS,CAER5B,UAAWG,EACXjO,OAAO,UACP2P,KAAMpB,EACN7jB,QAAS,kBArO/B,SAAuByjB,QACDlnB,IAAhBknB,GACFpZ,EAAS0C,GAAiB0W,EAAYngB,MAE1C,CAiOqC4hB,CAAczB,EAAY,EACzC0B,aAAc5C,EACd6C,aAAc,kBA9NpC,SAA2B36B,GAAkF,IAA/E84B,EAAG94B,EAAH84B,IAAKI,EAAYl5B,EAAZk5B,aAAcF,EAAWh5B,EAAXg5B,YAAW4B,EAAA56B,EAAEq5B,qBAAa,IAAAuB,GAAQA,EAAAC,EAAA76B,EAAEs5B,mBAAW,IAAAuB,GAAQA,EAEhGjI,EAAU,CACd/Z,KAFeigB,EAAIG,WAAbtpB,KAGNmrB,QAAS,CAAC,EACVzB,iBAGF,QAAoBvnB,IAAhBknB,EACF,OAAQ1P,GACN,IAAK,cACHpa,OAAO6rB,OAAOnI,EAAS,CACrBkI,QACe,UAAb3Z,EACI,CACE6Z,QAAShC,EAAY9e,MACrB+gB,UAAW/B,EAAaK,SAASrf,MACjCghB,IAAI,GAADjpB,OAAKinB,EAAagC,IAAIrS,WAAU,KACnCyO,IAAI,GAADrlB,OAAKinB,EAAa5B,IAAIzO,WAAU,KACnC0O,IAAI,GAADtlB,OAAKinB,EAAa3B,IAAI1O,WAAU,KACnC2O,OAAO,GAADvlB,OAAKinB,EAAa1B,OAAO3O,WAAU,KACzC6O,KAAK,GAADzlB,OAAKinB,EAAaxB,KAAK7O,WAAU,KACrC4O,MAAM,GAADxlB,OAAKinB,EAAazB,MAAM5O,WAAU,KACvC8K,YAAY,GAAD1hB,OAAKinB,EAAavF,YAAY9K,WAAU,MAErD,CACEmS,QAAShC,EAAY9e,MACrB+gB,UAAW/B,EAAaK,SAASrf,MACjCmO,KAAK,GAADpW,OAAKinB,EAAa7Q,KAAKQ,WAAU,KACrC8O,KAAK,GAAD1lB,OAAKinB,EAAavB,KAAK9O,WAAU,KACrC8K,YAAY,GAAD1hB,OAAKinB,EAAavF,YAAY9K,WAAU,QAG7D,MACF,IAAK,oBACeqQ,EAAaK,SAASC,MAAM5gB,MAAM,EAAG,GAC7CvJ,SAAQ,SAAC6X,GACjB0L,EAAQkI,QAAQ5T,EAASrO,MAAQqO,EAAShN,KAC5C,IACA,MACF,IAAK,sBACD,IAAIuf,EAAiB,EACfC,EAAaR,EAAaK,SAASC,MACrCG,EAAa,GAWjB,GAVAD,EAAWrqB,SAAQ,SAAC6X,GACb2H,EAAsBnb,SAASwT,EAASrO,OAEzC8gB,EAAW7pB,KAAKoX,GAClBuS,GAAkBvS,EAAShN,KAC/B,IACAwf,EAAWrqB,SAAQ,SAAC6X,GACb2H,EAAsBnb,SAASwT,EAASrO,QAC3C+Z,EAAQkI,QAAQ5T,EAASrO,MAAK,GAAA5G,OAAMiV,EAAShN,MAAK,MAAAjI,QAAOiV,EAAShN,MAAMuf,EAAgB,KAAK5F,QAAQ,GAAE,OAC3G,IACI8F,EAAWxpB,OAAS,EAAG,CACzB,IACiCgrB,EAD7BvB,EAAW,EAAEwB,EAAArB,aACMJ,GAAU,IAAjC,IAAAyB,EAAAtnB,MAAAqnB,EAAAC,EAAA/iB,KAAA2hB,MACEJ,GADiBuB,EAAAxnB,MACIuG,KACtB,OAAA+f,GAAAmB,EAAAhH,EAAA6F,EAAA,SAAAmB,EAAAlB,GAAA,CACElB,EAAY9e,OAAO,IAAMyf,EAAWxpB,OAAS,IAC9CyiB,EAAQkI,QAAQ,0BAAyB,GAAA7oB,OAAM2nB,EAAQ,MAAA3nB,QAAO2nB,EAASH,EAAgB,KAAK5F,QAAQ,GAAE,OAE1G,CACA,MACJ,IAAK,gBACL,IAAK,MACL,IAAK,yBACL,IAAK,MACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,OACL,IAAK,OACCyF,IACF1G,EAAQkI,QAAQzD,GAAQ/N,IAAY,CAClCpP,MAAOgf,EAAa7B,GAAQ/N,IAAUpP,MACtC2O,WAAW,GAAD5W,OAAKinB,EAAa7B,GAAQ/N,IAAUT,WAAU,OASlEjJ,EAASkK,GAAkB8I,GAC7B,CAyIwByI,CAAmB,CACjBvC,MACAI,eACAF,cACAK,gBACAC,eACA,EAEJje,MAAO,CACLigB,QAAS,CACPC,QAAS,QAEXriB,MAAO,CACLqf,OAAQ,UACRC,YAAa,EACb+C,QAAS,QAEXC,QAAS,CACPhB,KAAM,UACNjC,OAAQ,UACRC,YAAa,EACb+C,QAAS,UA5BRzC,EAAI2C,OAiCf,GACF,UAIJ3P,GACA1X,gBAAAyQ,YAAA,CAAAtQ,SAAA,CACEM,eAACkY,GAAe,IAChBlY,eAACgX,GAAgB,IAChBnC,EAAW7U,eAACwe,GAAiB,IAAK,QAGvCxe,eAACsV,GAAkB,IACnBtV,eAACogB,GAAmB,OAErBnJ,GACC1X,gBAAA,OAAKE,UAAWxN,EAAQ+f,YAAYtS,SAAA,CAClCM,eAACgX,GAAgB,IAChBnC,EAAW7U,eAACwe,GAAiB,IAAK,KACnCxe,eAACkY,GAAe,OAIpBlY,eAAC6mB,KAAY,CAAAnnB,SACVgV,GACCnV,gBAAA,OAAKE,UAAWxN,EAAQ8f,WAAWrS,SAAA,CACjCM,eAAA,QAAMP,UAAWxN,EAAQggB,QAAQvS,SAAEgV,EAAe1Q,OAClDzE,gBAAA,OAAKE,UAAWxN,EAAQigB,YAAYxS,SAAA,CACjCrF,OAAOC,KAAKoa,EAAeuR,SAAStqB,KAAI,SAACP,EAAKhB,GAC7C,OACEmF,gBAAA,OAA8BE,UAAWxN,EAAQkgB,KAAKzS,SAAA,CACvC,sBAAZ+U,GACCzU,eAAA,OACEP,UAAWxN,EAAQrG,MACnB4a,MAAO,CACLva,gBAAiB+2B,EAAiB5nB,MAIxCmE,gBAAA,QAAAG,SAAA,CACEH,gBAAA,QAAAG,SAAA,CAAOtE,EAAI,OApMvB,CAAC,oBAAoB,sBAAsB,eAAeyD,SAAS4V,GAwMrDzU,eAAA,QAAAN,SAAA,IAAAtC,OAAWsX,EAAeuR,QAAQ7qB,MAFlC4E,eAAA,QAAAN,SAAA,IAAAtC,OAAWsX,EAAeuR,QAAQ7qB,GAAKiK,MAAK,MAAAjI,OAAKsX,EAAeuR,QAAQ7qB,GAAK4Y,WAAU,SAGxF,QAAA5W,OANgBhD,MAOZ,WAAAgD,OAhBYhD,GAmBzB,IACgD,IAA/CC,OAAOC,KAAKoa,EAAeuR,SAAS3qB,QACnC0E,eAAA,QAAAN,SAAOgV,EAAe8P,cAAgB,KAAO,kCAS/D,EC7WM14B,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCwY,OAAQ,CACNzZ,aAAc,OACdhD,gBAAiB,mBAEnBiC,QAAS,CACPjC,gBAAiB,OACjBgD,aAAc,OACdxB,QAAS,kBACT6vB,IAAK,MACLW,oBAAqB,kBACrBvc,QAAS,4BACT8G,OAAQ,UAEVse,eAAgB,CACdr5B,QAAS,OACTub,UAAW,MACXmV,WAAY,SACZxwB,eAAgB,YAElBo5B,aAAc,CACZ5I,WAAY,SACZ1wB,QAAS,OACTub,UAAW,OAEbF,KAAM,CACJkN,OAAQ,WAEX,I,UC9Bc,OAA0B,0CCA1B,OAA0B,gDCM5BgR,GAAS,WACpB,IAAM/0B,EAAUnG,KAchB,OACEkU,eAACwQ,KAAM,CAACpkB,SAAS,SAASqT,UAAWxN,EAAQyW,OAAOhJ,SAClDH,gBAACC,IAAO,CAACC,UAAWxN,EAAQ/D,QAAQwR,SAAA,CAClCH,gBAAA,OAAKE,UAAWxN,EAAQ80B,aAAarnB,SAAA,CACnCM,eAAA,OACEP,UAAWxN,EAAQ6W,KACnBpI,QAdV,WACE/W,OAAOmL,KAAK,0BAA2B,SACzC,EAaU4b,IAAKuW,GACLrW,IAAI,aACJ1Z,QAAQ,OACR/J,OAAQ,KAEV6S,eAAA,OACEP,UAAWxN,EAAQ6W,KACnBpI,QAlBV,WACE/W,OAAOmL,KAAK,sBAAuB,SACrC,EAiBU4b,IAAKwW,GACLtW,IAAI,sBACJ1Z,QAAQ,OACR/J,OAAQ,QAGZ6S,eAAA,OAAKP,UAAWxN,EAAQ60B,eAAepnB,SACrCM,eAACiB,IAAO,CAACC,MAAM,SAAS4B,UAAU,MAAKpD,SACrCM,eAACS,IAAU,CAACC,QAnCtB,WACE/W,OAAOmL,KAAK,4BAA6B,SAC3C,EAiCiD4K,SACrCM,eAACmnB,KAAM,CAAC93B,SAAS,oBAO/B,EClDMvD,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCk3B,oBAAqB,CACnB35B,QAAS,OACTE,eAAgB,eAChB+T,QAAS,WAET,4BAA6B,CAC3BA,QAAS,WAGX,4BAA6B,CAC3BhU,cAAe,SACf+hB,OAAQ,QAGZ4X,OAAQ,CACNz7B,MAAO,kBACPqB,MAAO,MACPq6B,cAAe,kBACf1e,WAAY,iBACZC,cAAe,iBACf5Z,aAAc,mBAEd,4BAA6B,CAC3BhC,MAAO,SAGZ,I,wCC7Bc,OAA0B,oC,uECE5Bs6B,GAAa,CACxB,CACEC,SAAU,iBACVtmB,MAAO,yBACPumB,YAAa,CAAC,uDACdp2B,KAAM2O,eAAC0nB,KAAQ,CAAC97B,MAAM,YACtB6F,GAAI,MACJ8c,UAAW,CAAC,QAAS,UAEvB,CACEiZ,SAAU,cACVtmB,MAAO,0CACPumB,YAAa,CAAC,8BACdp2B,KAAM2O,eAAC2nB,KAAQ,CAAC/7B,MAAM,YACtB6F,GAAI,OACJ8c,UAAW,CAAC,QAAS,UAEvB,CACEiZ,SAAU,eACVtmB,MAAO,2CACPumB,YAAa,CAAC,4BACdp2B,KAAM2O,eAAC4nB,KAAe,CAACh8B,MAAM,YAC7B6F,GAAI,OACJ8c,UAAW,CAAC,QAAS,UAEvB,CACEiZ,SAAU,eACVtmB,MAAO,wBACPumB,YAAa,CAAC,IACdp2B,KAAM2O,eAAC4nB,KAAe,CAACh8B,MAAM,YAC7B6F,GAAI,KACJ8c,UAAW,CAAC,QAAS,UAEvB,CACEiZ,SAAU,WACVtmB,MAAO,oDACPumB,YAAa,CAAC,2BAA4B,uDAC1Cp2B,KAAM2O,eAAC6nB,KAAc,CAACj8B,MAAM,YAC5B6F,GAAI,QACJ8c,UAAW,CAAC,UAEd,CACEiZ,SAAU,cACVtmB,MAAO,gBACPumB,YAAa,CAAC,sBACdp2B,KAAM2O,eAAC4nB,KAAe,CAACh8B,MAAM,YAC7B6F,GAAI,KACJ8c,UAAW,CAAC,UAEd,CACEiZ,SAAU,cACVtmB,MAAO,0BACPumB,YAAa,CAAC,IACdp2B,KAAM2O,eAAC8nB,KAAW,CAACl8B,MAAM,YACzB6F,GAAI,MACJ8c,UAAW,CAAC,W,qBCxDHwZ,GAAU,CACrB,aACA,eACA,kBAEA,gCAEA,cAEA,mBAEA,kBACA,gBACA,cACA,gBACA,gBACA7sB,MAAK,SAACvB,EAAGC,GAAC,OAAKD,EAAE6c,cAAc5c,EAAE,IAEtBouB,GAAgC,GAAA5qB,OAAA4H,YAAI+iB,IAAO,CAAE,MAAO,QAAO7sB,MAAK,SAACvB,EAAGC,GAAC,OAAKD,EAAE6c,cAAc5c,EAAE,IAE5FquB,GAAuC,CAClD,eACA,cACA,mBACA,kBACA,MACA,cACA,gCACA,OAIWC,GAAU,CACrB,kBACA,cACA,gCACA,8DACA,WACA,mBACA,aACA,cACA,8BACA,YACA,eACA,cACA,eACA,cACA,gBAIWC,GAAgB,CAC3B,aACA,eACA,kBAEA,gCAEA,cAEA,mBACA,gBACA,gBACA,gBAIWC,GAAgB,CAAC,cAAe,QClEhCC,GAAkB,SAACC,GAC9B,OAAQA,GACN,IAAK,aACL,IAAK,kBACH,MAAO,mBAET,IAAK,eACL,IAAK,cACH,MAAO,mBAET,IAAK,kBACL,IAAK,gCACH,MAAO,mBAGT,IAAK,gCACL,IAAK,8DACH,MAAO,mBAGT,IAAK,cACL,IAAK,WACH,MAAO,UAGT,IAAK,aACH,MAAO,UAGT,IAAK,mBACL,IAAK,cACH,MAAO,mBAGT,IAAK,kBACL,IAAK,mBACH,MAAO,UAET,IAAK,gBACL,IAAK,eACH,MAAO,mBAET,IAAK,cACH,OAAO5U,GAET,IAAK,gBACL,IAAK,eACH,MAAO,mBAET,IAAK,eACH,MAAO,mBAET,IAAK,8BACH,MAAO,UAET,IAAK,YACH,MAAO,UAET,IAAK,cACH,MAAO,UAET,IAAK,MACH,MAAO,OAET,IAAK,MACH,MAAO,UAET,QACE,MAAO,UAEb,EAEa6U,GAA4B,CACvC,CAAEvkB,KAAM,MAAOpY,MAAO,oBACtB,CAAEoY,KAAM,KAAMpY,MAAO,oBACrB,CAAEoY,KAAM,cAAepY,MAAO,oBAC9B,CAAEoY,KAAM,OAAQpY,MAAO,WACvB,CAAEoY,KAAM,kBAAmBpY,MAAO,oBAClC,CAAEoY,KAAM,SAAUpY,MAAO,oBACzB,CAAEoY,KAAM,UAAWpY,MAAO8nB,KCjFrB,SAAS8U,GAAmB92B,GACjC,MAAO,CAAC,gCAAD0L,OAC2B1L,EAAI,iMACpC,oIACA,kFACA,6HACA,oIACA,iSACA,yOAEJ,CCVO,IAAM+2B,GAAmB,CAC9B,CAAExhB,MAAO,UAAWnI,MAAO,gBAC3B,CAAEmI,MAAO,OAAQnI,MAAO,QACxB,CAAEmI,MAAO,aAAcnI,MAAO,aCyB1B4pB,GAAkB,CACtB,mBACA,YACA,eACA,oBACA,WACA,WACA,WACA,YACA,YACA,uBACA,4BACA,wBACA,YACA,UACA,gBACA,cACA,eACA,aACA,aACA,WACA,eACA,kBACA,UACA,gBACA,MACA,eACA,eACA,WACA,WACA,gBACA,2BACA,wBACA,sBACA,iBACA,gBACA,WACA,UACA,UACA,kBACA,gBACA,oBACA,MACA,iBACA,qBAGWC,GAAe,WAAO,IAADC,EAAAC,EAC1B52B,EAAUnG,KACV8e,EAAWC,eACXyF,EAAa3B,aAAc,qBACjCzc,EAAoCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA5C42B,EAAU12B,EAAA,GAAE22B,EAAa32B,EAAA,GAChCI,EAAoCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAA5Cw2B,EAAUv2B,EAAA,GAAEw2B,EAAax2B,EAAA,GAChCG,EAAkCT,oBAAS,GAAMU,EAAAR,YAAAO,EAAA,GAA1C0tB,EAASztB,EAAA,GAAE0tB,EAAY1tB,EAAA,GAExBkY,EAAWd,KACXqC,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAC7DE,EAAgBrC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUrC,aAAa,IACvE0c,EAAW/e,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUzB,QAAQ,IAC7DjB,EAAsBhC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU1C,mBAAmB,IACnFQ,EAAgBxC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUlC,aAAa,IACvEI,EAAoB5C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU9B,iBAAiB,IAC/EC,EAAkB7C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU7B,eAAe,IAC3EyH,EAAUtK,IAAe,SAACzf,GAAK,OAAKA,EAAMiR,IAAI8Y,OAAO,IACrDE,EAAUxK,IAAe,SAACzf,GAAK,OAAKA,EAAMiR,IAAIgZ,OAAO,IACrDuF,EAA6B/P,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMrD,0BAA0B,IAC7FC,EAAyBhQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMpD,sBAAsB,IACrFG,EAAuBnQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMjD,oBAAoB,IACjFnN,EAAehD,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU1B,YAAY,IACrED,EAAqB/C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU3B,kBAAkB,IACjFsN,EAA2BrQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM/C,wBAAwB,IACzFC,EAA4BtQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM9C,yBAAyB,IAC3FC,EAA2BvQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM7C,wBAAwB,IAkE/F,SAASsI,EAAiB3Q,GACxB,MAAoB,UAAb/F,EAAuB8F,GAAoBC,GAAYlF,EAAakF,IAAa,SAC1F,CAWA,SAAS8W,EAAWz3B,GAClB,OAAO03B,KAAO13B,GAAM23B,OAAO,wBAC7B,CAEA,SAASC,EAAUn+B,GAA6C,IAA1CwV,EAAQxV,EAARwV,SAAU4oB,EAAUp+B,EAAVo+B,WAAYC,EAASr+B,EAATq+B,UAAW93B,EAAIvG,EAAJuG,KACrDiP,EAAS8oB,YAAY,IACrB9oB,EAAS+oB,KAAK,EAAGH,EAAa,GAAIC,EAAWD,EAAa,IAC1D5oB,EAAS1E,KAAK,oBAADmB,OAAqB1L,EAAI,KAAK83B,EAAY,EAAGD,EAAa,GAAI,CAAEvnB,MAAO,UACtF,CAEA,SAAS2nB,EAAU5F,GAYf,IAKE6F,EALHC,EAAA9F,EAXDtyB,UAAE,IAAAo4B,EAAG,KAAIA,EACTC,EAAU/F,EAAV+F,WACAnpB,EAAQojB,EAARpjB,SACAopB,EAAMhG,EAANgG,OACAC,EAAKjG,EAALiG,MAAKC,EAAAlG,EACLmG,kBAAU,IAAAD,GAAQA,EAAAE,EAAApG,EAClBqG,cAAM,IAAAD,GAAQA,EAAAE,EAAAtG,EACduG,kBAAU,IAAAD,GAAQA,EAClBE,EAAMxG,EAANwG,OAAMC,EAAAzG,EACN0G,gBAAQ,IAAAD,GAAQA,EAAAE,EAAA3G,EAChB4G,sBAAc,IAAAD,EAAG,EAACA,EAEdE,EAAkBd,EAAW/lB,QAC7B8mB,EAAmB,GAEnBC,EAAoBf,EAGpBU,IACFG,EAAkBd,EAAW/lB,MAAM,EAAG,GAAK4mB,GAC3CE,EAAmBf,EAAW/lB,MAAM,GAAK4mB,GACzCf,EAAqBG,EAAS,GAC9Be,EAAoB,IAGtBF,EAAgBpwB,SAAQ,SAAC4b,EAAQta,GAC/B,IAAMivB,EAAWjvB,EAAIgvB,EAAqB,GACpCE,EAAUtmB,KAAKumB,MAAMnvB,EAAIgvB,GAAqBP,EAEpD5pB,EAASuqB,aACPhB,EACIlH,EAAiB5M,GACjBgU,EACA/B,GAAgBjS,GAChBkU,EACA5P,EAAyBtE,GACzBA,EAAOxqB,OAEb+U,EAASwqB,OAAO,GAAKH,EAAShB,EAAQ,GAAKe,EAAS,IAAK,KAE9C,UAAPt5B,GAAkBqK,EAAI,IACd,IAANA,EACF6E,EAASyqB,aAAQnuB,EAAW,QAE5B0D,EAASyqB,aAAQnuB,EAAW,WAGhC0D,EAAS1E,KACPiuB,GAAcE,GAAUE,EAAalU,EAAOiV,WAAW,SAAK,KAAOjV,EAAOpS,KAC1E,GAAKgnB,EACLhB,EAAQ,GAAKe,EAEjB,IAEIN,IACF9pB,EAAS2qB,UAETT,EAAiBrwB,SAAQ,SAAC4b,EAAQta,GAChC,IAAMivB,EAAWjvB,EAAI8tB,EAAsB,GACrCoB,EAAUtmB,KAAKumB,MAAMnvB,EAAI8tB,GAAsBW,EAErD5pB,EAASuqB,aACPhB,EACIlH,EAAiB5M,GACjBgU,EACA/B,GAAgBjS,GAChBkU,EACA5P,EAAyBtE,GACzBA,EAAOxqB,OAEb+U,EAASwqB,OAAO,GAAKH,EAAS,GAAKD,EAAS,IAAK,KACjDpqB,EAAS1E,KACPiuB,GAAcE,GAAUE,EAAalU,EAAOiV,WAAW,SAAK,KAAOjV,EAAOpS,KAC1E,GAAKgnB,EACL,GAAKD,EAET,IAEJ,CAsSA,SAASvK,IACPD,GAAa,EACf,CAOA,OACEhhB,gBAAA,OAAKE,UAAWxN,EAAQm1B,oBAAoB1nB,SAAA,CAC1CM,eAACurB,KAAa,CACZ9rB,UAAWxN,EAAQo1B,OACnBvnB,QAAQ,YACRY,QA5d2F,WAEvD,OAAAkoB,KAAAtsB,YAAAC,cAAAC,MAA1C,SAAA0L,IAAA,OAAA3L,cAAAM,MAAA,SAAAsL,GAAA,cAAAA,EAAApL,KAAAoL,EAAAnL,MAAA,OACsB,OAApB+rB,GAAc,GAAM5gB,EAAAnL,KAAA,EACdE,KACHuK,KAAK,GAADrK,OAAI7L,GAAY,iBAAiB,CAAE+a,aACvCliB,MAAK,SAACmT,GAKL,IAJA,IAAIiuB,EAAU,GACVC,EAAMluB,EAAI7K,KAAKwc,MAAM,MACrBwc,EAAQ,GAEHtxB,EAAQ,EAAGA,EAAQqxB,EAAInwB,OAAQlB,IAAS,CAC/C,IAAIsvB,EAAO+B,EAAIrxB,GAAO8U,MAAM,KAC5Bwc,EAAMzwB,KAAKyuB,EACb,CAQA,IAAK,IAAItvB,EAAQ,EAAGA,EAAQsuB,GAAgBptB,OAAQlB,IAAS,CAC3D,IAAIuxB,EAAeD,EAAM,GAAGxnB,QAAQwkB,GAAgBtuB,IACpDoxB,EAAQvwB,KAAK0wB,EACf,CACAH,EAAQtwB,OACRswB,EAAQI,UAGR,IADA,IAAIC,EAAW,GACNC,EAAI,EAAGA,EAAIJ,EAAMpwB,OAAQwwB,IAAK,CAErC,IADA,IAAI/xB,EAAM,GACD+B,EAAI,EAAGA,EAAI4vB,EAAMI,GAAGxwB,OAAQQ,IAC9B0vB,EAAQ3sB,SAAS/C,IACpB/B,EAAIkB,KAAKywB,EAAMI,GAAGhwB,IAGtB+vB,EAAS5wB,KAAKlB,EAChB,CAGA,IADA,IAAIgyB,EAAS,GACJjwB,EAAI,EAAGA,EAAI+vB,EAASvwB,OAAQQ,IAAK,CAExC,IADA,IAAI/B,EAAM,GACDK,EAAQ,EAAGA,EAAQyxB,EAAS/vB,GAAGR,OAAQlB,IAC9CL,GAAO8xB,EAAS/vB,GAAG1B,GACfA,IAAUyxB,EAAS/vB,GAAGR,OAAS,IACjCvB,GAAO,KAGP+B,IAAM+vB,EAASvwB,OAAS,IAC1BvB,GAAO,MAETgyB,GAAUhyB,CACZ,CAEAkoB,KAAS8J,EAAQ,eACnB,IACCjuB,SAAQ,WACPirB,GAAc,EAChB,IAAG,KAAD,mBAAA5gB,EAAAvK,OAAA,GAAAsK,EAAA,MACLrK,MAAA,KAAAjB,UAAA,EAiaK1F,QAAS4xB,EACTkD,UAAWhsB,eAACisB,KAAU,IACtBC,gBAAgB,QAChBnmB,SAAuB,SAAbuG,EAAoB5M,SAC/B,mCAGDM,eAACurB,KAAa,CACZ9rB,UAAWxN,EAAQo1B,OACnBvnB,QAAQ,YACRY,QA/TL,WAEoC,OAAAmoB,KAAAvsB,YAAAC,cAAAC,MAArC,SAAAC,IAAA,IAAA0vB,EAAAC,EAAA5C,EAAAD,EAAA73B,EAAAoX,EAAAujB,EAAAC,EAAArL,EAAAsL,EAAAnL,EAAAoL,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3yB,EAAA8G,EAAA8rB,EAAAC,EAAAC,EAAAC,EAAAnD,EAAAoD,GAAAC,GAAA,OAAA9wB,cAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAwFoH,OAvFlHisB,GAAc,GACdle,EACEgQ,GAAa,CACXjC,cAAc,EACdC,cAAc,EACdC,gBAAgB,EAChBC,aAAa,EACbC,UAAU,EACVC,aAAa,EACbC,aAAa,KAGjBrO,EAASgK,GAAY,CAAER,YAAa,CAAC,EAAG,GAAIC,KAAM,KAAM1X,EAAAC,KAAA,EAGhDqvB,EAAM,IAAIkB,KAAM,CAAEC,KAAM,KAAMlE,OAAQ,OACtCG,EAAY4C,EAAIoB,SAASC,SAASC,WAClCnE,EAAa6C,EAAIoB,SAASC,SAASE,YACnCj8B,EAAOy3B,EAAW,IAAI/qB,OAGtB0K,EAAO,IAAI8kB,OACZld,IAAMC,GACO,GAClByb,EAAIyB,SAAS/kB,EAAM,MAAO,GAAI,GADZ,GAC2B,IAG7CsjB,EAAI3C,YAAY,IAAI2B,aAAQnuB,EAAW,QACvCmvB,EAAInwB,KAAK,mBAADmB,OAAoB+O,EAAoBE,WAAamd,EAAY,EAAG,GAAI,CAAExnB,MAAO,WACzFoqB,EAAI3C,YAAY,IAAI2B,aAAQnuB,EAAW,UACvCmvB,EAAInwB,KAAKvK,EAAM83B,EAAY,EAAG,GAAI,CAAExnB,MAAO,WAG1B,UAAbsK,EACF+f,EAAQ7D,GAAmB92B,GACL,UAAb4a,IACT+f,EFtSC,CACL,gPACA,oIACA,qEACA,+IACA,iJACA,2TACA,6OEmSED,EAAInwB,KAAKowB,EAAM,GAAI,GAAI,GAAI,CAAErqB,MAAO,UAAWjS,SAAUy5B,EAAY,KACrE4C,EAAInwB,KAAKowB,EAAM,GAAI,GAAI,IAAK,CAAErqB,MAAO,UAAWjS,SAAUy5B,EAAY,KACtE4C,EAAInwB,KAAKowB,EAAM,GAAI,GAAI,IAAK,CAC1BrqB,MAAO,UACPjS,SAAUy5B,EAAY,KAExB4C,EAAInwB,KAAKowB,EAAM,GAAI,GAAI,IAAK,CAAErqB,MAAO,UAAWjS,SAAUy5B,EAAY,KACtE4C,EAAInwB,KAAKowB,EAAM,GAAI,GAAI,IAAK,CAAErqB,MAAO,UAAWjS,SAAUy5B,EAAY,KACtE4C,EAAInwB,KAAKowB,EAAM,GAAI,GAAI,IAAK,CAAErqB,MAAO,UAAWjS,SAAUy5B,EAAY,KACtE4C,EAAInwB,KAAKowB,EAAM,GAAI,GAAI,IAAK,CAAErqB,MAAO,UAAWjS,SAAUy5B,EAAY,KAErD,UAAbld,KACIggB,EAAS,IAAIsB,OACZld,IAAMod,GACb1B,EAAIyB,SAASvB,EAAQ,MAAO,IAAK,IAAK,GAAI,IAGtB,QAAlB9f,GACF4f,EAAInwB,KAAK,yEAADmB,OACmEoP,EAAa,4CAAApP,OAA2C8rB,EAASztB,KACxI,MACD,KACD,GACA,IACA,CAAEuG,MAAO,UAAWjS,SAAUy5B,EAAY,KAI9CF,EAAW,CAAE3oB,SAAUyrB,EAAK7C,aAAYC,YAAW93B,SAGnD06B,EAAId,UACJhC,EAAW,CAAE3oB,SAAUyrB,EAAK7C,aAAYC,YAAW93B,SAEnD06B,EAAI3C,YAAY,IAAI2B,aAAQnuB,EAAW,QACvCmvB,EAAInwB,KAAK,sBAADmB,OAAuB+O,EAAoBE,WAAamd,EAAY,EAAG,GAAI,CAAExnB,MAAO,WAC5FoqB,EAAI3C,YAAY,IAAI2B,aAAQnuB,EAAW,UACvCmvB,EAAInwB,KAAK,UAADmB,OAAWuP,EAAa,YAAY6c,EAAY,EAAG,GAAI,CAAExnB,MAAO,WACxEoqB,EAAInwB,KAAK,YAADmB,OAAaoP,GAAiBgd,EAAY,EAAG,GAAI,CAAExnB,MAAO,WAClEoqB,EAAInwB,KAAK,gBAADmB,OAAiB2P,EAAiB,QAAA3P,OAAO4P,GAAmBwc,EAAY,EAAG,GAAI,CAAExnB,MAAO,WAChGoqB,EAAI1C,KAAK,GAAI,GAAIF,EAAY,GAAI,IAEjC4C,EAAIhB,aAAQnuB,EAAW,QACvBmvB,EAAInwB,KAAK,WAAY,GAAI,IACzBmwB,EAAIhB,aAAQnuB,EAAW,UACjBgkB,EAAgBxK,GAAWzH,MAAK,SAACnU,GAAC,OAAKA,EAAEiE,QAAU2V,CAAO,IAAExN,MAClEmlB,EAAInwB,KAAK,aAADmB,OAAc6jB,GAAiB,GAAI,KAC3CmL,EAAInwB,KAAK,YAADmB,OAAauX,GAAOvX,OAAe,QAAZuX,GAAkC,UAAbrI,EAAuB,oBAAsB,IAAM,GAAI,KAAKxP,EAAAE,KAAA,GAE1GyjB,uBAAY9f,SAASC,eAAe,uBAAwB,CAChE8f,MAAO,EACPz0B,gBAAiB,QACjBgB,MAAO,KACPonB,MAAO,MACNjqB,MAAK,SAADiT,GAAA,OAAA8uB,KAAA7vB,YAAAC,cAAAC,MAAC,SAAAc,EAAOqjB,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAgN,EAAA,OAAAxxB,cAAAM,MAAA,SAAAW,GAAA,cAAAA,EAAAT,KAAAS,EAAAR,MAAA,OAMC,OALX4jB,EAASjgB,SAAS6gB,cAAc,UAChCX,EAAMD,EAAOa,WAAW,MAExBX,EAASngB,SAAS6gB,cAAc,OAChCT,EAAgBlB,GAAiBiB,GACvCA,EAAOpQ,IAAMiQ,EAAInjB,EAAAR,KAAA,EACX+jB,EAAc,KAAD,EAEnBH,EAAO3zB,MAAQ,KACf2zB,EAAOzzB,OAAS,KAChB0zB,EAAIiB,UAAUhB,EAAQ,EAAG,EAAGF,EAAO3zB,MAAO2zB,EAAOzzB,QAE3C4gC,EAAMnN,EAAOoB,UAAU,aAC7BoK,EAAIyB,SAASE,EAAK,MAAO,EAAG,IAAKvE,EAAW,KAAK,yBAAAhsB,EAAAI,OAAA,GAAAN,EAAA,MAClDO,MAAA,KAAAjB,UAAE,SAAD,GAEI2vB,EAAY,IAAIqB,MAClBxM,EAAc,MAAKtkB,EAAAilB,GAEftN,EAAO3X,EAAAE,KACR,sBADQF,EAAAilB,GACW,GAInB,gBAJmBjlB,EAAAilB,GAIN,GAGb,2BAHajlB,EAAAilB,GAGW,oBALwC,OADnEX,EAA2B,UAAb9U,EAAuB,OAAS,OAC9CigB,EAAU7b,IAAG,oCAAAtT,OAAuCkP,EAAQ,QAAOxP,EAAAa,OAAA,oBAGnB,OAAhD4uB,EAAU7b,IAAM,gCAAgC5T,EAAAa,OAAA,oBAGA,OAAhD4uB,EAAU7b,IAAM,gCAAgC5T,EAAAa,OAAA,oBAGH,OAA7C4uB,EAAU7b,IAAM,6BAA6B5T,EAAAa,OAAA,oBAGjC,sBAAZ8W,EACF2X,EAAIyB,SAAStB,EAAW,MAAO/C,EAAY,EAAIpI,EAAc,EAAG,IAAKA,EAAa,IAElFgL,EAAIyB,SAAStB,EAAW,MAAO,GAAI,IAAKnL,EAAa,IAIjDoL,EAAuB,UAAblgB,EAEVmgB,EAtPDlF,GAAWlsB,QAAO,SAACqU,GAAI,OAAKA,EAAKnB,UAAU1P,SAASyN,EAAS,IAuP5DogB,EAA2B,UAAbpgB,EAAuByb,GAAUG,GAC/CyE,EA/OD,UADCrgB,EAEGyG,GAAsBmH,GAEtB3G,GAAsB2G,GA6OzB0S,EAAoBloB,KAAKQ,KAAKynB,EAAgBrxB,OAAS,GACvDuxB,EAAkBnoB,KAAKQ,KAAKgI,EAAmB5R,OAAS,GAExDwxB,EAAiD,mBAA9BrS,EACnBsS,EAAkBroB,KAAKQ,KAAK7K,OAAOC,KAAKogB,GAA0Bpf,QAAUwxB,EAAmB,EAAI,IAEhG1yB,EAAQ,EAAE,KAAD,QAAEA,EAAQqyB,EAAMnxB,QAAM,CAAAwB,EAAAE,KAAA,UACtCovB,EAAId,UACJhC,EAAW,CAAE3oB,SAAUyrB,EAAK7C,aAAYC,YAAW93B,SAE/CwP,EAAK,GAAA9D,OAAMqvB,EAAMryB,GAAO8G,OAAKpE,EAAAkxB,GACzBvB,EAAMryB,GAAO3I,GAAEqL,EAAAE,KAChB,SADgBF,EAAAkxB,GACV,GAGN,UAHMlxB,EAAAkxB,GAGC,GAGP,OAHOlxB,EAAAkxB,GAGH,GAGJ,QAHIlxB,EAAAkxB,GAGC,oBARmC,OAA3C9sB,GAAK,KAAA9D,OAAS8c,GAA6Bpd,EAAAa,OAAA,oBAGJ,OAAvCuD,GAAK,KAAA9D,OAAS+c,GAAyBrd,EAAAa,OAAA,oBAGF,OAArCuD,GAAK,KAAA9D,OAASkd,GAAuBxd,EAAAa,OAAA,oBAKH,OAF5BqvB,EAAQvE,GAAiBzZ,MAAK,SAACpM,GAAM,OAAKA,EAAO9D,QAAU0b,CAAwB,IAAEvT,MACrFgmB,EAASxE,GAAiBzZ,MAAK,SAACpM,GAAM,OAAKA,EAAO9D,QAAU2b,CAAyB,IAAExT,MAC7F/F,GAAK,KAAA9D,OAAS4vB,EAAK,OAAA5vB,OAAM6vB,GAASnwB,EAAAa,OAAA,2BAAAb,EAAAa,OAAA,oBAkBY,OAZlDyuB,EAAI3C,YAAY,IAAI2B,aAAQnuB,EAAW,QACvCmvB,EAAInwB,KAAKiF,EAAO,GAAI,IACpBkrB,EAAIhB,aAAQnuB,EAAW,UACvBmvB,EAAI3C,YAAY,IAChB2C,EAAInwB,KAAKwwB,EAAMryB,GAAOqtB,YAAYhsB,KAAK,OAAO4vB,WAAW,SAAK,MAAO,GAAI,IACzEe,EAAI3C,YAAY,IAChB2C,EAAInwB,KAAK,UAADmB,OAAWuP,EAAa,YAAY,GAAI,IAChDyf,EAAInwB,KAAK,YAADmB,OAAaoP,GAAiB,GAAI,IAC1C4f,EAAInwB,KAAK,gBAADmB,OAAiB2P,EAAiB,QAAA3P,OAAO4P,GAAmB,GAAI,IACxEof,EAAInwB,KAAK,YAADmB,OAAauX,GAAOvX,OAAe,QAAZuX,GAAkC,UAAbrI,EAAuB,oBAAsB,IAAM,GAAI,IAErG4gB,EAAWvsB,SAAS6gB,cAAc,OAClC2L,EAAkBtN,GAAiBqN,GAASpwB,EAAAE,KAAA,IAC7BixB,KAAWC,MAAMvtB,SAASC,eAAe6rB,EAAMryB,GAAO3I,IAAK,CAAE08B,QAAS,UAAW,KAAD,IAAzF,OAAZjB,EAASxc,IAAG5T,EAAAiB,KAAAjB,EAAAE,KAAA,IACNmwB,EAAgB,KAAD,IACjBD,EAASjgC,OAAS,IACpBm/B,EAAIyB,SAASX,EAAU,MAAO,GAAI,KAElCd,EAAIyB,SAASX,EAAU,MAAO,GAAI,IAAK1D,EAAY,GAAI,KAGzD4C,EAAIlB,aAAa,IAAK,IAAK,KACrBlB,EAAQ1Z,EAAa,IAAM,IACjC8b,EAAIgC,KAAK,EAAGpE,EAAOR,EAAW,IAAK,KAEnC4C,EAAI3C,YAAY,GACZ,CAAC,OAAQ,OAAO5qB,SAAS4tB,EAAMryB,GAAO3I,IACxCk4B,EAAW,CACThpB,SAAUyrB,EACVtC,WAAY4C,EACZ3C,OAAQ,EACRC,QACAO,OAAQ,IACRH,QAAQ,IAEmB,SAApBqC,EAAMryB,GAAO3I,IACtBk4B,EAAW,CACThpB,SAAUyrB,EACVtC,WAAY6C,EACZ5C,OAAQ6C,EACR5C,QACAO,OAAQ,IACRE,SAAU+B,IAGRA,GACFlD,EAAW,CAAE3oB,SAAUyrB,EAAK7C,aAAYC,YAAW93B,UAExB,OAApB+6B,EAAMryB,GAAO3I,GACtBk4B,EAAW,CACThpB,SAAUyrB,EACVtC,WAAY5c,EACZ6c,OAAQ8C,EACR7C,QACAO,OAAQ,GACRL,YAAY,IAEe,UAApBuC,EAAMryB,GAAO3I,IAChB27B,GAAkBlgB,EAAmBvR,KAAI,SAAC0W,GAC9C,MAAO,CAAErO,KAAMqO,EAAUzmB,MAAOo3B,EAAiB3Q,GACnD,IAEAsX,EAAW,CACTl4B,GAAI,QACJkP,SAAUyrB,EACVtC,WAAW,CAAE,CAAE9lB,KAAM,UAAWpY,MAAO,UAASwR,OAAA4H,YAAK2nB,IACrD5C,OAAQ6C,EACR5C,QACAO,OAAQ,IACRE,UAAU,IAGZd,EAAW,CACTl4B,GAAI,QACJkP,SAAUyrB,EACVtC,WAAW,CAAE,CAAE9lB,KAAM,cAAepY,MAAO,UAASwR,OAAA4H,YAAKooB,KACzDrD,OAAQrlB,KAAKQ,KAAKgI,EAAmB5R,OAAS,GAC9C0uB,MAAO,GACPO,OAAQ,MAGVjB,EAAW,CAAE3oB,SAAUyrB,EAAK7C,aAAYC,YAAW93B,UACtB,OAApB+6B,EAAMryB,GAAO3I,GACtBk4B,EAAW,CACThpB,SAAUyrB,EACVtC,WAAYvB,GACZwB,OAAQ,EACRC,QACAO,OAAQ,KAEmB,QAApBkC,EAAMryB,GAAO3I,KAChB47B,GAAa,CAAC,oBAAqB,oBAAqB,kBAAkBxuB,SAC9E4b,GAGFkP,EAAW,CACThpB,SAAUyrB,EACVtC,WAAYzvB,OAAOC,KAAKogB,GACxBqP,OAAQgD,EACR/C,QACAO,OAAQuC,EAAmB,IAAM,IACjCxC,YAAY,EACZK,eAAgBmC,EAAmB,EAAI,EACvCrC,SAAU4C,KAGRA,IACF/D,EAAW,CAAE3oB,SAAUyrB,EAAK7C,aAAYC,YAAW93B,UAEtD,SArIuC0I,IAAO0C,EAAAE,KAAA,kBAwIjDovB,EAAIiC,KAAK,uBAAuBvxB,EAAAE,KAAA,mBAAAF,EAAAC,KAAA,IAAAD,EAAAwxB,GAAAxxB,EAAA,SAEhCyjB,GAAa,GAAM,SAEE,OAFFzjB,EAAAC,KAAA,IAEnBksB,GAAc,GAAOnsB,EAAAolB,OAAA,+BAAAplB,EAAAc,OAAA,GAAAnB,EAAA,6BAExBoB,MAAA,KAAAjB,UAAA,EA4BK1F,QAAS8xB,EACTgD,UAAWhsB,eAACuuB,KAAY,IACxBrC,gBAAgB,QAChBnmB,SAAuB,SAAbuG,EAAoB5M,SAC/B,iBAGDM,eAAC7P,IAAM,CAACsP,UAAWxN,EAAQo1B,OAAQvnB,QAAQ,YAAYY,QA7B3D,WACEqK,EAASrX,GAAQ,aACjBkX,EAAS,YACX,EA0B6FohB,UAAWhsB,eAACwK,KAAO,IAAI9K,SAAC,sBAGjHM,eAACoiB,KAAQ,CAACttB,KAAMwrB,EAAW+B,iBAAkB,IAAM3f,QAAS8d,EAAiB9gB,SAC3EM,eAACsiB,KAAK,CAAC5f,QAAS8d,EAAkB+B,SAAS,QAAQ3iB,GAAI,CAAE3S,MAAO,QAASyS,SAAC,wEAMlF,E,kBC3lBM5T,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCqf,aAAc,CACZ9hB,QAAS,OACTC,cAAe,SACf+hB,OAAQ,OAER,4BAA6B,CAC3BA,OAAQ,QAGZC,KAAM,CACJ,iBAAkB,CAChBzgB,aAAc,SAGlBu/B,YAAa,CACX/gC,QAAS,OACTub,UAAW,MACXrb,eAAgB,gBAChB+T,QAAS,mBAEX+sB,aAAc,CACZhhC,QAAS,OACTub,UAAW,OAEb9H,MAAO,CACLzT,QAAS,OACTC,cAAe,UAEjBghC,eAAgB,CACdjhC,QAAS,OACTiB,WAAY,SACZsa,UAAW,OAEd,IClCKld,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCy+B,kBAAmB,CACjBlhC,QAAS,OACTC,cAAe,SACf8hB,UAAW,iCAEboN,eAAgB,CACdnvB,QAAS,OACTC,cAAe,SACf+hB,OAAQ,OAEVoN,cAAe,CACbpvB,QAAS,OACTC,cAAe,UAEjBuoB,YAAa,CACX5mB,SAAU,kBACVmB,WAAY,iBACZkR,QAAS,+BAEXwU,WAAY,CACV,sBAAuB,CACrB7mB,SAAU,SAGdguB,aAAc,CACZzU,WAAY,OACZnb,QAAS,OACTC,cAAe,MACf4vB,IAAK,OACLnwB,OAAQ,QAER,6BAA8B,CAC5BO,cAAe,SACfP,OAAQ,SAGZowB,MAAO,CACLpwB,OAAQ,OACRF,MAAO,MAEP,6BAA8B,CAC5BA,MAAO,QAGT,4BAA6B,CAC3BA,MAAO,OACPE,OAAQ,UAGZqwB,WAAY,CACVC,WAAY,UAEdtH,cAAe,CACb1oB,QAAS,OACTC,cAAe,SACfgwB,UAAW,OACX9vB,SAAU,OACVT,OAAQ,QACRmwB,IAAK,MACL5b,QAAS,cACTrU,WAAY,QAEdswB,kBAAmB,CACjBlwB,QAAS,OACTiB,WAAY,SACZsa,UAAW,MACX/a,aAAc,OAEhB4vB,kBAAmB,CACjB5xB,gBAAiB,OACjByV,QAAS,MACT7R,OAAQ,iCAEV+tB,YAAa,CACXzwB,OAAQ,OACRF,MAAO,OACPgC,aAAc,MACdF,SAAU,QAEZ+uB,eAAgB,CACd7wB,MAAO,MACPgC,aAAc,MACdhD,gBAAiB,UACjBmlB,UAAW,OAEX,6BAA8B,CAC5BnkB,MAAO,OACPE,OAAQ,UAGZ4wB,QAAS,CACP9wB,MAAO,OACPE,OAAQ,OACRM,QAAS,OACTC,cAAe,UAEjBswB,aAAc,CACZvwB,QAAS,OACTC,cAAe,MACfsb,UAAW,MACXta,WAAY,WACZgT,QAAS,gBACTvT,aAAc,kBAEhBumB,eAAgB,CACdjnB,QAAS,OACTwwB,oBAAqB,kBACrBrwB,SAAU,OACV0vB,IAAK,OACL5b,QAAS,OACT0P,UAAW,QAEb8M,mBAAoB,CAClBzwB,QAAS,OACTC,cAAe,MACfsb,UAAW,MACXmV,WAAY,UAEdC,eAAgB,CACdjxB,OAAQ,OACRF,MAAO,OACP4C,OAAQ,iCACRgQ,KAAM,QAERwe,iBAAkB,CAChB5wB,QAAS,OACTC,cAAe,SAEf,yBAA0B,CACxB4wB,aAAc,aAGlBC,mBAAoB,CAClB9wB,QAAS,OACTE,eAAgB,SAChBe,WAAY,SACZvB,OAAQ,QAEX,I,mGC5IM,SAASyhC,KACd,MAAO,iBAAkBjlC,QAAUM,UAAU4kC,eAAiB,GAAK5kC,UAAU6kC,iBAAmB,CAClG,CCmBA,IAAMC,GAAkB,CACtB,CAAE9nB,MAAO,oBAAqBnI,MAAO,SAAU0e,WAAY,yBAC3D,CAAEvW,MAAO,0BAA2BnI,MAAO,aAAc0e,WAAY,cAG1DwR,GAAoB,WAC/B,IAAM/8B,EAAUnG,KAChBoG,EAA4CC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAnD+8B,EAAc78B,EAAA,GAAEqsB,EAAiBrsB,EAAA,GACxCI,EAAkCL,oBAAS,WAAO,IAAEM,EAAAJ,YAAAG,EAAA,GAA7C08B,EAASz8B,EAAA,GAAE08B,EAAY18B,EAAA,GAExBsY,EAAWd,KACXqC,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAC7DJ,EAAa/B,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU3C,UAAU,IACjEwN,EAA2BvP,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM7D,wBAAwB,IACzFO,EAAwB9P,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMtD,qBAAqB,IACnFC,EAA6B/P,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMrD,0BAA0B,IAC7FU,EAAYzQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM3C,SAAS,IA+BjE,SAASld,IAAW,IAAD0xB,EACjB,GAA8B,WAA1BnV,EACF,OAAOP,EAAyBQ,GAGlC,IAAMmV,EAAa,CAAC,OAAQ,aAAc,kBACtCC,EAAoCC,gBAAoE,QAArDH,EAAC1V,EAAyBQ,UAA2B,IAAAkV,IAAI,IAWhH,OAVAE,EAAoCA,EAAkC3zB,KAAI,SAACqL,GAOzE,OANa3M,OAAOC,KAAK0M,GAAM3L,QAAO,SAACR,GAAC,OAAMw0B,EAAWxwB,SAAShE,EAAE,IAE/DL,SAAQ,SAACY,GACZ4L,EAAK5L,GAAOyjB,QAAS7X,EAAK5L,GAAO4L,EAAK+X,WAAc,KAAKC,QAAQ,GACnE,IAEOhY,CACT,GAGF,CAWA,SAASwoB,EAAiBxuB,GACxB,IAAMtO,EAAOgnB,EAAyBQ,GAA4BlL,MAAK,SAAChI,GAAI,OAAKA,EAAKhD,QAAc,OAALhD,QAAK,IAALA,OAAK,EAALA,EAAOyuB,YAAa,IAEnH,GAAI/8B,EAAM,CACR,IAAM3E,EAAcwhC,gBAAgB78B,GAC9BoM,EAAQ,CACZkF,KAAMjW,EAAYiW,KAClBqB,MAAOtX,EAAYgxB,WACnB2Q,YAAa,WAGR3hC,EAAYiW,YACZjW,EAAYgxB,kBACZhxB,EAAY4hC,eAEnBt1B,OAAOC,KAAKvM,GAAayM,SAAQ,SAACY,GAAS,IAADw0B,EAClCvqB,EAAQtX,EAAYqN,GAEZ,IAAViK,IAIJvG,EAAM4wB,YAAYz0B,KAAK,CACrBgM,MAAO7L,EACPiK,QACA2O,WAAY6K,QAASxZ,EAAQvG,EAAMuG,MAAS,KAAK2Z,QAAQ,IACzDpzB,MAAsD,QAAjDgkC,EAAE5uB,EAAM6uB,cAAc7gB,MAAK,SAACnU,GAAC,OAAKA,EAAEmJ,OAAS5I,CAAG,WAAC,IAAAw0B,OAAA,EAA/CA,EAAiDhkC,QAG1DkT,EAAM4wB,YAAYx0B,MAAK,SAACvB,EAAGC,GAAC,OAAKD,EAAEsN,MAAMuP,cAAc5c,EAAEqN,MAAM,IACjE,IAEAwX,EAAkB3f,GAClBiM,EAASwR,IAAa,GACxB,CACF,CA6EA,OA1KAxd,qBAAU,WACRgM,EAASwR,IAAa,IACtBkC,EAAkB,KACpB,GAAG,CAAC/E,IA4FJ3a,qBAAU,WACL6b,IACD6D,EAAkB,MAClB1T,EAASwR,IAAa,IAE1B,IAEAxd,qBAAU,WACJmN,GACFijB,GAAa,WAAO,IAADW,EAAAC,EACjB,OACE/vB,eAACgwB,KAAmB,CAAC/iC,MAAM,OAAMyS,SAC/BH,gBAACooB,KAAQ,CACPj1B,KAAMgL,IACNsY,OAAQ4Y,KAAkB,UAAY,UACtCluB,QAAS8uB,EACTS,WAAY,GAAGvwB,SAAA,CAEfM,eAACkwB,KAAa,CAACC,gBAAgB,QAC/BnwB,eAACowB,KAAK,CAACC,QAAQ,OAAOC,SAAS,mBAAmBC,KAAM,CAAElhC,SAAU,MACpE2Q,eAACwwB,KAAK,CAAC1c,OAzFgB,WAA1BmG,OAAqChd,EAAY,CAAC,EAAG,KAyFtBwzB,mBAAmB,EAAMC,eAAe,EAAMhxB,SACxEM,eAAC2wB,KAAK,CAACC,OAAQ,GAAIxkC,SAAS,aAAaqT,UAAWxN,EAAQurB,WAAW9d,SACpEqvB,GAAgB/f,MAAK,SAACpM,GAAM,OAAKA,EAAO9D,QAAUmb,CAAqB,IAAEhT,WAGxB,QAArD6oB,EAACpW,EAAyBQ,UAA2B,IAAA4V,IAAI,IAAIx0B,OAAS,GACrE0E,eAAC6wB,KAAK,CAACR,QAAQ,OAAOljC,OAAQ,GAAIu2B,OAAQ,sBAG5C1jB,eAAC8wB,KAAM,CACL7K,QAAS,SAAC5mB,GACR,IAAQwK,EAAYxK,EAAZwK,QACR,OACE7J,eAAA,OAAKP,UAAWxN,EAAQkkB,cAAczW,SACnCmK,EAAQlO,KAAI,SAACo1B,EAAO32B,GACnB,IAAQi2B,EAAmBU,EAAnBV,QAASzkC,EAAUmlC,EAAVnlC,MACjB,OACE2T,gBAAA,OAA0CE,UAAWxN,EAAQ0rB,kBAAkBje,SAAA,CAC7EM,eAAC4F,IAAG,CAACnG,UAAWxN,EAAQ2rB,YAAapX,MAAO,CAAEva,gBAAiBL,KAC/DoU,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAE2wB,MAAqB,uBAAAjzB,OAFrBhD,GAKrC,KAGN,IAGF4F,eAACgxB,KAAY,CACXhb,OAAQ,CAAE2P,KAAM/R,IAChBqS,QAAS,SAAA96B,GAAiC,IAA9B0e,EAAO1e,EAAP0e,QAASzY,EAAMjG,EAANiG,OAAQ6V,EAAK9b,EAAL8b,MAC3B,OAAgB,OAAZ4C,GAAoBzY,EACf4O,eAAA,OAAKP,UAAWxN,EAAQ4rB,kBAAkBne,SAAEuH,IAE9C,IACT,IAGmB,QAFnB8oB,EArIL,UADCzjB,EAEGyG,GAAsBmH,GAEtB3G,GAAsB2G,UAoIF,IAAA6V,OAAA,EAApBA,EAAsBp0B,KAAI,SAACiH,EAAQxI,GAAK,OACvC4F,eAACixB,KAAG,CAEFZ,QAASztB,EAAOoB,KAChBA,KAAMpB,EAAOoB,KACbktB,QAAS,EACTvL,KAAM/iB,EAAOhX,OAAM,oBAAAwR,OAJMhD,GAKzB,QAKZ,GAGJ,GAAG,CAACsf,EAA0BO,EAAuBC,IAGnD3a,gBAAC+X,KAAW,CAAC7X,UAAWxN,EAAQ08B,kBAAkBjvB,SAAA,CAChDH,gBAAA,OAAKE,UAAWxN,EAAQ2qB,eAAeld,SAAA,CACrCH,gBAAA,OAAKE,UAAWxN,EAAQ4qB,cAAcnd,SAAA,CACpCM,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAC,sBAC9BM,eAACqC,IAAM,CACLvD,MAAOob,EACPpY,SA5HV,SAA+Bd,GAC7Byd,EAAkB,MAClB1T,EAAS4Q,GAA8B3a,EAAMsB,OAAOxD,OACtD,EA0HUuQ,WAAY,CAAE5P,UAAWxN,EAAQgkB,aACjCuB,UAAW,CAAEvlB,QAAS,CAAEwlB,KAAMxlB,EAAQikB,aACtCnQ,SAAuB,SAAbuG,EAAoB5M,SA/KxC,WACE,OAAQ4M,GACN,IAAK,QACH,OAAO6b,GACT,IAAK,QACH,OAAOC,GACT,QACE,MAAO,GAEb,CAwKW+I,GAAiBx1B,KAAI,SAACiH,EAAQxI,GAC7B,OACE4F,eAAC2C,IAAQ,CAA2C7D,MAAO8D,EAAOlD,SAC/DkD,GADYxI,EAAQ,4BAI3B,SAGJmF,gBAAA,OAAKE,UAAWxN,EAAQ4qB,cAAcnd,SAAA,CACpCM,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAC,cAC9BM,eAACqC,IAAM,CACLvD,MAAOmb,EACPnY,SAlJV,SAA8Bd,GAC5B+J,EAAS2Q,GAAyB1a,EAAMsB,OAAOxD,OACjD,EAiJUuQ,WAAY,CAAE5P,UAAWxN,EAAQgkB,aACjCuB,UAAW,CAAEvlB,QAAS,CAAEwlB,KAAMxlB,EAAQikB,aACtCnQ,SAAuB,SAAbuG,EAAoB5M,SAE7BqvB,GAAgBpzB,KAAI,SAACiH,EAAQxI,GAC5B,OACE4F,eAAC2C,IAAQ,CAAuC7D,MAAO8D,EAAO9D,MAAMY,SACjEkD,EAAOqE,OADK7M,EAAQ,wBAI3B,YAINmF,gBAAA,OAAKE,UAAWxN,EAAQorB,aAAa3d,SAAA,CACnCM,eAAA,OAAKP,UAAWxN,EAAQsrB,MAAO9rB,GAAG,OAAMiO,SACrCwvB,IAEHlvB,eAAA,OAAKP,UAAWxN,EAAQ6rB,eAAepe,SACpCuvB,EACC1vB,gBAAA,OAAKE,UAAWxN,EAAQ8rB,QAAQre,SAAA,CAC9BH,gBAAA,OAAKE,UAAWxN,EAAQ+rB,aAAate,SAAA,CACnCM,eAACL,IAAU,CAACG,QAAQ,KAAKtP,WAAW,MAAKkP,SACtCuvB,EAAejrB,OAElBhE,eAACL,IAAU,CAACG,QAAQ,YAAWJ,SAAE,OAASuvB,EAAe5pB,WAE3DrF,eAAA,OAAKP,UAAWxN,EAAQyiB,eAAehV,SACpCuvB,EAAeS,YAAY/zB,KAAI,SAACqL,EAAM5M,GACrC,OACEmF,gBAAA,OAAsCE,UAAWxN,EAAQisB,mBAAmBxe,SAAA,CAC1EM,eAAC4F,IAAG,CACFnG,UAAWxN,EAAQmsB,eACnB5X,MAAO,CACLva,gBAAiB+a,EAAKpb,SAG1B2T,gBAAA,OAAKE,UAAWxN,EAAQosB,iBAAiB3e,SAAA,CACvCM,eAACL,IAAU,CAACG,QAAQ,QAAQtP,WAAW,MAAKkP,SACzCsH,EAAKC,QAERjH,eAACL,IAAU,CAACG,QAAQ,UAAUsxB,QAAM,EAAA1xB,SAAA,OAAAtC,OAAS4J,EAAK3B,SAClDrF,eAACL,IAAU,CAACtQ,SAAS,OAAMqQ,SAAA,GAAAtC,OAAK4J,EAAKgN,WAAU,YAC3C,mBAAA5W,OAbqBhD,GAgBjC,SAIJ4F,eAAA,OAAKP,UAAWxN,EAAQssB,mBAAmB7e,SAAC,6CAMxD,EClSM5T,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCysB,iBAAkB,CAChBlvB,QAAS,OACTC,cAAe,SACf8hB,UAAW,iCAEboN,eAAgB,CACdnvB,QAAS,OACTC,cAAe,SACf+hB,OAAQ,OAEVoN,cAAe,CACbpvB,QAAS,OACTC,cAAe,SACf+hB,OAAQ,OAEVqN,aAAc,CACZrvB,QAAS,OACTC,cAAe,MACfgB,WAAY,SACZsa,UAAW,OAEb+M,iBAAkB,CAChBC,OAAQ,WAEV+G,oBAAqB,CACnB1tB,SAAU,kBACVmB,WAAY,iBACZkR,QAAS,+BAEXsb,mBAAoB,CAClB,sBAAuB,CACrB3tB,SAAU,SAGd4tB,qBAAsB,CACpB5tB,SAAU,kBACVmB,WAAY,iBACZkR,QAAS,8BACTtU,YAAa,oBAEf8vB,sBAAuB,CACrB/vB,OAAQ,OACRkC,SAAU,kBACVqS,QAAS,qBACT1T,WAAY,SACZ5B,SAAU,WACVC,MAAO,QAET8wB,mBAAoB,CAClBrwB,UAAW,oBAEbswB,oBAAqB,CACnB,sBAAuB,CACrB1b,QAAS,mBAEX,wBAAyB,CACvBrS,SAAU,SAGdguB,aAAc,CACZzU,WAAY,OACZnb,QAAS,OACTC,cAAe,MACf4vB,IAAK,OACLnwB,OAAQ,QAER,6BAA8B,CAC5BO,cAAe,SACfP,OAAQ,SAGZowB,MAAO,CACLpwB,OAAQ,OACRF,MAAO,MAEP,6BAA8B,CAC5BA,MAAO,QAGT,4BAA6B,CAC3BA,MAAO,OACPE,OAAQ,UAGZqwB,WAAY,CACVC,WAAY,UAEdtH,cAAe,CACb1oB,QAAS,OACTC,cAAe,SACfgwB,UAAW,OACX9vB,SAAU,OACVT,OAAQ,QACRmwB,IAAK,MACL5b,QAAS,cACTrU,WAAY,QAEdswB,kBAAmB,CACjBlwB,QAAS,OACTiB,WAAY,SACZsa,UAAW,MACX/a,aAAc,OAEhB2vB,YAAa,CACXzwB,OAAQ,OACRF,MAAO,OACPgC,aAAc,MACdF,SAAU,QAEZ8uB,kBAAmB,CACjB5xB,gBAAiB,OACjByV,QAAS,MACT7R,OAAQ,iCAEViuB,eAAgB,CACd7wB,MAAO,MACPgC,aAAc,MACdhD,gBAAiB,UACjBmlB,UAAW,OAEX,6BAA8B,CAC5BnkB,MAAO,OACPE,OAAQ,UAGZ4wB,QAAS,CACP9wB,MAAO,OACPE,OAAQ,OACRM,QAAS,OACTC,cAAe,UAEjBswB,aAAc,CACZvwB,QAAS,OACTC,cAAe,MACfsb,UAAW,MACXta,WAAY,WACZgT,QAAS,gBACTvT,aAAc,kBAEhBumB,eAAgB,CACdjnB,QAAS,OACTwwB,oBAAqB,kBACrBrwB,SAAU,OACV0vB,IAAK,OACL5b,QAAS,OACT0P,UAAW,QAEb8M,mBAAoB,CAClBzwB,QAAS,OACTC,cAAe,MACfsb,UAAW,MACXmV,WAAY,UAEdC,eAAgB,CACdjxB,OAAQ,OACRF,MAAO,OACP4C,OAAQ,iCACRgQ,KAAM,QAERwe,iBAAkB,CAChB5wB,QAAS,OACTC,cAAe,SAEf,yBAA0B,CACxB4wB,aAAc,aAGlBC,mBAAoB,CAClB9wB,QAAS,OACTE,eAAgB,SAChBe,WAAY,SACZvB,OAAQ,QAEX,ICtJK4hC,GAAkB,CACtB,CAAE9nB,MAAO,oBAAqBnI,MAAO,UACrC,CAAEmI,MAAO,6BAA8BnI,MAAO,eAGnCuyB,GAAmB,WAC9B,IAAMp/B,EAAUnG,KAChBoG,EAA4CC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAnD+8B,EAAc78B,EAAA,GAAEqsB,EAAiBrsB,EAAA,GACxCI,EAAkCL,oBAAS,WAAO,IAAEM,EAAAJ,YAAAG,EAAA,GAA7C08B,EAASz8B,EAAA,GAAE08B,EAAY18B,EAAA,GAC9BG,EAAwCT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAA7C8rB,EAAY7rB,EAAA,GAAE8rB,EAAe9rB,EAAA,GAE9BkY,EAAWd,KACXqC,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAC7DJ,EAAa/B,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU3C,UAAU,IACjEsN,EAAqBrP,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM/D,kBAAkB,IAC7EM,EAAuB3P,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMzD,oBAAoB,IACjFC,EAAoC5P,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMxD,iCAAiC,IAC3Ga,EAAYzQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM3C,SAAS,IAOjE,SAASgE,EAAuBvM,GAC9B,IAAM2B,EAAa6K,QAASxM,EAASyM,YAAczM,EAAS0M,WAAc,KAAKC,QAAQ,IAEvF,MAAM,GAAN5hB,OAAUiV,EAASrO,KAAI,cAAA5G,OAAaiV,EAAS0M,WAAU,MAAA3hB,OAAK4W,EAAU,iBACxE,CAgBA,SAAStW,IACP,IAAMhL,EAAO8mB,EAAmBne,QAAO,SAACgX,GAAQ,OAAK0H,EAAkClb,SAASwT,EAASrO,KAAK,IAE9G,GAA6B,WAAzB8V,EACF,OAAOpnB,EAGT,IAAM28B,EAAa,CAAC,OAAQ,aAAc,kBACtCiC,EAAyB/B,gBAAgB78B,GAW7C,OAVA4+B,EAAyBA,EAAuB31B,KAAI,SAACqL,GAOnD,OANa3M,OAAOC,KAAK0M,GAAM3L,QAAO,SAACR,GAAC,OAAMw0B,EAAWxwB,SAAShE,EAAE,IAE/DL,SAAQ,SAACY,GACZ4L,EAAK5L,GAAOyjB,QAAS7X,EAAK5L,GAAO4L,EAAK+X,WAAc,KAAKC,QAAQ,GACnE,IAEOhY,CACT,GAGF,CAUA,SAASwoB,EAAiBxuB,GACxB,IAAMtO,EAAO8mB,EAAmBxK,MAAK,SAAChI,GAAI,OAAKA,EAAKhD,QAAc,OAALhD,QAAK,IAALA,OAAK,EAALA,EAAOyuB,YAAa,IAEjF,GAAI/8B,EAAM,CACR,IAAM3E,EAAcwhC,gBAAgB78B,GAE9BoM,EAAQ,CACZkF,KAAMjW,EAAYiW,KAClBqB,MAAOtX,EAAYgxB,WACnBwS,MAAO,WAGFxjC,EAAYiW,YACZjW,EAAYgxB,kBACZhxB,EAAY4hC,eAEnBt1B,OAAOC,KAAKvM,GAAayM,SAAQ,SAACY,GAChC,IAAMiK,EAAQtX,EAAYqN,GAEZ,IAAViK,IAIJvG,EAAMyyB,MAAMt2B,KAAK,CACfgM,MAAO7L,EACPiK,QACA2O,WAAY6K,QAASxZ,EAAQvG,EAAMuG,MAAS,KAAK2Z,QAAQ,IACzD2G,KAAM3kB,EAAM6uB,cAAc7gB,MAAK,SAACnU,GAAC,OAAKA,EAAEmJ,OAAS5I,CAAG,IAAEuqB,OAExD7mB,EAAMyyB,MAAMr2B,MAAK,SAACvB,EAAGC,GAAC,OAAKA,EAAEyL,MAAQ1L,EAAE0L,KAAK,IAC9C,IAEAoZ,EAAkB3f,GAClBiM,EAASwR,IAAa,GACxB,CACF,CAaA,SAAS0C,EAA6B9zB,GAAiC,IAAD+zB,EAAA/zB,EAA7B6V,aAAK,IAAAke,EAAG,KAAIA,EAAAC,EAAAh0B,EAAEi0B,IACrD,QADwD,IAAAD,GAAQA,EAI9D,OAFApU,EAASuQ,GAAqC,UAC9CmD,EAAkB,MAIpB,IACY3f,EACRkC,EADFsB,OAAUxD,MAGqC,IAA7Cib,EAAkCze,QAAgBwD,EAAMxD,OAAS,IAIhD,IAAjBwD,EAAMxD,QACRmjB,EAAkB,MAEpB1T,EAASuQ,GAAqCxc,IAChD,CA1HAC,qBAAU,WACRgM,EAASwR,IAAa,IACtBkC,EAAkB,KACpB,GAAG,CAACjF,IAyFJza,qBAAU,WACL6b,IACD6D,EAAkB,MAClB1T,EAASwR,IAAa,IAE1B,IAgCA,IAAMjkB,EAhFKkhB,EAgFqCne,QAAO,SAACgX,GAAQ,OAC9DA,EAASrO,KAAKnF,SAAS6f,EAAaxf,gBAAkBmT,EAASrO,KAAKnF,SAAS6f,EAAaW,cAAc,IA0D1G,OAvDAtgB,qBAAU,WACJmN,GACFijB,GAAa,WACX,OACEnvB,eAACgwB,KAAmB,CAAC/iC,MAAM,OAAMyS,SAC/BH,gBAACooB,KAAQ,CAACj1B,KAAMgL,IAAWsY,OAAQ4Y,KAAkB,UAAY,UAAWluB,QAAS8uB,EAAiB9vB,SAAA,CACpGM,eAACkwB,KAAa,CAACC,gBAAgB,QAC/BnwB,eAACowB,KAAK,CAACC,QAAQ,OAAOC,SAAS,mBAAmBC,KAAM,CAAElhC,SAAU,MACpE2Q,eAACwwB,KAAK,CAAC1c,OAjIe,WAAzBgG,OAAoC7c,EAAY,CAAC,EAAG,KAiIrByzB,eAAe,EAAMhxB,SAC/CM,eAAC2wB,KAAK,CAACC,OAAQ,GAAIxkC,SAAS,aAAaqT,UAAWxN,EAAQurB,WAAW9d,SACpEqvB,GAAgB/f,MAAK,SAACpM,GAAM,OAAKA,EAAO9D,QAAUgb,CAAoB,IAAE7S,UAG5EuS,EAAmBle,OAAS,GAAK0E,eAAC6wB,KAAK,CAACR,QAAQ,OAAOljC,OAAQ,GAAIu2B,OAAQ,sBAE5E1jB,eAAC8wB,KAAM,CACL7K,QAAS,SAAC5mB,GACR,IAAQwK,EAAYxK,EAAZwK,QACR,OACE7J,eAAA,OAAKP,UAAWxN,EAAQkkB,cAAczW,SACnCmK,EAAQlO,KAAI,SAACo1B,EAAO32B,GACnB,IAAQi2B,EAAmBU,EAAnBV,QAASzkC,EAAUmlC,EAAVnlC,MACjB,OACE2T,gBAAA,OAAyCE,UAAWxN,EAAQ0rB,kBAAkBje,SAAA,CAC5EM,eAAC4F,IAAG,CAACnG,UAAWxN,EAAQ2rB,YAAapX,MAAO,CAAEva,gBAAiBL,KAC/DoU,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAE2wB,MAAqB,sBAAAjzB,OAFtBhD,GAKpC,KAGN,IAGF4F,eAACgxB,KAAY,CACXhb,OAAQ,CAAE2P,KAAM/R,IAChBqS,QAAS,SAAAlC,GAAiC,IAA9Bla,EAAOka,EAAPla,QAASzY,EAAM2yB,EAAN3yB,OAAQ6V,EAAK8c,EAAL9c,MAC3B,OAAgB,OAAZ4C,GAAoBzY,EACf4O,eAAA,OAAKP,UAAWxN,EAAQ4rB,kBAAkBne,SAAEuH,IAE9C,IACT,KA9JK,SAAbqF,EACK,GAEQ,UAAbA,EACKyb,GAEFG,IA2JevsB,KAAI,SAACiH,EAAQxI,GAAK,OAC5B4F,eAACixB,KAAG,CAAkCZ,QAASztB,EAAQ+iB,KAAM0C,GAAgBzlB,IAAQ,mBAAAxF,OAAxDhD,GAA2D,QAKlG,GAGJ,GAAG,CAACof,EAAoBM,EAAsBC,IAG5Cxa,gBAAC+X,KAAW,CAAC7X,UAAWxN,EAAQ0qB,iBAAiBjd,SAAA,CAC/CH,gBAAA,OAAKE,UAAWxN,EAAQ2qB,eAAeld,SAAA,CACrCH,gBAAA,OAAKE,UAAWxN,EAAQ6qB,aAAapd,SAAA,CACnCM,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAC,cAC9BM,eAACiB,IAAO,CAACC,MAAM,2BAA2B4B,UAAU,MAAKpD,SACvDM,eAACuX,KAAY,CAAC3rB,MAAM,SAASyD,SAAS,QAAQoQ,UAAWxN,EAAQ8jB,wBAGrExW,gBAAA,OAAKE,UAAWxN,EAAQ4qB,cAAcnd,SAAA,CACpCM,eAACqC,IAAM,CACLvD,MAAOgb,EACPhY,SArGV,SAA8Bd,GAC5B+J,EAASsQ,GAAwBra,EAAMsB,OAAOxD,OAChD,EAoGUuQ,WAAY,CAAE5P,UAAWxN,EAAQ8qB,qBACjCvF,UAAW,CAAEvlB,QAAS,CAAEwlB,KAAMxlB,EAAQ+qB,qBACtCjX,SAAuB,SAAbuG,EAAoB5M,SAE7BqvB,GAAgBpzB,KAAI,SAACiH,EAAQxI,GAC5B,OACE4F,eAAC2C,IAAQ,CAAsC7D,MAAO8D,EAAO9D,MAAMY,SAChEkD,EAAOqE,OADK7M,EAAQ,uBAI3B,MAEFmF,gBAAC8C,IAAM,CACLid,UAAQ,EACRxgB,MAAOib,EACPjY,SAAU,SAACd,GAAK,OAAKie,EAA8B,CAAEje,SAAQ,EAC7DwB,cAAY,EACZuD,SAAuB,SAAbuG,EACV5J,QAAS,SAAC6c,GAAC,OAAKZ,EAAgB,GAAG,EACnCne,aACER,eAAC7P,IAAM,CACL2P,QAAQ,WACRL,UAAWxN,EAAQirB,sBACnBxc,QAAS,kBAAMue,EAA8B,CAAEG,KAAK,GAAO,EAC3DrZ,SAAuB,SAAbuG,GAAoE,IAA7CyN,EAAkCze,OACnE1P,MAAM,QAAO8T,SACd,UAIH2P,WAAY,CAAE5P,UAAWxN,EAAQgrB,sBACjCzF,UAAW,CAAEvlB,QAAS,CAAEumB,MAAOvmB,EAAQkrB,mBAAoB1F,KAAMxlB,EAAQmrB,sBACzEqC,YAAa,SAACnoB,GAAQ,OAAM0I,eAAA,OAAAN,SAAA,uCAAAtC,OAA6C9F,EAASgE,OAAM,OAAW,EAAEoE,SAAA,CAErGM,eAACC,IAAS,CACN4C,KAAK,QACLkE,WAAS,EACT7G,YAAY,oBACZ+G,MAAM,kBACNnH,QAAQ,WACRM,WAAY,CACVC,eACEL,eAACM,IAAc,CAAClU,SAAS,QAAOsT,SAC9BM,eAAC0f,KAAU,OAIjB9f,GAAI,CAAE3S,MAAM,MAAOub,OAAO,SAC1B1G,SAAU,SAAAyd,GAAC,OA7HDve,EA6HoBue,GA5HpCI,sBACNhB,EAAgB3d,EAAMsB,OAAOxD,OAF/B,IAAwBkC,CA6HsB,EAChCD,UAAW,SAACwe,GAAC,OAAKA,EAAEhd,iBAAiB,IAExCjK,EAAaqD,KAAI,SAAC0W,EAAUjY,GAAK,OAC9BmF,gBAACoD,IAAQ,CAAqC7D,MAAOuT,EAASrO,KAAMvE,UAAWxN,EAAQyqB,SAAShd,SAAA,CAC9FM,eAAC2B,IAAQ,CAAC/B,GAAI,CAAC8B,QAAS,MAAOtU,YAAY,OAAQyU,QAASkY,EAAkC7V,QAAQmO,EAASrO,OAAS,IACxHhE,eAAC6L,KAAY,CAACC,QAAS8S,EAAuBvM,OAAe,sBAAAjV,OAF1BhD,GAG1B,aAKrBmF,gBAAA,OAAKE,UAAWxN,EAAQorB,aAAa3d,SAAA,CACnCM,eAAA,OAAKP,UAAWxN,EAAQsrB,MAAO9rB,GAAG,OAAMiO,SACrCwvB,IAEHlvB,eAAA,OAAKP,UAAWxN,EAAQ6rB,eAAepe,SACpCuvB,EACC1vB,gBAAA,OAAKE,UAAWxN,EAAQ8rB,QAAQre,SAAA,CAC9BH,gBAAA,OAAKE,UAAWxN,EAAQ+rB,aAAate,SAAA,CACnCM,eAACL,IAAU,CAACG,QAAQ,KAAKtP,WAAW,MAAKkP,SACtCuvB,EAAejrB,OAElBhE,eAACL,IAAU,CAACG,QAAQ,YAAWJ,SAAE,OAASuvB,EAAe5pB,WAE3DrF,eAAA,OAAKP,UAAWxN,EAAQyiB,eAAehV,SACpCuvB,EAAesC,MAAM51B,KAAI,SAACqL,EAAM5M,GAC/B,OACEmF,gBAAA,OAAsCE,UAAWxN,EAAQisB,mBAAmBxe,SAAA,CAC1EM,eAAC4F,IAAG,CACFnG,UAAWxN,EAAQmsB,eACnB5X,MAAO,CACLva,gBAAiB+a,EAAK2e,QAG1BpmB,gBAAA,OAAKE,UAAWxN,EAAQosB,iBAAiB3e,SAAA,CACvCM,eAACL,IAAU,CAACG,QAAQ,QAAQtP,WAAW,MAAKkP,SACzCsH,EAAKC,QAERjH,eAACL,IAAU,CAACG,QAAQ,UAAUsxB,QAAM,EAAA1xB,SAAA,OAAAtC,OAAS4J,EAAK3B,SAClDrF,eAACL,IAAU,CAACtQ,SAAS,OAAMqQ,SAAA,GAAAtC,OAAK4J,EAAKgN,WAAU,YAC3C,mBAAA5W,OAbqBhD,GAgBjC,SAIJ4F,eAAA,OAAKP,UAAWxN,EAAQssB,mBAAmB7e,SAAC,6CAMxD,EC1VM5T,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCshC,oBAAqB,CACnB/jC,QAAS,OACTC,cAAe,SACf8hB,UAAW,iCAEbqN,cAAe,CACbpvB,QAAS,OACTC,cAAe,UAEjBovB,aAAc,CACZrvB,QAAS,OACTC,cAAe,MACfgB,WAAY,SACZsa,UAAW,MACXH,cAAe,OAEjBkN,iBAAkB,CAChBC,OAAQ,WAEVC,YAAa,CACX5mB,SAAU,kBACVmB,WAAY,iBACZkR,QAAS,8BACTtU,YAAa,oBAEfqkC,aAAc,CACZtkC,OAAQ,OACRkC,SAAU,kBACVqS,QAAS,qBACT1T,WAAY,SACZ5B,SAAU,WACVC,MAAO,QAET2rB,UAAW,CACTlrB,UAAW,oBAEbopB,WAAY,CACV,sBAAuB,CACrBxU,QAAS,mBAEX,wBAAyB,CACvBrS,SAAU,SAGdguB,aAAc,CACZzU,WAAY,OACZnb,QAAS,OACTC,cAAe,MACf4vB,IAAK,OACLnwB,OAAQ,QAER,6BAA8B,CAC5BO,cAAe,SACfP,OAAQ,SAGZowB,MAAO,CACLpwB,OAAQ,OACRF,MAAO,MAEP,6BAA8B,CAC5BA,MAAO,QAGT,4BAA6B,CAC3BA,MAAO,OACPE,OAAQ,UAGZqwB,WAAY,CACVC,WAAY,UAEdtH,cAAe,CACb1oB,QAAS,OACTC,cAAe,SACfgwB,UAAW,OACX9vB,SAAU,OACVT,OAAQ,QACRmwB,IAAK,MACL5b,QAAS,cACTrU,WAAY,QAEdswB,kBAAmB,CACjBlwB,QAAS,OACTiB,WAAY,SACZsa,UAAW,MACX/a,aAAc,OAEhB2vB,YAAa,CACXzwB,OAAQ,OACRF,MAAO,OACPgC,aAAc,MACdF,SAAU,QAEZ+uB,eAAgB,CACd7wB,MAAO,MACPgC,aAAc,MACdhD,gBAAiB,UACjBmlB,UAAW,OAEX,6BAA8B,CAC5BnkB,MAAO,OACPE,OAAQ,UAGZukC,eAAgB,CACdjkC,QAAS,OACTE,eAAgB,SAChBe,WAAY,SACZvB,OAAQ,QAEV4wB,QAAS,CACP9wB,MAAO,OACPE,OAAQ,OACRM,QAAS,OACTC,cAAe,UAEjBswB,aAAc,CACZvwB,QAAS,OACTC,cAAe,MACfsb,UAAW,MACXta,WAAY,WACZgT,QAAS,gBACTvT,aAAc,kBAEhBumB,eAAgB,CACdjnB,QAAS,OACTwwB,oBAAqB,kBACrBrwB,SAAU,OACV0vB,IAAK,OACL5b,QAAS,OACT0P,UAAW,QAEb8M,mBAAoB,CAClBzwB,QAAS,OACTC,cAAe,MACfsb,UAAW,MACXmV,WAAY,UAEdC,eAAgB,CACdjxB,OAAQ,OACRF,MAAO,OACP4C,OAAQ,iCACRgQ,KAAM,QAERwe,iBAAkB,CAChB5wB,QAAS,OACTC,cAAe,SAEf,yBAA0B,CACxB4wB,aAAc,aAGlBT,kBAAmB,CACjB5xB,gBAAiB,OACjByV,QAAS,MACT7R,OAAQ,iCAEX,I,oBCzIY8hC,GAAsB,WACjC,IAAM1/B,EAAUnG,KAChBoG,EAA4CC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAnD+8B,EAAc78B,EAAA,GAAEqsB,EAAiBrsB,EAAA,GACxCI,EAAkCL,oBAAS,WAAO,IAAEM,EAAAJ,YAAAG,EAAA,GAA7C08B,EAASz8B,EAAA,GAAE08B,EAAY18B,EAAA,GAExBsY,EAAWd,KACX4P,EAA0B1P,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM1D,uBAAuB,IACvFN,EAAgBpP,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMhE,aAAa,IACnErN,EAAa/B,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU3C,UAAU,IACjEW,EAAc1C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUhC,WAAW,IACnEC,EAAY3C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU/B,SAAS,IAC/DR,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAC7DsO,EAAYzQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM3C,SAAS,IAOjE,SAASld,IACP,IAAM2xB,EAAa,CAAC,OAAQ,SACxBuC,EAAqBrC,gBAAgBhW,GAWzC,OAVAqY,EAAqBA,EAAmBj2B,KAAI,SAACqL,GAO3C,OANa3M,OAAOC,KAAK0M,GAAM3L,QAAO,SAACR,GAAC,OAAMw0B,EAAWxwB,SAAShE,EAAE,IAE/DL,SAAQ,SAACY,GACZ4L,EAAK5L,GAAOyjB,QAAS7X,EAAK5L,GAAO4L,EAAK3B,MAAS,KAAK2Z,QAAQ,GAC9D,IAEOhY,CACT,GAGF,CAEA,SAAS6qB,IACP,MAAiB,SAAbvlB,EACK,GAEQ,UAAbA,EACK0b,GAEFE,EACT,CAEA,SAAS4J,EAAqB3mC,GAAiC,IAAD+zB,EAAA/zB,EAA7B6V,aAAK,IAAAke,EAAG,KAAIA,EAAAC,EAAAh0B,EAAEi0B,WAAG,IAAAD,GAAQA,EACxDV,EAAkB,MAClB,IAAIsT,EAAY,GACVR,EAAQM,IAEVzS,EAEA2S,EADElY,EAAwBve,SAAWi2B,EAAMj2B,OAC/B,GAEAi2B,EAAMxtB,QAMpBguB,EADI/wB,EADFsB,OAAUxD,MAKdizB,EAAU72B,MAAK,SAACvB,EAAGC,GAAC,OAAKD,EAAE6c,cAAc5c,EAAE,IAC3CmR,EAASqQ,GAA2B2W,GACtC,CAEA,SAASvC,EAAiBxuB,GACxB,IAAMtO,EAAO6mB,EAAcvK,MAAK,SAAChI,GAAI,OAAKA,EAAKhD,QAAc,OAALhD,QAAK,IAALA,OAAK,EAALA,EAAOyuB,YAAa,IAE5E,GAAI/8B,GAAQmnB,EAAwBve,OAAS,EAAG,CAC9C,IAAMvN,EAAcwhC,gBAAgB78B,GAE9BoM,EAAQ,CACZkF,KAAMjW,EAAYiW,KAClBqB,MAAOtX,EAAYsX,MACnBksB,MAAO,WAGFxjC,EAAYiW,YACZjW,EAAYsX,MAEnBhL,OAAOC,KAAKvM,GAAayM,SAAQ,SAACY,GAChC,GAAKye,EAAwBhb,SAASzD,GAAtC,CAIA,IAAMiK,EAAQtX,EAAYqN,GACZ,IAAViK,IAIJvG,EAAMyyB,MAAMt2B,KAAK,CACfgM,MAAO7L,EACPiK,QACA2O,WAAY6K,QAASxZ,EAAQvG,EAAMuG,MAAS,KAAK2Z,QAAQ,IACzD2G,KAAM3kB,EAAM6uB,cAAc7gB,MAAK,SAACnU,GAAC,OAAKA,EAAEmJ,OAAS5I,CAAG,IAAEsoB,SAExD5kB,EAAMyyB,MAAMr2B,MAAK,SAACvB,EAAGC,GAAC,OAAKA,EAAEyL,MAAQ1L,EAAE0L,KAAK,IAb5C,CAcF,IAEAoZ,EAAkB3f,GAClBiM,EAASwR,IAAa,GACxB,CACF,CA0FA,OApLAxd,qBAAU,WACRgM,EAASwR,IAAa,IACtBkC,EAAkB,KACpB,GAAG,CAAClF,IAyFJxa,qBAAU,WACL6b,IACD6D,EAAkB,MAClB1T,EAASwR,IAAa,IAE1B,IAEAxd,qBAAU,WACR,GAAImN,EAAY,CAId,IAHA,IACMwf,EADM/qB,SAASC,eAAe,OAClBwG,uBAAuB,iBAAiBjN,EAAA,SAAAC,GAGxD,IAAM43B,EAAWnY,EAAwBrE,MAAK,SAAC1W,GAAK,OAAK+yB,IAAW3tB,QAAQpF,KAAW1E,CAAK,IAC5FsxB,EAAMtxB,GAAOoM,MAAM/Y,QAAUukC,EAAW,QAAU,MACpD,EAHS53B,EAAQ,EAAGA,EAAQsxB,EAAMpwB,OAAQlB,IAAOD,EAAAC,GAKjD+0B,GAAa,WACX,OACEnvB,eAACgwB,KAAmB,CAAC/iC,MAAM,OAAMyS,SAC/BH,gBAAC0yB,KAAS,CAACv/B,KAAMgL,IAAWsY,OAAQ4Y,KAAkB,UAAY,UAAWluB,QAAS8uB,EAAiB9vB,SAAA,CACrGM,eAACkwB,KAAa,CAACC,gBAAgB,QAC/BnwB,eAACowB,KAAK,CACJ8B,UAAW,GACXxB,eAAe,EACfhvB,QAAS,CAAE2S,KAAM,GAAIhoB,MAAO,IAC5BgkC,QAAQ,OACRvc,OAAQyF,EAAcje,OAAS,EAAI,CAAC,UAAW,gBAAa2B,EAC5DqzB,SAAU,mBACVC,KAAM,CAAElhC,SAAU,MAEpB2Q,eAACwwB,KAAK,CAAC0B,UAAW,EAAGxwB,QAAS,CAAE4G,IAAK,GAAIiJ,OAAQ,IAAMmf,eAAe,EAAMhxB,SAC1EM,eAAC2wB,KAAK,CAACC,OAAQ,GAAIxkC,SAAS,aAAaqT,UAAWxN,EAAQurB,WAAW9d,SAAC,oBAIzE6Z,EAAcje,OAAS,GAAK0E,eAAC6wB,KAAK,CAACR,QAAQ,OAAOljC,OAAQ,GAAIu2B,OAAQ,sBAEzD,SAAbpX,GACCtM,eAAC8wB,KAAM,CACL7K,QAAS,SAAC5mB,GACR,IAAQwK,EAAYxK,EAAZwK,QACR,OACE7J,eAAA,OAAKP,UAAWxN,EAAQkkB,cAAczW,SACnCmK,EAAQlO,KAAI,SAACo1B,EAAO32B,GACnB,IAAQi2B,EAAmBU,EAAnBV,QAASzkC,EAAUmlC,EAAVnlC,MACjB,OACE2T,gBAAA,OAA6CE,UAAWxN,EAAQ0rB,kBAAkBje,SAAA,CAChFM,eAAC4F,IAAG,CAACnG,UAAWxN,EAAQ2rB,YAAapX,MAAO,CAAEva,gBAAiBL,KAC/DoU,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAE2wB,MAAqB,0BAAAjzB,OAFlBhD,GAKxC,KAGN,IAIJ4F,eAACgxB,KAAY,CACXhb,OAAQ,CAAE2P,KAAM/R,IAChBqS,QAAS,SAAAlC,GAAiC,IAA9Bla,EAAOka,EAAPla,QAASzY,EAAM2yB,EAAN3yB,OAAQ6V,EAAK8c,EAAL9c,MAC3B,OAAgB,OAAZ4C,GAAoBzY,EACf4O,eAAA,OAAKP,UAAWxN,EAAQ4rB,kBAAkBne,SAAEuH,IAE9C,IACT,IAGD4qB,IAAWl2B,KAAI,SAACiH,EAAQxI,GAAK,OAC5B4F,eAACmyB,KAAI,CAEH9B,QAASztB,EACT+gB,YAAa,EACbD,OAAQ2E,GAAgBzlB,GACxBwvB,cAAY,EACZ9rB,KAAK,WACL+rB,UAAWxlB,IAAgBC,GAAyB,uBAAA1P,OANxBhD,GAO5B,QAKZ,GACF,CAEF,GAAG,CAACmf,EAAeM,IAGjBta,gBAAC+X,KAAW,CAAC7X,UAAWxN,EAAQu/B,oBAAoB9xB,SAAA,CAClDH,gBAAA,OAAKE,UAAWxN,EAAQ4qB,cAAcnd,SAAA,CACpCH,gBAAA,OAAKE,UAAWxN,EAAQ6qB,aAAapd,SAAA,CACnCM,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAC,eAC9BM,eAACiB,IAAO,CACNC,MAAM,uLACN4B,UAAU,MAAKpD,SAEfM,eAACuX,KAAY,CAAC3rB,MAAM,SAASyD,SAAS,QAAQoQ,UAAWxN,EAAQ8jB,wBAGrE/V,eAACqC,IAAM,CACLid,UAAQ,EACRxgB,MAAO+a,EACP/X,SAAU,SAACd,GAAK,OAAK8wB,EAAsB,CAAE9wB,SAAQ,EACrDwB,cAAY,EACZuD,SAAuB,SAAbuG,EACV9L,aACER,eAAC7P,IAAM,CACL2P,QAAQ,WACRL,UAAWxN,EAAQw/B,aACnB/wB,QAAS,kBAAMoxB,EAAsB,CAAE1S,KAAK,GAAO,EACnDrZ,SAAuB,SAAbuG,EACV1gB,MAAOiuB,EAAwBve,SAAWu2B,IAAWv2B,OAAS,QAAU,UAAUoE,SAEjFma,EAAwBve,SAAWu2B,IAAWv2B,OAAS,YAAc,eAG1E+T,WAAY,CAAE5P,UAAWxN,EAAQgkB,aACjCuB,UAAW,CAAEvlB,QAAS,CAAEumB,MAAOvmB,EAAQ+lB,UAAWP,KAAMxlB,EAAQikB,aAChEuJ,YAAa,SAACnoB,GAAQ,OAAK0I,eAAA,OAAAN,SAAA,GAAAtC,OAAS9F,EAASgE,OAAM,QAAA8B,OAAOy0B,IAAWv2B,OAAM,cAAkB,EAACoE,SAE7FmyB,IAAWl2B,KAAI,SAAC2sB,EAAMluB,GAAK,OAC1BmF,gBAACoD,IAAQ,CAAyC7D,MAAOwpB,EAAK5oB,SAAA,CAC5DM,eAAC2B,IAAQ,CAACE,QAASgY,EAAwB3V,QAAQokB,IAAS,IAC5DtoB,eAAC6L,KAAY,CAACC,QAASwc,MAAQ,0BAAAlrB,OAFQhD,GAG9B,SAIjBmF,gBAAA,OAAKE,UAAWxN,EAAQorB,aAAa3d,SAAA,CACnCM,eAAA,OAAKP,UAAWxN,EAAQsrB,MAAO9rB,GAAG,MAAKiO,SACpCwvB,IAEHlvB,eAAA,OAAKP,UAAWxN,EAAQ6rB,eAAepe,SACpCuvB,EACC1vB,gBAAA,OAAKE,UAAWxN,EAAQ8rB,QAAQre,SAAA,CAC9BH,gBAAA,OAAKE,UAAWxN,EAAQ+rB,aAAate,SAAA,CACnCM,eAACL,IAAU,CAACG,QAAQ,KAAKtP,WAAW,MAAKkP,SACtCuvB,EAAejrB,OAElBhE,eAACL,IAAU,CAACG,QAAQ,YAAWJ,SAAE,OAASuvB,EAAe5pB,WAE3DrF,eAAA,OAAKP,UAAWxN,EAAQyiB,eAAehV,SACpCuvB,EAAesC,MAAM51B,KAAI,SAACqL,EAAM5M,GAC/B,OACEmF,gBAAA,OAAsCE,UAAWxN,EAAQisB,mBAAmBxe,SAAA,CAC1EM,eAAC4F,IAAG,CACFnG,UAAWxN,EAAQmsB,eACnB5X,MAAO,CACLva,gBAAiB+a,EAAK2e,QAG1BpmB,gBAAA,OAAKE,UAAWxN,EAAQosB,iBAAiB3e,SAAA,CACvCM,eAACL,IAAU,CAACG,QAAQ,QAAQtP,WAAW,MAAKkP,SACzCsH,EAAKC,QAERjH,eAACL,IAAU,CAACG,QAAQ,UAAUsxB,QAAM,EAAA1xB,SAAA,OAAAtC,OAAS4J,EAAK3B,SAClDrF,eAACL,IAAU,CAACtQ,SAAS,OAAMqQ,SAAA,GAAAtC,OAAK4J,EAAKgN,WAAU,YAC3C,mBAAA5W,OAbqBhD,GAgBjC,SAIJmF,gBAAA,OAAKE,UAAWxN,EAAQy/B,eAAehyB,SAAA,CACD,IAAnCma,EAAwBve,OAAe,8BAAgC,gCAAiC,cAOvH,EC7SMxP,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCoiC,kBAAmB,CACjB7kC,QAAS,OACTC,cAAe,SACf8hB,UAAW,iCAEbqN,cAAe,CACbpvB,QAAS,OACTC,cAAe,UAEjBuoB,YAAa,CACX5mB,SAAU,kBACVmB,WAAY,iBACZkR,QAAS,+BAEXwU,WAAY,CACV,sBAAuB,CACrB7mB,SAAU,SAGdkjC,YAAa,CACX1pB,cAAe,OAEjBwU,aAAc,CACZzU,WAAY,OACZnb,QAAS,OACTC,cAAe,MACf4vB,IAAK,OACLnwB,OAAQ,QAER,6BAA8B,CAC5BO,cAAe,SACfP,OAAQ,SAGZowB,MAAO,CACLpwB,OAAQ,OACRF,MAAO,MAEP,6BAA8B,CAC5BA,MAAO,QAGT,4BAA6B,CAC3BA,MAAO,OACPE,OAAQ,UAGZqwB,WAAY,CACVC,WAAY,UAEdtH,cAAe,CACb1oB,QAAS,OACTC,cAAe,SACfgwB,UAAW,OACX9vB,SAAU,OACVT,OAAQ,QACRmwB,IAAK,MACL5b,QAAS,cACTrU,WAAY,QAEdswB,kBAAmB,CACjBlwB,QAAS,OACTiB,WAAY,SACZsa,UAAW,MACX/a,aAAc,OAEhB2vB,YAAa,CACXzwB,OAAQ,OACRF,MAAO,OACPgC,aAAc,MACdF,SAAU,QAEZ+uB,eAAgB,CACd7wB,MAAO,OACPgC,aAAc,MACdhD,gBAAiB,UACjBmlB,UAAW,OAEX,6BAA8B,CAC5BnkB,MAAO,OACPE,OAAQ,QACRikB,UAAW,WAGfohB,WAAW,CACTvlC,MAAO,MACPmkB,UAAW,OACXsM,UAAW,SACX,6BAA8B,CAC5BzwB,MAAO,OACPmkB,UAAW,SACXsM,UAAW,WAIfgU,eAAgB,CACdjkC,QAAS,OACTE,eAAgB,SAChBe,WAAY,SACZvB,OAAQ,QAEV4wB,QAAS,CACP9wB,MAAO,OACPE,OAAQ,QACRM,QAAS,OACT2jB,UAAU,OACV1jB,cAAe,SACf,6BAA8B,CAC5BT,MAAO,OACPE,OAAO,OACPikB,UAAW,SACXsM,UAAW,WAGf+U,gBAAiB,CACfhlC,QAAS,OACTE,eAAgB,SAChBe,WAAY,SACZvB,OAAQ,QACR,6BAA8B,CAC5BA,OAAQ,SAGZ6wB,aAAc,CACZvwB,QAAS,OACTC,cAAe,MACfsb,UAAW,MACXta,WAAY,WACZgT,QAAS,gBACTvT,aAAc,kBAEhBumB,eAAgB,CACdjnB,QAAS,OACTwwB,oBAAqB,kBACrBrwB,SAAU,OACV0vB,IAAK,OACL5b,QAAS,OACT0P,UAAW,QAEb8M,mBAAoB,CAClBzwB,QAAS,OACTC,cAAe,MACfsb,UAAW,MACXmV,WAAY,UAEdC,eAAgB,CACdjxB,OAAQ,OACRF,MAAO,OACP4C,OAAQ,iCACRgQ,KAAM,QAERwe,iBAAkB,CAChB5wB,QAAS,OACTC,cAAe,SAEf,yBAA0B,CACxB4wB,aAAc,aAGlBT,kBAAmB,CACjB5xB,gBAAiB,OACjByV,QAAS,MACT7R,OAAQ,iCAEX,I,UCrKK/D,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCwiC,YAAY,CACVjlC,QAAQ,OACR4B,SAAS,OACT1B,eAAe,gBACfD,cAAc,OAEhBilC,WAAW,CACTnqB,OAAQ,YAEX,ICLYoqB,GAAc,WACzB,IAAM3gC,EAAUnG,KACVif,EAAWd,KACX0Q,EAAqBxQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM5C,kBAAkB,IAC7EzN,EAAqB/C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU3B,kBAAkB,IACjF2N,EAAiB1Q,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM1C,cAAc,IAa3E,OALA9b,qBAAU,WACR,IAAMqH,EAAM8G,EAAmB5R,QAAU,IAAM4R,EAAmB5R,OAAS,IAC3EyP,EAASyR,GAAkBpW,GAC7B,IAGEpG,eAAA,OAAKP,UAAWxN,EAAQ0gC,WAAWjzB,SACjCH,gBAACqG,IAAG,CAAAlG,SAAA,CAEFH,gBAAA,OAAKE,UAAWxN,EAAQygC,YAAYhzB,SAAA,CACpCM,eAAA,KAAAN,SAAG,oCACHM,eAAA,KAAAN,SAAIib,OAEJ3a,eAAC6yB,KAAM,CACL/zB,MAAO6b,EACP7Y,SApB0B,SAACd,EAAOoO,GACxCrE,EAASuR,GAAsBlN,GAEjC,EAkBQ,aAAW,UACX0jB,kBAAkB,OAClBC,IAAK,EACL3sB,IAAKyU,QAKf,ECtBMkU,GAAkB,CACtB,CAAE9nB,MAAO,oBAAqBnI,MAAO,UACrC,CAAEmI,MAAO,sBAAuBnI,MAAO,eAG5Bk0B,GAAoB,WAC/B,IAAM/gC,EAAUnG,KAChBoG,EAA4CC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAnD+8B,EAAc78B,EAAA,GAAEqsB,EAAiBrsB,EAAA,GAExCI,EAAkCL,oBAAS,WAAO,IAAEM,EAAAJ,YAAAG,EAAA,GAA7C08B,EAASz8B,EAAA,GAAE08B,EAAY18B,EAAA,GAExBsY,EAAWd,KACX2P,EAAwBzP,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM3D,qBAAqB,IACnFN,EAAoBnP,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMjE,iBAAiB,IAC3EpM,EAAqB/C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU3B,kBAAkB,IACjFZ,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAC7Da,EAAehD,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU1B,YAAY,IACrEjB,EAAa/B,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU3C,UAAU,IACjEyO,EAAqBxQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM5C,kBAAkB,IAC7EE,EAAiB1Q,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM1C,cAAc,IACrED,EAAYzQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM3C,SAAS,IACjEhoB,EAA0CT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAA/CqgC,EAAapgC,EAAA,GAAEqgC,EAAgBrgC,EAAA,GACtCG,EAAwDb,mBAAS,IAAGc,EAAAZ,YAAAW,EAAA,GAA7DmgC,EAAoBlgC,EAAA,GAAEmgC,EAAuBngC,EAAA,GAEpD8L,qBAAU,WACRgM,EAASwR,IAAa,IACtBkC,EAAkB,KAEpB,GAAG,CAACnF,IAWJva,qBAAU,WACN,IAAIs0B,EAAK,IAAItQ,IAEbzJ,EAAkB9e,SAAQ,SAAA84B,GACxBj5B,OAAOC,KAAKg5B,GAAK94B,SAAQ,SAAA+4B,GACZ,SAAPA,GAAwB,UAAPA,IACfF,EAAGG,IAAID,GACTF,EAAGI,IAAIF,EAAIF,EAAGl2B,IAAIo2B,GAAMD,EAAIC,IAE5BF,EAAGI,IAAIF,EAAID,EAAIC,IAGrB,GACF,IACA,IAAMG,EAAWzuB,MAAM0uB,KAAKN,GAE5BK,EAASx4B,MAAK,SAACvB,EAAGC,GAAC,OAAKA,EAAE,GAAKD,EAAE,EAAE,IACnC,IAAMi6B,EAAaF,EAAS3vB,MAAM,EAAG8W,GAAgBlf,KAAI,SAAAxQ,GAAA,IAAA44B,EAAA1xB,YAAAlH,EAAA,GAAEiQ,EAAG2oB,EAAA,GAAOA,EAAA,UAAM3oB,CAAG,IACxEy4B,EAAcH,EAAS3vB,MAAM,EAAG4W,GAAoBhf,KAAI,SAAAwwB,GAAA,IAAA2H,EAAAzhC,YAAA85B,EAAA,GAAE/wB,EAAG04B,EAAA,GAAOA,EAAA,UAAM14B,CAAG,IACnF83B,EAAiBW,GACjB9oB,EAASqD,GAAgBoE,GAA4BohB,IAEzD,GAAE,CAAC1mB,EAAoBoM,EAAmBqB,IAE1C,IACIoZ,EADAC,EAAW,GAET3E,EAAa,CAAC,OAAQ,SAC5B2E,EAAW1a,EAAkB3d,KAAI,SAACqL,GAChC,IAAI3B,EAAQ,EACZ,IAAK,IAAMjK,KAAO4L,EACXisB,EAAcp0B,SAASzD,IAASi0B,EAAWxwB,SAASzD,KACvDiK,GAAS2B,EAAK5L,IAIlB,OADaua,0BAAA,GAAQ3O,GAAI,IAAEitB,MAAO5uB,GAEpC,IACA,IAAIisB,EAAyB/B,gBAAgByE,GAgB7C,SAAShR,EAAiB3Q,GAExB,OADAznB,QAAQC,IAAI,WAAYwnB,GACJ,UAAb/F,EAAuB8F,GAAoBC,GAAYlF,EAAakF,IAAa,SAC1F,CAKA,SAASmd,EAAiBxuB,GACxBpW,QAAQC,IAAI,QAASmW,GACnBoyB,EAAwBpyB,GACxB,IAAMtO,EAAOshC,EAAShlB,MAAK,SAAChI,GAAI,OAAKA,EAAKhD,QAAc,OAALhD,QAAK,IAALA,OAAK,EAALA,EAAOyuB,YAAa,IACrE,GAAI/8B,EAAM,CACR,IAAM3E,EAAcwhC,gBAAgB78B,GAE9BoM,EAAQ,CACZkF,KAAMjW,EAAYiW,KAClBqB,MAAOtX,EAAYsX,MACnBoN,UAAW,WAGN1kB,EAAYiW,YACZjW,EAAYsX,MAEnBvG,EAAM2T,UAAYpY,OAAOC,KAAKvM,GAAa4N,KAAI,SAACP,GAC9CxQ,QAAQC,IAAI,MAAOuQ,GACnB,IAAMiK,EAAQtX,EAAYqN,GAG1B,MAAO,CACL6L,MAAO7L,EACPiK,QACA2O,WAAY6K,QAASxZ,EAAQvG,EAAMuG,MAAS,KAAK2Z,QAAQ,IACzDpzB,MAAOo3B,EAAiB5nB,GAE5B,IAEA0D,EAAM2T,UAAY3T,EAAM2T,UAAUpX,QAAO,SAAC2L,GAAI,OAAKisB,EAAcp0B,SAASmI,EAAKC,QAAyB,UAAfD,EAAKC,KAAiB,IAC/Grc,QAAQC,IAAI,QAASiU,GACrB2f,EAAkB3f,GAClBiM,EAASwR,IAAa,GACxB,CACN,CAmFA,OA5IAwX,EAAqBzC,EAAuB31B,KAAI,SAACqL,GAK/C,OAJa3M,OAAOC,KAAK0M,GAAM3L,QAAO,SAACR,GAAC,OAAMw0B,EAAWxwB,SAAShE,EAAE,IAC/DL,SAAQ,SAACY,GACZ4L,EAAK5L,GAAOyjB,QAAS7X,EAAK5L,GAAO4L,EAAK3B,MAAS,KAAK2Z,QAAQ,GAC9D,IACOhY,CACT,IAqDAjI,qBAAU,WACJ6b,GAGF6D,EAAkB,MAClB1T,EAASwR,IAAa,KAHtBiT,EAAiB2D,EAMrB,GAAE,CAACF,IAEHl0B,qBAAU,WACJmN,GACFijB,GAAa,WACX,OACEnvB,eAACgwB,KAAmB,CAAC/iC,MAAM,OAAMyS,SAC/BH,gBAACooB,KAAQ,CACPj1B,KAlEoB,WAA1BknB,EACKoa,EACFD,EAiEG/d,OAAQ4Y,KAAkB,UAAY,UACtCluB,QAAS8uB,EACTS,WAAY,GAAGvwB,SAAA,CAEfM,eAACkwB,KAAa,CAACC,gBAAgB,QAC/BnwB,eAACowB,KAAK,CAACC,QAAQ,OAAOC,SAAS,mBAAmBC,KAAM,CAAElhC,SAAU,MACpE2Q,eAACwwB,KAAK,CAAC1c,OAhIgB,WAA1B8F,OAAqC3c,EAAY,CAAC,EAAG,KAgItBwzB,mBAAmB,EAAMC,eAAe,EAAMhxB,SACxEM,eAAC2wB,KAAK,CAACC,OAAQ,GAAIxkC,SAAS,aAAaqT,UAAWxN,EAAQurB,WAAW9d,SACpEqvB,GAAgB/f,MAAK,SAACpM,GAAM,OAAKA,EAAO9D,QAAU8a,CAAqB,IAAE3S,UAG7EqS,EAAkBhe,OAAS,GAAK0E,eAAC6wB,KAAK,CAACR,QAAQ,OAAOljC,OAAQ,GAAIu2B,OAAQ,sBAC3E1jB,eAAC8wB,KAAM,CACL7K,QAAS,SAAC5mB,GACR,IAAQwK,EAAYxK,EAAZwK,QACR,OACE7J,eAAA,OAAKP,UAAWxN,EAAQkkB,cAAczW,SACnCmK,EAAQlO,KAAI,SAACo1B,EAAO32B,GACnB,IAAQi2B,EAAmBU,EAAnBV,QAASzkC,EAAUmlC,EAAVnlC,MACjB,OACE2T,gBAAA,OAA0CE,UAAWxN,EAAQ0rB,kBAAkBje,SAAA,CAC7EM,eAAC4F,IAAG,CAACnG,UAAWxN,EAAQ2rB,YAAapX,MAAO,CAAEva,gBAAiBL,KAC/DoU,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAE2wB,MAAqB,uBAAAjzB,OAFrBhD,GAKrC,KAGN,IAGF4F,eAACgxB,KAAY,CACXhb,OAAQ,CAAE2P,KAAM/R,IAChBqS,QAAS,SAAAiO,GAAiC,IAA9BrqB,EAAOqqB,EAAPrqB,QAASzY,EAAM8iC,EAAN9iC,OAAQ6V,EAAKitB,EAALjtB,MAC3B,OAAgB,OAAZ4C,GAAoBzY,EACf4O,eAAA,OAAKP,UAAWxN,EAAQ4rB,kBAAkBne,SAAEuH,IAE9C,IACT,IAGDgsB,EAAct3B,KAAI,SAACiH,EAAQxI,GAAK,OAC/B4F,eAACixB,KAAG,CAEFZ,QAASztB,EACToB,KAAMpB,EACNsuB,QAAS,EACTvL,KAAM3C,EAAiBpgB,IAAQ,oBAAAxF,OAJNhD,GAKzB,IAEJ4F,eAACixB,KAAG,CACAZ,QAAS,QACTa,QAAS,EACTvL,KAAM3C,EAAiB,eAKnC,GAGJ,GAAG,CAAC1J,EAAmBM,EAAsBqZ,EAAetY,IAI1Dpb,gBAAC+X,KAAW,CAAC7X,UAAWxN,EAAQqgC,kBAAkB5yB,SAAA,CAChDH,gBAAA,OAAKE,UAAWxN,EAAQ4qB,cAAcnd,SAAA,CACpCM,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAC,cAC9BM,eAACqC,IAAM,CACLvD,MAAO8a,EACP9X,SA9HR,SAA8Bd,GAC5B+J,EAASoQ,GAAyBna,EAAMsB,OAAOxD,OACjD,EA6HQuQ,WAAY,CAAE5P,UAAWxN,EAAQgkB,aACjCuB,UAAW,CAAEvlB,QAAS,CAAEwlB,KAAMxlB,EAAQikB,aACtCnQ,SAAuB,SAAbuG,EAAoB5M,SAE7BqvB,GAAgBpzB,KAAI,SAACiH,EAAQxI,GAC5B,OACE4F,eAAC2C,IAAQ,CAAuC7D,MAAO8D,EAAO9D,MAAMY,SACjEkD,EAAOqE,OADK7M,EAAQ,wBAI3B,SAGJmF,gBAAA,OAAKE,UAAWxN,EAAQorB,aAAa3d,SAAA,CACnCM,eAAA,OAAKP,UAAWxN,EAAQsrB,MAAO9rB,GAAG,KAAIiO,SACnCwvB,IAEH3vB,gBAAA,OAAKE,UAAWxN,EAAQugC,WAAW9yB,SAAA,CAEhCM,eAAC4yB,GAAW,CAAChzB,GAAI,CAAC4I,OAAQ,uBAC3BxI,eAAA,OAAKP,UAAWxN,EAAQ6rB,eAAepe,SACpCuvB,EACC1vB,gBAAA,OAAKE,UAAWxN,EAAQ8rB,QAAQre,SAAA,CAC9BH,gBAAA,OAAKE,UAAWxN,EAAQ+rB,aAAate,SAAA,CACnCM,eAACL,IAAU,CAACG,QAAQ,KAAKtP,WAAW,MAAKkP,SACtCuvB,EAAejrB,OAElBhE,eAACL,IAAU,CAACG,QAAQ,YAAWJ,SAAE,OAASuvB,EAAe5pB,WAE3DrF,eAAA,OAAKP,UAAWxN,EAAQyiB,eAAehV,SACpCuvB,EAAexc,UAAU9W,KAAI,SAACqL,EAAM5M,GACnC,OACEmF,gBAAA,OAAsCE,UAAWxN,EAAQisB,mBAAmBxe,SAAA,CAC1EM,eAAC4F,IAAG,CACFnG,UAAWxN,EAAQmsB,eACnB5X,MAAO,CACLva,gBAAiB+a,EAAKpb,SAG1B2T,gBAAA,OAAKE,UAAWxN,EAAQosB,iBAAiB3e,SAAA,CACvCM,eAACL,IAAU,CAACG,QAAQ,QAAQtP,WAAW,MAAKkP,SACzCsH,EAAKC,QAERjH,eAACL,IAAU,CAACG,QAAQ,UAAUsxB,QAAM,EAAA1xB,SAAA,OAAAtC,OAAS4J,EAAK3B,SAClDrF,eAACL,IAAU,CAACtQ,SAAS,OAAMqQ,SAAA,GAAAtC,OAAK4J,EAAKgN,WAAU,YAC3C,mBAAA5W,OAbqBhD,GAgBjC,SAIJ4F,eAAA,OAAKP,UAAWxN,EAAQwgC,gBAAgB/yB,SAAC,4CAOvD,E,oBC/SM5T,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCikC,cAAe,CACb1mC,QAAS,OACTC,cAAe,SACf8hB,UAAW,iCAEboN,eAAgB,CACdnvB,QAAS,OACTC,cAAe,SACf+hB,OAAQ,OAEVoN,cAAe,CACbpvB,QAAS,OACTC,cAAe,UAEjBuoB,YAAa,CACX5mB,SAAU,kBACVmB,WAAY,iBACZkR,QAAS,+BAEXwU,WAAY,CACV,sBAAuB,CACrB7mB,SAAU,SAGdguB,aAAc,CACZzU,WAAY,OACZnb,QAAS,OACTC,cAAe,MACf4vB,IAAK,OACLnwB,OAAQ,QAER,6BAA8B,CAC5BO,cAAe,SACfP,OAAQ,SAGZowB,MAAO,CACLpwB,OAAQ,OACRF,MAAO,MAEP,6BAA8B,CAC5BA,MAAO,QAGT,4BAA6B,CAC3BA,MAAO,OACPE,OAAQ,UAGZqwB,WAAY,CACVC,WAAY,UAEdtH,cAAe,CACb1oB,QAAS,OACTC,cAAe,SACfgwB,UAAW,OACX9vB,SAAU,OACVT,OAAQ,QACRmwB,IAAK,MACL5b,QAAS,cACTrU,WAAY,QAEdswB,kBAAmB,CACjBlwB,QAAS,OACTiB,WAAY,SACZsa,UAAW,MACX/a,aAAc,OAEhBmmC,cAAe,CACbhnC,YAAa,kBAEfwwB,YAAa,CACXzwB,OAAQ,OACRF,MAAO,OACP8B,SAAU,QAEZ+uB,eAAgB,CACd7wB,MAAO,MACPgC,aAAc,MACdhD,gBAAiB,UACjBmlB,UAAW,OAEX,6BAA8B,CAC5BnkB,MAAO,OACPE,OAAQ,UAGZukC,eAAgB,CACdjkC,QAAS,OACTE,eAAgB,SAChBe,WAAY,SACZvB,OAAQ,QAEV4wB,QAAS,CACP9wB,MAAO,OACPE,OAAQ,OACRM,QAAS,OACTC,cAAe,UAEjBswB,aAAc,CACZvwB,QAAS,OACTC,cAAe,MACfsb,UAAW,MACXta,WAAY,WACZgT,QAAS,gBACTvT,aAAc,kBAEhB+vB,mBAAoB,CAClBzwB,QAAS,OACTC,cAAe,MACfsb,UAAW,MACXmV,WAAY,UAEdC,eAAgB,CACdjxB,OAAQ,OACRF,MAAO,OACP4C,OAAQ,iCACRgQ,KAAM,QAERwe,iBAAkB,CAChB5wB,QAAS,OACTC,cAAe,SAEf,yBAA0B,CACxB4wB,aAAc,aAGlBT,kBAAmB,CACjB5xB,gBAAiB,OACjByV,QAAS,MACT7R,OAAQ,iCAEVwkC,gBAAiB,CACf3yB,QAAS,YAEXgT,eAAgB,CACdhT,QAAS,kBACTjU,QAAS,OACTwwB,oBAAqB,kBACrBrwB,SAAU,OACV0vB,IAAK,OACLlM,UAAW,QAEd,I,UC3HK2d,GAAkB,CACtB,CAAE9nB,MAAO,oBAAqBnI,MAAO,UACrC,CAAEmI,MAAO,sBAAuBnI,MAAO,eAG5Bw1B,GAAgB,WAC3B,IAAMriC,EAAUnG,KAChBoG,EAA4CC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAnD+8B,EAAc78B,EAAA,GAAEqsB,EAAiBrsB,EAAA,GACxCI,EAAkCL,oBAAS,WAAO,IAAEM,EAAAJ,YAAAG,EAAA,GAA7C08B,EAASz8B,EAAA,GAAE08B,EAAY18B,EAAA,GAC9BG,EAAoCT,mBAAS,SAAQU,EAAAR,YAAAO,EAAA,GAA9C2hC,EAAU1hC,EAAA,GAAE2hC,EAAa3hC,EAAA,GAE1BkY,EAAWd,KACXqC,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAC7DJ,EAAa/B,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU3C,UAAU,IACjEgB,EAAqB/C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU3B,kBAAkB,IACjFC,EAAehD,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU1B,YAAY,IACrEN,EAAc1C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUhC,WAAW,IACnEC,EAAY3C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU/B,SAAS,IAC/D6M,EAA4BxP,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM5D,yBAAyB,IAC3FS,EAAoBjQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMnD,iBAAiB,IAC3ED,EAAyBhQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMpD,sBAAsB,IACrFS,EAAYzQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM3C,SAAS,IAkBjE,SAASld,IAAW,IAAD+2B,EACjB,GAA0B,WAAtBra,EACF,OAAOT,EAA0BQ,GAGnC,IAAMkV,EAAa,CAAC,OAAQ,aAAc,kBACtCqF,EAAiBnF,gBAAiE,QAAlDkF,EAAC9a,EAA0BQ,UAAuB,IAAAsa,IAAI,IAW1F,OAVAC,EAAiBA,EAAe/4B,KAAI,SAACqL,GAOnC,OANa3M,OAAOC,KAAK0M,GAAM3L,QAAO,SAACR,GAAC,OAAMw0B,EAAWxwB,SAAShE,EAAE,IAE/DL,SAAQ,SAACY,GACZ4L,EAAK5L,GAAOyjB,QAAS7X,EAAK5L,GAAO4L,EAAK+X,WAAc,KAAKC,QAAQ,GACnE,IAEOhY,CACT,GAGF,CAeA,SAASwoB,EAAiBxuB,GACxB,IAAMtO,EAAOinB,EAA0BQ,GAAwBnL,MAAK,SAAChI,GAAI,OAAKA,EAAKhD,QAAc,OAALhD,QAAK,IAALA,OAAK,EAALA,EAAOyuB,YAAa,IAEhH,GAAI/8B,EAAM,CACR,IAAM3E,EAAcwhC,gBAAgB78B,GAC9BoM,EAAQ,CACZkF,KAAMjW,EAAYiW,KAClBqB,MAAOtX,EAAYgxB,WACnB4V,MAAO,GACPliB,UAAW,WAGN1kB,EAAYiW,YACZjW,EAAYgxB,kBACZhxB,EAAY4hC,eAEnBt1B,OAAOC,KAAKvM,GAAayM,SAAQ,SAACY,GAChC,IAAMiK,EAAQtX,EAAYqN,GAE1B,GAAc,IAAViK,EAAJ,CAIA,IAAM2B,EAAO,CACXC,MAAO7L,EACPiK,QACA2O,WAAY6K,QAASxZ,EAAQvG,EAAMuG,MAAS,KAAK2Z,QAAQ,IACzDpzB,MAAOoV,EAAM6uB,cAAc7gB,MAAK,SAACnU,GAAC,OAAKA,EAAEmJ,OAAS5I,CAAG,IAAExP,OAGzD,GAAIshB,EAAmBrO,SAASzD,GAG9B,OAFA0D,EAAM2T,UAAUxX,KAAK+L,QACrBlI,EAAM2T,UAAUvX,MAAK,SAACvB,EAAGC,GAAC,OAAKD,EAAEsN,MAAMuP,cAAc5c,EAAEqN,MAAM,IAI/DnI,EAAM61B,MAAM15B,KAAK+L,GACjBlI,EAAM61B,MAAMz5B,MAAK,SAACvB,EAAGC,GAAC,OAAKD,EAAEsN,MAAMuP,cAAc5c,EAAEqN,MAAM,GAhBzD,CAiBF,IAEAwX,EAAkB3f,GAClBiM,EAASwR,IAAa,GACxB,CACF,CAqHA,OAjNAxd,qBAAU,WACRgM,EAASwR,IAAa,IACtBkC,EAAkB,KACpB,GAAG,CAAC9E,IA2FJ5a,qBAAU,WACL6b,IACD6D,EAAkB,MAClB1T,EAASwR,IAAa,IAE1B,IACAxd,qBAAU,WACJmN,GACFijB,GAAa,WAAO,IAADyF,EAAAC,EAAAC,EACjB,OACE90B,eAACgwB,KAAmB,CAAC/iC,MAAM,OAAMyS,SAC/BH,gBAACw1B,KAAa,CAACriC,KAAMgL,IAAWsY,OAAQ4Y,KAAkB,UAAY,UAAWluB,QAAS8uB,EAAiB9vB,SAAA,CACzGM,eAACkwB,KAAa,CAACC,gBAAgB,QAC/BnwB,eAACowB,KAAK,CACJ8B,UAAW,GACXxB,eAAe,EACfhvB,QAAS,CAAE2S,KAAM,GAAIhoB,MAAO,IAC5BgkC,QAAQ,OACRvc,QACoD,QAAlD8gB,EAACjb,EAA0BQ,UAAuB,IAAAya,IAAI,IAAIt5B,OAAS,EAC/D,CAAC,UAAW,gBACZ2B,EAENqzB,SAAU,mBACVC,KAAM,CAAElhC,SAAU,MAEpB2Q,eAACwwB,KAAK,CACJ0B,UAAW,EACXxwB,QAAS,CAAE4G,IAAK,GAAIiJ,OAAQ,IAC5Bmf,eAAe,EACf5c,OA/GiB,WAAtBsG,OAAiCnd,EAAY,CAAC,EAAG,KAgH5CwzB,mBAAmB,EAAK/wB,SAExBM,eAAC2wB,KAAK,CAACC,OAAQ,GAAIxkC,SAAS,aAAaqT,UAAWxN,EAAQurB,WAAW9d,SAAC,yBAIvB,QAAlDm1B,EAAClb,EAA0BQ,UAAuB,IAAA0a,IAAI,IAAIv5B,OAAS,GAClE0E,eAAC6wB,KAAK,CAACR,QAAQ,OAAOljC,OAAQ,GAAIu2B,OAAQ,sBAG9B,SAAbpX,GACCtM,eAAC8wB,KAAM,CACL7K,QAAS,SAAC5mB,GAAW,IAAD21B,EAAAC,EACVprB,EAAYxK,EAAZwK,QACFqrB,EAAoE,QAAxDF,EAAgD,QAAhDC,EAAG1hB,GAAsB4G,UAAuB,IAAA8a,OAAA,EAA7CA,EAA+C35B,cAAM,IAAA05B,IAAI,EAE9E,OACEh1B,eAAA,OAAKP,UAAWxN,EAAQkkB,cAAczW,SACnCmK,EAAQlO,KAAI,SAACo1B,EAAO32B,GAAW,IAAD+6B,EACrB9E,EAAmBU,EAAnBV,QAASzkC,EAAUmlC,EAAVnlC,MACjB,OACE2T,gBAAC3L,IAAMwhC,SAAQ,CAAA11B,SAAA,CACbH,gBAAA,OAAKE,UAAWxN,EAAQ0rB,kBAAkBje,SAAA,CACxCM,eAAC4F,IAAG,CACFnG,UAAWxN,EAAQ2rB,YACnBpX,MAAO,CACLva,gBAAiBL,EACjBqD,aACEmL,GAAqD,QAAhD+6B,EAAG5hB,GAAsB4G,UAAuB,IAAAgb,OAAA,EAA7CA,EAA+C75B,aAAS2B,EAAY,SAGlF+C,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAE2wB,OAEhC6E,EAAe,IAAM96B,GACpB4F,eAACiQ,KAAO,CAACC,YAAY,WAAWzQ,UAAWxN,EAAQmiC,kBACpD,mBAAAh3B,OAdqChD,GAiB5C,KAGN,IAIJ4F,eAACgxB,KAAY,CACXhb,OAAQ,CAAE2P,KAAM/R,IAChBqS,QAAS,SAAA96B,GAAiC,IAA9B0e,EAAO1e,EAAP0e,QAASzY,EAAMjG,EAANiG,OAAQ6V,EAAK9b,EAAL8b,MAC3B,OAAgB,OAAZ4C,GAAoBzY,EACf4O,eAAA,OAAKP,UAAWxN,EAAQ4rB,kBAAkBne,SAAEuH,IAE9C,IACT,IAG4C,QAF5C6tB,EAEDvhB,GAAsB4G,UAAuB,IAAA2a,OAAA,EAA7CA,EAA+Cn5B,KAAI,SAACiH,EAAQxI,GAAK,OAChE4F,eAACixB,KAAG,CAEFZ,QAASztB,EAAOoB,KAChBA,KAAMpB,EAAOoB,KACbktB,QAAS,EACTvL,KAAM/iB,EAAOhX,OAAM,gBAAAwR,OAJEhD,GAKrB,IAGH8S,EAAmBvR,KAAI,SAACiH,EAAQxI,GAAK,OACpC4F,eAACmyB,KAAI,CAEH9B,QAASztB,EACT+gB,YAAa,EACbD,OAAQvW,EAAavK,IAAW,UAChCwvB,cAAY,EACZ9rB,KAAK,WACL+rB,UAAWxlB,IAAgBC,GAAyB,iBAAA1P,OAN9BhD,GAOtB,QAKZ,GAGJ,GAAG,CAACuf,EAA2BS,EAAmBD,IAGhD5a,gBAAC+X,KAAW,CAAC7X,UAAWxN,EAAQkiC,cAAcz0B,SAAA,CAC5CH,gBAAA,OAAKE,UAAWxN,EAAQ2qB,eAAeld,SAAA,CACrCH,gBAAA,OAAKE,UAAWxN,EAAQ4qB,cAAcnd,SAAA,CACpCM,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAC,sBAC9BM,eAACqC,IAAM,CACLvD,MAAOqb,EACPrY,SAhLV,SAA+Bd,GAC7Byd,EAAkB,MAClB1T,EAAS+Q,GAA0B9a,EAAMsB,OAAOxD,OAClD,EA8KUuQ,WAAY,CAAE5P,UAAWxN,EAAQgkB,aACjCuB,UAAW,CAAEvlB,QAAS,CAAEwlB,KAAMxlB,EAAQikB,aACtCnQ,SAAuB,SAAbuG,EAAoB5M,UArNrB,SAAb4M,EACK,GAEF8b,IAoNmBzsB,KAAI,SAACiH,EAAQxI,GAC7B,OACE4F,eAAC2C,IAAQ,CAAuC7D,MAAO8D,EAAOlD,SAC3DkD,GADYxI,EAAQ,wBAI3B,SAGJmF,gBAAA,OAAKE,UAAWxN,EAAQ4qB,cAAcnd,SAAA,CACpCM,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAC,cAC9BM,eAACqC,IAAM,CACLvD,MAAOsb,EACPtY,SAtMV,SAA8Bd,GAC5B+J,EAASgR,GAAqB/a,EAAMsB,OAAOxD,OAC7C,EAqMUuQ,WAAY,CAAE5P,UAAWxN,EAAQgkB,aACjCuB,UAAW,CAAEvlB,QAAS,CAAEwlB,KAAMxlB,EAAQikB,aACtCnQ,SAAuB,SAAbuG,EAAoB5M,SAE7BqvB,GAAgBpzB,KAAI,SAACiH,EAAQxI,GAC5B,OACE4F,eAAC2C,IAAQ,CAAmC7D,MAAO8D,EAAO9D,MAAMY,SAC7DkD,EAAOqE,OADK7M,EAAQ,oBAI3B,YAINmF,gBAAA,OAAKE,UAAWxN,EAAQorB,aAAa3d,SAAA,CACnCM,eAAA,OAAKP,UAAWxN,EAAQsrB,MAAO9rB,GAAG,QAAOiO,SACtCwvB,IAEHlvB,eAAA,OAAKP,UAAWxN,EAAQ6rB,eAAepe,SACpCuvB,EACC1vB,gBAAA,OAAKE,UAAWxN,EAAQ8rB,QAAQre,SAAA,CAC9BH,gBAAA,OAAKE,UAAWxN,EAAQ+rB,aAAate,SAAA,CACnCM,eAACL,IAAU,CAACG,QAAQ,KAAKtP,WAAW,MAAKkP,SACtCuvB,EAAejrB,OAElBhE,eAACL,IAAU,CAACG,QAAQ,YAAWJ,SAAE,OAASuvB,EAAe5pB,WAE3DrF,eAAC4F,IAAG,CAAChG,GAAI,CAAEzR,aAAc,EAAGkC,YAAa,WAAYqP,SACnDH,gBAAC81B,KAAI,CAACv2B,MAAOy1B,EAAYzyB,SA1NvC,SAAgCwzB,EAAGlmB,GACjColB,EAAcplB,EAChB,EAwNyEtP,QAAQ,YAAWJ,SAAA,CAC5EM,eAACu1B,KAAG,CAACtuB,MAAM,QAAQnI,MAAM,UACzBkB,eAACu1B,KAAG,CAACtuB,MAAM,YAAYnI,MAAM,mBAGjCkB,eAAA,OAAKP,UAAWxN,EAAQyiB,eAAehV,SACpCuvB,EAAesF,GAAY54B,KAAI,SAACqL,EAAM5M,GACrC,OACEmF,gBAAA,OAAsCE,UAAWxN,EAAQisB,mBAAmBxe,SAAA,CAC1EM,eAAC4F,IAAG,CACFnG,UAAWxN,EAAQmsB,eACnB5X,MAAO,CACLva,gBAAiB+a,EAAKpb,SAG1B2T,gBAAA,OAAKE,UAAWxN,EAAQosB,iBAAiB3e,SAAA,CACvCM,eAACL,IAAU,CAACG,QAAQ,QAAQtP,WAAW,MAAKkP,SACzCsH,EAAKC,QAERjH,eAACL,IAAU,CAACG,QAAQ,UAAUsxB,QAAM,EAAA1xB,SAAA,OAAAtC,OAAS4J,EAAK3B,SAClDrF,eAACL,IAAU,CAACtQ,SAAS,OAAMqQ,SAAA,GAAAtC,OAAK4J,EAAKgN,WAAU,YAC3C,mBAAA5W,OAbqBhD,GAgBjC,SAIJ4F,eAAA,OAAKP,UAAWxN,EAAQy/B,eAAehyB,SAAC,yCAMpD,ECrVM5T,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCslC,iBAAkB,CAChB/nC,QAAS,OACTC,cAAe,SACf8hB,UAAW,iCAEbqN,cAAe,CACbpvB,QAAS,OACTC,cAAe,UAEjBuoB,YAAa,CACX5mB,SAAU,kBACVmB,WAAY,iBACZkR,QAAS,+BAEXwU,WAAY,CACV,sBAAuB,CACrB7mB,SAAU,SAGdkjC,YAAa,CACX1pB,cAAe,OAEjBwU,aAAc,CACZzU,WAAY,OACZnb,QAAS,OACTC,cAAe,MACf4vB,IAAK,OACLnwB,OAAQ,QAER,6BAA8B,CAC5BO,cAAe,SACfP,OAAQ,SAGZowB,MAAO,CACLpwB,OAAQ,OACRF,MAAO,MAEP,6BAA8B,CAC5BA,MAAO,QAGT,4BAA6B,CAC3BA,MAAO,OACPE,OAAQ,UAGZqwB,WAAY,CACVC,WAAY,UAEdtH,cAAe,CACb1oB,QAAS,OACTC,cAAe,SACfgwB,UAAW,OACX9vB,SAAU,OACVT,OAAQ,QACRmwB,IAAK,MACL5b,QAAS,cACTrU,WAAY,QAEdswB,kBAAmB,CACjBlwB,QAAS,OACTiB,WAAY,SACZsa,UAAW,MACX/a,aAAc,OAEhB2vB,YAAa,CACXzwB,OAAQ,OACRF,MAAO,OACPgC,aAAc,MACdF,SAAU,QAEZ+uB,eAAgB,CACd7wB,MAAO,MACPgC,aAAc,MACdhD,gBAAiB,UACjBmlB,UAAW,OAEX,6BAA8B,CAC5BnkB,MAAO,OACPE,OAAQ,UAGZukC,eAAgB,CACdjkC,QAAS,OACTE,eAAgB,SAChBe,WAAY,SACZvB,OAAQ,QAEV4wB,QAAS,CACP9wB,MAAO,OACPE,OAAQ,OACRM,QAAS,OACTC,cAAe,UAEjBswB,aAAc,CACZvwB,QAAS,OACTC,cAAe,MACfsb,UAAW,MACXta,WAAY,WACZgT,QAAS,gBACTvT,aAAc,kBAEhBumB,eAAgB,CACdjnB,QAAS,OACTwwB,oBAAqB,kBACrBrwB,SAAU,OACV0vB,IAAK,OACL5b,QAAS,OACT0P,UAAW,QAEb8M,mBAAoB,CAClBzwB,QAAS,OACTC,cAAe,MACfsb,UAAW,MACXmV,WAAY,UAEdC,eAAgB,CACdjxB,OAAQ,OACRF,MAAO,OACP4C,OAAQ,iCACRgQ,KAAM,QAERwe,iBAAkB,CAChB5wB,QAAS,OACTC,cAAe,SAEf,yBAA0B,CACxB4wB,aAAc,aAGlBT,kBAAmB,CACjB5xB,gBAAiB,OACjByV,QAAS,MACT7R,OAAQ,iCAEX,ICtHKk/B,GAAkB,CACtB,CAAE9nB,MAAO,UAAWnI,MAAO,WAC3B,CAAEmI,MAAO,UAAWnI,MAAO,YAGhB02B,GAAmB,WAC9B,IAAMvjC,EAAUnG,KAChBoG,EAA4CC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAnD+8B,EAAc78B,EAAA,GAAEqsB,EAAiBrsB,EAAA,GACxCI,EAAkCL,oBAAS,WAAO,IAAEM,EAAAJ,YAAAG,EAAA,GAA7C08B,EAASz8B,EAAA,GAAE08B,EAAY18B,EAAA,GAExBsY,EAAWd,KACXoQ,EAAkBlQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMlD,eAAe,IACvEC,EAAuBnQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMjD,oBAAoB,IACjFhO,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAC7DJ,EAAa/B,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU3C,UAAU,IACjE0O,EAAYzQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM3C,SAAS,IAajE,SAAS4U,EAAiBxuB,GACxB,IAAMtO,EAAO2nB,EAAgBC,GAAsBtL,MAAK,SAAChI,GAAI,OAAKA,EAAKhD,QAAc,OAALhD,QAAK,IAALA,OAAK,EAALA,EAAOyuB,YAAa,IAEpG,GAAI/8B,EAAM,CACR,IAAM3E,EAAcwhC,gBAAgB78B,GAE9BoM,EAAQ,CACZkF,KAAMjW,EAAYiW,KAClBqB,MAAOtX,EAAYsX,MACnBowB,UAAW,WAGN1nC,EAAYiW,YACZjW,EAAYsX,MAEnBhL,OAAOC,KAAKvM,GAAayM,SAAQ,SAACY,GAChC,IAAMiK,EAAQtX,EAAYqN,GAE1B,GAAc,IAAViK,EAAJ,CAIA,IAAMwqB,EAAgB7uB,EAAM6uB,cAAc7gB,MAAK,SAACnU,GAAC,OAAKA,EAAEmJ,OAAS5I,CAAG,IAEpE0D,EAAM22B,UAAUx6B,KAAK,CACnBgM,MAAO7L,EACPiK,QACA2O,WAAY6K,QAASxZ,EAAQvG,EAAMuG,MAAS,KAAK2Z,QAAQ,IACzDpzB,MAAoB,OAAbikC,QAAa,IAAbA,OAAa,EAAbA,EAAelK,MARxB,CAUF,IAEAlH,EAAkB3f,GAClBiM,EAASwR,IAAa,GAExB,CACF,CA+EA,OA9HAxd,qBAAU,WACRgM,EAASwR,IAAa,IACtBkC,EAAkB,KAEpB,GAAG,CAACpE,IA6CJtb,qBAAU,WAEL6b,IACD6D,EAAkB,MAElB1T,EAASwR,IAAa,IAE1B,IACAxd,qBAAU,WACJmN,GACFijB,GAAa,WAAO,IAADuG,EACjB,OACE11B,eAACgwB,KAAmB,CAAC/iC,MAAM,OAAMyS,SAC/BH,gBAACooB,KAAQ,CACPj1B,KAAM2nB,EAAgBC,GACtBtE,OAAQ4Y,KAAkB,UAAY,UACtCluB,QAAS8uB,EACTS,WAAY,GAAGvwB,SAAA,CAEfM,eAACkwB,KAAa,CAACC,gBAAgB,QAC/BnwB,eAACowB,KAAK,CAACC,QAAQ,OAAOC,SAAS,mBAAmBC,KAAM,CAAElhC,SAAU,MACpE2Q,eAACwwB,KAAK,CAACC,mBAAmB,EAAMC,eAAe,EAAOrhC,SAAS,OAAMqQ,SACnEM,eAAC2wB,KAAK,CAACC,OAAQ,GAAIxkC,SAAS,aAAaqT,UAAWxN,EAAQurB,WAAW9d,SAAC,yBAKnC,QAAtCg2B,EAACrb,EAAgBC,UAAqB,IAAAob,IAAI,IAAIp6B,OAAS,GACtD0E,eAAC6wB,KAAK,CAACR,QAAQ,OAAOljC,OAAQ,GAAIu2B,OAAQ,sBAG5C1jB,eAAC8wB,KAAM,CACL7K,QAAS,SAAC5mB,GACR,IAAQwK,EAAYxK,EAAZwK,QACR,OACE7J,eAAA,OAAKP,UAAWxN,EAAQkkB,cAAczW,SACnCmK,EAAQlO,KAAI,SAACo1B,EAAO32B,GACnB,IAAQi2B,EAAmBU,EAAnBV,QAASzkC,EAAUmlC,EAAVnlC,MACjB,OACE2T,gBAAA,OAAyCE,UAAWxN,EAAQ0rB,kBAAkBje,SAAA,CAC5EM,eAAC4F,IAAG,CAACnG,UAAWxN,EAAQ2rB,YAAapX,MAAO,CAAEva,gBAAiBL,KAC/DoU,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAE2wB,MAAqB,sBAAAjzB,OAFtBhD,GAKpC,KAGN,IAGF4F,eAACgxB,KAAY,CACXhb,OAAQ,CAAE2P,KAAM/R,IAChBqS,QAAS,SAAA96B,GAAiC,IAA9B0e,EAAO1e,EAAP0e,QAASzY,EAAMjG,EAANiG,OAAQ6V,EAAK9b,EAAL8b,MAC3B,OAAgB,OAAZ4C,GAAoBzY,EACf4O,eAAA,OAAKP,UAAWxN,EAAQ4rB,kBAAkBne,SAAEuH,IAE9C,IACT,IAGDshB,GAA0B5sB,KAAI,SAACiH,EAAQxI,GAAK,OAC3C4F,eAACixB,KAAG,CAEFZ,QAASztB,EAAOoB,KAChBA,KAAMpB,EAAOoB,KACbktB,QAAS,EACTvL,KAAM/iB,EAAOhX,OAAM,mBAAAwR,OAJKhD,GAKxB,QAKZ,GAGJ,GAAG,CAACigB,EAAiBC,IAGnB/a,gBAAC+X,KAAW,CAAC7X,UAAWxN,EAAQujC,iBAAiB91B,SAAA,CAC/CH,gBAAA,OAAKE,UAAWxN,EAAQ4qB,cAAcnd,SAAA,CACpCM,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAC,cAC9BM,eAACqC,IAAM,CACLvD,MAAOwb,EACPxY,SA9HR,SAA8Bd,GAC5Byd,EAAkB,MAClB1T,EAASkR,GAAwBjb,EAAMsB,OAAOxD,OAChD,EA4HQuQ,WAAY,CAAE5P,UAAWxN,EAAQgkB,aACjCuB,UAAW,CAAEvlB,QAAS,CAAEwlB,KAAMxlB,EAAQikB,aACtCnQ,SAAuB,SAAbuG,EAAoB5M,SAE7BqvB,GAAgBpzB,KAAI,SAACiH,EAAQxI,GAC5B,OACE4F,eAAC2C,IAAQ,CAAsC7D,MAAO8D,EAAO9D,MAAMY,SAChEkD,EAAOqE,OADK7M,EAAQ,uBAI3B,SAGJmF,gBAAA,OAAKE,UAAWxN,EAAQorB,aAAa3d,SAAA,CACnCM,eAAA,OAAKP,UAAWxN,EAAQsrB,MAAO9rB,GAAG,KAAIiO,SACnCwvB,IAEHlvB,eAAA,OAAKP,UAAWxN,EAAQ6rB,eAAepe,SACpCuvB,EACC1vB,gBAAA,OAAKE,UAAWxN,EAAQ8rB,QAAQre,SAAA,CAC9BH,gBAAA,OAAKE,UAAWxN,EAAQ+rB,aAAate,SAAA,CACnCM,eAACL,IAAU,CAACG,QAAQ,KAAKtP,WAAW,MAAKkP,SACtCuvB,EAAejrB,OAElBhE,eAACL,IAAU,CAACG,QAAQ,YAAWJ,SAAE,OAASuvB,EAAe5pB,WAE3DrF,eAAA,OAAKP,UAAWxN,EAAQyiB,eAAehV,SACpCuvB,EAAewG,UAAU95B,KAAI,SAACqL,EAAM5M,GACnC,OACEmF,gBAAA,OAAsCE,UAAWxN,EAAQisB,mBAAmBxe,SAAA,CAC1EM,eAAC4F,IAAG,CACFnG,UAAWxN,EAAQmsB,eACnB5X,MAAO,CACLva,gBAAiB+a,EAAKpb,SAG1B2T,gBAAA,OAAKE,UAAWxN,EAAQosB,iBAAiB3e,SAAA,CACvCM,eAACL,IAAU,CAACG,QAAQ,QAAQtP,WAAW,MAAKkP,SACzCsH,EAAKC,QAERjH,eAACL,IAAU,CAACG,QAAQ,UAAUsxB,QAAM,EAAA1xB,SAAA,OAAAtC,OAAS4J,EAAK3B,SAClDrF,eAACL,IAAU,CAACtQ,SAAS,OAAMqQ,SAAA,GAAAtC,OAAK4J,EAAKgN,WAAU,YAC3C,mBAAA5W,OAbqBhD,GAgBjC,SAIJ4F,eAAA,OAAKP,UAAWxN,EAAQy/B,eAAehyB,SAAC,8CAMpD,EChOM5T,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCylC,iBAAkB,CAChBloC,QAAS,OACTC,cAAe,SACf8hB,UAAW,iCAEboN,eAAgB,CACdnvB,QAAS,OACTC,cAAe,SACf+hB,OAAQ,OAEVoN,cAAe,CACbpvB,QAAS,OACTC,cAAe,UAEjBuoB,YAAa,CACX5mB,SAAU,kBACVmB,WAAY,iBACZkR,QAAS,+BAEXwU,WAAY,CACV,sBAAuB,CACrB7mB,SAAU,SAGdguB,aAAc,CACZzU,WAAY,OACZnb,QAAS,OACTC,cAAe,MACf4vB,IAAK,OACLnwB,OAAQ,QAER,6BAA8B,CAC5BO,cAAe,SACfP,OAAQ,SAGZowB,MAAO,CACLpwB,OAAQ,OACRF,MAAO,MAEP,6BAA8B,CAC5BA,MAAO,QAGT,4BAA6B,CAC3BA,MAAO,OACPE,OAAQ,UAGZqwB,WAAY,CACVC,WAAY,UAEdtH,cAAe,CACb1oB,QAAS,OACTC,cAAe,SACfgwB,UAAW,OACX9vB,SAAU,OACVT,OAAQ,QACRmwB,IAAK,MACL5b,QAAS,cACTrU,WAAY,OACZd,UAAW,QAEboxB,kBAAmB,CACjBlwB,QAAS,OACTiB,WAAY,SACZsa,UAAW,MACX/a,aAAc,OAEhB4vB,kBAAmB,CACjB5xB,gBAAiB,OACjByV,QAAS,MACT7R,OAAQ,iCAEV+tB,YAAa,CACXzwB,OAAQ,OACRF,MAAO,OACPgC,aAAc,MACdF,SAAU,QAEZ+uB,eAAgB,CACd7wB,MAAO,MACPgC,aAAc,MACdhD,gBAAiB,UACjBmlB,UAAW,OAEX,6BAA8B,CAC5BnkB,MAAO,OACPE,OAAQ,UAGZ4wB,QAAS,CACP9wB,MAAO,OACPE,OAAQ,OACRM,QAAS,OACTC,cAAe,UAEjBswB,aAAc,CACZvwB,QAAS,OACTC,cAAe,MACfsb,UAAW,MACXta,WAAY,WACZgT,QAAS,gBACTvT,aAAc,kBAEhBumB,eAAgB,CACdjnB,QAAS,OACTwwB,oBAAqB,kBACrBrwB,SAAU,OACV0vB,IAAK,OACL5b,QAAS,OACT0P,UAAW,QAEb8M,mBAAoB,CAClBzwB,QAAS,OACTC,cAAe,MACfsb,UAAW,MACXmV,WAAY,UAEdC,eAAgB,CACdjxB,OAAQ,OACRF,MAAO,OACP4C,OAAQ,iCACRgQ,KAAM,QAERwe,iBAAkB,CAChB5wB,QAAS,OACTC,cAAe,SAEf,yBAA0B,CACxB4wB,aAAc,aAGlBsX,iBAAkB,CAChBnoC,QAAS,OACTE,eAAgB,SAChBe,WAAY,SACZvB,OAAQ,QAEX,I,wCCvHY0oC,GAAmB,WAC9B,IAAM5jC,EAAUnG,KAChBoG,EAA4CC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAAnD+8B,EAAc78B,EAAA,GAAEqsB,EAAiBrsB,EAAA,GACxCI,EAAkCL,oBAAS,WAAO,IAAEM,EAAAJ,YAAAG,EAAA,GAA7C08B,EAASz8B,EAAA,GAAE08B,EAAY18B,EAAA,GAExBsY,EAAWd,KACXqC,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAC7DJ,EAAa/B,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU3C,UAAU,IACjEqO,EAAkBpQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMhD,eAAe,IACvEC,EAA2BrQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM/C,wBAAwB,IAEzFE,EAA2BvQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM7C,wBAAwB,IACzFE,EAAYzQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM3C,SAAS,IAkHjE,OAjHA7b,qBAAU,WACRgM,EAASwR,IAAa,IACtBkC,EAAkB,KACpB,GAAG,CAAClE,IAWNxb,qBAAU,WACH6b,IACD6D,EAAkB,MAClB1T,EAASwR,IAAa,IAE1B,IAWAxd,qBAAU,WACJmN,GACFijB,GAAa,WACX,OACEnvB,eAACgwB,KAAmB,CAAC/iC,MAAM,OAAMyS,SAC/BH,gBAACu2B,KAAY,CAAC9f,OAAQ4Y,KAAkB,UAAY,UAAUlvB,SAAA,CAC5DM,eAACkwB,KAAa,CAACC,gBAAgB,QAE/BnwB,eAACowB,KAAK,CACJC,QAAQ,IACRK,eAAe,EACfpqB,KAAK,SACLgqB,SAAS,mBACTC,KAAM,CAAElhC,SAAU,IAClB6iC,UAAW,GACXpe,OAAQ,CAAC,EAAG,GACZpS,QAAS,CAAE2S,KAAM,GAAIhoB,MAAO,IAAKqT,SAEjCM,eAAC2wB,KAAK,CAACvkC,SAAS,SAASqT,UAAWxN,EAAQurB,WAAW9d,SAAC,2BAI1DM,eAACwwB,KAAK,CACJlqB,KAAK,SACL+pB,QAAQ,IACRI,mBAAmB,EACnB3c,OAAQ,CAAC,EAAG,GACZpS,QAAS,CAAE4G,IAAK,GAAIiJ,OAAQ,IAAK7R,SAEjCM,eAAC2wB,KAAK,CAACC,OAAQ,GAAIxkC,SAAS,aAAaqT,UAAWxN,EAAQurB,WAAW9d,SAAC,4BAI1EM,eAAC+1B,KAAK,CAACzvB,KAAK,SAAS+pB,QAAQ,IAAI2F,MAAO,CAAC,GAAI,OAE7Ch2B,eAAC8wB,KAAM,CACL7K,QAAS,WACP,OACEjmB,eAAA,OAAKP,UAAWxN,EAAQkkB,cAAczW,SACnCrF,OAAOC,KAAKogB,GAA0B/e,KAAI,SAACP,EAAKhB,GAC/C,OACEmF,gBAAA,OAAyCE,UAAWxN,EAAQ0rB,kBAAkBje,SAAA,CAC5EM,eAAC4F,IAAG,CACFnG,UAAWxN,EAAQ2rB,YACnBpX,MAAO,CAAEva,gBAAiByuB,EAAyBtf,MAErD4E,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAEtE,MAAiB,sBAAAgC,OALlBhD,GAQpC,KAGN,IAGF4F,eAACgxB,KAAY,CACXhb,OAAQ,CAAE2P,KAAM/R,IAChBqS,QAAS,SAAA96B,GAA0B,IACD8qC,EADtBpsB,EAAO1e,EAAP0e,QAASzY,EAAMjG,EAANiG,OACnB,OAAgB,OAAZyY,GAAoBzY,EACf4O,eAAA,OAAKP,UAAWxN,EAAQ4rB,kBAAkBne,SAAY,QAAZu2B,EAAEpsB,EAAQ,UAAE,IAAAosB,OAAA,EAAVA,EAAYpsB,QAAQ7F,OAElE,IACT,IAGFhE,eAACk2B,KAAO,CAAClyB,KAAK,eAAetR,KAAM6nB,EAAgB7a,SAChD6a,EAAgB5e,KAAI,SAACiH,EAAQxI,GAAK,OACjC4F,eAACm2B,KAAI,CACHnyB,KAAMpB,EAAOoB,KACbtD,QAAS,kBA/E3B,SAA0BsD,GACxB,IAAMtR,EAAO6nB,EAAgBvL,MAAK,SAAChI,GAAI,OAAKA,EAAKhD,OAASA,CAAI,IAE9D,GAAItR,EAAM,CACR,IAAM3E,EAAcwhC,gBAAgB78B,GACpC+rB,EAAiB9I,aAAC,CAAC,EAAI5nB,IACvBgd,EAASwR,IAAa,GACxB,CACF,CAuEiCiT,CAAiB5sB,EAAOoB,KAAK,EAE5C2hB,KAAMjL,EAAyB9X,EAAOwzB,aAAY,oBAAAh5B,OADzBhD,GAEzB,UAMd,GAGJ,GAAG,CAACmgB,IAGFhb,gBAAC+X,KAAW,CAAC7X,UAAWxN,EAAQ0jC,iBAAiBj2B,SAAA,CAC/CM,eAAA,OAAKP,UAAWxN,EAAQ2qB,eAAeld,SACrCH,gBAAA,OAAKE,UAAWxN,EAAQ4qB,cAAcnd,SAAA,CACpCM,eAACL,IAAU,CAACG,QAAQ,UAASJ,SAAC,mBAC9BM,eAACqC,IAAM,CACLvD,MAAO0b,EACP1Y,SAnHV,SAAmCd,GACjCyd,EAAkB,MAClB1T,EAASoR,GAA4Bnb,EAAMsB,OAAOxD,OACpD,EAiHUuQ,WAAY,CAAE5P,UAAWxN,EAAQgkB,aACjCuB,UAAW,CAAEvlB,QAAS,CAAEwlB,KAAMxlB,EAAQikB,aACtCnQ,SAAuB,SAAbuG,EAAoB5M,SAE7B+oB,GAAiB9sB,KAAI,SAACiH,EAAQxI,GAC7B,OACE4F,eAAC2C,IAAQ,CAA4C7D,MAAO8D,EAAO9D,MAAMY,SACtEkD,EAAOqE,OADK7M,EAAQ,6BAI3B,WAsBNmF,gBAAA,OAAKE,UAAWxN,EAAQorB,aAAa3d,SAAA,CACnCM,eAAA,OAAKP,UAAWxN,EAAQsrB,MAAO9rB,GAAG,MAAKiO,SACpCwvB,IAEHlvB,eAAA,OAAKP,UAAWxN,EAAQ6rB,eAAepe,SACpCuvB,EACC1vB,gBAAA,OAAKE,UAAWxN,EAAQ8rB,QAAQre,SAAA,CAC9BH,gBAAA,OAAKE,UAAWxN,EAAQ+rB,aAAate,SAAA,CACnCM,eAACL,IAAU,CAACG,QAAQ,KAAKtP,WAAW,MAAKkP,SACtCuvB,EAAejrB,OAGlBhE,eAACL,IAAU,CAACG,QAAQ,YAAWJ,SAAE,OAASuvB,EAAeoH,OAE3D92B,gBAAA,OAAKE,UAAWxN,EAAQyiB,eAAehV,SAAA,CACrCH,gBAAA,OAAKE,UAAWxN,EAAQisB,mBAAmBxe,SAAA,CACzCM,eAAC4F,IAAG,CACFnG,UAAWxN,EAAQmsB,eACnB5X,MAAO,CACLva,gBAAiB,sBAGrBsT,gBAAA,OAAKE,UAAWxN,EAAQosB,iBAAiB3e,SAAA,CACvCM,eAACL,IAAU,CAACG,QAAQ,QAAQtP,WAAW,MAAKkP,SAAC,yBAG7CM,eAACL,IAAU,CAACG,QAAQ,UAAUsxB,QAAM,EAAA1xB,SACjCuvB,EAAep0B,UAItB0E,gBAAA,OAAKE,UAAWxN,EAAQisB,mBAAmBxe,SAAA,CACzCM,eAAC4F,IAAG,CACFnG,UAAWxN,EAAQmsB,eACnB5X,MAAO,CACLva,gBAAiB,sBAGrBsT,gBAAA,OAAKE,UAAWxN,EAAQosB,iBAAiB3e,SAAA,CACvCM,eAACL,IAAU,CAACG,QAAQ,QAAQtP,WAAW,MAAKkP,SAAC,0BAG7CM,eAACL,IAAU,CAACG,QAAQ,UAAUsxB,QAAM,EAAA1xB,SACjCuvB,EAAepzB,gBAO1BmE,eAAA,OAAKP,UAAWxN,EAAQ2jC,iBAAiBl2B,SAAC,gDAMtD,EClNa42B,GAAS,WAAO,IAADC,EACpBtkC,EAAUnG,KACVwkB,EAAa3B,aAAc,qBACjCzc,EAAkCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA1CouB,EAASluB,EAAA,GAAEmuB,EAAYnuB,EAAA,GAC9BI,EAAyCL,mBAAS,CAChD8mB,aAAa,EACbD,gBAAgB,EAChBF,cAAc,EACdC,cAAc,EACdG,UAAU,IACVzmB,EAAAJ,YAAAG,EAAA,GANKgkC,EAAa/jC,EAAA,GAAEgkC,EAAehkC,EAAA,GAQ/BsY,EAAWd,KACX4O,EAAY1O,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM1E,SAAS,IAC3DvM,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAC7DqI,EAAUxK,IAAe,SAACzf,GAAK,OAAKA,EAAMiR,IAAIgZ,OAAO,IACrD5H,EAAoB5C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU9B,iBAAiB,IAC/EC,EAAkB7C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU7B,eAAe,IAC3ER,EAAgBrC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUrC,aAAa,IACvE0N,EAA6B/P,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMrD,0BAA0B,IAC7FC,EAAyBhQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMpD,sBAAsB,IACrFG,EAAuBnQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMjD,oBAAoB,IACjFnO,EAAsBhC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU1C,mBAAmB,IACnFe,EAAqB/C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU3B,kBAAkB,IACjFC,EAAehD,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU1B,YAAY,IACrEqN,EAA2BrQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM/C,wBAAwB,IACzFC,EAA4BtQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM9C,yBAAyB,IAC3FC,EAA2BvQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM7C,wBAAwB,IAmB/F,SAASiP,EAAUx+B,GAUf,IATF2+B,EAAU3+B,EAAV2+B,WACA4M,EAAOvrC,EAAPurC,QACA3M,EAAM5+B,EAAN4+B,OACA4M,EAAYxrC,EAAZwrC,aACAC,EAASzrC,EAATyrC,UAASC,EAAA1rC,EACT++B,kBAAU,IAAA2M,GAAQA,EAAAC,EAAA3rC,EAClBi/B,cAAM,IAAA0M,GAAQA,EAAAC,EAAA5rC,EACdm/B,kBAAU,IAAAyM,GAAQA,EAClBxM,EAAMp/B,EAANo/B,OAEAT,EAAWtvB,SAAQ,SAAC4b,EAAQta,GAC1B,IAzBsBuW,EAyBhB0Y,EAAWjvB,EAAIiuB,EAAU,GACzBiB,EAAUtmB,KAAKumB,MAAMnvB,EAAIiuB,GAAUQ,EAEzCmM,EAAQ/U,UAAYuI,GA5BE7X,EA6BD+D,EA5BH,UAAb9J,EAAuB8F,GAAoBC,GAAYlF,EAAakF,IAAa,WA6BlF+X,EACA/B,GAAgBjS,GAChBkU,EACA5P,EAAyBtE,GACzBA,EAAOxqB,MACX8qC,EAAQM,YACRN,EAAQO,IAAI,IAAMjM,EAAS4L,EAAYD,EAAe5L,EAAS,EAAG,EAAG,EAAIrmB,KAAKwyB,IAC9ER,EAAQ/Q,OACR+Q,EAAQS,YACRT,EAAQ/U,UAAY,QACpB+U,EAAQ7U,SACNqI,GAAcE,GAAUE,EAAalU,EAASA,EAAOpS,KACrD,IAAMgnB,EACN4L,EAAY,EAAID,EAAe5L,EAEnC,GACF,CAoLA,SAASqM,EAAc5P,EAAU1oB,GAC/B23B,EAAe9gB,0BAAC,CAAC,EAAI6gB,GAAa,GAAAa,aAAA,GAAG7P,EAAW1oB,IAClD,CAEA,SAAS0hB,IACPD,GAAa,EACf,CAMA,OACEhhB,gBAAA,OAAKE,UAAWxN,EAAQsd,aAAa7P,SAAA,CAlP9B6nB,GAAWlsB,QAAO,SAACqU,GAAI,OAAKA,EAAKnB,UAAU1P,SAASyN,EAAS,IAmP9C3Q,KAAI,SAAC+T,EAAMtV,GAC7B,OACEmF,gBAAC6X,KAAI,CAA6B3X,UAAWxN,EAAQyd,KAAKhQ,SAAA,CACxDH,gBAAC+3B,KAAW,CACVC,gBAAc,EACd93B,UAAWxN,EAAQu8B,YACnB9tB,QAAS,SAACM,GAAK,OAZO5F,EAYuBsU,EAAK8X,cAX5Dzc,EAAS+P,GAAY,CAAE1f,MAAK0D,OAAQ+Z,EAAUzd,MADhD,IAAkCA,CAYqC,EAC3DoL,MAAO,CAAEwP,OAAQ4Y,KAAkB,UAAY,WAAYlvB,SAAA,CAE3DH,gBAAA,OAAKE,UAAWxN,EAAQw8B,aAAa/uB,SAAA,CAClCgQ,EAAKre,KACNkO,gBAAA,OAAKE,UAAWxN,EAAQiP,MAAMxB,SAAA,CAC5BM,eAACL,IAAU,CAACtQ,SAAS,OAAOmB,WAAW,MAAKkP,SACzCgQ,EAAKxO,QAEP2X,EAAUnJ,EAAK8X,WACdxnB,eAACL,IAAU,CAACtQ,SAAS,OAAO0Q,UAAU,OAAML,SACzCgQ,EAAK+X,YAAY9rB,KAAI,SAAC67B,EAAG17B,GAAC,OACzBkE,eAAA,OAAAN,SAA+B83B,GAAC,eAAAp6B,OAAPtB,GAAc,YAMjDyD,gBAAA,OAAKE,UAAWxN,EAAQy8B,eAAehvB,SAAA,CACpCmZ,EAAUnJ,EAAK8X,WACdxnB,eAACiB,IAAO,CAACC,MAAM,wBAAwB4B,UAAU,MAAKpD,SACpDM,eAAA,QAAAN,SACEM,eAACS,IAAU,CACT7U,MAAM,UACN8U,QAAS,SAACM,GAAK,OAhOpC,SAEiC3D,EAAAo6B,GAAA,OAAAlB,KAAAj6B,YAAAC,cAAAC,MAAlC,SAAA0L,EAAmClH,EAAO0O,GAAI,IAAAkR,EAAAC,EAAAtD,EAAA2P,EAAAC,EAAAuK,EAAA/K,EAAAC,EAAAC,EAAAE,EAAAjkB,EAAA6uB,EAAA3K,EAAAC,EAAA0J,EAAApV,EAAA,OAAAhlB,cAAAM,MAAA,SAAAsL,GAAA,cAAAA,EAAApL,KAAAoL,EAAAnL,MAAA,OAUQ,OATpDgE,EAAMuB,kBACN60B,EAAc1nB,EAAK8X,UAAU,GAAMrf,EAAApL,KAAA,EAG3B6jB,EAASjgB,SAAS6gB,cAAc,UAChCX,EAAMD,EAAOa,WAAW,MAExBlE,EAAQ5c,SAASC,eAAe8O,EAAKje,IACrCy7B,EAAWvsB,SAAS6gB,cAAc,OAClC2L,EAAkBtN,GAAiBqN,GAAS/kB,EAAAnL,KAAA,GAE7BixB,KAAWC,MAAM3Q,EAAO,CAAE1K,QAAS,GAAKsb,QAAS,UAAW,KAAD,GAApE,OAAZjB,EAASxc,IAAGvI,EAAApK,KAAAoK,EAAAnL,KAAA,GACNmwB,EAAgB,KAAD,GAqCF,OAnCfuK,EAAe,EAMf,CAAC,OAAQ,OAAO74B,SAAS6Q,EAAKje,MAChCimC,EAAe,KAEb,CAAC,OAAQ,SAAS74B,SAAS6Q,EAAKje,MAClCk7B,EAnEG,UADCrgB,EAEGyG,GAAsBmH,GAEtB3G,GAAsB2G,GAiE7B0S,EAAoBloB,KAAKQ,KAAKynB,EAAgBrxB,OAAS,GACvDo8B,GAAoC,GAApB9K,GAEF,OAAZld,EAAKje,KACPo7B,EAAkBnoB,KAAKQ,KAAKgI,EAAmB5R,OAAS,GACxDo8B,GAAkC,GAAlB7K,GAEF,UAAZnd,EAAKje,KACPo7B,EAAkBnoB,KAAKQ,KAAKgI,EAAmB5R,OAAS,GACxDo8B,GAAkC,GAAlB7K,EAAuB,IAEzB,QAAZnd,EAAKje,KACPs7B,EAAkBroB,KAAKQ,KAAK7K,OAAOC,KAAKogB,GAA0Bpf,OAAS,GAC3Eo8B,GAAkC,GAAlB3K,GAGlBnM,EAAO3zB,MAAQ,IACf2zB,EAAOzzB,OAAS+/B,EAAS//B,OAAS,IAAMuqC,EAExC7W,EAAIc,UAAY,QAChBd,EAAIe,SAAS,EAAG,EAAGhB,EAAO3zB,MAAO2zB,EAAOzzB,QAElC2b,EAAOnI,SAAS6gB,cAAc,OAC9BmW,EAAc9X,GAAiB/W,GACrCA,EAAK4H,IAAMC,GAAQxI,EAAAnL,KAAA,GACb26B,EAAY,KAAD,GAsHgB,OApHjC9W,EAAIiB,UAAUhZ,EAAM,GAAI,GAAI,IAAK,IACjC+X,EAAIiB,UAAUoL,EAAUtM,EAAO3zB,MAAQ,EAAIigC,EAASjgC,MAAQ,EAAG,KAE/D4zB,EAAI3xB,KAAO,uBACX2xB,EAAIc,UAAY,QAChBd,EAAIhyB,UAAY,SAChBgyB,EAAIgB,SAASnS,EAAKxO,MAAO0f,EAAO3zB,MAAQ,EAAG,IAE3C4zB,EAAI3xB,KAAO,kBACX2xB,EAAIgB,SAASnS,EAAK+X,YAAYhsB,KAAK,OAAQmlB,EAAO3zB,MAAQ,EAAG,IAE7D4zB,EAAI3xB,KAAO,kBACX2xB,EAAIgB,SAAS,aAADzkB,OAAc+O,EAAoBE,WAAauU,EAAO3zB,MAAQ,EAAG,KAC7E4zB,EAAIgB,SAAS,YAADzkB,OAAauX,GAAWiM,EAAO3zB,MAAQ,EAAG,KACtD4zB,EAAIgB,SAAS,gBAADzkB,OAAiB2P,EAAiB,QAAA3P,OAAO4P,GAAmB4T,EAAO3zB,MAAQ,EAAG,KAC1F4zB,EAAIgB,SAAS,YAADzkB,OAAaoP,GAAiBoU,EAAO3zB,MAAQ,EAAG,KAC5C,SAAZyiB,EAAKje,IAAeovB,EAAIgB,SAAS,eAADzkB,OAAgB8c,GAA8B0G,EAAO3zB,MAAQ,EAAG,KACpF,UAAZyiB,EAAKje,IAAgBovB,EAAIgB,SAAS,eAADzkB,OAAgB+c,GAA0ByG,EAAO3zB,MAAQ,EAAG,KACjF,OAAZyiB,EAAKje,IAAaovB,EAAIgB,SAAS,cAADzkB,OAAekd,GAAwBsG,EAAO3zB,MAAQ,EAAG,KAC3E,QAAZyiB,EAAKje,KACDu7B,EAAQvE,GAAiBzZ,MAAK,SAACpM,GAAM,OAAKA,EAAO9D,QAAU0b,CAAwB,IAAEvT,MACrFgmB,EAASxE,GAAiBzZ,MAAK,SAACpM,GAAM,OAAKA,EAAO9D,QAAU2b,CAAyB,IAAExT,MAC7F4Z,EAAIgB,SAAS,mBAADzkB,OAAoB4vB,EAAK,wBAAA5vB,OAAuB6vB,GAAUrM,EAAO3zB,MAAQ,EAAG,MAG1F4zB,EAAIc,UAAY,QAChBd,EAAIhyB,UAAY,QAChBgyB,EAAI3xB,KAAO,kBAELynC,EAAermB,EAAa,IAAM,EACpC,CAAC,OAAQ,OAAOzR,SAAS6Q,EAAKje,KAChCovB,EAAIe,SAAS,EAAG,IAAM+U,EAAc/V,EAAO3zB,MAAO2zB,EAAOzzB,QAGzDw8B,EAAW,CACTG,WAH+B,UAAbxd,EAAuByb,GAAUG,GAInDwO,QAAS7V,EACTkJ,OAAQ,EACR4M,eACAC,UAAW,IACXrM,OAAQ,IACRH,QAAQ,KAEW,SAAZ1a,EAAKje,IACdovB,EAAIe,SAAS,EAAG,IAAM+U,EAAc/V,EAAO3zB,MAAO2zB,EAAOzzB,QAEzDw8B,EAAW,CACTG,WAAY6C,EACZ+J,QAAS7V,EACTkJ,OAAQ6C,EACR+J,eACAC,UAAW,IACXrM,OAAQ,OAEW,OAAZ7a,EAAKje,IACdovB,EAAIe,SAAS,EAAG,IAAM+U,EAAc/V,EAAO3zB,MAAO2zB,EAAOzzB,QAEzDw8B,EAAW,CACTG,WAAY5c,EACZwpB,QAAS7V,EACTkJ,OAAQ8C,EACR8J,eACAC,UAAW,IACX1M,YAAY,EACZK,OAAQ,MAEW,UAAZ7a,EAAKje,IACdovB,EAAIe,SAAS,EAAG,IAAM+U,EAAc/V,EAAO3zB,MAAO2zB,EAAOzzB,QAEzD0zB,EAAIc,UAAY,QAChBd,EAAIgB,SAAS,SAAU,GAAI,KAC3B8H,EAAW,CACTG,WAAY6C,EACZ+J,QAAS7V,EACTkJ,OAAQ6C,EACR+J,eACAC,UAAW,IACXrM,OAAQ,MAGV1J,EAAIc,UAAY,QAChBd,EAAIgB,SAAS,aAAc,GAAI,MAC/B8H,EAAW,CACTG,WAAY5c,EACZwpB,QAAS7V,EACTkJ,OAAQ8C,EACR8J,eACAC,UAAW,KACX1M,YAAY,EACZK,OAAQ,MAEW,OAAZ7a,EAAKje,IACdovB,EAAIe,SAAS,EAAG,IAAM+U,EAAc/V,EAAO3zB,MAAO2zB,EAAOzzB,QAEzDw8B,EAAW,CACTG,WAAYvB,GACZmO,QAAS7V,EACTkJ,OAAQ,EACR4M,eACAC,UAAW,IACXrM,OAAQ,OAEW,QAAZ7a,EAAKje,KACdovB,EAAIe,SAAS,EAAG,IAAM+U,EAAc/V,EAAO3zB,MAAO2zB,EAAOzzB,QAEzDw8B,EAAW,CACTG,WAAYzvB,OAAOC,KAAKogB,GACxBgc,QAAS7V,EACTkJ,OAAQgD,EACR4J,eACAC,UAAW,IACXrM,OAAQ,IACRD,YAAY,KAIV/I,EAASX,EAAOoB,YAAW7Z,EAAAnL,KAAA,GAC3BilB,KAASV,EAAO,YAADnkB,OAAc+O,EAAoBE,UAAS,OAAAjP,OAAMsS,EAAKxO,MAAK,SAAQ,KAAD,GAAAiH,EAAAnL,KAAA,iBAAAmL,EAAApL,KAAA,GAAAoL,EAAA4Z,GAAA5Z,EAAA,SAEvFoY,GAAa,GAAM,QAEiB,OAFjBpY,EAAApL,KAAA,GAEnBq6B,EAAc1nB,EAAK8X,UAAU,GAAOrf,EAAA+Z,OAAA,6BAAA/Z,EAAAvK,OAAA,GAAAsK,EAAA,0BAEvCrK,MAAA,KAAAjB,UAAA,CA8CyCg7B,CAAoB52B,EAAO0O,EAAK,EACpD3J,SAAuB,SAAbuG,GAAuBkqB,EAAc9mB,EAAK8X,UAAU9nB,SAE7D82B,EAAc9mB,EAAK8X,UAAYxnB,eAACnU,KAAgB,CAACD,MAAM,UAAUiX,KAAM,KAAS7C,eAACmiB,KAAS,UAKnGniB,eAACS,IAAU,CAAAf,SAAEmZ,EAAUnJ,EAAK8X,UAAYxnB,eAAC6Q,KAAU,IAAM7Q,eAAC8Q,KAAU,YAGxEvR,gBAACwR,KAAQ,CAACC,GAAI6H,EAAUnJ,EAAK8X,UAAWvW,QAAQ,OAAMvR,SAAA,CACjC,gBAAlBgQ,EAAK8X,UAA8BxnB,eAACqxB,GAAgB,IAClC,mBAAlB3hB,EAAK8X,UAAiCxnB,eAAC2xB,GAAmB,IACxC,iBAAlBjiB,EAAK8X,UAA+BxnB,eAACgvB,GAAiB,IACpC,iBAAlBtf,EAAK8X,UAA+BxnB,eAACgzB,GAAiB,IACpC,aAAlBtjB,EAAK8X,UAA2BxnB,eAACs0B,GAAa,IAC5B,gBAAlB5kB,EAAK8X,UAA8BxnB,eAACw1B,GAAgB,IAClC,gBAAlB9lB,EAAK8X,UAA8BxnB,eAAC61B,GAAgB,SAC5C,cAAAz4B,OA/CYhD,GAkD7B,IACA4F,eAACoiB,KAAQ,CAACttB,KAAMwrB,EAAW+B,iBAAkB,IAAM3f,QAAS8d,EAAiB9gB,SAC3EM,eAACsiB,KAAK,CAAC5f,QAAS8d,EAAkB+B,SAAS,QAAQ3iB,GAAI,CAAE3S,MAAO,QAASyS,SAAC,wEAMlF,EC9Wam4B,GAAc,CACzB,CAAEz8B,IAAK,aAAc08B,SAAU,YAAap5B,OAAQ,CAAC,MACrD,CAAEtD,IAAK,eAAgB08B,SAAU,mBAAoBp5B,OAAQ,CAAC,WAC9D,CAAEtD,IAAK,kBAAmB08B,SAAU,2BAA4Bp5B,OAAQ,CAAC,SAEzE,CAAEtD,IAAK,gCAAiC08B,SAAU,UAAWp5B,OAAQ,CAAC,MAEtE,CAAEtD,IAAK,cAAe08B,SAAU,gBAAiBp5B,OAAQ,CAAC,SAE1D,CAAEtD,IAAK,mBAAoB08B,SAAU,iBAAkBp5B,OAAQ,CAAC,UAChE,CAAEtD,IAAK,gBAAiB08B,SAAU,UAAWp5B,OAAQ,CAAC,MACtD,CAAEtD,IAAK,cAAe08B,SAAU,eAAgBp5B,OAAQ,CAAC,oBACzD,CAAEtD,IAAK,gBAAiB08B,SAAU,wBAAyBp5B,OAAQ,CAAC,SACpE,CAAEtD,IAAK,eAAgB08B,SAAU,WAAYp5B,OAAQ,CAAC,OAG3Cq5B,GAAoC,CAC/C,CAAE38B,IAAK,MAAO08B,SAAU,MAAOp5B,OAAQ,CAAC,QACxC,CAAEtD,IAAK,MAAO08B,SAAU,MAAOp5B,OAAQ,CAAC,SAK7Bs5B,GAAc,CACzB,CAAE58B,IAAK,kBAAmB68B,UAAW,CAAC,kBACtC,CAAE78B,IAAK,cAAe68B,UAAW,CAAC,sBAClC,CAAE78B,IAAK,gCAAiC68B,UAAW,CAAC,sBACpD,CAAE78B,IAAK,8DAA0D68B,UAAW,CAAC,2BAC7E,CAAE78B,IAAK,WAAY68B,UAAW,CAAC,eAAgB,kBAC/C,CAAE78B,IAAK,mBAAoB68B,UAAW,CAAC,eAAgB,kBACvD,CAAE78B,IAAK,aAAc68B,UAAW,CAAC,kBACjC,CAAE78B,IAAK,cAAe68B,UAAW,CAAC,YAClC,CAAE78B,IAAK,8BAA0B68B,UAAW,CAAC,sBAC7C,CAAE78B,IAAK,YAAa68B,UAAW,CAAC,iBAChC,CAAE78B,IAAK,eAAgB68B,UAAW,CAAC,iBACnC,CAAE78B,IAAK,eAAgB68B,UAAW,CAAC,iBACnC,CAAE78B,IAAK,cAAe68B,UAAW,CAAC,iBAClC,CAAE78B,IAAK,eAAgB68B,UAAW,CAAC,kBAIxBC,GAAqB,CAChChlB,WAAY,CACV,CACElP,KAAM,YACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,YAAah5B,MAAO,OAE1C,CACEkF,KAAM,OACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,YAAah5B,MAAO,QAG5CkU,aAAc,CACZ,CACEhP,KAAM,0BACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,mBAAoBh5B,MAAO,UACvC,CAAEg5B,SAAU,aAAch5B,MAAO,KACjC,CAAEg5B,SAAU,aAAch5B,MAAO,OAGrC,CACEkF,KAAM,aACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,mBAAoBh5B,MAAO,UACvC,CAAEg5B,SAAU,aAAch5B,MAAO,KACjC,CAAEg5B,SAAU,aAAch5B,MAAO,OAGrC,CACEkF,KAAM,aACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,mBAAoBh5B,MAAO,UACvC,CAAEg5B,SAAU,aAAch5B,MAAO,KACjC,CAAEg5B,SAAU,aAAch5B,MAAO,OAGrC,CACEkF,KAAM,OACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,mBAAoBh5B,MAAO,aAGnDmU,gBAAiB,CACf,CACEjP,KAAM,eACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,2BAA4Bh5B,MAAO,QAC/C,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,QACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,2BAA4Bh5B,MAAO,QAC/C,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,OACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,2BAA4Bh5B,MAAO,QAC/C,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,QAASh5B,MAAO,OAGhC,CACEkF,KAAM,OACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,2BAA4Bh5B,MAAO,WAI3D,gCAAiC,CAC/B,CACEkF,KAAM,+BACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,sBACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,eACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,eACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,uBACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,gBACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,gBACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,sBACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,eACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,eACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,sBACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,eACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,eACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,uBACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,gBACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,gBACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,uBACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,gBACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,gBACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,uBACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,gBACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,gBACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,OACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,UAAWh5B,MAAO,QAI1CwU,YAAa,CACX,CACEtP,KAAM,cACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,gBAAiBh5B,MAAO,QACpC,CAAEg5B,SAAU,iBAAkBh5B,MAAO,OAGzC,CACEkF,KAAM,WACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,gBAAiBh5B,MAAO,QACpC,CAAEg5B,SAAU,WAAYh5B,MAAO,OAGnC,CACEkF,KAAM,YACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,gBAAiBh5B,MAAO,QACpC,CAAEg5B,SAAU,YAAah5B,MAAO,OAGpC,CACEkF,KAAM,cACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,gBAAiBh5B,MAAO,QACpC,CAAEg5B,SAAU,cAAeh5B,MAAO,OAGtC,CACEkF,KAAM,OACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,gBAAiBh5B,MAAO,eAIhD,mBAAoB,CAClB,CACEkF,KAAM,uBACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,iBAAkBh5B,MAAO,mBAE/C,CACEkF,KAAM,uBACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,iBAAkBh5B,MAAO,mBAE/C,CACEkF,KAAM,gBACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,iBAAkBh5B,MAAO,YAE/C,CACEkF,KAAM,uBACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,iBAAkBh5B,MAAO,mBAE/C,CACEkF,KAAM,uBACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,iBAAkBh5B,MAAO,mBAE/C,CACEkF,KAAM,gBACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,iBAAkBh5B,MAAO,YAE/C,CACEkF,KAAM,wBACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,iBAAkBh5B,MAAO,mBAE/C,CACEkF,KAAM,wBACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,iBAAkBh5B,MAAO,mBAE/C,CACEkF,KAAM,iBACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,iBAAkBh5B,MAAO,YAE/C,CACEkF,KAAM,wBACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,iBAAkBh5B,MAAO,mBAE/C,CACEkF,KAAM,wBACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,iBAAkBh5B,MAAO,mBAE/C,CACEkF,KAAM,cACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,iBAAkBh5B,MAAO,aAGjDqU,cAAe,CACb,CACEnP,KAAM,cACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,OACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,OACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,UAAWh5B,MAAO,KAC9B,CAAEg5B,SAAU,OAAQh5B,MAAO,KAC3B,CAAEg5B,SAAU,OAAQh5B,MAAO,OAG/B,CACEkF,KAAM,OACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,UAAWh5B,MAAO,QAG1CuU,cAAe,CACb,CACErP,KAAM,UACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,wBAAyBh5B,MAAO,QAC5C,CAAEg5B,SAAU,UAAWh5B,MAAO,OAGlC,CACEkF,KAAM,UACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,wBAAyBh5B,MAAO,QAC5C,CAAEg5B,SAAU,UAAWh5B,MAAO,OAGlC,CACEkF,KAAM,UACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,wBAAyBh5B,MAAO,QAC5C,CAAEg5B,SAAU,UAAWh5B,MAAO,OAGlC,CACEkF,KAAM,UACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,wBAAyBh5B,MAAO,QAC5C,CAAEg5B,SAAU,UAAWh5B,MAAO,OAGlC,CACEkF,KAAM,OACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,wBAAyBh5B,MAAO,WAGxDsU,aAAc,CACZ,CACEpP,KAAM,iBACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,WAAYh5B,MAAO,KAC/B,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,SAAUh5B,MAAO,OAGjC,CACEkF,KAAM,QACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,WAAYh5B,MAAO,KAC/B,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,SAAUh5B,MAAO,OAGjC,CACEkF,KAAM,SACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,WAAYh5B,MAAO,KAC/B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,QAASh5B,MAAO,OAGhC,CACEkF,KAAM,QACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,WAAYh5B,MAAO,KAC/B,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,QAASh5B,MAAO,OAGhC,CACEkF,KAAM,QACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,WAAYh5B,MAAO,KAC/B,CAAEg5B,SAAU,QAASh5B,MAAO,KAC5B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,QAASh5B,MAAO,OAGhC,CACEkF,KAAM,SACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,WAAYh5B,MAAO,KAC/B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,QAASh5B,MAAO,OAGhC,CACEkF,KAAM,SACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,WAAYh5B,MAAO,KAC/B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,QAASh5B,MAAO,OAGhC,CACEkF,KAAM,SACNm0B,aAAa,EACbC,MAAO,CACL,CAAEN,SAAU,WAAYh5B,MAAO,KAC/B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,SAAUh5B,MAAO,KAC7B,CAAEg5B,SAAU,QAASh5B,MAAO,OAGhC,CACEkF,KAAM,OACNm0B,aAAa,EACbC,MAAO,CAAC,CAAEN,SAAU,WAAYh5B,MAAO,SAMhCu5B,GAAqB,CAChC5kB,YAAa,oBACbD,KAAM,qBC1mBD,SAAS8kB,GAAUntC,GAAkF,IAA/EuH,EAAIvH,EAAJuH,KAAMiiB,EAAOxpB,EAAPwpB,QAAS5H,EAAiB5hB,EAAjB4hB,kBAAmBC,EAAe7hB,EAAf6hB,gBAAiBV,EAAQnhB,EAARmhB,SAAUE,EAAarhB,EAAbqhB,cAMlF+rB,EAAU7lC,EAAK2I,QAAO,SAACR,GAAC,OALRmM,EAK0BnM,GALL,QAAZ8Z,GAAqB3N,EAAKwxB,SAAW7jB,EAAQzV,gBAC1D,SAAC8H,GACjB,OAAOA,EAAKyxB,MAAQ1rB,GAAqB/F,EAAKyxB,MAAQzrB,CACxD,CAEsD0rB,CAAU79B,GAL3C,IAACmM,CAK4C,IAC5DyL,EAASzN,YAAO,IAAI2zB,IAAIJ,EAAQ58B,KAAI,SAACd,GAAC,OAAKA,EAAE6pB,QAAQ,MAE1C,UAAbpY,EACFmG,EAAUvX,MAAK,SAACvB,EAAGC,GAAC,OAAKD,EAAE6c,cAAc5c,EAAE,IAE3C6Y,EAAUvX,MAAK,SAACvB,EAAGC,GAAC,OAAKD,EAAIC,CAAC,IAGhC,IAAIg/B,EAAeL,EAAQj9B,OACvBu9B,EAAiBpmB,EAAUnX,OAC3B8R,EAAW,GAEf,GAAsB,QAAlBZ,EAAyB,CAC3B,IAAM2X,EAAcoU,EAAQl9B,QAAO,SAACR,GAAC,OAAKi+B,GAAsBj+B,EAAEk+B,gBAAkBvsB,CAAa,IACjGosB,EAAezU,EAAY7oB,OAC3B8R,EAAQpI,YAAO,IAAI2zB,IAAIxU,EAAYxoB,KAAI,SAACd,GAAC,OAAKA,EAAEm+B,IAAI,MAGpDH,EADsB7zB,YAAO,IAAI2zB,IAAIxU,EAAYxoB,KAAI,SAACd,GAAC,OAAKA,EAAE6pB,QAAQ,MACpCppB,MACpC,CAEA,MAAO,CACL5I,KAAM6lC,EACN9lB,YACAmmB,eACAC,iBACAzrB,WAEJ,CAGO,SAAS0rB,GAAsB7mB,GACpC,OAAQA,GACN,IAAK,mCACH,MAAO,kBACT,IAAK,2BACH,MAAO,uBACT,IAAK,cACL,IAAK,gBACH,MAAO,mBACT,IAAK,aACH,MAAO,cACT,IAAK,qBACH,MAAO,YACT,IAAK,qBACH,MAAO,iBACT,IAAK,WACH,MAAO,UACT,IAAK,MACH,MAAO,2BACT,IAAK,aACH,MAAO,aACT,IAAK,2BACH,MAAO,uBACT,IAAK,4CACL,IAAK,4BACL,IAAK,KACH,MAAO,iBACT,IAAK,aACH,MAAO,SACT,QACE,OAAOA,EAEb,CAGA,SAASgnB,GAAelV,GAAwC,IAArCI,EAAWJ,EAAXI,YAAa+U,EAASnV,EAATmV,UAAWC,EAAQpV,EAARoV,SAC3CzmC,EAAO,CACXiyB,MAAO,GACP3Q,WAAY,EACZ3O,MAAO,GAGH+zB,EAAUp0B,YAAO,IAAI2zB,IAAIxU,EAAYxoB,KAAI,SAACd,GAAC,OAAKA,EAAEq+B,EAAU,MAiBlE,OAhBAxmC,EAAKiyB,MAAQyU,EAAWz9B,KAAI,SAACqI,GAC3B,IAAMqB,EAAQ8e,EAAY9oB,QAAO,SAACR,GAAC,OAAKA,EAAEq+B,KAAel1B,CAAI,IAAE1I,OACzD0Y,EAAa6K,QAASxZ,EAAQ8e,EAAY7oB,OAAU,KAAK0jB,QAAQ,IAMvE,OAJIhb,IAASm1B,IACXzmC,EAAK2S,MAAQA,EACb3S,EAAKshB,WAAaA,GAEb,CAAEhQ,OAAMqB,QAAO2O,aACxB,IAEiB,MAAbmlB,IACFzmC,EAAK2S,MAAQ8e,EAAY7oB,OAAS5I,EAAK2S,MACvC3S,EAAKshB,WAAa6K,QAASnsB,EAAK2S,MAAQ8e,EAAY7oB,OAAU,KAAK0jB,QAAQ,KAGtEtsB,CACT,CAGO,SAAS2mC,GAAUlN,GAAiC,IAA9Bz5B,EAAIy5B,EAAJz5B,KAAM4mC,EAASnN,EAATmN,UAAWhtB,EAAQ6f,EAAR7f,SA8C5C,OA7CgBgtB,EAAU39B,KAAI,SAACsW,GAC7B,IAAMqS,EAAQ,CACZI,SAAU,CACRC,MAAO,GACPtf,MAAO,IAIL8e,EAAczxB,EAAK2I,QAAO,SAACR,GAAC,OAAKi+B,GAAsBj+B,EAAEk+B,gBAAkB9mB,CAAO,IAExF,GAA2B,IAAvBkS,EAAY7oB,OACd,MAAO,CAAC,EAGV,IAAMmX,EAASzN,YAAO,IAAI2zB,IAAIxU,EAAYxoB,KAAI,SAACd,GAAC,OAAKA,EAAE6pB,QAAQ,MAwB/D,OAvBAJ,EAAMI,SAASrf,MAAQoN,EAAUnX,OACjCgpB,EAAMI,SAASC,MAAQlS,EAAU9W,KAAI,SAAC0W,GACpC,MAAO,CACLrO,KAAMqO,EACNhN,MAAO8e,EAAY9oB,QAAO,SAACR,GAAC,OAAKA,EAAE6pB,WAAarS,CAAQ,IAAE/W,OAE9D,IACAgpB,EAAMI,SAASC,MAAMzpB,MAAK,SAACvB,EAAGC,GAAC,OAAMD,EAAE0L,OAASzL,EAAEyL,MAAQ,GAAK,CAAC,IAE/C,UAAbiH,GACFgY,EAAM+B,IAAM4S,GAAgB,CAAE9U,cAAa+U,UAAW,kBAAmBC,SAAU,QACnF7U,EAAM7B,IAAMwW,GAAgB,CAAE9U,cAAa+U,UAAW,MAAOC,SAAU,QACvE7U,EAAM5B,IAAMuW,GAAgB,CAAE9U,cAAa+U,UAAW,MAAOC,SAAU,QACvE7U,EAAM3B,OAASsW,GAAgB,CAAE9U,cAAa+U,UAAW,mBAAoBC,SAAU,WACvF7U,EAAMxF,YAAcma,GAAgB,CAAE9U,cAAa+U,UAAW,eAAgBC,SAAU,oBACxF7U,EAAMzB,KAAOoW,GAAgB,CAAE9U,cAAa+U,UAAW,iBAAkBC,SAAU,SACnF7U,EAAM1B,MAAQqW,GAAgB,CAAE9U,cAAa+U,UAAW,iBAAkBC,SAAU,YAEpF7U,EAAMxF,YAAcma,GAAgB,CAAE9U,cAAa+U,UAAW,yBAA0BC,SAAU,MAClG7U,EAAM9Q,KAAOylB,GAAgB,CAAE9U,cAAa+U,UAAW,oBAAqBC,SAAU,MACtF7U,EAAMxB,KAAOmW,GAAgB,CAAE9U,cAAa+U,UAAW,oBAAqBC,SAAU,OAGjF,CACLn1B,KAAMiO,EACN5M,MAAO8e,EAAY7oB,OACnBgpB,QAEJ,GAGF,CAIO,SAASiV,GAAYzF,GAAyD,IAAtDphC,EAAIohC,EAAJphC,KAAMua,EAAK6mB,EAAL7mB,MAAOX,EAAQwnB,EAARxnB,SAAQktB,EAAA1F,EAAE2F,0BAAkB,IAAAD,GAAQA,EACxEE,EAAY,GACZC,EAAwB,CAAC,EAC3BC,EAAkB,GAChBC,EAAuC,CAAC,EAE7B,UAAbvtB,GACFjS,OAAOC,KAAK+9B,IAAoB79B,SAAQ,SAACY,GACvCu+B,EAAsBv+B,GAAO,GAC7By+B,EAAqCz+B,GAAO,EAC9C,IAGF,IAAM0+B,EAAgB7sB,EAAMtR,KAAI,SAACgd,GAC/B,IAAMohB,EAAWrnC,EAAK2I,QAAO,SAACR,GAAC,OAAKA,EAAE49B,OAAS9f,CAAI,IAC7C3Z,EAAW,CACfgF,KAAM2U,EAAKqhB,WACX30B,MAAO00B,EAASz+B,QAEdgpB,EAAQ,CAAC,EAEb,GAAIyV,EAASz+B,OAAS,EAAG,CACvB,IAAMmX,EAASzN,YAAO,IAAI2zB,IAAIoB,EAASp+B,KAAI,SAACd,GAAC,OAAKA,EAAE6pB,QAAQ,MAS5D,GAPAJ,EAAQ7R,EAAUwnB,QAAO,SAACC,EAAaC,GACrC,IAAM90B,EAAQ00B,EAAS1+B,QAAO,SAACR,GAAC,OAAKA,EAAE6pB,WAAayV,CAAY,IAAE7+B,OAGlE,OAFA4+B,EAAYC,GAAgB90B,EAErB60B,CACT,GAAG,CAAC,GAEAH,EAASz+B,QAAU,GAAI,CACzB,IAAM8+B,EAAY,CAAC,EAEnB,GAAiB,UAAb9tB,EACFurB,GAAYr9B,SAAQ,SAAC6/B,GACnB,IAAMC,EAAWP,EAAS1+B,QAAO,SAACR,GAAC,OAAKw/B,EAAK37B,OAAOG,SAAShE,EAAEw/B,EAAKvC,UAAU,IAC9EsC,EAAUC,EAAKj/B,KAAOk/B,EAASh/B,OAEd,qBAAb++B,EAAKj/B,MACPg/B,EAAU,mBAAqBL,EAAS1+B,QAAO,SAACR,GAAC,MAA0B,SAArBA,EAAEw/B,EAAKvC,SAAoB,IAAEx8B,OAEvF,IAEAy8B,GAAkCv9B,SAAQ,SAAC6/B,GACzC,IAAMC,EAAWP,EAAS1+B,QAAO,SAACR,GAAC,OAAKw/B,EAAK37B,OAAOG,SAAShE,EAAEw/B,EAAKvC,UAAU,IAC9EsC,EAAUC,EAAKj/B,KAAOk/B,EAASh/B,MACjC,QACK,CAEL08B,GAAYx9B,SAAQ,SAAC6/B,GACnB,IAAMC,EAAWP,EAAS1+B,QAAO,SAACR,GAAC,OAAKw/B,EAAKpC,UAAUziB,MAAK,SAACsiB,GAAQ,MAAqB,MAAhBj9B,EAAEi9B,EAAiB,GAAC,IAC9FsC,EAAUC,EAAKj/B,KAAOk/B,EAASh/B,MACjC,IAEA,IAAM68B,EAAc4B,EAAS1+B,QAAO,SAACR,GAAC,MAAkC,MAA7BA,EAAE0/B,sBAA8B,IAC3EH,EAAuB,YAAIjC,EAAY78B,OAGvCjB,OAAOC,KAAK+9B,IAAoB79B,SAAQ,SAACY,GACvC,IAAMo/B,EAAoBngC,OAAOogC,YAC/BpgC,OAAOqB,QAAQ4oB,GACZppB,MAAK,SAAAg5B,EAAAwG,GAAA,IAAI/gC,EAAJtH,YAAA6hC,EAAA,GAAK,GAAO,OAAP7hC,YAAAqoC,EAAA,GAAO,GAAU/gC,CAAC,IAC5BoK,MAAM,EAAG,KAGd81B,EAAqCz+B,GAAKH,KAAK4C,MAC7Cg8B,EAAqCz+B,GACrCf,OAAOC,KAAKkgC,IAGd,IAAMG,EAAYC,GAAmB,CAAEC,QAASz/B,EAAK0/B,aAAcf,IAE7D/yB,EAAI2O,oDAAA,GAAQ3W,GAAaw7B,GAAsBG,GAAS,IAAE5b,WAAY/f,EAASqG,eAC9E2B,EAAK3B,MAEZs0B,EAAsBv+B,GAAKH,KAAK+L,EAClC,GACF,CAEA0yB,EAAUz+B,KAAI0a,0BAAC,CAAC,EAAI3W,GAAao7B,GACnC,CACF,CAEA,GAAiB,UAAb9tB,GAAwBmtB,EAAoB,CAC9C,IAAMsB,EAAc1gC,OAAOogC,YACzBpgC,OAAOqB,QAAQ4oB,GACZppB,MAAK,SAAA8/B,EAAAC,GAAA,IAAIthC,EAAJtH,YAAA2oC,EAAA,GAAK,GAAO,OAAP3oC,YAAA4oC,EAAA,GAAO,GAAUthC,CAAC,KAKjC,OAFAigC,EAAkBA,EAAgBx8B,OAAO/C,OAAOC,KAAKygC,IAErDplB,0BAAA,GACK3W,GACA+7B,EAEP,CAEA,OAAAplB,0BAAA,GACK3W,GACAslB,EAEP,IAmBA,OAjBImV,IACFG,EAAe50B,YAAO,IAAI2zB,IAAIiB,EAAgBj+B,KAAI,SAACd,GAAC,OAAKA,CAAC,OAC1CK,MAAK,SAACvB,EAAGC,GAAC,OAAKD,EAAIC,CAAC,IAGtCS,OAAOC,KAAKu/B,GAAsCr/B,SAAQ,SAACY,GACzD,IAAM8/B,EAAMl2B,YAAO,IAAI2zB,IAAIkB,EAAqCz+B,KAEhEu+B,EAAsBv+B,GAAKZ,SAAQ,SAACwM,GAClC,IAAM1M,EAAOD,OAAOC,KAAK0M,GACRk0B,EAAO7/B,QAAO,SAACR,GAAC,OAAMP,EAAKuE,SAAShE,EAAE,IAC9CL,SAAQ,SAACK,GAChBmM,EAAKnM,GAAK,CACZ,GACF,GACF,IAEO,CAAEi/B,cAAeA,EAAcz+B,QAAO,SAACR,GAAC,OAAKA,EAAEwK,MAAQ,CAAC,IAAGq0B,YAAWE,kBAAiBD,wBAChG,CAGO,SAASwB,GAAgBC,GAAiC,IAA9B1oC,EAAI0oC,EAAJ1oC,KAAM+f,EAAS2oB,EAAT3oB,UAAWnG,EAAQ8uB,EAAR9uB,SAC5CoN,EAA2B,CAAC,EAEjB,UAAbpN,EACFurB,GAAYr9B,SAAQ,SAAC8tB,GACF,gBAAbA,EAAKltB,MACPse,EAAyB4O,EAAKltB,KAAO,GAEzC,IAEAf,OAAOC,KAAK+9B,IAAoB79B,SAAQ,SAACY,GACvCse,EAAyBte,GAAO,EAClC,IAGF,IAAMoe,EAAqB/G,EAAU9W,KAAI,SAAC0W,GACxC,IAAMgpB,EAAe3oC,EAAK2I,QAAO,SAACR,GAAC,OAAKA,EAAE6pB,WAAarS,CAAQ,IAEzDrT,EAAW,CACfgF,KAAMqO,EACN0M,WAAYsc,EAAa//B,OACzBq0B,eAAgB,GAGZ2L,EAAoB,CACxBt3B,KAAMqO,EACN0M,WAAYsc,EAAa//B,OACzBq0B,eAAgB,GAGlB,GAAiB,UAAbrjB,EACFurB,GAAYr9B,SAAQ,SAAC6/B,GACnB,IAAMC,EAAWe,EAAahgC,QAAO,SAACR,GAAC,OAAKw/B,EAAK37B,OAAOG,SAAShE,EAAEw/B,EAAKvC,UAAU,IAOlF,GANA94B,EAASq7B,EAAKj/B,KAAOk/B,EAASh/B,OAEb,qBAAb++B,EAAKj/B,MACP4D,EAAS,mBAAqBq8B,EAAahgC,QAAO,SAACR,GAAC,MAA0B,SAArBA,EAAEw/B,EAAKvC,SAAoB,IAAEx8B,QAGvE,gBAAb++B,EAAKj/B,IAAuB,CAC9B,IAAMu/B,EAAShlB,aAAA,GAAQ2lB,GAEvBpD,GAAmBmC,EAAKj/B,KAAKZ,SAAQ,SAAC+gC,GACpC,IAAMC,EAAgBD,EAAUv3B,KAEhC22B,EAAUa,GAAiBH,EAAahgC,QAAO,SAACR,GAC9C,OAAO0gC,EAAUnD,MAAMqD,OAAM,SAACp4B,GAAC,OAAKxI,EAAEwI,EAAEy0B,YAAcz0B,EAAEvE,KAAK,GAC/D,IAAGxD,OAECigC,EAAUpD,cACZwC,EAAUhL,eAAiBgL,EAAU5b,WAAa4b,EAAUa,GAEhE,IAEA9hB,EAAyB2gB,EAAKj/B,KAAKH,KAAK0/B,EAC1C,CACF,QACK,CACL3C,GAAYx9B,SAAQ,SAAC6/B,GACnB,IAAMC,EAAWe,EAAahgC,QAAO,SAACR,GAAC,OAAKw/B,EAAKpC,UAAUziB,MAAK,SAACsiB,GAAQ,MAAqB,MAAhBj9B,EAAEi9B,EAAiB,GAAC,IAClG94B,EAASq7B,EAAKj/B,KAAOk/B,EAASh/B,MAChC,IAEA,IAAM68B,EAAckD,EAAahgC,QAAO,SAACR,GAAC,MAAkC,MAA7BA,EAAE0/B,sBAA8B,IAC/Ev7B,EAAsB,YAAIm5B,EAAY78B,OAEtCjB,OAAOC,KAAK+9B,IAAoB79B,SAAQ,SAACY,GACvC,IAAMu/B,EAAShlB,0BAAA,GAAQ2lB,GAAsBV,GAAmB,CAAEC,QAASz/B,EAAK0/B,aAAcO,KAC9F3hB,EAAyBte,GAAKH,KAAK0/B,EACrC,GACF,CAGA,OADA37B,EAAS2wB,eAAiB3wB,EAAS+f,WAAa/f,EAAsB,YAC/DA,CACT,IAQA,OANAwa,EAAmBte,MAAK,SAACvB,EAAGC,GAAC,OAAKA,EAAE+1B,eAAiBh2B,EAAEg2B,cAAc,IACrEt1B,OAAOC,KAAKof,GAA0Blf,SAAQ,SAACY,GAC7Cse,EAAyBte,GAAKF,MAAK,SAACvB,EAAGC,GAAC,OAAKA,EAAE+1B,eAAiBh2B,EAAEg2B,cAAc,IAChFjW,EAAyBte,GAAOse,EAAyBte,GAAK2I,MAAM,EAAG,GACzE,IAEO,CAAEyV,qBAAoBE,2BAC/B,CAEA,IAAMgiB,GAAS,CAAC,QAAS,QAAS,QAAS,QAAS,OAAQ,QACtDC,GAAQ,CAAC,OAAQ,OAAQ,OAAQ,QAEhC,SAASC,GAAkBC,GAAY,IAATnpC,EAAImpC,EAAJnpC,KAC7B2nB,EAAkB,CACtByhB,QAAS,GACTC,QAAS,IAwDX,OArDA1hC,OAAOC,KAAK+f,GAAiB7f,SAAQ,SAACY,GACpC,IAEM4gC,EAFMh3B,YAAO,IAAI2zB,IAAIjmC,EAAKiJ,KAAI,SAACd,GAAC,OAAKA,EAAEO,EAAI,MAE1BO,KAAI,SAACmD,GAC1B,IAAMm9B,EAAgBvpC,EAAK2I,QAAO,SAACR,GAAC,OAAKA,EAAEO,KAAS0D,CAAK,IACnD2jB,EAAMwZ,EAAc5gC,QAAO,SAACR,GAAC,OAAK6gC,GAAO78B,SAAShE,EAAE6pB,SAAS,IAC7DwX,EAAKD,EAAc5gC,QAAO,SAACR,GAAC,OAAK8gC,GAAM98B,SAAShE,EAAE6pB,SAAS,IAC3DjR,EAAcwoB,EAAc5gC,QAAO,SAACR,GAAC,MAA6B,MAAxBA,EAAEshC,iBAAyB,IACrE3oB,EAAOyoB,EAAc5gC,QAAO,SAACR,GAAC,MAA6B,MAAxBA,EAAEuhC,iBAAyB,IAC9DC,EAAaJ,EAAc5gC,QAAO,SAACR,GAAC,MAAsB,MAAjBA,EAAEyhC,UAAkB,IAC7DC,EAASN,EAAc5gC,QAAO,SAACR,GAAC,OAAM,CAAC,IAAK,SAASgE,SAAShE,EAAE2hC,OAAO,IACvEC,EAAUR,EAAc5gC,QAC5B,SAACR,GAAC,OACC6gC,GAAO78B,SAAShE,EAAE6pB,YAClBiX,GAAM98B,SAAShE,EAAE6pB,WACM,MAAxB7pB,EAAEshC,mBACsB,MAAxBthC,EAAEuhC,mBACe,MAAjBvhC,EAAEyhC,YACF,CAAC,IAAK,SAASz9B,SAAShE,EAAE2hC,OAAO,IAGrC,MAAO,CACLx4B,KAAMlF,EACNuG,MAAO42B,EAAc3gC,OACrBmnB,IAAKA,EAAInnB,OACT4gC,GAAIA,EAAG5gC,OACPmY,YAAaA,EAAYnY,OACzBkY,KAAMA,EAAKlY,OACX,kBAAmB+gC,EAAW/gC,OAC9BihC,OAAQA,EAAOjhC,OACfmhC,QAASA,EAAQnhC,OAErB,IAEA+e,EAAgBjf,GAAO4gC,EAAQ3gC,QAAO,SAACR,GAAC,OAAMA,EAAEmJ,KAAKnF,SAAS,UAAU,IACxE,IAAM69B,EAAcV,EAAQ3gC,QAAO,SAACR,GAAC,OAAKA,EAAEmJ,KAAKnF,SAAS,UAAU,IAEpEwb,EAAgBjf,GAAKH,KAAK,CACxB+I,KAAM,UACNqB,MAAOq3B,EAAYzC,QAAO,SAAC0C,EAAO7c,GAAG,OAAKA,EAAIza,MAAQs3B,CAAK,GAAE,GAC7Dla,IAAKia,EAAYzC,QAAO,SAAC0C,EAAO7c,GAAG,OAAKA,EAAI2C,IAAMka,CAAK,GAAE,GACzDT,GAAIQ,EAAYzC,QAAO,SAAC0C,EAAO7c,GAAG,OAAKA,EAAIoc,GAAKS,CAAK,GAAE,GACvDlpB,YAAaipB,EAAYzC,QAAO,SAAC0C,EAAO7c,GAAG,OAAKA,EAAIrM,YAAckpB,CAAK,GAAE,GACzEnpB,KAAMkpB,EAAYzC,QAAO,SAAC0C,EAAO7c,GAAG,OAAKA,EAAItM,KAAOmpB,CAAK,GAAE,GAC3D,kBAAmBD,EAAYzC,QAAO,SAAC0C,EAAO7c,GAAG,OAAKA,EAAI,mBAAqB6c,CAAK,GAAE,GACtFJ,OAAQG,EAAYzC,QAAO,SAAC0C,EAAO7c,GAAG,OAAKA,EAAIyc,OAASI,CAAK,GAAE,GAC/DF,QAASC,EAAYzC,QAAO,SAAC0C,EAAO7c,GAAG,OAAKA,EAAI2c,QAAUE,CAAK,GAAE,KAGnEtiB,EAAgBjf,GAAKF,MAAK,SAACvB,EAAGC,GAAC,OAAKA,EAAEyL,MAAQ1L,EAAE0L,KAAK,IACrDgV,EAAgBjf,GAAOif,EAAgBjf,GAAK2I,MAAM,EAAG,GACvD,IAEOsW,CACT,CAEA,SAASuiB,GAAiBC,EAAUC,GAClC,MAAiB,iBAAbA,EACKhE,GAAsB+D,EAASC,IAGjCD,EAASC,EAClB,CAEO,SAASC,GAAkBC,GAA2C,IAAxCtqC,EAAIsqC,EAAJtqC,KAAMuqC,EAAaD,EAAbC,cAAeC,EAAcF,EAAdE,eAClD3iB,EAAkB,GACpB4iB,EAAwB,GACxBC,EAAkB,GA4CtB,OA1CIH,IAAkBC,EAEpBE,EADAD,EAAqBn4B,YAAO,IAAI2zB,IAAIjmC,EAAKiJ,KAAI,SAACd,GAAC,OAAK+hC,GAAiB/hC,EAAGqiC,EAAe,OAGvFC,EAAqBn4B,YAChB,IAAI2zB,IAAIjmC,EAAKiJ,KAAI,SAACd,GAAC,SAAAuC,OAAQw/B,GAAiB/hC,EAAGoiC,GAAc,OAAA7/B,OAAMw/B,GAAiB/hC,EAAGqiC,GAAe,MAE3GE,EAAep4B,YAAO,IAAI2zB,IAAIjmC,EAAKiJ,KAAI,SAACd,GAAC,OAAK+hC,GAAiB/hC,EAAGqiC,EAAe,OAGnFC,EAAsB3iC,SAAQ,SAAC6iC,GAC7B,IAAIC,EAAe,GAEnB,GAAIL,IAAkBC,EACpBI,EAAe5qC,EAAK2I,QAAO,SAACR,GAAC,OAAK+hC,GAAiB/hC,EAAGoiC,KAAmBI,CAAW,QAC/E,CACL,IAAME,EAAYF,EAAYnuB,MAAM,OACpCouB,EAAe5qC,EAAK2I,QAClB,SAACR,GAAC,OACA+hC,GAAiB/hC,EAAGoiC,KAAmBM,EAAU,IAAMX,GAAiB/hC,EAAGqiC,KAAoBK,EAAU,EAAE,GAEjH,CAEA,IAAMl4B,EAAQi4B,EAAahiC,OAErBkiC,EAAmBH,EAAYnuB,MAAM,OACrCknB,EAAaoH,EAAiBliC,OAAS,EAAIkiC,EAAiB,GAAKH,EACvE9iB,EAAgBtf,KAAK,CACnB+I,KAAMq5B,EACNjH,aACAC,EAAGhxB,EACHxK,GAAIyiC,EAAarD,QAAO,SAAC0C,EAAO7c,GAAG,OAAKjB,OAAOiB,EAAI2d,iBAAmBd,CAAK,GAAE,GAAKt3B,GAAO2Z,QAAQ,GACjGnjB,GAAIyhC,EAAarD,QAAO,SAAC0C,EAAO7c,GAAG,OAAKjB,OAAOiB,EAAI4d,kBAAoBf,CAAK,GAAE,GAAKt3B,GAAO2Z,QAAQ,IAEtG,IAEuB,SAAnBke,EACFE,EAAgBliC,MAAK,SAACvB,EAAGC,GAAC,OAAKA,EAAID,CAAC,IAEpCyjC,EAAgBliC,MAAK,SAACvB,EAAGC,GAAC,OAAKD,EAAE6c,cAAc5c,EAAE,IAG5C,CAAElH,KAAM6nB,EAAiB6iB,kBAClC,CAGA,SAASO,GAAcC,GACrB,OAAOA,EAAK/+B,SAAS,MAAQ++B,EAAK/+B,SAAS,MAAQ++B,EAAK/+B,SAAS,IACnE,CAGA,SAAS+7B,GAAkBiD,GAA6B,IAA1BhD,EAAOgD,EAAPhD,QAASC,EAAY+C,EAAZ/C,aAC/BH,EAAY,CAAC,EACb7C,EAAWO,GAAmBwC,GAE9BiD,EAAgBhD,EAAaz/B,QAAO,SAACR,GACzC,GAAoB,MAAhBA,EAAEi9B,GACJ,OAAO,EAGT,IAAMnD,EAAQ95B,EAAEi9B,GAAU5oB,MAAM,KAEhC,GAAIylB,EAAM8G,OAAM,SAACsC,GAAC,OAAKJ,GAAcI,EAAE,IACrC,OAAO,EAGT,GAAqB,IAAjBpJ,EAAMr5B,OACJq5B,EAAM,KAAMgG,EACdA,EAAUhG,EAAM,KAAO,EAEvBgG,EAAUhG,EAAM,IAAM,MAEnB,CACL,IAAMqJ,EAAiBrJ,EAAMt5B,QAAO,SAAC0iC,GAAC,OAAMJ,GAAcI,EAAE,IAC5DC,EAAe9iC,MAAK,SAACvB,EAAGC,GAAC,OAAKD,EAAE6c,cAAc5c,EAAE,IAEhD,IAAMoK,EAAOg6B,EAAeviC,KAAK,KAAK4vB,WAAW,IAAK,OAElDrnB,KAAQ22B,EACVA,EAAU32B,IAAS,EAEnB22B,EAAU32B,GAAQ,CAEtB,CAEA,OAAO,CACT,IAKA,OAHA22B,EAAgB,KAAIG,EAAax/B,OAASwiC,EAAcxiC,OACxDq/B,EAAUhL,eAAiBmO,EAAcxiC,OAElCq/B,CACT,C,cCxhBM7uC,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvChD,YAAa,CACXd,SAAU,QACVC,MAAO,GACPklB,OAAQ,EACR7P,QAAS,OAET,4BAA6B,CAC3BrV,MAAO,EACPqV,QAAS,aAGd,I,UCgBYu8B,GAAc,SAAC5+B,GAC1B,IAAMpN,EAAUnG,KACVwkB,EAAa3B,aAAc,sBAE3B5D,EAAWd,KACX4C,EAAc1C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUhC,WAAW,IACnEC,EAAY3C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU/B,SAAS,IAC/DR,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAC7DmG,EAAYtI,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU3B,kBAAkB,IAoD9E,OACElN,eAAA,OAAKP,UAAWxN,EAAQ/E,YAAYwS,SAClCM,eAACiB,IAAO,CAACC,MAAM,uBAAuB4B,UAAU,OAAMpD,SACpDM,eAAA,QAAAN,SACEM,eAACk+B,KAAG,CACFtyC,MAAM,UACNiX,KAAMyN,EAAa,SAAW,QAC9B5P,QAzDV,WACEqK,EAASsC,IAAc,IACvBtC,EACEgQ,GAAa,CACXjC,cAAc,EACdC,cAAc,EACdC,gBAAgB,EAChBC,aAAa,EACbC,UAAU,EACVC,aAAa,EACbC,aAAa,KAIjBrO,EAASmK,GAAW,QACpBnK,EAASiD,GAAqBnB,IAC9B9B,EAASkD,GAAmBnB,IAC5B/B,EAASgK,GAAY,CAAER,YAAa,CAAC,EAAG,GAAIC,KAAM,KAClDzJ,EAAS0C,GAAiB,QAET,UAAbnB,GACFvB,EAASiK,GAAW,UACpBjK,EAAS4Q,GAA8B,qBACvC5Q,EAASqQ,GAA2B6M,OAEpCld,EAASiK,GAAW,gBACpBjK,EAASqQ,GAA2B8M,KACpCnd,EAAS4Q,GAA8B,gBACvC5Q,EAAS+Q,GAA0B,gBACnC/Q,EAASgR,GAAqB,WAC9BhR,EAASkR,GAAwB,YACjClR,EAASoR,GAA4B,iBACrCpR,EAASqR,GAA6B,SACtCrR,EAASsR,GAA4B,CAAC,KAGxCtR,EAASsQ,GAAwB,eACjCtQ,EAAS2Q,GAAyB,eAClC3Q,EAASoQ,GAAyB,WAClCpQ,EAASsC,IAAc,IACvBtC,EAASqK,IAAY,IAErB,IAAM0kB,EAAgBqB,GAAiB,CAAEzoC,KAAM2M,EAAM3M,KAAM+f,YAAWnG,aACtEvB,EAASwQ,GAAyBue,EAActgB,mBAAmBzV,MAAM,EAAG,GAAGpI,KAAI,SAACd,GAAC,OAAKA,EAAEmJ,IAAI,MAChG+G,EAASuQ,GAAqCwe,EAActgB,mBAAmBzV,MAAM,EAAG,GAAGpI,KAAI,SAACd,GAAC,OAAKA,EAAEmJ,IAAI,MAC5G+G,EAASuR,GAAsB,KAC/BvR,EAASwR,IAAa,GAExB,EAUUxW,SAAuB,SAAbuG,EAAoB5M,SAE9BM,eAACm+B,KAAU,CAACv+B,GAAI,CAAEhU,MAAO,iBAMrC,ECxGME,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCwf,KAAM,CACJ,iBAAkB,CAChBzgB,aAAc,SAGlB0gB,YAAa,CACXliB,QAAS,OACTC,cAAe,SACfgB,WAAY,SACZ+gB,OAAQ,OAEVwG,YAAa,CACX5mB,SAAU,kBACVmB,WAAY,iBACZ3B,UAAW,QACXE,SAAU,oBAEZmnB,WAAY,CACV,sBAAuB,CACrB7mB,SAAU,SAGd2oB,UAAW,CACTlrB,UAAW,oBAEd,ICvBYsxC,GAAgB,WAC3B,IAAMnsC,EAAUnG,KACVif,EAAWd,KACXuC,EAAgBrC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUrC,aAAa,IACvE6M,EAAqBlP,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMlE,kBAAkB,IAC7E1E,EAAUxK,IAAe,SAACzf,GAAK,OAAKA,EAAMiR,IAAIgZ,OAAO,IACrD5H,EAAoB5C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU9B,iBAAiB,IAC/EC,EAAkB7C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU7B,eAAe,IAC3EV,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAMnE,OACEtM,eAACoX,KAAI,CAAC3X,UAAWxN,EAAQyd,KAAKhQ,SAC5BH,gBAAC+X,KAAW,CAAC7X,UAAWxN,EAAQ0d,YAAYjQ,SAAA,CAC1CM,eAACL,IAAU,CAACG,QAAQ,KAAKtP,WAAY,IAAIkP,SAAA,gBAAAtC,OAExB,SAAbkP,EACI,GAAE,GAAAlP,OACCuX,EAAO,eAAAvX,OAAgC,QAAlBoP,EAA0B,gBAAkBA,EAAa,UAAApP,OAC/E2P,GAAqB,OAAM,QAAA3P,OACtB4P,GAAmB,WAGlChN,eAACL,IAAU,CAACG,QAAQ,YAAYtP,WAAY,IAAIkP,SAAC,kCAGjDH,gBAAC8C,IAAM,CACLvC,QAAQ,WACRhB,MAAO0N,EACP1K,SAtBR,SAAsBd,GACpB+J,EAAS0C,GAAiBzM,EAAMsB,OAAOxD,OACzC,EAqBQuQ,WAAY,CAAE5P,UAAWxN,EAAQgkB,aACjCuB,UAAW,CAAEvlB,QAAS,CAAEumB,MAAOvmB,EAAQ+lB,UAAWP,KAAMxlB,EAAQikB,aAChEnQ,SAAuB,SAAbuG,EAAoB5M,SAAA,CAE9BM,eAAC2C,IAAQ,CAAC7D,MAAM,MAAKY,SAAC,QACrB2Z,EAAmB1d,KAAI,SAACsW,EAAS7X,GAChC,OACE4F,eAAC2C,IAAQ,CAAyB7D,MAAOmT,EAAQvS,SAC9CuS,GADY7X,EAAQ,UAI3B,WAKV,ECcaikC,GAAgB,WAAO,IAADrsC,EACjCE,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BQ,EAAIN,EAAA,GAAEO,EAAOP,EAAA,GACpBI,EAA8EL,mBAAS,gBAAeM,EAAAJ,YAAAG,EAAA,GAA/F8rC,EAA+B7rC,EAAA,GAAE8rC,EAAkC9rC,EAAA,GAC1EG,EAAgFT,mBAAS,QAAOU,EAAAR,YAAAO,EAAA,GAAzF4rC,EAAgC3rC,EAAA,GAAE4rC,EAAmC5rC,EAAA,GAEtEkY,EAAWd,KACXiC,EAAa/B,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU3C,UAAU,IACjEI,EAAWnC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUvC,QAAQ,IAC7DqI,EAAUxK,IAAe,SAACzf,GAAK,OAAKA,EAAMiR,IAAIgZ,OAAO,IACrD5H,EAAoB5C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU9B,iBAAiB,IAC/EC,EAAkB7C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU7B,eAAe,IAC3ER,EAAgBrC,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAUrC,aAAa,IACvE6M,EAAqBlP,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAMlE,kBAAkB,IAC7EqlB,EAAiBv0B,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU5B,KAAK,IAChEC,EAAqB/C,IAAe,SAACzf,GAAK,OAAKA,EAAMmkB,UAAU3B,kBAAkB,IACjFsN,EAA2BrQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM/C,wBAAwB,IACzFC,EAA4BtQ,IAAe,SAACzf,GAAK,OAAKA,EAAM6yB,MAAM9C,yBAAyB,IAIjG,SAASkkB,EAAgB3/B,GACvB,IAAM4/B,EAAe5/B,EAAStM,KAC9BqY,EAAS4C,GAAgBixB,EAAatjC,SACtCyP,EAAS6C,GAAiBgxB,EAAatjC,SAEvC,IAAMmX,EAASzN,YAAO,IAAI2zB,IAAIiG,EAAajjC,KAAI,SAACd,GAAC,OAAKA,EAAE6pB,QAAQ,MAC/C,UAAbpY,IACFmG,EAAUvX,MAAK,SAACvB,EAAGC,GAAC,OAAKD,EAAE6c,cAAc5c,EAAE,IAC3CmR,EAASoD,GAAsBsE,KAGjC,IAAMxF,EAAKjI,YAAO,IAAI2zB,IAAIiG,EAAajjC,KAAI,SAACd,GAAC,OAAKA,EAAE49B,IAAI,MAClDa,EAASt0B,YAAO,IAAI2zB,IAAIiG,EAAajjC,KAAI,SAACd,GAAC,OAAKi+B,GAAsBj+B,EAAEk+B,aAAa,MAE3F9rB,EAAM/R,OACNo+B,EAAUp+B,OAEV6P,EAAS2C,GAAkB+E,EAAUnX,SACrCyP,EAAS8C,GAAmB4E,EAAUnX,SACtCyP,EAASmD,GAASjB,IAClBlC,EAAS+C,GAAeb,EAAM,KAC9BlC,EAASiD,GAAqBf,EAAM,KACpClC,EAASgD,GAAad,EAAMA,EAAM3R,OAAS,KAC3CyP,EAASkD,GAAmBhB,EAAMA,EAAM3R,OAAS,KACjDyP,EAASiQ,GAAsBse,IAE/BvuB,EAASoK,GAAWkkB,GAAW,CAAE3mC,KAAMksC,EAActF,YAAWhtB,eAEhE,IAAMwtB,EAAgBqB,GAAiB,CAAEzoC,KAAMksC,EAAcnsB,YAAWnG,aACxEvB,EAASyQ,GAAsBse,EAActgB,qBAC7CzO,EAAS0Q,GAAuBqe,EAActgB,qBAC9CzO,EAASuQ,GAAqCwe,EAActgB,mBAAmBzV,MAAM,EAAG,GAAGpI,KAAI,SAACd,GAAC,OAAKA,EAAEmJ,IAAI,MAC5G+G,EAASwQ,GAAyBue,EAActgB,mBAAmBzV,MAAM,EAAG,GAAGpI,KAAI,SAACd,GAAC,OAAKA,EAAEmJ,IAAI,MAChG+G,EAAS6Q,GAA4Bke,EAAcpgB,2BAEnD,IAAMmlB,EAAYtF,GAAa,CAC7B7mC,KAAMksC,EACN3xB,QACAX,WACAmtB,oBAAoB,IAGtB,GAAiB,UAAbntB,EAAsB,CACxB1hB,QAAQC,IAAI,4BAA6Bg0C,EAAUjF,iBAEnD7uB,EAASoD,GAAsB0wB,EAAUjF,kBAEzC,IAAMvf,EAAkBuhB,GAAmB,CAAElpC,KAAMksC,IACnD7zB,EAASiR,GAAmB3B,IAE5B,IAAME,EAAkBwiB,GAAmB,CACzCrqC,KAAMksC,EACN3B,cAAeziB,EAEf0iB,eAAgB1iB,IAElBzP,EAASsR,GAA4B7J,GAA4B+H,EAAgB6iB,mBACjFryB,EAASmR,GAAmB3B,EAAgB7nB,MAC9C,CAMA,OAJAqY,EAASkQ,GAAqB4jB,EAAU/E,gBACxC/uB,EAASmQ,GAAiB2jB,EAAUnF,YACpC3uB,EAAS8Q,GAA6BgjB,EAAUlF,wBAChD/uC,QAAQC,IAAI,qBAAsBivC,EAActgB,oBACzColB,CACT,CAEA,SACelhC,EAAOL,GAAA,OAAArL,KAAAsK,YAAAC,cAAAC,MAAtB,SAAA0L,EAAuB42B,GAAQ,OAAAviC,cAAAM,MAAA,SAAAsL,GAAA,cAAAA,EAAApL,KAAAoL,EAAAnL,MAAA,OACE,OAA/B+N,EAASyC,IAAe,IAAOrF,EAAAnL,KAAA,EAEzBE,KACHC,IAAI,GAADC,OAAI7L,GAAY,YAAA6L,OAAW0hC,IAC9B10C,MAAK,SAAC4U,GACL,IAAMu5B,EAAUoG,EAAgB3/B,GAGhC,OAFA+L,EAASmK,GAAW,QAEZ5I,GACN,IAAK,QACHvB,EAASiK,GAAW,UACpBjK,EAASqQ,GAA2B6M,KACpCld,EAAS4Q,GAA8B,qBACvC,MACF,IAAK,QACH5Q,EAASiK,GAAW,gBACpBjK,EAASqQ,GAA2B8M,KACpCnd,EAAS4Q,GAA8B,gBACvC5Q,EAAS+Q,GAA0B,gBACnC/Q,EAASkR,GAAwB,YACjClR,EAASgR,GAAqB,WAC9BhR,EAASoR,GAA4B,iBACrCpR,EAASqR,GAA6B,SACtCmiB,EAAmC,gBACnCE,EAAoC,QAMxC9rC,EAAQ4lC,EACV,IACCz6B,SAAQ,WACPiN,EAASyC,IAAe,GAC1B,IAAG,KAAD,mBAAArF,EAAAvK,OAAA,GAAAsK,EAAA,MACLrK,MAAA,KAAAjB,UAAA,CAqID,OAjIAmC,qBAAU,WACR,GAAiB,SAAbuN,EAsCF,OArCA1hB,QAAQC,IAAI,mBACZkgB,EACEgQ,GAAa,CACXjC,cAAc,EACdC,cAAc,EACdC,gBAAgB,EAChBC,aAAa,EACbC,UAAU,EACVC,aAAa,EACbC,aAAa,KAGjBzmB,EAAQ,IACRoY,EAASmK,GAAW,KACpBnK,EAASiD,GAAqB,KAC9BjD,EAASkD,GAAmB,KAC5BlD,EAASgK,GAAY,CAAER,YAAa,CAAC,EAAG,GAAIC,KAAM,KAClDzJ,EAAS0C,GAAiB,QAC1B1C,EAASoK,GAAW,KACpBpK,EAASkQ,GAAqB,KAC9BlQ,EAASmQ,GAAiB,KAC1BnQ,EAASyQ,GAAsB,KAC/BzQ,EAAS6Q,GAA4B,KACrC7Q,EAAS8Q,GAA6B,KACtC9Q,EAASiR,GAAmB,KAC5BjR,EAASmR,GAAmB,KAC5BnR,EAAS4Q,GAA8B,KACvC5Q,EAAS+Q,GAA0B,KACnC/Q,EAASiK,GAAW,KACpBjK,EAASsQ,GAAwB,eACjCtQ,EAAS2Q,GAAyB,eAClC3Q,EAASoQ,GAAyB,WAClCpQ,EAASsR,GAA4B,CAAC,IACtCtR,EAASqK,IAAY,IAErBrK,EAASuR,GAAsB,KAEvBhQ,GACN,IAAK,QACH5O,EAAQ,kBACR,MACF,IAAK,QACHA,EAAQ,uBAMhB,GAAG,CAAC4O,IAIJvN,qBAAU,WACR,GAAIrM,EAAK4I,OAAS,GAAK4Q,EAAY,CAGjC,IAAMpU,EAAUwgC,GAAW,CAAE5lC,OAAMiiB,UAAS5H,oBAAmBC,kBAAiBV,WAAUE,kBACpFlU,EAAeR,EAAQpF,KAAK2I,QAChC,SAACR,GAAC,MAAuB,QAAlB2R,GAA2BssB,GAAsBj+B,EAAEk+B,gBAAkBvsB,CAAa,IAG3F,GACEgO,IAA6B8jB,GAC7B7jB,IAA8B+jB,EAC9B,CAEAD,EAAmC/jB,GACnCikB,EAAoChkB,GAEpC,IAAMF,EAAkBwiB,GAAmB,CACzCrqC,KAAM4F,EACN2kC,cAAeziB,EAEf0iB,eAAgB1iB,IAElBzP,EAASsR,GAA4B7J,GAA4B+H,EAAgB6iB,mBACjFryB,EAASmR,GAAmB3B,EAAgB7nB,MAC9C,KAAO,CACLqY,EAAS6C,GAAiB9V,EAAQ8gC,eAClC7tB,EAAS8C,GAAmB/V,EAAQ+gC,iBACpC9tB,EAASsD,GAAYvW,EAAQsV,WAE7BrC,EAASoK,GAAWkkB,GAAW,CAAE3mC,KAAMoF,EAAQpF,KAAM4mC,UAAWjgB,EAAoB/M,eAEpF,IAAMwtB,EAAgBqB,GAAiB,CACrCzoC,KAAM4F,EACNma,UAAWvF,EACXZ,aAEFvB,EAASyQ,GAAsBse,EAActgB,qBAC7CzO,EAASuQ,GAAqCwe,EAActgB,mBAAmBzV,MAAM,EAAG,GAAGpI,KAAI,SAACd,GAAC,OAAKA,EAAEmJ,IAAI,MAC5G+G,EAAS6Q,GAA4Bke,EAAcpgB,2BAEnD,IAAMmlB,EAAYtF,GAAa,CAC7B7mC,KAAM4F,EACN2U,MAAOyxB,EACPpyB,aAMF,GAJAvB,EAASkQ,GAAqB4jB,EAAU/E,gBACxC/uB,EAASmQ,GAAiB2jB,EAAUnF,YACpC3uB,EAAS8Q,GAA6BgjB,EAAUlF,wBAE/B,UAAbrtB,EAAsB,CACxB,IAAM+N,EAAkBuhB,GAAmB,CAAElpC,KAAM4F,IACnDyS,EAASiR,GAAmB3B,IAE5B,IAAME,EAAkBwiB,GAAmB,CACzCrqC,KAAM4F,EACN2kC,cAAeziB,EAEf0iB,eAAgB1iB,IAElBzP,EAASsR,GAA4B7J,GAA4B+H,EAAgB6iB,mBACjFryB,EAASmR,GAAmB3B,EAAgB7nB,MAC9C,CACF,CACF,CACF,GAAG,CACDwZ,EACAyI,EACA5H,EACAC,EACAR,EACAgO,EACAC,IAIAlb,gBAACkS,GAAU,CAACE,YAAU,EAAAjS,SAAA,CACpBM,eAAC+iB,GAAG,IACJ/iB,eAACo+B,GAAa,IACdp+B,eAACs2B,GAAM,IACPt2B,eAAC2oB,GAAY,IACb3oB,eAACgnB,GAAM,IACPhnB,eAACi+B,GAAW,CAACvrC,KAAMA,MAGzB,EC7UM5G,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCwf,KAAM,CACJ,iBAAkB,CAChBzgB,aAAc,QAEhB0Z,UAAW,SAEbgH,YAAa,CACXnH,OAAQ,UAEVu2B,UAAW,CACTlwC,UAAW,WAEd,ICVYmwC,GAAY,WACvB,IAAM/sC,EAAUnG,KAEhB,OACEyT,gBAACkS,GAAU,CAAA/R,SAAA,CACTM,eAACoX,KAAI,CAAC3X,UAAWxN,EAAQyd,KAAKhQ,SAC5BH,gBAAC+X,KAAW,CAAC7X,UAAWxN,EAAQ0d,YAAYjQ,SAAA,CAC1CM,eAACL,IAAU,CAACG,QAAQ,QAAQL,UAAWxN,EAAQ8sC,UAAUr/B,SAAC,8KAK1DM,eAACL,IAAU,CAACG,QAAQ,QAAQL,UAAWxN,EAAQ8sC,UAAUr/B,SAAC,yPAM1DH,gBAACI,IAAU,CAACG,QAAQ,QAAQL,UAAWxN,EAAQ8sC,UAAUr/B,SAAA,CAAC,8BAC5B,IAC5BM,eAAA,KAAGi/B,KAAK,sCAAsC38B,OAAO,SAAS48B,IAAI,aAAYx/B,SAAC,uBAE3E,qDAC8CM,eAAA,KAAAN,SAAG,qBAAoB,OAG3EH,gBAACI,IAAU,CAACG,QAAQ,QAAQL,UAAWxN,EAAQ8sC,UAAUr/B,SAAA,CAAC,kCACxB,IAChCM,eAAA,KAAGi/B,KAAK,iCAAiC38B,OAAO,SAAS48B,IAAI,aAAYx/B,SAAC,SAEtE,YAKVM,eAACgnB,GAAM,MAGb,ECzCMl7B,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCwf,KAAM,CACJ,iBAAkB,CAChBzgB,aAAc,QAEhB0Z,UAAW,SAEbgH,YAAa,CACXnH,OAAQ,UAEVu2B,UAAW,CACTlwC,UAAW,WAEd,ICVYswC,GAAgB,WAC3B,IAAMltC,EAAUnG,KAEhB,OACEyT,gBAACkS,GAAU,CAAA/R,SAAA,CACTM,eAACoX,KAAI,CAAC3X,UAAWxN,EAAQyd,KAAKhQ,SAC5BM,eAACsX,KAAW,CAAC7X,UAAWxN,EAAQ0d,YAAYjQ,SAC1CH,gBAACI,IAAU,CAACG,QAAQ,QAAQL,UAAWxN,EAAQ8sC,UAAUr/B,SAAA,CAAC,6CACb,IAC3CM,eAAA,KAAGi/B,KAAK,2CAA2C38B,OAAO,SAAS48B,IAAI,aAAYx/B,SAAC,SAE/E,IAAI,sBAKfM,eAACgnB,GAAM,MAGb,ECtBMl7B,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCwf,KAAM,CACJ,iBAAkB,CAChBzgB,aAAc,QAEhB0Z,UAAW,SAEbgH,YAAa,CACXnH,OAAQ,UAEVu2B,UAAW,CACTlwC,UAAW,WAEd,ICVYuwC,GAAe,WAC1B,IAAMntC,EAAUnG,KAEhB,OACEyT,gBAACkS,GAAU,CAAA/R,SAAA,CACTM,eAACoX,KAAI,CAAC3X,UAAWxN,EAAQyd,KAAKhQ,SAC5BM,eAACsX,KAAW,CAAC7X,UAAWxN,EAAQ0d,YAAYjQ,SAC1CM,eAACL,IAAU,CAACG,QAAQ,QAAQL,UAAWxN,EAAQ8sC,UAAUr/B,SAAC,isDAqB9DM,eAACgnB,GAAM,MAGb,EClCMl7B,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCwf,KAAM,CACJ,iBAAkB,CAChBzgB,aAAc,QAEhB0Z,UAAW,SAEbgH,YAAa,CACXnH,OAAQ,UAEVu2B,UAAW,CACTlwC,UAAW,WAEd,ICVYwwC,GAAoB,WAC/B,IAAMptC,EAAUnG,KAEhB,OACEyT,gBAACkS,GAAU,CAAA/R,SAAA,CACTM,eAACoX,KAAI,CAAC3X,UAAWxN,EAAQyd,KAAKhQ,SAC5BM,eAACsX,KAAW,CAAC7X,UAAWxN,EAAQ0d,YAAYjQ,SAC1CH,gBAACI,IAAU,CAACG,QAAQ,QAAQL,UAAWxN,EAAQ8sC,UAAUr/B,SAAA,CAAC,6CACb,IAC3CM,eAAA,KAAGi/B,KAAK,2CAA2C38B,OAAO,SAAS48B,IAAI,aAAYx/B,SAAC,SAE/E,IAAI,sBAKfM,eAACgnB,GAAM,MAGb,ECtBMl7B,GAAYC,aAAW,SAACmE,GAAK,MAAM,CACvCwf,KAAM,CACJ,iBAAkB,CAChBzgB,aAAc,QAEhB0Z,UAAW,SAEbgH,YAAa,CACX5f,SAAU,QACVyY,OAAQ,OACR/a,QAAS,OACTC,cAAe,SACf4vB,IAAK,OACL5b,QAAS,kBAET,4BAA6B,CAC3BA,QAAS,oBAGb0B,IAAK,CACH3V,QAAS,OACTE,eAAgB,SAChB2vB,IAAK,OAEL,4BAA6B,CAC3B5vB,cAAe,WAGnB4xC,aAAc,CACZ/yC,UAAW,kBACXY,OAAQ,OACRvB,MAAO,mBAEV,ICzBK2zC,GAAgB,CACpBC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPtjC,QAAS,IAGLujC,GAAiB,CAAC,YAAa,WAAY,SAE3CD,GAAQ,IAAIE,OAAO,yCAEZC,GAAc,WAAO,IAAD10C,EACzB8G,EAAUnG,KAChBoG,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCgF,EAAO9E,EAAA,GAAE+E,EAAU/E,EAAA,GAC1BI,EAAoCL,mBAASotC,IAAc9sC,EAAAJ,YAAAG,EAAA,GAApDstC,EAAUrtC,EAAA,GAAEstC,EAAattC,EAAA,GAChCG,EAAoCT,mBAAS,CAAC,GAAEU,EAAAR,YAAAO,EAAA,GAAzCotC,EAAUntC,EAAA,GAAEotC,EAAaptC,EAAA,GAE1BqtC,EAAe,SAAC3gB,GACpB,IAAMzgB,EAAQygB,EAAEjd,OAAOxD,MACjBkF,EAAOub,EAAEjd,OAAO0B,KAEtB+7B,EAAapqB,0BAAC,CAAC,EAAImqB,GAAU,GAAAzI,aAAA,GAAGrzB,EAAOlF,IACzC,EAiCA,OACES,gBAACkS,GAAU,CAAA/R,SAAA,CACTM,eAACoX,KAAI,CAAC3X,UAAWxN,EAAQyd,KAAKhQ,SAC5BH,gBAAC+X,KAAW,CAAC7X,UAAWxN,EAAQ0d,YAAYjQ,SAAA,CAC1CH,gBAAA,OAAKE,UAAWxN,EAAQmR,IAAI1D,SAAA,CAC1BM,eAACC,IAAS,CACRkgC,UAAQ,EACR1uC,GAAG,YACHuS,KAAK,YACLiD,MAAM,aACNyR,WAAS,EACT5Y,QAAQ,WACRhB,MAAOghC,EAAWN,UAClBz0C,QAASi1C,EAAWR,UACpBY,WAAYJ,EAAWR,UACvB19B,SAAUo+B,IAEZlgC,eAACC,IAAS,CACRkgC,UAAQ,EACR1uC,GAAG,WACHuS,KAAK,WACLiD,MAAM,YACNyR,WAAS,EACT5Y,QAAQ,WACRhB,MAAOghC,EAAWL,SAClB10C,QAASi1C,EAAWP,SACpBW,WAAYJ,EAAWP,SACvB39B,SAAUo+B,OAGdlgC,eAACC,IAAS,CACRkgC,UAAQ,EACR1uC,GAAG,QACHuS,KAAK,QACLiD,MAAM,gBACNyR,WAAS,EACTpS,KAAK,QACLxG,QAAQ,WACRhB,MAAOghC,EAAWJ,MAClB30C,QAASi1C,EAAWN,MACpBU,WAAYJ,EAAWN,MACvB59B,SAAUo+B,IAEZlgC,eAACC,IAAS,CACRxO,GAAG,UACHuS,KAAK,UACLiD,MAAM,gBACNyR,WAAS,EACT5Y,QAAQ,WACRhB,MAAOghC,EAAW1jC,QAClB0F,SAAUo+B,IAEZlgC,eAACurB,KAAa,CAAC9rB,UAAWxN,EAAQqtC,aAAcx/B,QAAQ,YAAY5I,QAASA,EAASwJ,QAnF/E,kBAAAvV,KAAAmR,YAAAC,cAAAC,MAAG,SAAA0L,IAAA,IAAAm4B,EAAA,OAAA9jC,cAAAM,MAAA,SAAAsL,GAAA,cAAAA,EAAApL,KAAAoL,EAAAnL,MAAA,OAcM,GAbhBqjC,EAAS,CAAC,EACC,0BAEjBV,GAAenlC,SAAQ,SAACY,GACjB0kC,EAAW1kC,KACdilC,EAAOjlC,GAJM,0BAMjB,IAEM0kC,EAAWJ,QAAUA,GAAMY,KAAKR,EAAWJ,SAC/CW,EAAOX,MAAQ,0BAGjBO,EAAcI,GAEqB,IAA/BhmC,OAAOC,KAAK+lC,GAAQ/kC,OAAY,CAAA6M,EAAAnL,KAAA,SAEf,OAFemL,EAAApL,KAAA,EAEhC5F,GAAW,GAAMgR,EAAAnL,KAAA,GAEXE,KAAMuK,KAAK,GAADrK,OAAI7L,GAAY,SAASuuC,GAAY,KAAD,GACpDC,EAAcR,IACd51C,OAAO42C,MAAM,8BAA8Bp4B,EAAAnL,KAAA,iBAAAmL,EAAApL,KAAA,GAAAoL,EAAA4Z,GAAA5Z,EAAA,SAE3Cxe,OAAO42C,MAAM,kDAAkD,QAE7C,OAF6Cp4B,EAAApL,KAAA,GAE/D5F,GAAW,GAAOgR,EAAA+Z,OAAA,6BAAA/Z,EAAAvK,OAAA,GAAAsK,EAAA,0BAGvBrK,MAAA,KAAAjB,UAAA,EAsDgH8C,SAAC,gBAK9GM,eAACgnB,GAAM,MAGb,E,UCvHawZ,GAAQC,aAAe,CAClCC,QAAS,CACP11B,IAAK21B,GACL9xB,UAAW+xB,GACXjlC,IAAKklC,GACLtjB,MAAOujB,IAETC,WAAY,SAACC,GACX,OAAOA,EAAqB,CAC1BC,mBAAmB,GAEvB,ICAI/wC,GAAQgxC,YAAY,CACxBvwC,QAAS,CACPmb,QAAS,CACPq1B,KAAM,YAGVC,WAAY,CACVhyC,WAAY,CACV,aACA,gBACA,qBACA,aACA,WACA,WACA,WACA,cACA,cACA,eACA,mBACA,cACAqM,KAAK,QAIX4lC,IAASC,OACPthC,eAACpM,IAAM2tC,WAAU,CAAA7hC,SACfM,eAACwhC,KAAU,CAAA9hC,SACTM,eAACyhC,IAAQ,CAACjB,MAAOA,GAAM9gC,SACrBM,eAAC0hC,IAAa,CAACxxC,MAAOA,GAAMwP,SAC1BM,eAAA,OAAKP,UAAU,MAAKC,SAClBH,gBAACoiC,KAAM,CAAAjiC,SAAA,CACLM,eAAC4hC,KAAK,CAACC,KAAK,IAAIpnC,QAASuF,eAACq+B,GAAa,MACvCr+B,eAAC4hC,KAAK,CAACC,KAAK,SAASpnC,QAASuF,eAACpO,GAAS,MACxCoO,eAAC4hC,KAAK,CAACC,KAAK,SAASpnC,QAASuF,eAACg/B,GAAS,MACxCh/B,eAAC4hC,KAAK,CAACC,KAAK,cAAcpnC,QAASuF,eAACm/B,GAAa,MACjDn/B,eAAC4hC,KAAK,CAACC,KAAK,YAAYpnC,QAASuF,eAACo/B,GAAY,MAC9Cp/B,eAAC4hC,KAAK,CAACC,KAAK,iBAAiBpnC,QAASuF,eAACq/B,GAAiB,MACxDr/B,eAAC4hC,KAAK,CAACC,KAAK,WAAWpnC,QAASuF,eAAC6/B,GAAW,mBAOxDl/B,SAASC,eAAe,SxFzCX,WACb,GAA6C,kBAAmB3W,UAAW,CAGzE,GADkB,IAAI63C,IAAIC,GAAwBp4C,OAAOC,UAC3Co4C,SAAWr4C,OAAOC,SAASo4C,OAIvC,OAGFr4C,OAAOs4C,iBAAiB,QAAQ,WAC9B,IAAMj4C,EAAK,GAAAoT,OAAM2kC,GAAsB,sBAElCt4C,EAwCX,SAAiCO,GAE/Bk4C,MAAMl4C,GACHI,MAAK,SAAA4U,GAGkB,MAApBA,EAASmjC,SACuD,IAAhEnjC,EAASojC,QAAQjlC,IAAI,gBAAgB+G,QAAQ,cAG7Cja,UAAUC,cAAcm4C,MAAMj4C,MAAK,SAAAC,GACjCA,EAAai4C,aAAal4C,MAAK,WAC7BT,OAAOC,SAAS24C,QAClB,GACF,IAGAx4C,EAAgBC,EAEpB,IACCc,OAAM,WACLF,QAAQC,IACN,gEAEJ,GACJ,CA5DQ23C,CAAwBx4C,GAHxBD,EAAgBC,EAKpB,GACF,CACF,CwFqBAy4C,GAKAz3C,G","file":"static/js/main.c7b3a993.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// capture the user experience of a web page\r\n\r\nconst reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { withStyles, makeStyles } from '@mui/styles';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Button from '@mui/material/Button';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\n// CircularProgress for 'Submit data' and 'Look for changes' dialogs\r\nconst CustomCircularProgress = withStyles({\r\n  root: {\r\n    color: 'rgb(31, 187, 211)'\r\n  }\r\n})(CircularProgress);\r\n\r\n// CSS like classes\r\nconst useStyles = makeStyles({\r\n  cellON: {\r\n    backgroundColor: '#e9f9fc'\r\n  },\r\n  off: {},\r\n  tableID: {\r\n    position: 'sticky',\r\n    right: 0\r\n  },\r\n  tablePadding: {\r\n    marginTop: '16px'\r\n  },\r\n  actionsCell: {\r\n    borderLeft: '1px solid rgba(224, 224, 224, 1)',\r\n    backgroundColor: 'white'\r\n  },\r\n  stickyCell: {\r\n    position: 'sticky',\r\n    right: 0,\r\n    borderLeft: '1px solid rgba(224, 224, 224, 1)',\r\n    backgroundColor: 'white'\r\n  },\r\n  actionsHeaderCell: {\r\n    backgroundColor: 'black',\r\n    color: 'white',\r\n    borderLeft: '1px solid rgba(224, 224, 224, 1)'\r\n  },\r\n  stickyHeaderCell: {\r\n    position: 'sticky',\r\n    right: 0,\r\n    backgroundColor: 'black',\r\n    color: 'white',\r\n    borderLeft: '1px solid rgba(224, 224, 224, 1)'\r\n  },\r\n  changesTable: {\r\n    maxHeight: '400px',\r\n    marginBottom: 32\r\n  },\r\n  viewButton: {\r\n    width: 80\r\n  },\r\n  resetButton: {\r\n    width: 150,\r\n    height: 40,\r\n    marginRight: 16,\r\n    marginLeft: 16\r\n  },\r\n  uploadButton: {\r\n    width: 150,\r\n    height: 40\r\n  },\r\n  checkChangesButton: {\r\n    width: 100,\r\n    height: 40\r\n  },\r\n  dialog: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap'\r\n  },\r\n  input: {\r\n    marginBottom: 16\r\n  },\r\n  input2: {\r\n    marginBottom: 16\r\n  },\r\n  currentData: {\r\n    backgroundColor: 'black',\r\n    color: 'white',\r\n    whiteSpace: 'nowrap',\r\n    paddingRight: 8\r\n  },\r\n  toolbar: {\r\n    backgroundColor: 'black',\r\n    borderBottom: '1px solid white',\r\n    justifyContent: 'space-between'\r\n  },\r\n  deleteSelected: {\r\n    color: 'red'\r\n  },\r\n  checkboxCell: {\r\n    backgroundColor: 'black'\r\n  },\r\n  checkbox: {\r\n    color: 'white'\r\n  },\r\n  tableRowRoot: {\r\n    '&$tableRowSelected, &$tableRowSelected:hover': {\r\n      backgroundColor: '#e9f9fc'\r\n    }\r\n  },\r\n  tableRowSelected: {\r\n    backgroundColor: '#e9f9fc'\r\n  },\r\n  box: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingLeft: 16\r\n  },\r\n  select: {\r\n    textAlign: 'right',\r\n    paddingLeft: 8,\r\n    textAlignLast: 'right',\r\n    minWidth: 50,\r\n    userSelect: 'none',\r\n    borderRadius: 0,\r\n    font: 'inherit',\r\n    letterSpacing: 'inherit',\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontSize: 14,\r\n    backgroundColor: 'transparent',\r\n    '&:focus': {\r\n      backgroundColor: 'transparent'\r\n    },\r\n    marginRight: 12\r\n  },\r\n  choosePage: {\r\n    opacity: 0.87,\r\n    whiteSpace: 'nowrap',\r\n    paddingLeft: 8\r\n  },\r\n  selectFilter: {\r\n    backgroundColor: 'white',\r\n    textAlign: 'start'\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'stretch'\r\n  },\r\n  headerTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start'\r\n  },\r\n  rowHeader: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'flex-start'\r\n  },\r\n  deleteChangeButton: {\r\n    backgroundColor: 'grey',\r\n    width: 35,\r\n    borderRadius: 5,\r\n    color: 'white',\r\n    border: '1px solid rgba(0, 0, 0, 0.23)',\r\n    '&:hover': {\r\n      color: 'white',\r\n      backgroundColor: '#4F4F4F'\r\n    }\r\n  },\r\n  searchInputWrapper: {\r\n    width: '-webkit-fill-available',\r\n    maxWidth: '300px'\r\n  },\r\n  searchInput: {\r\n    backgroundColor: 'white'\r\n  }\r\n});\r\n\r\n// Load button from the changes table\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: 'grey',\r\n    color: 'white',\r\n    '&:hover': {\r\n      color: 'white',\r\n      backgroundColor: '#4F4F4F'\r\n    },\r\n    marginRight: '16px'\r\n  }\r\n}))(Button);\r\n\r\n// 'Reset changes' and 'Add new entry' buttons\r\nconst ColorButton3 = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: 'white',\r\n    color: '#1FBBD3',\r\n    '&:hover': {\r\n      color: 'black',\r\n      backgroundColor: '#CFCFCF'\r\n    },\r\n    borderColor: '#1FBBD3'\r\n  }\r\n}))(Button);\r\n\r\n// Submit changes button\r\nconst ColorButton4 = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: '#1FBBD3',\r\n    color: 'white',\r\n    '&:hover': {\r\n      color: 'white',\r\n      backgroundColor: '#188C9E'\r\n    }\r\n  }\r\n}))(Button);\r\n\r\n// Refresh button\r\nconst ColorButton5 = withStyles((theme) => ({\r\n  root: {\r\n    color: 'black',\r\n    borderColor: 'black',\r\n    backgroundColor: 'transparent',\r\n    '&:hover': {\r\n      backgroundColor: '#CFCFCF'\r\n    },\r\n    fontWeight: 'bold'\r\n  }\r\n}))(Button);\r\n\r\n// Header cell for both tables\r\nconst StyledHeaderCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14\r\n  }\r\n}))(TableCell);\r\n\r\n// Wrapper for data table\r\nconst CustomTableContainer = withStyles((theme) => ({\r\n  root: {\r\n    maxHeight: '600px'\r\n  }\r\n}))(TableContainer);\r\n\r\n// Label for header cells from the data table with order buttons\r\nconst CustomTableSortLabel = withStyles((theme) => ({\r\n  root: {\r\n    color: 'white',\r\n    '&:hover': {\r\n      color: 'white'\r\n    },\r\n    '&$active': {\r\n      color: 'white'\r\n    }\r\n  },\r\n  active: {},\r\n  icon: {\r\n    color: 'inherit !important'\r\n  }\r\n}))(TableSortLabel);\r\n\r\nexport {\r\n  useStyles,\r\n  ColorButton,\r\n  ColorButton3,\r\n  ColorButton4,\r\n  ColorButton5,\r\n  StyledHeaderCell,\r\n  CustomTableContainer,\r\n  CustomTableSortLabel,\r\n  CustomCircularProgress\r\n};\r\n","// Static routes to run the app. Only use one: local or heroku.\r\n export const API_ENDPOINT = 'http://localhost:8080/api/';\r\n//export const API_ENDPOINT = 'https://amrnet-d7387c560cfc.herokuapp.com/api/';\r\n","import './index.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n  Tooltip,\r\n  Toolbar,\r\n  Typography,\r\n  Checkbox,\r\n  Box,\r\n  IconButton,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputAdornment\r\n} from '@mui/material';\r\nimport {\r\n  FirstPage,\r\n  LastPage,\r\n  KeyboardArrowLeft,\r\n  KeyboardArrowRight,\r\n  DeleteOutline,\r\n  Info,\r\n  Edit,\r\n  Search,\r\n  Close\r\n} from '@mui/icons-material';\r\nimport {\r\n  useStyles,\r\n  ColorButton,\r\n  ColorButton3,\r\n  ColorButton4,\r\n  ColorButton5,\r\n  StyledHeaderCell,\r\n  CustomTableContainer,\r\n  CustomTableSortLabel,\r\n  CustomCircularProgress\r\n} from './materialUI';\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport axios from 'axios';\r\nimport LZString from 'lz-string';\r\nimport Loader from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/styles';\r\n\r\nfunction createData(id, date, changes) {\r\n  return { id, date, changes };\r\n}\r\n\r\nexport const AdminPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [currentData, setCurrentData] = useState(0);\r\n  const [tableKeys, setTableKeys] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('NAME');\r\n  const [currentRow, setCurrentRow] = useState({});\r\n  const [open, setOpen] = React.useState(false);\r\n  const [open2, setOpen2] = React.useState(false);\r\n  const [open3, setOpen3] = React.useState(false);\r\n  const [open4, setOpen4] = React.useState(false);\r\n  const [open5, setOpen5] = React.useState(false);\r\n  const [open6, setOpen6] = React.useState(false);\r\n  const [open7, setOpen7] = React.useState(false);\r\n  const [open8, setOpen8] = React.useState(false);\r\n  const [resultMessage, setResultMessage] = React.useState('');\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [search, setSearch] = React.useState('');\r\n  const [filters, setFilters] = React.useState({});\r\n  const [filterOptions, setFilterOptions] = React.useState({});\r\n  const [filteredData, setFilteredData] = React.useState([]);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [startProgress, setStartProgress] = React.useState(false);\r\n  const [loadingMessage, setLoadingMessage] = React.useState('');\r\n  const [currentChange, setCurrentChange] = React.useState(null);\r\n\r\n  const [exceptions] = React.useState([\r\n    'NAME',\r\n    'ACCESION',\r\n    'Genome ID',\r\n    'LATITUDE',\r\n    'LONGITUDE',\r\n    'LOCATION',\r\n    'Mash Distance',\r\n    'Matching Hashes',\r\n    'SANGER LANE',\r\n    'STRAIN'\r\n  ]);\r\n\r\n  // Change table page\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  // Change number of rows per page and return to first page\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // Sort table by selected column in asc or desc\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  // Helper function for getComparator\r\n  function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  // Main function to return data ordered to table\r\n  function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n\r\n  // Comparator to order table for stableSort\r\n  function getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n\r\n  // Change current view of the table to another ID, this also resets all changes made on the table\r\n  function changeView(id) {\r\n    resetChanges();\r\n    setData(originalData);\r\n    const aux = JSON.parse(JSON.stringify(data));\r\n    if (id > 0) {\r\n      for (let index = 0; index < id; index++) {\r\n        Object.keys(rows[index].changes.added).forEach((element) => {\r\n          const genome = rows[index].changes.added[element];\r\n          const gIndex = aux.findIndex((x) => x.NAME === genome.NAME);\r\n          aux.splice(gIndex, 1);\r\n        });\r\n\r\n        Object.keys(rows[index].changes.deleted).forEach((element) => {\r\n          const genome = rows[index].changes.deleted[element];\r\n          aux.push(genome);\r\n          aux.sort((a, b) => (a.NAME < b.NAME ? -1 : 1));\r\n        });\r\n\r\n        Object.keys(rows[index].changes.updated).forEach((element) => {\r\n          const keys = rows[index].changes.updated[element];\r\n          for (const key in keys) {\r\n            const genome = aux.filter((x) => x.NAME === element);\r\n            if (genome.length > 0) {\r\n              genome[0][key] = keys[key].old;\r\n            }\r\n          }\r\n        });\r\n      }\r\n      setData(aux);\r\n    }\r\n    setCurrentData(id);\r\n  }\r\n\r\n  // Beautify text for changes\r\n  function betterChanges(changes) {\r\n    const aux = JSON.parse(JSON.stringify(changes));\r\n    const added = Object.keys(aux.added).length > 0 ? Object.keys(aux.added).join(', ') + '.' : '';\r\n    const deleted = Object.keys(aux.deleted).length > 0 ? Object.keys(aux.deleted).join(', ') + '.' : '';\r\n    let updated = '';\r\n\r\n    if (Object.keys(aux.updated).length > 0) {\r\n      updated = Object.entries(aux.updated).map((x) => {\r\n        const updates = Object.entries(x[1]);\r\n        const changes = updates.map((y, i) => {\r\n          const point = i === updates.length - 1 ? '.' : '';\r\n          return y[0] + ' (new: ' + y[1].new + ', old: ' + y[1].old + ')' + point;\r\n        });\r\n        return x[0] + ': ' + changes.join(', ');\r\n      });\r\n    }\r\n\r\n    const text = [];\r\n    if (added !== '') text.push(['ADDED', added]);\r\n    if (deleted !== '') text.push(['DELETED', deleted]);\r\n    if (updated !== '') text.push(['UPDATED', updated]);\r\n    return text;\r\n  }\r\n\r\n  // The five handlers below are mediators between the button and the dialog. They set specific informations before opening the dialogs.\r\n  function handleDelete(row) {\r\n    setCurrentRow(row);\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleDeleteChange(id) {\r\n    setCurrentChange(id);\r\n    setOpen8(true);\r\n  }\r\n\r\n  function handleEdit(row) {\r\n    setCurrentRow(row);\r\n    setOpen2(true);\r\n  }\r\n\r\n  function handleUpload() {\r\n    setOpen4(true);\r\n  }\r\n\r\n  function handleCheckChanges(message) {\r\n    setResultMessage(message);\r\n    setOpen5(true);\r\n  }\r\n\r\n  // Delete chosen change\r\n  async function deleteChange() {\r\n    axios\r\n      .post(`${API_ENDPOINT}mongo/deleteChange`, { id: currentChange - 1 })\r\n      .then((res) => {\r\n        getChangeData(res.data);\r\n        setCurrentData(0);\r\n      })\r\n      .finally(() => {\r\n        setOpen8(false);\r\n      });\r\n  }\r\n\r\n  // Check if there were any new changes on the database and updates the table\r\n  async function checkChanges(showPopup = true) {\r\n    setStartProgress(true);\r\n    setLoading(true);\r\n    return await axios\r\n      .get(`${API_ENDPOINT}mongo/checkForChanges`)\r\n      .then(async (res) => {\r\n        if (res.data.Status === 'Changes') {\r\n          await resetChanges();\r\n          await getData();\r\n          if (showPopup) {\r\n            handleCheckChanges('Changes were found. Tables updated.');\r\n          }\r\n          return true;\r\n        } else if (res.data.Status === 'No Changes') {\r\n          if (showPopup) {\r\n            handleCheckChanges('No changes found.');\r\n          }\r\n          return false;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (showPopup) {\r\n          handleCheckChanges('Could not check for changes. Try again later.');\r\n        }\r\n        return false;\r\n      })\r\n      .finally(() => {\r\n        setOpen7(false);\r\n        setLoading(false);\r\n        setStartProgress(false);\r\n      });\r\n  }\r\n\r\n  // Handler for select all rows button\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = filteredData.map((n) => n.NAME);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  // Handler for selecting specific row\r\n  const handleClick = (name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  // Delete selected row\r\n  function deleteRow() {\r\n    const index = data.findIndex((x) => x.NAME === currentRow.NAME);\r\n    const aux = JSON.parse(JSON.stringify(data));\r\n    aux.splice(index, 1);\r\n    setData(aux);\r\n    setOpen(false);\r\n  }\r\n\r\n  // If more than one row is selected than delete all of them\r\n  function deleteRows() {\r\n    const aux = JSON.parse(JSON.stringify(filteredData));\r\n    const aux2 = JSON.parse(JSON.stringify(data));\r\n    selected.forEach((row) => {\r\n      const index = aux.findIndex((x) => x.NAME === row);\r\n      if (index !== -1) {\r\n        aux.splice(index, 1);\r\n      }\r\n      const index2 = aux2.findIndex((x) => x.NAME === row);\r\n      if (index2 !== -1) {\r\n        aux2.splice(index2, 1);\r\n      }\r\n    });\r\n    setData(aux2);\r\n    setFilteredData(aux);\r\n    setSelected([]);\r\n    setOpen6(false);\r\n  }\r\n\r\n  // Edit selected row\r\n  function editRow() {\r\n    const row = {};\r\n    const aux = JSON.parse(JSON.stringify(data));\r\n\r\n    const rowIndex = aux.findIndex((x) => x.NAME === currentRow.NAME);\r\n\r\n    const inputs = document.getElementsByClassName('MuiOutlinedInput-input');\r\n    Object.values(inputs).forEach((input) => {\r\n      row[input.id] = input.value;\r\n    });\r\n\r\n    aux[rowIndex] = row;\r\n    setData(aux);\r\n    setOpen2(false);\r\n    setResultMessage(`Row ${currentRow.NAME} edited with success!`);\r\n    setOpen5(true);\r\n  }\r\n\r\n  // Add new row\r\n  function addRow() {\r\n    const row = {};\r\n    const aux = JSON.parse(JSON.stringify(data));\r\n\r\n    const inputs = document.getElementsByClassName('MuiOutlinedInput-input');\r\n    Object.values(inputs).forEach((input) => {\r\n      row[input.id] = input.value;\r\n    });\r\n\r\n    aux.push(row);\r\n    aux.sort((a, b) => (a.NAME < b.NAME ? -1 : 1));\r\n    setData(aux);\r\n    setOpen3(false);\r\n    setResultMessage(`Row ${row.NAME} added with success!`);\r\n    setOpen5(true);\r\n  }\r\n\r\n  // Reset all changes made on the table\r\n  async function resetChanges() {\r\n    setSearch('');\r\n    let aux = JSON.parse(JSON.stringify(filters));\r\n    for (const key in aux) {\r\n      aux[key] = '';\r\n    }\r\n    setFilters(aux);\r\n    setPage(0);\r\n    setRowsPerPage(10);\r\n    setCurrentData(0);\r\n    setData(originalData);\r\n  }\r\n\r\n  // Upload changes on the current table to the database\r\n  function uploadChanges() {\r\n    setLoading(true);\r\n    setStartProgress(true);\r\n    setResultMessage('');\r\n    const times = Math.ceil(data.length / 1500);\r\n    const parts = [];\r\n    for (let index = 0; index < times; index++) {\r\n      if (times === 0) {\r\n        break;\r\n      }\r\n      if (times === index - 1) {\r\n        if (times === 1) {\r\n          parts.push([data]);\r\n        } else {\r\n          parts.push([data.slice((times - 1) * 1500)]);\r\n        }\r\n      } else {\r\n        parts.push([data.slice(index * 1500, index * 1500 + 1500)]);\r\n      }\r\n      axios\r\n        .post(`${API_ENDPOINT}mongo/upload/admin`, {\r\n          data: LZString.compress(JSON.stringify(parts[parts.length - 1])),\r\n          parts: times,\r\n          current: index + 1\r\n        })\r\n        .then((res) => {\r\n          if (res.data !== '' && res.data.Status === 'Uploaded') {\r\n            axios\r\n              .get(`${API_ENDPOINT}mongo/download`)\r\n              .then(async () => {\r\n                await checkChanges();\r\n                setResultMessage('Upload and download completed!');\r\n              })\r\n              .catch(() => {\r\n                setResultMessage('Something went wrong with the download, please try again later!');\r\n              })\r\n              .finally(() => {\r\n                setStartProgress(false);\r\n                setLoading(false);\r\n                setOpen4(false);\r\n                setOpen5(true);\r\n              });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setStartProgress(false);\r\n          setLoading(false);\r\n          setOpen4(false);\r\n          setResultMessage('Something went wrong with the upload, please try again later!');\r\n          setOpen5(true);\r\n        });\r\n    }\r\n  }\r\n\r\n  // Helper for function getData to get only the changes\r\n  function getChangeData(changeData) {\r\n    let aux = [];\r\n    for (let index = 0; index < changeData.length - 1; index++) {\r\n      const date = new Date(changeData[index].updatedAt);\r\n      aux.push(createData(index + 1, date.toLocaleString(), changeData[index].changes));\r\n    }\r\n    setRows(aux);\r\n  }\r\n\r\n  // Main function to get data for all the admin page\r\n  async function getData() {\r\n    await axios.get(`${API_ENDPOINT}file/databaseLog`).then((res) => {\r\n      let data = res.data;\r\n\r\n      getChangeData(data);\r\n\r\n      let aux2 = Object.values(data[data.length - 1].data);\r\n      let aux4 = {};\r\n      let aux5 = {};\r\n\r\n      Object.keys(aux2[0]).forEach((key) => {\r\n        if (!exceptions.includes(key)) {\r\n          aux4[key] = '';\r\n          aux5[key] = [];\r\n          let options = aux2.map((value) => value[key]);\r\n          options.forEach((x) => {\r\n            if (!aux5[key].includes(x)) {\r\n              aux5[key].push(x);\r\n            }\r\n          });\r\n          aux5[key].sort();\r\n        }\r\n      });\r\n\r\n      setData(aux2);\r\n      setFilters(aux4);\r\n      setFilterOptions(aux5);\r\n      setFilteredData(JSON.parse(JSON.stringify(aux2)));\r\n      setOriginalData(JSON.parse(JSON.stringify(aux2)));\r\n      setTableKeys(Object.keys(aux2[0]));\r\n    });\r\n  }\r\n\r\n  // Check for changes when admin page is opened and get data\r\n  useEffect(() => {\r\n    setLoadingMessage('Checking for changes...');\r\n    checkChanges(false)\r\n      .then((response) => {\r\n        if (!response) {\r\n          getData().finally(() => {\r\n            setIsLoading(false);\r\n          });\r\n        } else {\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setLoadingMessage('');\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // Watcher for filtering columns and search\r\n  useEffect(() => {\r\n    let aux = JSON.parse(JSON.stringify(data));\r\n    if (search === '' && Object.values(filters).join('') === '') {\r\n      setFilteredData(aux);\r\n    } else {\r\n      let s = search.toLowerCase();\r\n\r\n      aux = aux.filter((x) => {\r\n        let pass = true;\r\n        Object.keys(x).forEach((y) => {\r\n          if (!exceptions.includes(y) && filters[y] !== '' && x[y] !== filters[y]) {\r\n            pass = false;\r\n          }\r\n          if (search !== '' && !Object.values(x).join(' ').toLowerCase().includes(s)) {\r\n            pass = false;\r\n          }\r\n        });\r\n        return pass;\r\n      });\r\n\r\n      setFilteredData(aux);\r\n    }\r\n  }, [search, data, filters, exceptions]);\r\n\r\n  // Component table toolbar (Above table header)\r\n  const EnhancedTableToolbar = (props) => {\r\n    const { numSelected } = props;\r\n\r\n    return (\r\n      <Toolbar className={classes.toolbar}>\r\n        {numSelected > 0 ? (\r\n          <Typography\r\n            sx={{ flex: '1 1 100%' }}\r\n            color=\"inherit\"\r\n            variant=\"subtitle1\"\r\n            component=\"div\"\r\n            className={classes.currentData}\r\n          >\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography\r\n            sx={{ flex: '1 1 100%' }}\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n            className={classes.currentData}\r\n          >\r\n            <b>DATA ID:</b> {currentData}\r\n          </Typography>\r\n        )}\r\n\r\n        <TextField\r\n          className={classes.searchInputWrapper}\r\n          placeholder=\"Search and press enter...\"\r\n          variant=\"outlined\"\r\n          defaultValue={search}\r\n          InputProps={{\r\n            className: classes.searchInput,\r\n            id: 'search-input',\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Search />\r\n              </InputAdornment>\r\n            ),\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  onClick={() => {\r\n                    document.getElementById('search-input').value = '';\r\n                    setSearch('');\r\n                    setPage(0);\r\n                  }}\r\n                  edge=\"end\"\r\n                >\r\n                  <Close />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n            onKeyDown: (event) => {\r\n              if (event.key === 'Enter') {\r\n                const value = document.getElementById('search-input').value;\r\n                setSearch(value);\r\n                setPage(0);\r\n              }\r\n            }\r\n          }}\r\n        />\r\n\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton onClick={() => setOpen6(true)}>\r\n              {/* <FontAwesomeIcon\r\n                icon={faTrashAlt}\r\n                className={classes.deleteSelected}\r\n              /> */}\r\n              <DeleteOutline />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : null}\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  // Component table header\r\n  function EnhancedTableHead(props) {\r\n    const { classes, order, orderBy, onRequestSort, onSelectAllClick, numSelected, rowCount } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n      onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n      data.length > 0 && (\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell padding=\"checkbox\" className={classes.checkboxCell}>\r\n              <Checkbox\r\n                color=\"primary\"\r\n                indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                checked={rowCount > 0 && numSelected === rowCount}\r\n                onChange={onSelectAllClick}\r\n                className={classes.checkbox}\r\n              />\r\n            </TableCell>\r\n            {tableKeys.map((headCell) => (\r\n              <StyledHeaderCell\r\n                key={headCell + 'table'}\r\n                align={'center'}\r\n                sortDirection={orderBy === headCell ? order : false}\r\n              >\r\n                <CustomTableSortLabel\r\n                  active={orderBy === headCell}\r\n                  direction={orderBy === headCell ? order : 'asc'}\r\n                  onClick={createSortHandler(headCell)}\r\n                  className={classes.rowHeader}\r\n                >\r\n                  <div className={classes.header}>\r\n                    <div className={classes.headerTitle}>{headCell}</div>\r\n                    {!exceptions.includes(headCell) && (\r\n                      <FormControl>\r\n                        <Select\r\n                          value={filters[headCell]}\r\n                          onChange={(event) => {\r\n                            setPage(0);\r\n                            let aux = JSON.parse(JSON.stringify(filters));\r\n                            aux[headCell] = event.target.value;\r\n                            setFilters(aux);\r\n                            event.stopPropagation();\r\n                          }}\r\n                          displayEmpty\r\n                          className={classes.selectFilter}\r\n                          onOpen={(event) => event.stopPropagation()}\r\n                          onClose={(event) => event.stopPropagation()}\r\n                        >\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          {filterOptions[headCell].map((option, i) => (\r\n                            <MenuItem key={i + option} value={option}>\r\n                              {option}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </FormControl>\r\n                    )}\r\n                  </div>\r\n                </CustomTableSortLabel>\r\n              </StyledHeaderCell>\r\n            ))}\r\n            <TableCell className={classes.stickyHeaderCell}>\r\n              <div className=\"actions\">ACTIONS</div>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n      )\r\n    );\r\n  }\r\n\r\n  // Get number of pages for the table\r\n  function NumberOfPages() {\r\n    return Math.ceil(filteredData.length / rowsPerPage);\r\n  }\r\n\r\n  // Component TablePaginationActions\r\n  function TablePaginationActions(props) {\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n      onPageChange(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n      onPageChange(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n      onPageChange(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n      onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n      <Box sx={{ flexShrink: 0, ml: 2.5 }} className={classes.box}>\r\n        <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n          {theme.direction === 'rtl' ? <LastPage /> : <FirstPage />}\r\n        </IconButton>\r\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"next page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"last page\"\r\n        >\r\n          {theme.direction === 'rtl' ? <FirstPage /> : <LastPage />}\r\n        </IconButton>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  TablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <div className=\"mainDiv\">\r\n      <div className=\"mainDiv-padding\">\r\n        <div className=\"titleActions\">\r\n          <div className=\"titleButtonRow\">\r\n            <h2 className=\"title\">MongoDB Admin Page</h2>\r\n          </div>\r\n          <div className=\"tooltipSubmitRow\">\r\n            <ColorButton5\r\n              onClick={() => {\r\n                setOpen7(true);\r\n              }}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.checkChangesButton}\r\n            >\r\n              Refresh\r\n            </ColorButton5>\r\n            <Tooltip\r\n              title={\r\n                <div className=\"tooltipTitle\">\r\n                  Changes are only saved by pressing the <b className=\"boldTooltipText\">SUBMIT CHANGES</b> button\r\n                </div>\r\n              }\r\n              placement=\"left\"\r\n            >\r\n              <IconButton>\r\n                {/* <FontAwesomeIcon icon={faInfoCircle} /> */}\r\n                <Info />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <ColorButton4\r\n              onClick={() => {\r\n                handleUpload();\r\n              }}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.uploadButton}\r\n            >\r\n              Submit changes\r\n            </ColorButton4>\r\n          </div>\r\n        </div>\r\n        <TableContainer component={Paper} className={classes.changesTable}>\r\n          <Table stickyHeader size=\"small\" aria-label=\"a dense table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledHeaderCell>ID</StyledHeaderCell>\r\n                <StyledHeaderCell>Date</StyledHeaderCell>\r\n                <StyledHeaderCell align=\"left\">Changes</StyledHeaderCell>\r\n                <StyledHeaderCell className={classes.actionsHeaderCell} align=\"left\">\r\n                  Actions\r\n                </StyledHeaderCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow key={'00changes'} className={currentData === 0 ? classes.cellON : classes.off}>\r\n                <TableCell align=\"left\">{0}</TableCell>\r\n                <TableCell align=\"left\"></TableCell>\r\n                <TableCell align=\"left\" width=\"70%\">\r\n                  {'CURRENT DATA'}\r\n                </TableCell>\r\n                <TableCell align=\"left\" className={classes.actionsCell}>\r\n                  <div className=\"tableActions\">\r\n                    <ColorButton\r\n                      onClick={() => changeView(0)}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      className={classes.viewButton}\r\n                    >\r\n                      Load\r\n                    </ColorButton>\r\n                  </div>\r\n                </TableCell>\r\n              </TableRow>\r\n              {rows.map((row, r) => (\r\n                <TableRow key={row.id + 'changes'} className={row.id === currentData ? classes.cellON : classes.off}>\r\n                  <TableCell align=\"left\">{row.id}</TableCell>\r\n                  <TableCell align=\"left\">{row.date}</TableCell>\r\n                  <TableCell align=\"left\" width=\"70%\">\r\n                    {betterChanges(row.changes).map((text, t) => (\r\n                      <div key={`${r}${t}change`} className=\"changesText\">\r\n                        <div>{text[0]}</div>\r\n                        &nbsp;{'entries with name:'}&nbsp;\r\n                        {text[0] !== 'UPDATED' ? (\r\n                          <div>{text[1]}</div>\r\n                        ) : (\r\n                          <div>\r\n                            {Object.values(text[1]).map((x, i) => (\r\n                              <div key={x + i}>{x}</div>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\" className={classes.actionsCell}>\r\n                    <div className=\"tableActions\">\r\n                      <ColorButton\r\n                        onClick={() => changeView(row.id)}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className={classes.viewButton}\r\n                      >\r\n                        Load\r\n                      </ColorButton>\r\n                      <IconButton\r\n                        aria-label=\"deleteChange\"\r\n                        size=\"small\"\r\n                        className={classes.deleteChangeButton}\r\n                        onClick={() => handleDeleteChange(row.id)}\r\n                      >\r\n                        {/* <FontAwesomeIcon icon={faTrashAlt} /> */}\r\n                        <DeleteOutline />\r\n                      </IconButton>\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <div className=\"addButton\">\r\n          <ColorButton4\r\n            onClick={() => {\r\n              handleUpload();\r\n            }}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.uploadButton}\r\n          >\r\n            Submit changes\r\n          </ColorButton4>\r\n          <ColorButton3\r\n            onClick={() => {\r\n              resetChanges();\r\n            }}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.resetButton}\r\n          >\r\n            Reset changes\r\n          </ColorButton3>\r\n          <ColorButton3\r\n            onClick={() => {\r\n              setOpen3(true);\r\n            }}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.uploadButton}\r\n          >\r\n            Add new entry\r\n          </ColorButton3>\r\n        </div>\r\n        <Paper className={classes.tablePadding}>\r\n          <EnhancedTableToolbar numSelected={selected.length} />\r\n          <CustomTableContainer>\r\n            <Table stickyHeader size=\"small\" aria-label=\"a dense table\">\r\n              <EnhancedTableHead\r\n                numSelected={selected.length}\r\n                classes={classes}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onRequestSort={handleRequestSort}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                rowCount={filteredData.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(filteredData, getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = isSelected(row.NAME);\r\n                    return (\r\n                      <TableRow\r\n                        key={row.NAME + index}\r\n                        className={classes.dataRow}\r\n                        role=\"checkbox\"\r\n                        hover\r\n                        aria-checked={isItemSelected}\r\n                        selected={isItemSelected}\r\n                        classes={{\r\n                          selected: classes.tableRowSelected,\r\n                          root: classes.tableRowRoot\r\n                        }}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox color=\"primary\" checked={isItemSelected} onClick={() => handleClick(row.NAME)} />\r\n                        </TableCell>\r\n                        {Object.values(row).map((cell) => (\r\n                          <TableCell key={Math.random() + 'cell'} align=\"center\">\r\n                            {cell}\r\n                          </TableCell>\r\n                        ))}\r\n                        <TableCell align=\"center\" className={classes.stickyCell}>\r\n                          <div className=\"tableActions\">\r\n                            <IconButton\r\n                              aria-label=\"edit\"\r\n                              size=\"small\"\r\n                              onClick={() => handleEdit(JSON.parse(JSON.stringify(row)))}\r\n                            >\r\n                              {/* <FontAwesomeIcon\r\n                                icon={faEdit}\r\n                                className=\"editIcon\"\r\n                              /> */}\r\n                              <Edit />\r\n                            </IconButton>\r\n                            <IconButton\r\n                              aria-label=\"delete\"\r\n                              size=\"small\"\r\n                              onClick={() => handleDelete(JSON.parse(JSON.stringify(row)))}\r\n                            >\r\n                              {/* <FontAwesomeIcon\r\n                                icon={faTrashAlt}\r\n                                className=\"trashIcon\"\r\n                              /> */}\r\n                              <DeleteOutline />\r\n                            </IconButton>\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </CustomTableContainer>\r\n          <div className=\"pagination\">\r\n            <Typography className={classes.choosePage} variant=\"body2\">\r\n              Choose Page:{' '}\r\n            </Typography>\r\n            {filteredData.length > 0 && (\r\n              <Select\r\n                value={page}\r\n                onChange={(event) => {\r\n                  setPage(event.target.value);\r\n                }}\r\n                className={classes.select}\r\n                disableUnderline\r\n              >\r\n                {[...Array(NumberOfPages())].map((x, i) => (\r\n                  <MenuItem key={x + 'nPage'} value={i}>\r\n                    {i}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            )}\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 50, 100]}\r\n              component=\"div\"\r\n              count={filteredData.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </div>\r\n        </Paper>\r\n      </div>\r\n      {isLoading && (\r\n        <div className=\"div-loader\">\r\n          <Loader type=\"Circles\" color=\"white\" height={70} width={70} />\r\n          <p className=\"div-loader-msg\">{loadingMessage}</p>\r\n        </div>\r\n      )}\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        style={classes.dialogTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Delete'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete {currentRow.NAME} ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n          <Button onClick={() => deleteRow()} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={open2}\r\n        onClose={() => setOpen2(false)}\r\n        style={classes.dialogTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Edit'}</DialogTitle>\r\n        <DialogContent className={classes.dialog}>\r\n          {Object.entries(currentRow).map((item) => (\r\n            <TextField\r\n              key={item[0] + 'input'}\r\n              id={item[0]}\r\n              className={classes.input}\r\n              label={item[0]}\r\n              variant=\"outlined\"\r\n              defaultValue={item[1]}\r\n            />\r\n          ))}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen2(false)}>Cancel</Button>\r\n          <Button onClick={() => editRow()} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={open3}\r\n        onClose={() => setOpen3(false)}\r\n        style={classes.dialogTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Add'}</DialogTitle>\r\n        <DialogContent className={classes.dialog}>\r\n          {data.length > 0 &&\r\n            Object.keys(data[0]).map((item) => (\r\n              <TextField key={item + 'input2'} id={item} className={classes.input2} label={item} variant=\"outlined\" />\r\n            ))}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen3(false)}>Cancel</Button>\r\n          <Button onClick={() => addRow()} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={open4}\r\n        onClose={() => setOpen4(false)}\r\n        style={classes.dialogTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Submit data'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Would you like to submit changes to the database and download the new version to AMRnet ?\r\n          </DialogContentText>\r\n          {loading && (\r\n            <div className=\"spinner\">\r\n              <CustomCircularProgress></CustomCircularProgress>\r\n            </div>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {!startProgress && <Button onClick={() => setOpen4(false)}>Cancel</Button>}\r\n          {!startProgress && (\r\n            <Button onClick={() => uploadChanges()} autoFocus>\r\n              Ok\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={open5}\r\n        onClose={() => setOpen5(false)}\r\n        style={classes.dialogTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Result'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">{resultMessage}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen5(false)} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={open6}\r\n        onClose={() => setOpen6(false)}\r\n        style={classes.dialogTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Delete many'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete {selected.length} row(s) ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen6(false)}>Cancel</Button>\r\n          <Button onClick={() => deleteRows()} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={open7}\r\n        onClose={() => setOpen7(false)}\r\n        style={classes.dialogTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Look for changes'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Look for changes in the database? If there are, your current changes in the table below will be reseted.\r\n          </DialogContentText>\r\n          {loading && (\r\n            <div className=\"spinner\">\r\n              <CustomCircularProgress></CustomCircularProgress>\r\n            </div>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {!startProgress && <Button onClick={() => setOpen7(false)}>Cancel</Button>}\r\n          {!startProgress && (\r\n            <Button\r\n              onClick={() => {\r\n                checkChanges();\r\n              }}\r\n              autoFocus\r\n            >\r\n              Ok\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={open8}\r\n        onClose={() => setOpen8(false)}\r\n        style={classes.dialogTransition}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Delete changes'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete change nº {currentChange} ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen8(false)}>Cancel</Button>\r\n          <Button onClick={() => deleteChange()} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  headerWrapper: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    width: '-webkit-fill-available',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    zIndex: 2,\r\n    backgroundColor: '#E5E5E5',\r\n    borderRadius: '0px 0px 16px 16px',\r\n    flexDirection: 'column',\r\n    maxWidth: '1280px',\r\n    margin: '0px 16px',\r\n\r\n    '@media (max-width: 500px)': {\r\n      margin: '0px 8px'\r\n    }\r\n  },\r\n  headerBox: {\r\n    width: '100%',\r\n    height: '32px',\r\n    marginBottom: '-16px',\r\n    backgroundColor: '#E5E5E5',\r\n    paddingLeft: '32px',\r\n\r\n    '@media (max-width: 500px)': {\r\n      paddingLeft: '16px',\r\n      height: '24px'\r\n    }\r\n  },\r\n  appBar: {\r\n    borderRadius: '16px'\r\n  },\r\n  toolbar: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: '16px',\r\n    flexDirection: 'column',\r\n    minHeight: '0 !important',\r\n\r\n    '@media (max-width: 500px)': {\r\n      paddingTop: '8px',\r\n      paddingBottom: '8px'\r\n    },\r\n\r\n    '&$otherPage': {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n\r\n      '& $leftWrapper': {\r\n        justifyContent: 'space-between'\r\n      }\r\n    }\r\n  },\r\n  logo: {\r\n    height: '80px',\r\n    padding: '8px 0px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      height: '60px'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      height: '40px'\r\n    }\r\n  },\r\n  leftWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    columnGap: '10px'\r\n  },\r\n  drawerTitleWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  toolbarWrapper: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n\r\n    '@media (min-width: 651px) and (max-width: 1000px)': {\r\n      flexDirection: 'column'\r\n    },\r\n\r\n    '@media (max-width: 650px)': {\r\n      columnGap: '4px'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      justifyContent: 'flex-end'\r\n    }\r\n  },\r\n  infoCollapse: {\r\n    width: '100%'\r\n  },\r\n  title: {\r\n    position: 'absolute'\r\n  },\r\n  otherPage: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","export default __webpack_public_path__ + \"static/media/logo-prod.5bbce697.png\";","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  activeItem: {\r\n    '&.MuiListItemButton-root': {\r\n      backgroundColor: '#1fbbd3',\r\n      color: '#fff'\r\n    },\r\n    '&.MuiListItemButton-root:hover': {\r\n      backgroundColor: '#1fbbd3'\r\n    }\r\n  },\r\n  activeItemIcon: {\r\n    '&.MuiListItemIcon-root': {\r\n      color: '#fff'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface AppState {\r\n  page: string;\r\n  openDrawer: boolean;\r\n}\r\n\r\nconst initialState: AppState = {\r\n  page: 'home',\r\n  openDrawer: false\r\n};\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    setPage: (state, action: PayloadAction<string>) => {\r\n      state.page = action.payload;\r\n    },\r\n    setOpenDrawer: (state, action: PayloadAction<boolean>) => {\r\n      state.openDrawer = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setPage, setOpenDrawer } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store'\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { Description, Home, Info, MenuBook, Person, Storage } from '@mui/icons-material';\r\n\r\n// List of drawer menu items\r\nexport const menuItems = [\r\n  {\r\n    key: 'home',\r\n    label: 'Home',\r\n    icon: <Home />\r\n  },\r\n  {\r\n    key: 'about',\r\n    label: 'About',\r\n    icon: <Info />\r\n  },\r\n  {\r\n    key: 'user-guide',\r\n    label: 'User Guide',\r\n    icon: <MenuBook />\r\n  },\r\n  {\r\n    key: 'database',\r\n    label: 'Database',\r\n    icon: <Storage />\r\n  },\r\n  {\r\n    key: 'documentation',\r\n    label: 'Documentation',\r\n    icon: <Description />\r\n  },\r\n  {\r\n    key: 'contact',\r\n    label: 'Contact',\r\n    icon: <Person />\r\n  }\r\n];\r\n","import { useStyles } from './DrawerMUI';\r\nimport { Box, List, ListItem, ListItemButton, ListItemIcon, ListItemText, SwipeableDrawer } from '@mui/material';\r\nimport { useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { setOpenDrawer, setPage } from '../../../stores/slices/appSlice.ts';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { menuItems } from '../../../util/menuItems';\r\n\r\nexport const Drawer = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const dispatch = useAppDispatch();\r\n  const openDrawer = useAppSelector((state) => state.app.openDrawer);\r\n  const page = useAppSelector((state) => state.app.page);\r\n\r\n  useEffect(() => {\r\n    const currentPage = location.pathname.replace('/', '');\r\n\r\n    if (page === currentPage || (currentPage === '' && page === 'home')) {\r\n      return;\r\n    }\r\n\r\n    dispatch(setPage(currentPage));\r\n  });\r\n\r\n  function handleToggleDrawer(event, value) {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    dispatch(setOpenDrawer(value));\r\n  }\r\n\r\n  function handleUpdatePage(item) {\r\n    if (page === item.key) {\r\n      return;\r\n    }\r\n\r\n    dispatch(setPage(item.key));\r\n\r\n    if (item.key === menuItems[0].key) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    navigate(`/${item.key}`);\r\n  }\r\n\r\n  return (\r\n    <SwipeableDrawer\r\n      anchor=\"left\"\r\n      open={openDrawer}\r\n      onOpen={(event) => handleToggleDrawer(event, true)}\r\n      onClose={(event) => handleToggleDrawer(event, false)}\r\n    >\r\n      <Box\r\n        sx={{ width: 250 }}\r\n        role=\"presentation\"\r\n        onClick={(event) => handleToggleDrawer(event, false)}\r\n        onKeyDown={(event) => handleToggleDrawer(event, false)}\r\n      >\r\n        <List>\r\n          {menuItems.map((item, index) => (\r\n            <ListItem key={`menu-item-${index}`} disablePadding>\r\n              <ListItemButton\r\n                className={`${page === item.key ? classes.activeItem : ''}`}\r\n                onClick={() => handleUpdatePage(item)}\r\n              >\r\n                <ListItemIcon className={page === item.key ? classes.activeItemIcon : ''}>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.label} />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    </SwipeableDrawer>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  organismSelectWrapper: {\r\n    width: '100%',\r\n    maxWidth: '800px',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  organismSelect: {\r\n    height: '36px',\r\n    width: '100%',\r\n\r\n    '@media (max-width: 500px)': {\r\n      padding: '4px 0px'\r\n    },\r\n\r\n    '& .MuiSelect-select.MuiSelect-select': {\r\n      height: '100%',\r\n      borderRadius: '4px',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      fontSize: '18px',\r\n      backgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n\r\n      '&:hover': {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.1)'\r\n      },\r\n\r\n      '@media (min-width: 501px)': {\r\n        padding: '4px !important'\r\n      },\r\n\r\n      '@media (max-width: 500px)': {\r\n        fontSize: '16px'\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface GlobalOverviewModel {\r\n  italicLabel: string;\r\n  label: string;\r\n  fullLabel: string\r\n}\r\n\r\ninterface DashboardState {\r\n  canGetData: boolean;\r\n  globalOverviewLabel: GlobalOverviewModel;\r\n  organism: string;\r\n  loadingData: boolean;\r\n  actualCountry: string;\r\n  totalGenomes: number;\r\n  totalGenotypes: number;\r\n  actualGenomes: number;\r\n  actualGenotypes: number;\r\n  timeInitial: number;\r\n  timeFinal: number;\r\n  actualTimeInitial: number | string;\r\n  actualTimeFinal: number | string;\r\n  years: Array<number>;\r\n  genotypesForFilter: Array<string>;\r\n  colorPallete: Object;\r\n  listPMID: Array<string>\r\n}\r\n\r\nconst initialState: DashboardState = {\r\n  canGetData: true,\r\n  globalOverviewLabel: { italicLabel: 'Salmonella', label: 'Typhi', fullLabel: 'Salmonella Typhi' },\r\n  organism: 'typhi',\r\n  loadingData: false,\r\n  actualCountry: 'All',\r\n  totalGenotypes: 0,\r\n  totalGenomes: 0,\r\n  actualGenomes: 0,\r\n  actualGenotypes: 0,\r\n  timeInitial: 0,\r\n  timeFinal: 0,\r\n  actualTimeInitial: '',\r\n  actualTimeFinal: '',\r\n  years: [],\r\n  genotypesForFilter: [],\r\n  colorPallete: {},\r\n  listPMID: []\r\n};\r\n\r\nexport const dashboardSlice = createSlice({\r\n  name: 'dashboard',\r\n  initialState,\r\n  reducers: {\r\n    setCanGetData: (state, action: PayloadAction<boolean>) => {\r\n      state.canGetData = action.payload;\r\n    },\r\n    setGlobalOverviewLabel: (state, action: PayloadAction<GlobalOverviewModel>) => {\r\n      state.globalOverviewLabel = action.payload;\r\n    },\r\n    setOrganism: (state, action: PayloadAction<string>) => {\r\n      state.organism = action.payload;\r\n    },\r\n    setLoadingData: (state, action: PayloadAction<boolean>) => {\r\n      state.loadingData = action.payload;\r\n    },\r\n    setActualCountry: (state, action: PayloadAction<string>) => {\r\n      state.actualCountry = action.payload;\r\n    },\r\n    setTotalGenotypes: (state, action: PayloadAction<number>) => {\r\n      state.totalGenotypes = action.payload;\r\n    },\r\n    setTotalGenomes: (state, action: PayloadAction<number>) => {\r\n      state.totalGenomes = action.payload;\r\n    },\r\n    setActualGenomes: (state, action: PayloadAction<number>) => {\r\n      state.actualGenomes = action.payload;\r\n    },\r\n    setActualGenotypes: (state, action: PayloadAction<number>) => {\r\n      state.actualGenotypes = action.payload;\r\n    },\r\n    setTimeInitial: (state, action: PayloadAction<number>) => {\r\n      state.timeInitial = action.payload;\r\n    },\r\n    setTimeFinal: (state, action: PayloadAction<number>) => {\r\n      state.timeFinal = action.payload;\r\n    },\r\n    setActualTimeInitial: (state, action: PayloadAction<number>) => {\r\n      state.actualTimeInitial = action.payload;\r\n    },\r\n    setActualTimeFinal: (state, action: PayloadAction<number>) => {\r\n      state.actualTimeFinal = action.payload;\r\n    },\r\n    setYears: (state, action: PayloadAction<Array<number>>) => {\r\n      state.years = action.payload;\r\n    },\r\n    setGenotypesForFilter: (state, action: PayloadAction<Array<string>>) => {\r\n      state.genotypesForFilter = action.payload;\r\n    },\r\n    setColorPallete: (state, action: PayloadAction<Object>) => {\r\n      state.colorPallete = action.payload;\r\n    },\r\n    setListPMID: (state, action: PayloadAction<Array<string>>) => {\r\n      state.listPMID = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nexport const {\r\n  setCanGetData,\r\n  setGlobalOverviewLabel,\r\n  setOrganism,\r\n  setLoadingData,\r\n  setActualCountry,\r\n  setTotalGenotypes,\r\n  setTotalGenomes,\r\n  setActualGenomes,\r\n  setActualGenotypes,\r\n  setTimeInitial,\r\n  setTimeFinal,\r\n  setActualTimeInitial,\r\n  setActualTimeFinal,\r\n  setYears,\r\n  setGenotypesForFilter,\r\n  setColorPallete,\r\n  setListPMID\r\n} = dashboardSlice.actions;\r\n\r\nexport default dashboardSlice.reducer;\r\n","import { IconButton, MenuItem, Select, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './SelectOrganismMUI';\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@mui/icons-material';\r\nimport { setGlobalOverviewLabel, setOrganism } from '../../../stores/slices/dashboardSlice.ts';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\n\r\nconst organisms = [\r\n  {\r\n    label: 'Salmonella Typhi',\r\n    value: 'typhi',\r\n    abbr: 'S. Typhi'\r\n  },\r\n  {\r\n    label: 'Klebsiella pneumoniae',\r\n    value: 'klebe',\r\n    abbr: 'K. pneumoniae'\r\n  }\r\n  // {\r\n  //   label: 'Neisseria gonorrhoeae',\r\n  //   value: 'gono',\r\n  //   abbr: 'N. gonorrhoeae'\r\n  // }\r\n  // {\r\n  //   label: 'Streptococcus pneumoniae',\r\n  //   value: 'pneumo',\r\n  //   abbr: 'S. pneumoniae'\r\n  // }\r\n];\r\n\r\nexport const SelectOrganism = () => {\r\n  const classes = useStyles();\r\n  const matches1050 = useMediaQuery('(max-width: 1050px)');\r\n  const matches650 = useMediaQuery('(max-width: 650px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const loadingData = useAppSelector((state) => state.dashboard.loadingData);\r\n\r\n  function handleChange(event) {\r\n    const value = event.target.value;\r\n    dispatch(setOrganism(value));\r\n    handleGlobalOverviewLabel(value);\r\n  }\r\n\r\n  function handlePreviousAgent() {\r\n    const index = organisms.findIndex((org) => org.value === organism);\r\n    if (index !== -1) {\r\n      const isFirstIndex = index === 0;\r\n      const newValue = isFirstIndex ? organisms[organisms.length - 1].value : organisms[index - 1].value;\r\n      dispatch(setOrganism(newValue));\r\n      handleGlobalOverviewLabel(newValue);\r\n    }\r\n  }\r\n\r\n  function handleNextAgent() {\r\n    const index = organisms.findIndex((org) => org.value === organism);\r\n    if (index !== -1) {\r\n      const isLastIndex = organisms.length - 1 === index;\r\n      const newValue = isLastIndex ? organisms[0].value : organisms[index + 1].value;\r\n      dispatch(setOrganism(newValue));\r\n      handleGlobalOverviewLabel(newValue);\r\n    }\r\n  }\r\n\r\n  function handleGlobalOverviewLabel(value) {\r\n    const currentOrganism = organisms.find((x) => x.value === value);\r\n    const labels = currentOrganism.label.split(' ');\r\n    dispatch(\r\n      setGlobalOverviewLabel({\r\n        italicLabel: labels[0],\r\n        label: labels[1],\r\n        fullLabel: currentOrganism.label\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.organismSelectWrapper}>\r\n      {!matches650 && (\r\n        <IconButton color=\"inherit\" onClick={handlePreviousAgent} disabled={loadingData}>\r\n          <KeyboardArrowLeft />\r\n        </IconButton>\r\n      )}\r\n      <Select\r\n        value={organism}\r\n        onChange={handleChange}\r\n        disableUnderline\r\n        variant=\"standard\"\r\n        className={classes.organismSelect}\r\n        inputProps={matches650 ? {} : { IconComponent: () => null }}\r\n        disabled={loadingData}\r\n      >\r\n        <MenuItem value=\"none\" disabled>\r\n          Select an organism\r\n        </MenuItem>\r\n        {organisms.map((item, index) => (\r\n          <MenuItem key={`organism-${index}`} value={item.value}>\r\n            {matches1050 ? item.abbr : item.label}\r\n          </MenuItem>\r\n        ))}\r\n        <MenuItem value=\"gono\" disabled>\r\n          {matches1050 ? 'N. gonorrhoeae' : 'Neisseria gonorrhoeae'}\r\n        </MenuItem>\r\n      </Select>\r\n      {!matches650 && (\r\n        <IconButton color=\"inherit\" onClick={handleNextAgent} disabled={loadingData}>\r\n          <KeyboardArrowRight />\r\n        </IconButton>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardsWrapper: {\r\n    display: 'flex',\r\n    columnGap: '16px',\r\n    padding: '8px 0px',\r\n    maxWidth: '420px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      justifyContent: 'space-between',\r\n      padding: '8px 0px',\r\n      maxWidth: '100%',\r\n      borderTop: '1px solid rgba(0, 0, 0, 0.12)'\r\n    },\r\n\r\n    '@media (max-width: 650px)': {\r\n      flexDirection: 'column',\r\n      rowGap: '4px',\r\n      padding: '0px 0px 4px'\r\n    }\r\n  },\r\n  card: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    textAlign: 'center'\r\n  },\r\n  cardContent: {\r\n    padding: '8px 16px !important',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      display: 'flex',\r\n      alignItems: 'flex-end',\r\n      columnGap: '8px',\r\n      padding: '0px 0px !important'\r\n    }\r\n  },\r\n  title: {\r\n    whiteSpace: 'nowrap',\r\n    paddingBottom: '6px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      paddingBottom: '0px'\r\n    }\r\n  },\r\n  actualAndTotalValues: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end'\r\n  },\r\n  bp1000: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Divider, Typography, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './InformationCardsMUI';\r\nimport { useAppSelector } from '../../../stores/hooks';\r\n\r\nexport const InformationCards = () => {\r\n  const classes = useStyles();\r\n  const matches1000 = useMediaQuery('(max-width: 1000px)');\r\n  const matches650 = useMediaQuery('(max-width: 650px)');\r\n\r\n  const totalGenomes = useAppSelector((state) => state.dashboard.totalGenomes);\r\n  const actualGenomes = useAppSelector((state) => state.dashboard.actualGenomes);\r\n  const totalGenotypes = useAppSelector((state) => state.dashboard.totalGenotypes);\r\n  const actualGenotypes = useAppSelector((state) => state.dashboard.actualGenotypes);\r\n\r\n  return (\r\n    <div className={classes.cardsWrapper}>\r\n      <div className={classes.card}>\r\n        <div className={classes.cardContent}>\r\n          <Typography variant={matches650 ? 'body2' : 'body1'} component=\"div\" className={classes.title}>\r\n            {`Total Genomes${matches1000 ? ':' : ''}`}\r\n          </Typography>\r\n          <Typography variant={matches650 ? 'h6' : 'h5'} sx={{ fontWeight: '500' }}>\r\n            {totalGenomes === actualGenomes ? (\r\n              <>{totalGenomes}</>\r\n            ) : (\r\n              <span className={classes.actualAndTotalValues}>\r\n                {actualGenomes}\r\n                <Typography variant={matches650 ? 'body2' : 'body1'} sx={{ fontWeight: '500' }}>\r\n                  /{totalGenomes}\r\n                </Typography>\r\n              </span>\r\n            )}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n      {!matches650 && <Divider orientation=\"vertical\" flexItem />}\r\n      <div className={classes.card}>\r\n        <div className={classes.cardContent}>\r\n          <Typography variant={matches650 ? 'body2' : 'body1'} component=\"div\" className={classes.title}>\r\n            {`Total Genotypes${matches1000 ? ':' : ''}`}\r\n          </Typography>\r\n          <Typography variant={matches650 ? 'h6' : 'h5'} sx={{ fontWeight: '500' }}>\r\n            {totalGenotypes === actualGenotypes ? (\r\n              <>{totalGenotypes}</>\r\n            ) : (\r\n              <span className={classes.actualAndTotalValues}>\r\n                {actualGenotypes}\r\n                <Typography variant={matches650 ? 'body2' : 'body1'} sx={{ fontWeight: '500' }}>\r\n                  /{totalGenotypes}\r\n                </Typography>\r\n              </span>\r\n            )}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { AppBar, Collapse, IconButton, Toolbar, Typography, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './HeaderMUI';\r\nimport LogoImg from '../../../assets/img/logo-prod.png';\r\nimport { ExpandLess, ExpandMore, Menu } from '@mui/icons-material';\r\nimport { Drawer } from '../Drawer';\r\nimport { SelectOrganism } from '../SelectOrganism';\r\nimport { InformationCards } from '../InformationCards/InformationCards';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { setOpenDrawer } from '../../../stores/slices/appSlice.ts';\r\nimport { menuItems } from '../../../util/menuItems';\r\nimport { useState } from 'react';\r\n\r\nexport const Header = ({ showSelect }) => {\r\n  const classes = useStyles();\r\n  const matches650 = useMediaQuery('(max-width: 650px)');\r\n  const matches500 = useMediaQuery('(max-width: 500px)');\r\n  const [infoCollapse, setInfoCollapse] = useState(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const page = useAppSelector((state) => state.app.page);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n\r\n  function getPageTitle() {\r\n    const title = menuItems.find((item) => item.key === page).label;\r\n    return title;\r\n  }\r\n\r\n  function handleToggleDrawer(event, value) {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    dispatch(setOpenDrawer(value));\r\n  }\r\n\r\n  function handleToggleCollapse() {\r\n    setInfoCollapse(!infoCollapse);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.headerWrapper}>\r\n      <div className={classes.headerBox}></div>\r\n      <AppBar position=\"relative\" sx={{ maxWidth: '1280px' }} className={classes.appBar}>\r\n        <Toolbar className={`${classes.toolbar} ${page === 'home' ? '' : classes.otherPage}`}>\r\n          <div className={classes.toolbarWrapper}>\r\n            <div className={classes.leftWrapper}>\r\n              <div className={classes.drawerTitleWrapper}>\r\n                <IconButton edge=\"start\" color=\"inherit\" onClick={(event) => handleToggleDrawer(event, true)}>\r\n                  <Menu sx={{ fontSize: '1.7rem' }} />\r\n                </IconButton>\r\n                <img src={LogoImg} alt=\"AMRnet\" className={classes.logo} />\r\n              </div>\r\n              {showSelect && <SelectOrganism />}\r\n            </div>\r\n            {!showSelect && (\r\n              <Typography className={classes.title} variant={matches500 ? 'h6' : 'h5'} fontWeight={500}>\r\n                {getPageTitle()}\r\n              </Typography>\r\n            )}\r\n            {showSelect &&\r\n              (matches650 ? (\r\n                organism !== 'none' && (\r\n                  <IconButton onClick={handleToggleCollapse}>\r\n                    {infoCollapse ? <ExpandLess /> : <ExpandMore />}\r\n                  </IconButton>\r\n                )\r\n              ) : (\r\n                <InformationCards />\r\n              ))}\r\n          </div>\r\n          <Collapse className={classes.infoCollapse} in={infoCollapse} timeout=\"auto\" unmountOnExit>\r\n            <InformationCards />\r\n          </Collapse>\r\n        </Toolbar>\r\n        <Drawer />\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainLayout: {\r\n    width: '100%',\r\n    backgroundColor: '#E5E5E5',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    overflowY: 'auto',\r\n\r\n    '& .MuiAppBar-root': {\r\n      boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)'\r\n    }\r\n  },\r\n  childrenWrapper: {\r\n    width: '100%'\r\n  },\r\n  children: {\r\n    padding: '128px 16px 16px',\r\n    maxWidth: '1280px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    rowGap: '16px',\r\n    backgroundColor: '#E5E5E5',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      padding: '158px 16px 16px',\r\n\r\n      '&$otherPage': {\r\n        padding: '108px 16px 16px'\r\n      }\r\n    },\r\n\r\n    '@media (max-width: 650px)': {\r\n      padding: '108px 16px 16px'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      padding: '88px 8px 8px',\r\n      rowGap: '8px',\r\n\r\n      '&$otherPage': {\r\n        padding: '88px 8px 8px'\r\n      }\r\n    }\r\n  },\r\n  loading: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0,0,0,0.2)',\r\n    zIndex: 9999\r\n  },\r\n  logo: {\r\n    height: '100px',\r\n    alignSelf: 'center',\r\n    paddingLeft: '20px'\r\n  },\r\n  otherPage: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","import Loader from 'react-loader-spinner';\r\n// import LogoImg from '../../assets/img/logo-prod.png';\r\nimport { Header } from '../Elements/Header';\r\nimport { useStyles } from './MainLayoutUI';\r\nimport { useAppSelector } from '../../stores/hooks';\r\n\r\nexport const MainLayout = ({ children, isHomePage = false }) => {\r\n  const classes = useStyles();\r\n\r\n  const page = useAppSelector((state) => state.app.page);\r\n  const loadingData = useAppSelector((state) => state.dashboard.loadingData);\r\n  const loadingMap = useAppSelector((state) => state.map.loadingMap);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.mainLayout} id=\"main-layout\">\r\n        <Header showSelect={isHomePage} />\r\n        <div className={classes.childrenWrapper}>\r\n          <div className={`${classes.children} ${page === 'home' ? '' : classes.otherPage}`}>{children}</div>\r\n        </div>\r\n      </div>\r\n      {(loadingData || loadingMap) && (\r\n        <div className={classes.loading}>\r\n          {/* <img className={classes.logo} src={LogoImg} alt=\"AMRnet\" /> */}\r\n          <Loader type=\"Circles\" color=\"#6F2F9F\" height={70} width={70} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mapWrapper: { position: 'relative' },\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    }\r\n  },\r\n  cardContent: {\r\n    textAlign: 'center',\r\n    position: 'relative'\r\n  },\r\n  composableMap: {\r\n    height: '500px',\r\n    width: '100%',\r\n\r\n    '@media (max-width: 500px)': {\r\n      height: '300px'\r\n    }\r\n  },\r\n  tooltipMap: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    paddingBottom: '4px',\r\n    alignItems: 'flex-start',\r\n\r\n    '& $country': {\r\n      fontWeight: 500,\r\n      fontSize: '18px'\r\n    },\r\n\r\n    '& $tooltipInfo': {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n\r\n      '& $info': {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n\r\n        '& $color': {\r\n          width: '10px',\r\n          height: '10px',\r\n          marginRight: '4px',\r\n          border: '1px solid #f5f4f6'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  topControls: {\r\n    marginTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '16px'\r\n  },\r\n  country: {},\r\n  tooltipInfo: {},\r\n  info: {},\r\n  color: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","// Helper for colors\r\n\r\n// Color for Salmonella genotypes\r\nexport const getColorForGenotype = (genotype) => {\r\n  switch (genotype) {\r\n    case '0':\r\n    case '0.0.1':\r\n    case '0.0.2':\r\n    case '0.0.3':\r\n    case '0.1.0':\r\n    case '0.1':\r\n    case '0.1.1':\r\n    case '0.1.2':\r\n    case '0.1.3':\r\n      return '#808080';\r\n    case '1.1':\r\n    case '1.1.1':\r\n    case '1.1.2':\r\n    case '1.1.3':\r\n    case '1.1.4':\r\n      return '#ffff00';\r\n    case '1.2':\r\n    case '1.2.1':\r\n      return '#ffd700';\r\n    case '2':\r\n    case '2.0.0':\r\n    case '2.0.1':\r\n    case '2.0.2':\r\n      return '#32cd32';\r\n    case '2.1.0':\r\n    case '2.1':\r\n    case '2.1.1':\r\n    case '2.1.2':\r\n    case '2.1.3':\r\n    case '2.1.4':\r\n    case '2.1.5':\r\n    case '2.1.6':\r\n    case '2.1.7':\r\n    case '2.1.8':\r\n    case '2.1.9':\r\n    case '2.1.7.1':\r\n    case '2.1.7.2':\r\n      return '#adff2f';\r\n    case '2.2':\r\n    case '2.2.0':\r\n    case '2.2.1':\r\n    case '2.2.2':\r\n    case '2.2.3':\r\n    case '2.2.4':\r\n      return '#98fb98';\r\n    case '2.3':\r\n    case '2.3.1':\r\n    case '2.3.2':\r\n    case '2.3.3':\r\n    case '2.3.4':\r\n    case '2.3.5':\r\n      return '#6b8e23';\r\n    case '2.4.0':\r\n    case '2.4':\r\n    case '2.4.1':\r\n      return '#2e8b57';\r\n    case '2.5.0':\r\n    case '2.5':\r\n    case '2.5.1':\r\n    case '2.5.2':\r\n      return '#006400';\r\n    case '3.0.0':\r\n    case '3':\r\n    case '3.0.1':\r\n    case '3.0.2':\r\n      return '#0000cd';\r\n    case '3.1.0':\r\n    case '3.1':\r\n    case '3.1.1':\r\n    case '3.1.2':\r\n      return '#4682b4';\r\n    case '3.2.1':\r\n    case '3.2':\r\n    case '3.2.2':\r\n      return '#00bfff';\r\n    case '3.3.0':\r\n    case '3.3':\r\n    case '3.3.1':\r\n    case '3.3.2':\r\n    case '3.3.2.Bd1':\r\n    case '3.3.2.Bd2':\r\n      return '#1e90ff';\r\n    case '3.4':\r\n      return '#6a5acd';\r\n    case '3.5':\r\n    case '3.5.1':\r\n    case '3.5.2':\r\n    case '3.5.3':\r\n    case '3.5.4':\r\n    case '3.5.4.1':\r\n    case '3.5.4.2':\r\n    case '3.5.4.3':\r\n      return '#4b0082';\r\n    case '4':\r\n    case '4.1.0':\r\n    case '4.1':\r\n    case '4.1.1':\r\n      return '#8b0000';\r\n    case '4.2':\r\n    case '4.2.1':\r\n    case '4.2.2':\r\n    case '4.2.3':\r\n      return '#ff6347';\r\n    // case '4.3':\r\n    // case '4.3.0':\r\n    case '4.3.1':\r\n      return '#ff0000';\r\n    case '4.3.1.1':\r\n    case '4.3.1.1.EA1':\r\n      return '#f1b6da';\r\n    case '4.3.1.1.P1':\r\n      return 'black';\r\n    case '4.3.1.2':\r\n    case '4.3.1.2.EA2':\r\n    case '4.3.1.2.EA3':\r\n    case '4.3.1.2.1':\r\n    case '4.3.1.2.1.1':\r\n      return '#c51b7d';\r\n    case '4.3.1.3':\r\n    case '4.3.1.3.Bdq':\r\n      return '#fb8072';\r\n    default:\r\n      return '#F5F4F6';\r\n  }\r\n};\r\n\r\n// Generate color pallete for Klebsiella genotypes\r\nlet iwanthue = require('iwanthue');\r\nexport const generatePalleteForGenotypes = (genotypes) => {\r\n  console.log(\"genotypes.length\", genotypes.length);\r\n  if (genotypes.length === 0) {\r\n    return {};\r\n  }\r\n  const colors = iwanthue(genotypes.length,{\r\n    clustering: 'force-vector',\r\n    seed: 'all',\r\n    quality: 100\r\n  });\r\n\r\n  const pallete = {};\r\n  genotypes.forEach((x, i) => {\r\n    pallete[x] = `${colors[i]}`;\r\n  });\r\n\r\n  return pallete;\r\n};\r\n\r\n// Generate color pallete for Klebsiella genes, not being used at the moment\r\nexport const generatePalleteForGenes = (genes) => {\r\n  var Rainbow = require('rainbowvis.js');\r\n  const rainbow = new Rainbow();\r\n  rainbow.setNumberRange(0, genes.length);\r\n  rainbow.setSpectrum(\r\n    '#67001f',\r\n    '#b2182b',\r\n    '#d6604d',\r\n    '#f4a582',\r\n    '#fddbc7',\r\n    '#d1e5f0',\r\n    '#92c5de',\r\n    '#4393c3',\r\n    '#2166ac',\r\n    '#053061',\r\n    '#40004b',\r\n    '#762a83',\r\n    '#9970ab',\r\n    '#c2a5cf',\r\n    '#e7d4e8',\r\n    '#d9f0d3',\r\n    '#a6dba0',\r\n    '#5aae61',\r\n    '#1b7837',\r\n    '#00441b'\r\n  );\r\n\r\n  const pallete = [];\r\n  genes.forEach((x, i) => {\r\n    pallete.push({ name: x, color: `#${rainbow.colourAt(i)}` });\r\n  });\r\n\r\n  return pallete;\r\n};\r\n\r\n// Colors for Salmonella drug classes genes\r\nexport const colorForDrugClassesST = {\r\n  Azithromycin: [\r\n    { name: 'acrB_R717L', color: '#FBCFE5' },\r\n    { name: 'acrB_R717Q', color: '#addd8e' },\r\n    { name: 'acrB_R717Q + acrB_R717L', color: '#fd8d3c' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  // 'Fluoroquinolones (CipNS)': [\r\n  'Ciprofloxacin NS': [\r\n    { name: '0_QRDR + qnrB (CipNS)', color: '#0066cc' },\r\n    { name: '0_QRDR + qnrS (CipNS)', color: '#009999' },\r\n    { name: '1_QRDR (CipNS)', color: '#ffcc00' },\r\n    { name: '1_QRDR + qnrB (CipNS)', color: '#993399' },\r\n    { name: '1_QRDR + qnrS (CipNS)', color: '#660066' },\r\n    { name: '2_QRDR (CipR)', color: '#ff6600' },\r\n    { name: '2_QRDR + qnrB (CipR)', color: '#ffcccc' },\r\n    { name: '2_QRDR + qnrS (CipR)', color: '#ff6666' },\r\n    { name: '3_QRDR (CipR)', color: '#cc0000' },\r\n    { name: '3_QRDR + qnrB (CipR)', color: '#660000' },\r\n    { name: '3_QRDR + qnrS (CipR)', color: 'black' },\r\n    { name: 'None (CipS)', color: '#B9B9B9' }\r\n  ],\r\n  Chloramphenicol: [\r\n    { name: 'catA1', color: '#9e9ac8' },\r\n    { name: 'catA1 + cmlA', color: '#FFEC78' },\r\n    { name: 'cmlA', color: '#addd8e' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  Ampicillin: [\r\n    { name: 'blaTEM-1D', color: '#addd8e' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  Sulphonamides: [\r\n    { name: 'None', color: '#B9B9B9' },\r\n    { name: 'sul1', color: '#fd8d3c' },\r\n    { name: 'sul1 + sul2', color: '#B4DD70' },\r\n    { name: 'sul2', color: '#ffeda0' }\r\n  ],\r\n  Trimethoprim: [\r\n    { name: 'dfrA1', color: '#B4DD70' },\r\n    { name: 'dfrA5', color: '#D7AEF7' },\r\n    { name: 'dfrA7', color: '#FFEC78' },\r\n    { name: 'dfrA7 + dfrA14', color: '#fd8d3c' },\r\n    { name: 'dfrA14', color: '#6baed6' },\r\n    { name: 'dfrA15', color: '#FBCFE5' },\r\n    { name: 'dfrA17', color: '#FCB469' },\r\n    { name: 'dfrA18', color: '#66c2a4' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  Tetracyclines: [\r\n    { name: 'tetA(A)', color: 'rgb(174,227,154)' },\r\n    { name: 'tetA(B)', color: '#D7AEF7' },\r\n    { name: 'tetA(C)', color: '#FFEC78' },\r\n    { name: 'tetA(D)', color: '#FCB469' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  // ESBL: [\r\n  //   { name: 'blaCTX-M-15', color: '#6baed6' },\r\n  //   { name: 'blaCTX-M-55', color: '#FBCFE5' },\r\n  //   { name: 'blaOXA-7', color: '#9e9ac8' },\r\n  //   { name: 'blaSHV-12', color: '#addd8e' },\r\n  //   { name: 'None', color: '#B9B9B9' }\r\n  // ],\r\n  Ceftriaxone: [\r\n    { name: 'blaCTX-M-15', color: '#6baed6' },\r\n    { name: 'blaCTX-M-55', color: '#FBCFE5' },\r\n    { name: 'blaOXA-7', color: '#9e9ac8' },\r\n    { name: 'blaSHV-12', color: '#addd8e' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ],\r\n  // 'Co-trimoxazole': [\r\n  'Trimethoprim-sulfamethoxazole': [\r\n    { name: 'dfrA1 + sul1', color: '#ffeda0' },\r\n    { name: 'dfrA1 + sul2', color: '#a50f15' },\r\n    { name: 'dfrA1 + sul1 + sul2', color: '#fcc5c0' },\r\n    { name: 'dfrA5 + sul1', color: '#fd8d3c' },\r\n    { name: 'dfrA5 + sul2', color: '#6a5acd' },\r\n    { name: 'dfrA5 + sul1 + sul2', color: '#bcbddc' },\r\n    { name: 'dfrA7 + sul1', color: '#addd8e' },\r\n    { name: 'dfrA7 + sul2', color: '#f1b6da' },\r\n    { name: 'dfrA7 + sul1 + sul2', color: '#fdd0a2' },\r\n    { name: 'dfrA7 + dfrA14 + sul1 + sul2', color: '#F54CEB' },\r\n    { name: 'dfrA14 + sul1', color: '#9e9ac8' },\r\n    { name: 'dfrA14 + sul2', color: '#fb8072' },\r\n    { name: 'dfrA14 + sul1 + sul2', color: '#c994c7' },\r\n    { name: 'dfrA15 + sul1', color: '#4682b4' },\r\n    { name: 'dfrA15 + sul2', color: '#6baed6' },\r\n    { name: 'dfrA15 + sul1 + sul2', color: '#9ecae1' },\r\n    { name: 'dfrA17 + sul1', color: '#7a0177' },\r\n    { name: 'dfrA17 + sul2', color: '#2e8b57' },\r\n    { name: 'dfrA17 + sul1 + sul2', color: '#a8ddb5' },\r\n    { name: 'dfrA18 + sul1', color: '#54278f' },\r\n    { name: 'dfrA18 + sul2', color: '#98fb98' },\r\n    { name: 'dfrA18 + sul1 + sul2', color: '#fc9272' },\r\n    { name: 'None', color: '#B9B9B9' }\r\n  ]\r\n};\r\n\r\n// Colors for Klebsiella drug classes genes\r\nexport const colorForDrugClassesKP = {\r\n  ESBL: [\r\n    { name: 'BEL-1', color: '#543005' },\r\n    { name: 'CMY-30', color: '#8c510a' },\r\n    { name: 'CMY-42', color: '#f8961e' },\r\n    { name: 'CTX-M-1', color: '#f9844a' },\r\n    { name: 'CTX-M-115', color: '#f9c74f' },\r\n    { name: 'CTX-M-115 + CTX-M-15', color: '#f9c74f' },\r\n    { name: 'CTX-M-12', color: '#90be6d' },\r\n    { name: 'CTX-M-12 + CTX-M-2', color: '#90be6d' },\r\n    { name: 'CTX-M-12 + SHV-12', color: '#90be6d' },\r\n    { name: 'CTX-M-12 + SHV-5', color: '#90be6d' },\r\n    { name: 'CTX-M-132', color: '#43aa8b' },\r\n    { name: 'CTX-M-133.v1', color: '#4d908e' },\r\n    { name: 'CTX-M-14', color: '#577590' },\r\n    { name: 'CTX-M-14 + CTX-M-15', color: '#577590' },\r\n    { name: 'CTX-M-14 + CTX-M-15 + SHV-12', color: '#577590' },\r\n    { name: 'CTX-M-14 + CTX-M-3', color: '#577590' },\r\n    { name: 'CTX-M-14 + CTX-M-3 + SHV-12', color: '#577590' },\r\n    { name: 'CTX-M-14 + CTX-M-55', color: '#577590' },\r\n    { name: 'CTX-M-14 + CTX-M-8', color: '#577590' },\r\n    { name: 'CTX-M-14 + SFO-1.v1 + VEB-3', color: '#577590' },\r\n    { name: 'CTX-M-14 + SHV-12', color: '#577590' },\r\n    { name: 'CTX-M-14 + VEB-1', color: '#577590' },\r\n    { name: 'CTX-M-15', color: '#277da1' },\r\n    { name: 'CTX-M-15 + CTX-M-15', color: '#277da1' },\r\n    { name: 'CTX-M-15 + CTX-M-2', color: '#277da1' },\r\n    { name: 'CTX-M-15 + CTX-M-27', color: '#277da1' },\r\n    { name: 'CTX-M-15 + CTX-M-63', color: '#277da1' },\r\n    { name: 'CTX-M-15 + CTX-M-65', color: '#277da1' },\r\n    { name: 'CTX-M-15 + CTX-M-65 + SHV-12', color: '#277da1' },\r\n    { name: 'CTX-M-15 + CTX-M-8', color: '#277da1' },\r\n    { name: 'CTX-M-15 + CTX-M-9', color: '#277da1' },\r\n    { name: 'CTX-M-15 + GES-9 + SHV-12', color: '#277da1' },\r\n    { name: 'CTX-M-15 + OXA-163', color: '#277da1' },\r\n    { name: 'CTX-M-15 + SFO-1.v1', color: '#277da1' },\r\n    { name: 'CTX-M-15 + SHV-12', color: '#277da1' },\r\n    { name: 'CTX-M-15 + SHV-2', color: '#277da1' },\r\n    { name: 'CTX-M-15 + SHV-31.v1', color: '#277da1' },\r\n    { name: 'CTX-M-15 + SHV-5', color: '#277da1' },\r\n    { name: 'CTX-M-15 + TEM-116', color: '#277da1' },\r\n    { name: 'CTX-M-15 + TEM-155', color: '#277da1' },\r\n    { name: 'CTX-M-15 + VEB-1', color: '#277da1' },\r\n    { name: 'CTX-M-15 + VEB-5', color: '#277da1' },\r\n    { name: 'CTX-M-163', color: '#582f0e' },\r\n    { name: 'CTX-M-2', color: '#7f4f24' },\r\n    { name: 'CTX-M-2 + CTX-M-3', color: '#7f4f24' },\r\n    { name: 'CTX-M-24', color: '#936639' },\r\n    { name: 'CTX-M-25', color: '#a68a64' },\r\n    { name: 'CTX-M-26', color: '#b6ad90' },\r\n    { name: 'CTX-M-27', color: '#a4ac86' },\r\n    { name: 'CTX-M-27 + CTX-M-55', color: '#a4ac86' },\r\n    { name: 'CTX-M-27 + CTX-M-63', color: '#a4ac86' },\r\n    { name: 'CTX-M-27 + SHV-12', color: '#a4ac86' },\r\n    { name: 'CTX-M-3', color: '#656d4a' },\r\n    { name: 'CTX-M-3 + CTX-M-65', color: '#656d4a' },\r\n    { name: 'CTX-M-3 + CTX-M-65 + SHV-12', color: '#656d4a' },\r\n    { name: 'CTX-M-3 + SHV-12', color: '#656d4a' },\r\n    { name: 'CTX-M-32', color: '#414833' },\r\n    { name: 'CTX-M-35', color: '#333d29' },\r\n    { name: 'CTX-M-39', color: '#661d72' },\r\n    { name: 'CTX-M-40', color: '#70257c' },\r\n    { name: 'CTX-M-55', color: '#782f86' },\r\n    { name: 'CTX-M-55 + CTX-M-65', color: '#7f3c8d' },\r\n    { name: 'CTX-M-55 + CTX-M-65 + SHV-12', color: '#854994' },\r\n    { name: 'CTX-M-55 + SHV-2', color: '#8c559c' },\r\n    { name: 'CTX-M-58.v2', color: '#9262a3' },\r\n    { name: 'CTX-M-62.v2', color: '#996fab' },\r\n    { name: 'CTX-M-63', color: '#a079b1' },\r\n    { name: 'CTX-M-65', color: '#a883b8' },\r\n    { name: 'CTX-M-65 + KPC-51', color: '#af8dbf' },\r\n    { name: 'CTX-M-65 + SHV-12', color: '#b797c5' },\r\n    { name: 'CTX-M-65 + TEM-116', color: '#bea0cc' },\r\n    { name: 'CTX-M-71', color: '#c6aad1' },\r\n    { name: 'CTX-M-8', color: '#ccb2d6' },\r\n    { name: 'CTX-M-9', color: '#d3bbdb' },\r\n    { name: 'CTX-M-9 + SHV-12', color: '#dac4df' },\r\n    { name: 'CTX-M-90', color: '#e1cce4' },\r\n    { name: 'CTX-M-96', color: '#e7d5e8' },\r\n    { name: 'CTX-M-98', color: '#e4dae4' },\r\n    { name: 'GES-2', color: '#e2dfe0' },\r\n    { name: 'GES-9', color: '#dfe4dc' },\r\n    { name: 'KPC-52 + SHV-12', color: '#dce9d8' },\r\n    { name: 'None', color: '#B9B9B9' },\r\n    { name: 'OXA-163', color: '#daeed4' },\r\n    { name: 'OXA-17', color: '#d3edcd' },\r\n    { name: 'OXA-17 + SHV-12', color: '#c9e9c3' },\r\n    { name: 'PER-1 + SFO-1.v1 + SHV-12', color: '#c0e6ba' },\r\n    { name: 'SFO-1.v1', color: '#b6e2b0' },\r\n    { name: 'SHV-106', color: '#addea7' },\r\n    { name: 'SHV-12', color: '#a2d99d' },\r\n    { name: 'SHV-12 + VEB-1', color: '#94d191' },\r\n    { name: 'SHV-12 + VEB-9', color: '#86c886' },\r\n    { name: 'SHV-2', color: '#78c07a' },\r\n    { name: 'SHV-24', color: '#6ab86e' },\r\n    { name: 'SHV-31.v1', color: '#5caf63' },\r\n    { name: 'SHV-5', color: '#50a65a' },\r\n    { name: 'TEM-116', color: '#459c53' },\r\n    { name: 'TEM-15', color: '#39924b' },\r\n    { name: 'TEM-24.v1', color: '#2d8843' },\r\n    { name: 'TEM-3', color: '#227e3b' },\r\n    { name: 'VEB-1', color: '#197435' },\r\n    { name: 'VEB-1 + VEB-1', color: '#146a30' },\r\n    { name: 'VEB-5', color: '#0f612a' },\r\n    { name: 'VEB-6', color: '#0a5725' },\r\n    { name: 'VEB-9', color: '#054e20' }\r\n  ],\r\n  Carbapenems: [\r\n    { name: 'CTX-M-33', color: '#D1E5F0' },\r\n    { name: 'GES-13', color: '#FDDBC7' },\r\n    { name: 'GES-24', color: '#E7D4E8' },\r\n    { name: 'IMP-1', color: '#F6E8C3' },\r\n    { name: 'IMP-1 + IMP-1', color: '#F6E8C3' },\r\n    { name: 'IMP-11', color: '#D9F0D3' },\r\n    { name: 'IMP-19', color: '#FDE0EF' },\r\n    { name: 'IMP-26', color: '#92C5DE' },\r\n    { name: 'IMP-26 + NDM-1', color: '#92C5DE' },\r\n    { name: 'IMP-27', color: '#DFC27D' },\r\n    { name: 'IMP-4', color: '#FFB6C1' },\r\n    { name: 'IMP-4 + KPC-2', color: '#FFB6C1' },\r\n    { name: 'IMP-4 + KPC-3', color: '#FFB6C1' },\r\n    { name: 'IMP-4 + NDM-1', color: '#FFB6C1' },\r\n    { name: 'IMP-6', color: '#F1B6DA' },\r\n    { name: 'IMP-68', color: '#A6DBA0' },\r\n    { name: 'IMP-8', color: '#80CDC1' },\r\n    { name: 'KPC-12', color: '#00FFFF' },\r\n    { name: 'KPC-18', color: '#ADDD8E' },\r\n    { name: 'KPC-2', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + KPC-2', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + KPC-2 + NDM-1', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + NDM-1', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + NDM-1 + OXA-181', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + NDM-1 + OXA-48', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + NDM-1 + VIM-24', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + NDM-5', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + NDM-7', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + NDM-9', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + OXA-181', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + OXA-48', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + VIM-1', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + VIM-2', color: '#C2A5CF' },\r\n    { name: 'KPC-2 + VIM-4', color: '#C2A5CF' },\r\n    { name: 'KPC-23', color: '#F4A582' },\r\n    { name: 'KPC-29', color: '#6BAED6' },\r\n    { name: 'KPC-3', color: '#21BCF9' },\r\n    { name: 'KPC-3 + KPC-3', color: '#21BCF9' },\r\n    { name: 'KPC-3 + NDM-1', color: '#21BCF9' },\r\n    { name: 'KPC-3 + NDM-5', color: '#21BCF9' },\r\n    { name: 'KPC-3 + NDM-7', color: '#21BCF9' },\r\n    { name: 'KPC-3 + OXA-48', color: '#21BCF9' },\r\n    { name: 'KPC-3 + VIM-24', color: '#21BCF9' },\r\n    { name: 'KPC-36', color: '#00FA99' },\r\n    { name: 'KPC-38', color: '#FEB24C' },\r\n    { name: 'KPC-39', color: '#FFD500' },\r\n    { name: 'KPC-4', color: '#BC8F8F' },\r\n    { name: 'KPC-4 + NDM-7', color: '#BC8F8F' },\r\n    { name: 'KPC-49', color: '#9ACD32' },\r\n    { name: 'KPC-5', color: '#FFA300' },\r\n    { name: 'KPC-54', color: '#FD8D3C' },\r\n    { name: 'KPC-56', color: '#5AAE61' },\r\n    { name: 'KPC-8', color: '#DE77AE' },\r\n    { name: 'NDM-1', color: '#6495ED' },\r\n    { name: 'NDM-1 + NDM-1 + OXA-48', color: '#6495ED' },\r\n    { name: 'NDM-1 + OXA-181', color: '#6495ED' },\r\n    { name: 'NDM-1 + OXA-232', color: '#6495ED' },\r\n    { name: 'NDM-1 + OXA-48', color: '#6495ED' },\r\n    { name: 'NDM-1 + VIM-1', color: '#6495ED' },\r\n    { name: 'NDM-19', color: '#41AB5D' },\r\n    { name: 'NDM-23', color: '#35978F' },\r\n    { name: 'NDM-23 + OXA-48', color: '#35978F' },\r\n    { name: 'NDM-29', color: '#BF812D' },\r\n    { name: 'NDM-4', color: '#0088AF' },\r\n    { name: 'NDM-4 + OXA-181', color: '#0088AF' },\r\n    { name: 'NDM-4 + OXA-48', color: '#0088AF' },\r\n    { name: 'NDM-5', color: '#9970AB' },\r\n    { name: 'NDM-5 + OXA-181', color: '#9970AB' },\r\n    { name: 'NDM-5 + OXA-232', color: '#9970AB' },\r\n    { name: 'NDM-5 + OXA-48', color: '#9970AB' },\r\n    { name: 'NDM-6', color: '#D6604D' },\r\n    { name: 'NDM-7', color: '#9270DB' },\r\n    { name: 'NDM-7 + OXA-232', color: '#9270DB' },\r\n    { name: 'NDM-9', color: '#FC4E2A' },\r\n    { name: 'None', color: '#B9B9B9' },\r\n    { name: 'OXA-162', color: '#556B2F' },\r\n    { name: 'OXA-181', color: '#E31A1C' },\r\n    { name: 'OXA-204', color: '#2166AC' },\r\n    { name: 'OXA-232', color: '#1B7837' },\r\n    { name: 'OXA-232 + OXA-232', color: '#1B7837' },\r\n    { name: 'OXA-244', color: '#C51B7D' },\r\n    { name: 'OXA-245', color: '#01665E' },\r\n    { name: 'OXA-48', color: '#8C510A' },\r\n    { name: 'OXA-48 + OXA-48', color: '#8C510A' },\r\n    { name: 'OXA-48 + VIM-1', color: '#8C510A' },\r\n    { name: 'OXA-484', color: '#88419D' },\r\n    { name: 'VIM-1', color: '#B2182B' },\r\n    { name: 'VIM-12', color: '#08519C' },\r\n    { name: 'VIM-19', color: '#8E0152' },\r\n    { name: 'VIM-2', color: '#810F7C' },\r\n    { name: 'VIM-24', color: '#543005' },\r\n    { name: 'VIM-26', color: '#00441B' },\r\n    { name: 'VIM-27', color: '#0000CD' },\r\n    { name: 'VIM-29', color: '#08306B' },\r\n    { name: 'VIM-33', color: '#67001F' },\r\n    { name: 'VIM-4', color: '#4A0082' },\r\n    { name: 'VIM-5', color: '#40004B' }\r\n  ]\r\n};\r\n\r\n// Color variables\r\nexport const lightGrey = '#D3D3D3';\r\nexport const darkGrey = '#727272';\r\nexport const zeroPercentColor = '#A20F17';\r\nexport const zeroCountColor = '#F5F4F6';\r\nexport const hoverColor = '#D2F1F6';\r\n","// Helper for map color\r\nimport chroma from 'chroma-js';\r\n\r\nexport const samplesColorScale = (domain) => {\r\n  if (domain >= 1 && domain <= 9) {\r\n    return '#4575B4';\r\n  } else if (domain >= 10 && domain <= 19) {\r\n    return '#91BFDB';\r\n  } else if (domain >= 20 && domain <= 99) {\r\n    return '#ADDD8E';\r\n  } else if (domain >= 100 && domain <= 299) {\r\n    return '#FEE090';\r\n  } else if (domain >= 300) {\r\n    return '#FC8D59';\r\n  }\r\n};\r\n\r\nexport const redColorScale = (percentage) => {\r\n  const p = percentage;\r\n  if(p > 50){\r\n    return '#A20F17';\r\n  }else if (p > 10 && p <= 50) {\r\n    return '#DD2C24';\r\n  } else if (p > 2 && p <= 10) {\r\n    return '#FA694A';\r\n  } else {\r\n    return '#FAAD8F';\r\n  } \r\n};\r\n\r\nexport const redColorScale2 = (percentage) => {\r\n  const p = parseInt(percentage);\r\n  \r\n  // Define the color scale using chroma.scale\r\n  const colorScale = chroma.scale(['#FAAD8F', '#FA694A', '#DD2C24', '#A20F17']);\r\n  \r\n  // Map the percentage to the color scale range (0 to 1)\r\n  const normalizedPercentage = p / 100;\r\n\r\n  // Use the color scale to interpolate the color based on the percentage\r\n  const color = colorScale(normalizedPercentage).hex();\r\n\r\n  return color;\r\n};\r\n\r\n\r\n\r\nexport const sensitiveColorScale = (percentage) => {\r\n  const p = parseFloat(percentage);\r\n  if (p > 90) {\r\n    return '#727272';\r\n  } else if (p > 50) {\r\n    return '#FAAD8F';\r\n  } else if (p > 20) {\r\n    return '#FA694A';\r\n  } else if (p > 10) {\r\n    return '#DD2C24';\r\n  }\r\n  return '#A20F17';\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bottomLeftControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface PositionModel {\r\n  coordinates: Array<number>;\r\n  zoom: number;\r\n}\r\n\r\ninterface ItemModel {\r\n  name: string;\r\n  count: number;\r\n  percentage: number;\r\n}\r\n\r\ninterface ItemsModel {\r\n  items: Array<ItemModel>;\r\n  count: number;\r\n  percentage?: number;\r\n}\r\n\r\ninterface StatsModel {\r\n  GENOTYPE: ItemsModel;\r\n  H58: ItemsModel;\r\n  MDR: ItemsModel;\r\n  XDR: ItemsModel;\r\n  AzithR: ItemsModel;\r\n  Susceptible: ItemsModel;\r\n  CipR: ItemsModel;\r\n  CipNS: ItemsModel;\r\n}\r\n\r\ninterface MapDataModel {\r\n  name: string;\r\n  displayName: string;\r\n  count: number;\r\n  stats: StatsModel;\r\n}\r\n\r\ninterface MapState {\r\n  loadingMap: boolean;\r\n  position: PositionModel;\r\n  mapView: string;\r\n  tooltipContent: Object | null;\r\n  dataset: string;\r\n  mapData: Array<MapDataModel>;\r\n  ifCustom : boolean;\r\n}\r\n\r\nconst initialState: MapState = {\r\n  loadingMap: false,\r\n  position: {\r\n    coordinates: [0, 0],\r\n    zoom: 1\r\n  },\r\n  mapView: '',\r\n  tooltipContent: null,\r\n  dataset: '',\r\n  mapData: [],\r\n  ifCustom : false,\r\n};\r\n\r\nexport const mapSlice = createSlice({\r\n  name: 'map',\r\n  initialState,\r\n  reducers: {\r\n    setLoadingMap: (state, action: PayloadAction<boolean>) => {\r\n      state.loadingMap = action.payload;\r\n    },\r\n    setPosition: (state, action: PayloadAction<PositionModel>) => {\r\n      state.position = action.payload;\r\n    },\r\n    setMapView: (state, action: PayloadAction<string>) => {\r\n      state.mapView = action.payload;\r\n    },\r\n    setTooltipContent: (state, action: PayloadAction<Object | null>) => {\r\n      state.tooltipContent = action.payload;\r\n    },\r\n\r\n    setDataset: (state, action: PayloadAction<string>) => {\r\n      state.dataset = action.payload;\r\n    },\r\n    setMapData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.mapData = action.payload;\r\n    },\r\n    setIfCustom: (state, action: PayloadAction<boolean>) => {\r\n      state.ifCustom = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nexport const { setPosition, setMapView, setTooltipContent, setDataset, setLoadingMap, setMapData,  setIfCustom } = mapSlice.actions;\r\n\r\nexport default mapSlice.reducer;\r\n","import { AddCircle, FilterCenterFocus, RemoveCircle } from '@mui/icons-material';\r\nimport { IconButton, Tooltip, Zoom } from '@mui/material';\r\nimport { useStyles } from './BottomLeftControlsMUI';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setPosition } from '../../../../stores/slices/mapSlice';\r\n\r\nexport const BottomLeftControls = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const position = useAppSelector((state) => state.map.position);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n\r\n  function handleRecenter() {\r\n    dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n  }\r\n\r\n  function handleZoomIn() {\r\n    if (position.zoom >= 4) return;\r\n\r\n    dispatch(setPosition({ ...position, zoom: position.zoom * 2 }));\r\n  }\r\n\r\n  function handleZoomOut() {\r\n    if (position.zoom <= 1) return;\r\n    if (position.zoom / 2 === 1) {\r\n      dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n    } else {\r\n      dispatch(setPosition({ ...position, coordinates: [0, 0], zoom: position.zoom / 2 }));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.bottomLeftControls}>\r\n      <Zoom in={position.zoom !== 1 || position.coordinates.some((coordinate) => coordinate !== 0)}>\r\n        <Tooltip title=\"Recenter\" placement=\"right\">\r\n          <IconButton onClick={handleRecenter}>\r\n            <FilterCenterFocus fontSize=\"large\" color=\"primary\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Zoom>\r\n      <Tooltip title=\"Zoom In\" placement=\"right\">\r\n        <span>\r\n          <IconButton color=\"primary\" onClick={handleZoomIn} disabled={organism === 'none'}>\r\n            <AddCircle fontSize=\"large\" />\r\n          </IconButton>\r\n        </span>\r\n      </Tooltip>\r\n      <Tooltip title=\"Zoom Out\" placement=\"right\">\r\n        <span>\r\n          <IconButton color=\"primary\" onClick={handleZoomOut} disabled={organism === 'none'}>\r\n            <RemoveCircle fontSize=\"large\" />\r\n          </IconButton>\r\n        </span>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  topRightControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n\r\n    '&$bp700': {\r\n      position: 'relative'\r\n    }\r\n  },\r\n  card: { borderRadius: '6px !important' },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '4px'\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '8px'\r\n  },\r\n  labelTooltipIcon: {\r\n    cursor: 'pointer'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    textAlign: 'start'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  legendWrapper: {\r\n    marginTop: '8px',\r\n    maxHeight: '250px',\r\n    overflowY: 'auto'\r\n  },\r\n  legend: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  legendColorBox: {\r\n    width: '10px',\r\n    height: '10px',\r\n    marginRight: '4px'\r\n  },\r\n  legendText: {\r\n    fontSize: '10px'\r\n  },\r\n  bp700: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","// List of Salmonella genotypes\r\nexport const genotypes = [\r\n  '0',\r\n  '0.0.1',\r\n  '0.0.2',\r\n  '0.0.3',\r\n  '0.1',\r\n  '0.1.1',\r\n  '0.1.2',\r\n  '0.1.3',\r\n  '1.1',\r\n  '1.1.1',\r\n  '1.1.2',\r\n  '1.1.3',\r\n  '1.1.4',\r\n  '1.2',\r\n  '1.2.1',\r\n  '2',\r\n  '2.0.1',\r\n  '2.0.2',\r\n  '2.1',\r\n  '2.1.1',\r\n  '2.1.2',\r\n  '2.1.3',\r\n  '2.1.4',\r\n  '2.1.5',\r\n  '2.1.6',\r\n  '2.1.7',\r\n  '2.1.8',\r\n  '2.1.9',\r\n  '2.1.7.1',\r\n  '2.1.7.2',\r\n  '2.2',\r\n  '2.2.1',\r\n  '2.2.2',\r\n  '2.2.3',\r\n  '2.2.4',\r\n  '2.3',\r\n  '2.3.1',\r\n  '2.3.2',\r\n  '2.3.3',\r\n  '2.3.4',\r\n  '2.3.5',\r\n  '2.4',\r\n  '2.4.1',\r\n  '2.5',\r\n  '2.5.1',\r\n  '2.5.2',\r\n  '3',\r\n  '3.0.1',\r\n  '3.0.2',\r\n  '3.1',\r\n  '3.1.1',\r\n  '3.1.2',\r\n  '3.2',\r\n  '3.2.1',\r\n  '3.2.2',\r\n  '3.3',\r\n  '3.3.1',\r\n  '3.3.2',\r\n  '3.3.2.Bd1',\r\n  '3.3.2.Bd2',\r\n  '3.4',\r\n  '3.5',\r\n  '3.5.1',\r\n  '3.5.2',\r\n  '3.5.3',\r\n  '3.5.4',\r\n  '3.5.4.1',\r\n  '3.5.4.2',\r\n  '3.5.4.3',\r\n  '4',\r\n  '4.1',\r\n  '4.1.1',\r\n  '4.2',\r\n  '4.2.1',\r\n  '4.2.2',\r\n  '4.2.3',\r\n  /*'4.3', '4.3.0', */ '4.3.1',\r\n  '4.3.1.1',\r\n  '4.3.1.1.P1',\r\n  '4.3.1.1.EA1',\r\n  '4.3.1.2',\r\n  '4.3.1.2.EA2',\r\n  '4.3.1.2.EA3',\r\n  '4.3.1.2.1',\r\n  '4.3.1.2.1.1',\r\n  '4.3.1.3',\r\n  '4.3.1.3.Bdq'\r\n].sort((a, b) => a.localeCompare(b));\r\n","// List of legends for the map and in which organisms they appear\r\nexport const mapLegends = [\r\n  { value: 'MDR', label: 'Multidrug resistant (MDR)', organisms: ['typhi'] },\r\n  { value: 'XDR', label: 'Extensively drug resistant (XDR)', organisms: ['typhi'] },\r\n  { value: 'AzithR', label: 'Azithromycin resistant', organisms: ['typhi'] },\r\n  { value: 'CipNS', label: 'Ciprofloxacin non-susceptible (CipNS)', organisms: ['typhi'] },\r\n  { value: 'CipR', label: 'Ciprofloxacin resistant (CipR)', organisms: ['typhi'] },\r\n  { value: 'ESBL', label: 'ESBL', organisms: ['klebe'] },\r\n  { value: 'Carb', label: 'Carbapenems', organisms: ['klebe'] },\r\n  { value: 'Sensitive to all drugs', label: 'Sensitive to all drugs', organisms: ['typhi', 'klebe', 'gono', 'pneumo'] },\r\n  { value: 'Dominant Genotype', label: 'Dominant Genotype', organisms: ['typhi', 'klebe', 'gono', 'pneumo'] },\r\n  { value: 'Genotype prevalence', label: 'Genotype prevalence', organisms: ['typhi', 'klebe', 'gono', 'pneumo'] },\r\n  { value: 'H58 / Non-H58', label: 'H58 genotype', organisms: ['typhi'] },\r\n  { value: 'No. Samples', label: 'No. Samples', organisms: ['typhi', 'klebe', 'gono', 'pneumo'] }\r\n];\r\n","import { InfoOutlined } from '@mui/icons-material';\r\nimport { Box, Card, CardContent, MenuItem, Select, Tooltip, Typography, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './TopRightControlsMUI';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setMapView, setIfCustom} from '../../../../stores/slices/mapSlice.ts';\r\nimport { darkGrey, getColorForGenotype, lightGrey } from '../../../../util/colorHelper';\r\nimport { genotypes } from '../../../../util/genotypes';\r\nimport { redColorScale, samplesColorScale, sensitiveColorScale } from '../mapColorHelper';\r\nimport { mapLegends } from '../../../../util/mapLegends';\r\n\r\nconst generalSteps = ['>0 and ≤2%', '>2% and ≤10%', '>10% and ≤50%', '>50%'];\r\nconst sensitiveSteps = ['0 - 10%', '10 - 20%', '20 - 50%', '50 - 90%', '90 - 100%'];\r\nconst noSamplesSteps = ['1 - 9', '10 - 19', '20 - 99', '100 - 299', '>= 300'];\r\nconst gradientStyle = ['0.01% - 25.00% ', '25.01 - 50.00%', '50.01% - 75.00%', '75.01% - 100.00%'];\r\nconst ExcludedView = ['Genotype prevalence'];\r\nconst mapViewsWithZeroPercentOption = ['CipNS', 'CipR', 'AzithR', 'MDR', 'XDR', 'H58 / Non-H58', 'ESBL', 'Carb', 'Genotype prevalence'];\r\n\r\nexport const TopRightControls = () => {\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery('(max-width:700px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const mapData = useAppSelector((state) => state.map.mapData);\r\n  const mapView = useAppSelector((state) => state.map.mapView);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const colorPallete = useAppSelector((state) => state.dashboard.colorPallete);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n\r\n  function handleChangeMapView(event) {\r\n    if(event.target.value === 'Genotype prevalence')\r\n      dispatch(setIfCustom(true));\r\n    else\r\n      dispatch(setIfCustom(false));\r\n    dispatch(setMapView(event.target.value));\r\n  }\r\n\r\n  function hasZeroPercentOption() {\r\n    return mapViewsWithZeroPercentOption.includes(mapView);\r\n  }\r\n\r\n  function getGenotypeColor(genotype) {\r\n    return organism === 'typhi' ? getColorForGenotype(genotype) : colorPallete[genotype] || '#F5F4F6';\r\n  }\r\n\r\n  function getDominantGenotypeSteps(genotype) {\r\n    if (organism === 'typhi') {\r\n      return genotypes;\r\n    } else {\r\n      return genotypesForFilter;\r\n    }\r\n  }\r\n\r\n  function getSteps() {\r\n    switch (mapView) {\r\n      case 'Sensitive to all drugs':\r\n        return sensitiveSteps;\r\n      case 'No. Samples':\r\n        return noSamplesSteps;\r\n      case 'Dominant Genotype':\r\n        return getDominantGenotypeSteps();\r\n      case 'Genotype prevalence':\r\n        return gradientStyle;\r\n      default:\r\n        return generalSteps;\r\n    }\r\n  }\r\n\r\n  function getStepBoxColor(step, index) {\r\n    switch (mapView) {\r\n      case 'Sensitive to all drugs':\r\n        const aux = ['10', '20', '50', '90', '100'];\r\n        return sensitiveColorScale(aux[index]);\r\n      case 'No. Samples': {\r\n        const aux = [1, 10, 20, 100, 300];\r\n        return samplesColorScale(aux[index]);\r\n      }\r\n      case 'Dominant Genotype':\r\n        return getGenotypeColor(step);\r\n      //case 'Genotype prevalence':\r\n        // return redColorScale2(step);\r\n      // case 'Genotype prevalence':\r\n      //   const aux2 = ['1', '25', '50', '75','100'];\r\n      //   return redColorScale2(aux2[index]);\r\n      default:\r\n        const aux3 = ['0.01', '2.01', '10.01', '50.01'];\r\n        return redColorScale(aux3[index]);\r\n    }\r\n  }\r\n\r\n  function getMapLegends() {\r\n    return mapLegends.filter((legend) => legend.organisms.includes(organism));\r\n  }\r\n\r\n  return (\r\n    <div className={`${classes.topRightControls} ${matches ? classes.bp700 : ''}`}>\r\n      <Card elevation={3} className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <div className={classes.label}>\r\n            <Typography variant=\"caption\">Select map view</Typography>\r\n            <Tooltip\r\n              title=\"Percentage frequency data is shown only for countries with\r\n          N≥20 genomes\"\r\n              placement=\"top\"\r\n            >\r\n              <InfoOutlined color=\"action\" fontSize=\"small\" className={classes.labelTooltipIcon} />\r\n            </Tooltip>\r\n          </div>\r\n          <Select\r\n            variant=\"standard\"\r\n            value={mapView}\r\n            onChange={handleChangeMapView}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n            disabled={organism === 'none'}\r\n          >\r\n            {getMapLegends().map((legend, index) => {\r\n              return (\r\n                <MenuItem key={index + 'mapview'} value={legend.value}>\r\n                  {legend.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n          {organism !== 'none' && mapData.length > 0 && (\r\n            <div className={classes.legendWrapper}>\r\n              <div className={classes.legend}>\r\n                <Box className={classes.legendColorBox} style={{ backgroundColor: lightGrey }} />\r\n                <span className={classes.legendText}>Insufficient data</span>\r\n              </div>\r\n              {hasZeroPercentOption() && (\r\n                <div className={classes.legend}>\r\n                  <Box className={classes.legendColorBox} style={{ backgroundColor: darkGrey }} />\r\n                  <span className={classes.legendText}>0%</span>\r\n                </div>\r\n              )}\r\n              {/* {getSteps().map((step, index) => {\r\n                return (\r\n                  <div key={`step-${index}`} className={classes.legend}>\r\n                    <Box className={classes.legendColorBox} style={{ backgroundColor: getStepBoxColor(step, index) }} />\r\n                    <span className={classes.legendText}>{step}</span>\r\n                  </div>\r\n                );\r\n              })} */}\r\n              {ExcludedView.includes(mapView) ?(\r\n                <div key={`step-1`} className={classes.legend}>\r\n                  <Box\r\n                    className={classes.legendColorBox}\r\n                    style={{\r\n                      height: '50px',\r\n                      marginTop:'2px',\r\n                      backgroundImage: \"linear-gradient( #FAAD8F, #FA694A, #DD2C24, #A20F17)\"\r\n                    }}\r\n                  />\r\n                  <span className={classes.legendText}>\r\n                    <div style={{textAlign:'left', height: '50px'}}>\r\n                      <div>1%</div>\r\n                      <br/>\r\n                      <br/>\r\n                      <div>100%</div>\r\n                    </div>\r\n                  </span>\r\n                </div>\r\n              ) : (\r\n                getSteps().map((step, index) => (\r\n                  <div key={`step-${index}`} className={classes.legend}>\r\n                    <Box className={classes.legendColorBox} style={{ backgroundColor: getStepBoxColor(step, index) }} />\r\n                    <span className={classes.legendText}>{step}</span>\r\n                  </div>\r\n                ))\r\n              ) }\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  topLeftControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n\r\n    '&$bp700': {\r\n      position: 'relative',\r\n\r\n      '& $yearWrapper': {\r\n        width: '100%'\r\n      },\r\n      '& $datasetWrapper .MuiToggleButton-root': {\r\n        width: '100%'\r\n      }\r\n    }\r\n  },\r\n  card: { borderRadius: '6px !important' },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px',\r\n    textAlign: 'start'\r\n  },\r\n  datasetWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    textAlign: 'start'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  yearsWrapper: {\r\n    display: 'flex',\r\n    columnGap: '4px',\r\n    paddingTop: '8px'\r\n  },\r\n  yearWrapper: {\r\n    width: '78px'\r\n  },\r\n  menuPaper: {\r\n    maxHeight: '350px !important'\r\n  },\r\n  bp700: {}\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useStyles } from './TopLeftControlsMUI';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  MenuItem,\r\n  Select,\r\n  ToggleButton,\r\n  ToggleButtonGroup,\r\n  Typography,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setDataset } from '../../../../stores/slices/mapSlice.ts';\r\nimport { setActualTimeFinal, setActualTimeInitial } from '../../../../stores/slices/dashboardSlice';\r\n\r\nconst datasetOptions = ['All', 'Local', 'Travel'];\r\n\r\nexport const TopLeftControls = () => {\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery('(max-width:700px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const years = useAppSelector((state) => state.dashboard.years);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n\r\n  function handleChange(_event, newValue) {\r\n    if (newValue !== null) {\r\n      dispatch(setDataset(newValue));\r\n    }\r\n  }\r\n\r\n  function handleChangeInitial(_event, child) {\r\n    dispatch(setActualTimeInitial(child.props.value));\r\n  }\r\n\r\n  function handleChangeFinal(_event, child) {\r\n    dispatch(setActualTimeFinal(child.props.value));\r\n  }\r\n\r\n  function isDisabled() {\r\n    return organism !== 'typhi';\r\n  }\r\n\r\n  return (\r\n    <div className={`${classes.topLeftControls} ${matches ? classes.bp700 : ''}`}>\r\n      <Card elevation={3} className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography variant=\"h6\">Filters</Typography>\r\n          <div className={classes.datasetWrapper}>\r\n            <Typography gutterBottom variant=\"caption\">\r\n              Select dataset\r\n            </Typography>\r\n            <ToggleButtonGroup value={dataset} exclusive size=\"small\" onChange={handleChange} disabled={isDisabled()}>\r\n              {datasetOptions.map((option, index) => (\r\n                <ToggleButton key={`dataset-${index}`} value={option} color=\"primary\">\r\n                  {option}\r\n                </ToggleButton>\r\n              ))}\r\n            </ToggleButtonGroup>\r\n          </div>\r\n          <div className={classes.yearsWrapper}>\r\n            <div className={classes.yearWrapper}>\r\n              <Typography gutterBottom variant=\"caption\">\r\n                Start year\r\n              </Typography>\r\n              <Select\r\n                variant=\"standard\"\r\n                inputProps={{ className: classes.selectInput }}\r\n                MenuProps={{ classes: { paper: classes.menuPaper, list: classes.selectMenu } }}\r\n                value={actualTimeInitial}\r\n                onChange={handleChangeInitial}\r\n                fullWidth\r\n                disabled={organism === 'none'}\r\n              >\r\n                {years\r\n                  .filter((year) => year <= actualTimeFinal)\r\n                  .map((year, index) => {\r\n                    return (\r\n                      <MenuItem key={`initial-year-${index}`} value={year}>\r\n                        {year}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n              </Select>\r\n            </div>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <div className={classes.yearWrapper}>\r\n              <Typography gutterBottom variant=\"caption\">\r\n                End year\r\n              </Typography>\r\n              <Select\r\n                variant=\"standard\"\r\n                inputProps={{ className: classes.selectInput }}\r\n                MenuProps={{ classes: { paper: classes.menuPaper, list: classes.selectMenu } }}\r\n                value={actualTimeFinal}\r\n                onChange={handleChangeFinal}\r\n                fullWidth\r\n                disabled={organism === 'none'}\r\n              >\r\n                {years\r\n                  .filter((year) => year >= actualTimeInitial)\r\n                  .map((year, index) => {\r\n                    return (\r\n                      <MenuItem key={`final-year-${index}`} value={year}>\r\n                        {year}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface CollapsesModel {\r\n  determinants: boolean;\r\n  distribution: boolean;\r\n  drugResistance: boolean;\r\n  frequencies: boolean;\r\n  trendsKP: boolean;\r\n  KODiversity: boolean;\r\n  convergence: boolean;\r\n}\r\ninterface GraphState {\r\n  countriesForFilter: Array<string>;\r\n  distributionGraphView: string;\r\n  genotypesYearData: Array<any>;\r\n  drugsYearData: Array<any>;\r\n  genotypesAndDrugsYearData: Array<any>;\r\n  collapses: CollapsesModel;\r\n  drugResistanceGraphView: Array<string>,\r\n  frequenciesGraphView: string;\r\n  frequenciesGraphSelectedGenotypes: Array<string>;\r\n  customDropdownMapView: Array<string>;\r\n  genotypesDrugsData: Array<any>;\r\n  genotypesDrugsData2: Array<any>;\r\n  genotypesDrugClassesData: Array<any>;\r\n  determinantsGraphView: string;\r\n  determinantsGraphDrugClass: string;\r\n  trendsKPGraphDrugClass: string;\r\n  trendsKPGraphView: string;\r\n  KODiversityData: Array<any>;\r\n  KODiversityGraphView: string;\r\n  convergenceData: Array<any>;\r\n  convergenceGroupVariable: string;\r\n  convergenceColourVariable: string;\r\n  convergenceColourPallete: Object;\r\n  currentSliderValue: number;\r\n  resetBool: boolean;\r\n  maxSliderValue:number;\r\n}\r\n\r\nconst initialState: GraphState = {\r\n  collapses: {\r\n    determinants: false,\r\n    distribution: false,\r\n    drugResistance: false,\r\n    frequencies: false,\r\n    trendsKP: false,\r\n    KODiversity: false,\r\n    convergence: false,\r\n  },\r\n  countriesForFilter: [],\r\n  genotypesYearData: [],\r\n  drugsYearData: [],\r\n  genotypesDrugsData: [],\r\n  genotypesDrugsData2: [],\r\n  genotypesDrugClassesData: [],\r\n  genotypesAndDrugsYearData: [],\r\n  distributionGraphView: 'number',\r\n  drugResistanceGraphView: [],\r\n  frequenciesGraphView: 'percentage',\r\n  frequenciesGraphSelectedGenotypes: [],\r\n  customDropdownMapView: [],\r\n  determinantsGraphView: 'percentage',\r\n  determinantsGraphDrugClass: '',\r\n  trendsKPGraphDrugClass: '',\r\n  trendsKPGraphView: 'number',\r\n  KODiversityData: [],\r\n  KODiversityGraphView: 'K_locus',\r\n  convergenceData: [],\r\n  convergenceGroupVariable: 'COUNTRY_ONLY',\r\n  convergenceColourVariable: 'DATE',\r\n  convergenceColourPallete: {},\r\n  currentSliderValue:20,\r\n  resetBool: false,\r\n  maxSliderValue:0,\r\n};\r\n\r\nexport const graphSlice = createSlice({\r\n  name: 'graph',\r\n  initialState,\r\n  reducers: {\r\n    setCollapse: (state, action: PayloadAction<any>) => {\r\n      state.collapses[action.payload.key as keyof CollapsesModel] = action.payload.value;\r\n    },\r\n    setCollapses: (state, action: PayloadAction<CollapsesModel>) => {\r\n      state.collapses = action.payload;\r\n    },\r\n    setCountriesForFilter: (state, action: PayloadAction<Array<string>>) => {\r\n      state.countriesForFilter = action.payload;\r\n    },\r\n    setGenotypesYearData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.genotypesYearData = action.payload;\r\n    },\r\n    setDrugsYearData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.drugsYearData = action.payload;\r\n    },\r\n    setDistributionGraphView: (state, action: PayloadAction<string>) => {\r\n      state.distributionGraphView = action.payload;\r\n    },\r\n    setDrugResistanceGraphView: (state, action: PayloadAction<Array<string>>) => {\r\n      state.drugResistanceGraphView = action.payload;\r\n    },\r\n    setFrequenciesGraphView: (state, action: PayloadAction<string>) => {\r\n      state.frequenciesGraphView = action.payload;\r\n    },\r\n    setFrequenciesGraphSelectedGenotypes: (state, action: PayloadAction<Array<string>>) => {\r\n      state.frequenciesGraphSelectedGenotypes = action.payload;\r\n    },\r\n    setCustomDropdownMapView: (state, action: PayloadAction<Array<string>>) => {\r\n      state.customDropdownMapView = action.payload;\r\n    },\r\n    setGenotypesDrugsData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.genotypesDrugsData = action.payload;\r\n    },\r\n    setGenotypesDrugsData2: (state, action: PayloadAction<Array<any>>) => {\r\n      state.genotypesDrugsData2 = action.payload;\r\n    },\r\n    setDeterminantsGraphView: (state, action: PayloadAction<string>) => {\r\n      state.determinantsGraphView = action.payload;\r\n    },\r\n    setDeterminantsGraphDrugClass: (state, action: PayloadAction<string>) => {\r\n      state.determinantsGraphDrugClass = action.payload;\r\n    },\r\n    setGenotypesDrugClassesData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.genotypesDrugClassesData = action.payload;\r\n    },\r\n    setGenotypesAndDrugsYearData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.genotypesAndDrugsYearData = action.payload;\r\n    },\r\n    setTrendsKPGraphDrugClass: (state, action: PayloadAction<string>) => {\r\n      state.trendsKPGraphDrugClass = action.payload;\r\n    },\r\n    setTrendsKPGraphView: (state, action: PayloadAction<string>) => {\r\n      state.trendsKPGraphView = action.payload;\r\n    },\r\n    setKODiversityData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.KODiversityData = action.payload;\r\n    },\r\n    setKODiversityGraphView: (state, action: PayloadAction<string>) => {\r\n      state.KODiversityGraphView = action.payload;\r\n    },\r\n    setConvergenceData: (state, action: PayloadAction<Array<any>>) => {\r\n      state.convergenceData = action.payload;\r\n    },\r\n    setConvergenceGroupVariable: (state, action: PayloadAction<string>) => {\r\n      state.convergenceGroupVariable = action.payload;\r\n    },\r\n    setConvergenceColourVariable: (state, action: PayloadAction<string>) => {\r\n      state.convergenceColourVariable = action.payload;\r\n    },\r\n    setConvergenceColourPallete: (state, action: PayloadAction<Object>) => {\r\n      state.convergenceColourPallete = action.payload;\r\n    },\r\n     setCurrentSliderValue: (state, action: PayloadAction<number>) => {\r\n      state.currentSliderValue = action.payload;\r\n    },\r\n    setResetBool: (state, action: PayloadAction<boolean>) => {\r\n      state.resetBool = action.payload;\r\n    },\r\n    setMaxSliderValue: (state, action: PayloadAction<number>) => {\r\n      state.maxSliderValue = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nexport const {\r\n  setCountriesForFilter,\r\n  setDistributionGraphView,\r\n  setGenotypesYearData,\r\n  setDrugsYearData,\r\n  setCollapse,\r\n  setDrugResistanceGraphView,\r\n  setCollapses,\r\n  setFrequenciesGraphView,\r\n  setFrequenciesGraphSelectedGenotypes,\r\n  setCustomDropdownMapView,\r\n  setGenotypesDrugsData,\r\n  setGenotypesDrugsData2,\r\n  setDeterminantsGraphView,\r\n  setDeterminantsGraphDrugClass,\r\n  setGenotypesDrugClassesData,\r\n  setGenotypesAndDrugsYearData,\r\n  setTrendsKPGraphDrugClass,\r\n  setTrendsKPGraphView,\r\n  setKODiversityData,\r\n  setKODiversityGraphView,\r\n  setConvergenceData,\r\n  setConvergenceGroupVariable,\r\n  setConvergenceColourVariable,\r\n  setConvergenceColourPallete,\r\n  setCurrentSliderValue,\r\n  setResetBool,\r\n  setMaxSliderValue,\r\n} = graphSlice.actions;\r\n\r\nexport default graphSlice.reducer;\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  topRightControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    marginTop: '200px',\r\n    width:'209px',\r\n    // width:'25%',\r\n    '@media (max-width: 1000px)': {\r\n      // width: \r\n    },\r\n    '@media (max-width: 700px)': {\r\n      position: 'relative',\r\n      marginTop: '0px',\r\n      width:'100%',\r\n    },\r\n    // '&$bp700': {\r\n    //   position: 'relative'\r\n    // }\r\n    \r\n  },\r\n\r\n  dropdown:{\r\n    '& .MuiTypography-root': {\r\n      fontSize: '14px',\r\n      height:'20px',\r\n      padding:'0px'\r\n      // width:'20px',\r\n    }\r\n  },\r\n  checkbox:{\r\n    '& .MuiCheckbox-root': {\r\n      backgroundColor:'blue',\r\n      color:'red',\r\n      padding:'0px'\r\n      // width:'20px',\r\n    }\r\n  },\r\n  card: { borderRadius: '6px !important' },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '4px'\r\n  },\r\n  frequenciesGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)',\r\n    textAlign: 'justify',\r\n  },\r\n  selectsWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '4px'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px'\r\n  },\r\n  labelWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '8px'\r\n  },\r\n  labelTooltipIcon: {\r\n    cursor: 'pointer'\r\n  },\r\n   label: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '8px'\r\n  },\r\n  dataViewSelectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  dataViewSelectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  genotypesSelectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 100px 8px 15px !important',\r\n    marginRight: '-80px !important'\r\n  },\r\n  genotypesSelectButton: {\r\n    height: '20px',\r\n    fontSize: '8px !important',\r\n    padding: '3px 5px !important',\r\n    whiteSpace: 'nowrap',\r\n    position: 'absolute',\r\n    right: '18px'\r\n  },\r\n  genotypesMenuPaper: {\r\n    maxHeight: '350px !important'\r\n  },\r\n  genotypesSelectMenu: {\r\n    '& .MuiCheckbox-root': {\r\n      padding: '0px 8px 0px 0px'\r\n    },\r\n    '& .MuiTypography-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      width: '100%',\r\n      height: '460px'\r\n    }\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  chartTooltipLabel: {\r\n    backgroundColor: '#fff',\r\n    padding: '8px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px'\r\n  },\r\n  tooltipWrapper: {\r\n    width: '30%',\r\n    borderRadius: '6px',\r\n    backgroundColor: '#E5E5E5',\r\n    overflowY: 'auto',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      height: '250px'\r\n    }\r\n  },\r\n  tooltip: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end',\r\n    padding: '16px 16px 8px',\r\n    borderBottom: '1px solid #fff'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexWrap: 'wrap',\r\n    gap: '16px',\r\n    padding: '16px',\r\n    overflowY: 'auto'\r\n  },\r\n  tooltipItemWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    gridColumn: 'span 6'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  },\r\n  noGenotypeSelected: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Card, CardContent, Checkbox, ListItemText, MenuItem, Select, Typography, InputAdornment, IconButton} from '@mui/material';\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useEffect, useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setCustomDropdownMapView } from '../../../../stores/slices/graphSlice';\r\nimport { useStyles } from './TopRightControls2MUI';\r\nimport TextField from '@mui/material/TextField';\r\n// import Autocomplete from '@mui/material/Autocomplete';\r\n\r\n\r\nexport const TopRightControls2 = () => {\r\n  const classes = useStyles();\r\n  const [setCurrentTooltip] = useState(null);\r\n  const [searchValue2, setSearchValue2] = useState(\"\")\r\n  const dispatch = useAppDispatch();\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const genotypesDrugsData2 = useAppSelector((state) => state.graph.genotypesDrugsData2);\r\n  const customDropdownMapView = useAppSelector((state) => state.graph.customDropdownMapView);\r\n  // const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n\r\n  useEffect(() => {\r\n    setCurrentTooltip(null);\r\n    // console.log(\"customDropdownMapView\", customDropdownMapView);\r\n  }, [genotypesDrugsData2, customDropdownMapView]);\r\n\r\n  function getSelectGenotypeLabel(genotype) {\r\n    // console.log(\"genotype2\",genotype.Susceptible );\r\n    const percentage = Number(((genotype.Susceptible / genotype.totalCount) * 100).toFixed(2));\r\n\r\n    return `${genotype.name} (total N=${genotype.totalCount}, ${percentage}% Susceptible)`;\r\n  }\r\n  \r\n  function getDataForGenotypeSelect() {\r\n    // console.log(\"getDataForGenotypeSelect\",genotypesDrugsData2);\r\n    return genotypesDrugsData2;\r\n  }\r\n\r\n  function handleChangeSelectedGenotypes({ event = null, all = false }) {\r\n    if (all) {\r\n      dispatch(setCustomDropdownMapView([]));\r\n      setCurrentTooltip(null);\r\n      return;\r\n    }\r\n\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n\r\n    if (customDropdownMapView.length === 10 && value.length > 10) {\r\n      return;\r\n    }\r\n\r\n    if (value.length === 0) {\r\n      setCurrentTooltip(null);\r\n    }\r\n    dispatch(setCustomDropdownMapView(value));\r\n  }\r\n\r\n function setSearchValue(event){\r\n  event.preventDefault()\r\n  setSearchValue2(event.target.value)\r\n }\r\n\r\nconst filteredData = getDataForGenotypeSelect().filter((genotype) =>\r\n  genotype.name.includes(searchValue2.toLowerCase()) || genotype.name.includes(searchValue2.toUpperCase())\r\n);\r\n\r\nconsole.log(\"customDropdownMapView\", customDropdownMapView.length);\r\n console.log(\"searchValue2\", searchValue2);\r\n  return (\r\n    <div className={`${classes.topRightControls}`}>\r\n      <Card elevation={3} className={classes.card}>\r\n        <CardContent className={classes.frequenciesGraph}>\r\n          <div className={classes.label}>\r\n            <Typography variant=\"caption\">Select genotype/s</Typography>\r\n          </div>\r\n            <Select\r\n              multiple\r\n              // labelId=\"search-select-label\"\r\n              id=\"search-select\"\r\n              value={customDropdownMapView}\r\n              onChange={(event) => handleChangeSelectedGenotypes({ event })}\r\n              disabled={organism === 'none'}\r\n              displayEmpty\r\n              onClose={(e) => setSearchValue2(\"\")}\r\n              endAdornment={\r\n                <IconButton\r\n                  size='small'\r\n                  variant=\"outlined\"\r\n                  className={classes.genotypesSelectButton}\r\n                  onClick={() => handleChangeSelectedGenotypes({ all: true })}\r\n                  disabled={organism === 'none' || customDropdownMapView.length === 0}\r\n                  color=\"error\"\r\n                  // startIcon={<DeleteIcon />}\r\n                >\r\n                  {/* CLEAR */}<DeleteIcon fontSize='small'/>\r\n                </IconButton>\r\n              }\r\n              inputProps={{ className: classes.genotypesSelectInput }}\r\n              MenuProps={{ classes: { paper: classes.genotypesMenuPaper, list: classes.genotypesSelectMenu } }}\r\n              renderValue={(selected) => (\r\n                selected.length === 1 ? (\r\n                  <Typography variant=\"caption\">{selected}</Typography>\r\n                ) : (\r\n                  <Typography variant=\"caption\">{`${selected.length} genotypes`}</Typography>\r\n                ))\r\n              }\r\n            >\r\n              <TextField \r\n                size=\"small\"\r\n                autoFocus\r\n                placeholder=\"Type to search...\"\r\n                label=\"Search genotype\" \r\n                variant=\"standard\" \r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SearchIcon />\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n                sx={{ width:'90%', margin:'0% 5%'}}\r\n                onChange={e => setSearchValue(e)}\r\n                onKeyDown={(e) => e.stopPropagation()}\r\n              />\r\n              {filteredData.map((genotype, index) => (\r\n                <MenuItem key={`frequencies-option-${index}`} value={genotype.name} className={classes.dropdown}>\r\n                  <Checkbox sx={{padding: '0px', marginRight:'5px'}} checked={customDropdownMapView.indexOf(genotype.name) > -1} />\r\n                  <ListItemText primary={getSelectGenotypeLabel(genotype)}   />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n        </CardContent>\r\n     </Card>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bottomRightControls: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    right: 0\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","// Helper for loading images to the report\r\nexport function imgOnLoadPromise(obj) {\r\n  return new Promise((resolve, reject) => {\r\n    obj.onload = () => resolve(obj);\r\n    obj.onerror = reject;\r\n  });\r\n}\r\n","import { Alert, CircularProgress, IconButton, Snackbar, Tooltip } from '@mui/material';\r\nimport { useStyles } from './BottomRightControlsMUI';\r\nimport { CameraAlt } from '@mui/icons-material';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { useState } from 'react';\r\nimport { setPosition } from '../../../../stores/slices/mapSlice';\r\nimport { svgAsPngUri } from 'save-svg-as-png';\r\nimport { imgOnLoadPromise } from '../../../../util/imgOnLoadPromise';\r\nimport download from 'downloadjs';\r\nimport LogoImg from '../../../../assets/img/logo-prod.png';\r\nimport { mapLegends } from '../../../../util/mapLegends';\r\n\r\nexport const BottomRightControls = () => {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const mapView = useAppSelector((state) => state.map.mapView);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const globalOverviewLabel = useAppSelector((state) => state.dashboard.globalOverviewLabel);\r\n\r\n  async function handleClick() {\r\n    setLoading(true);\r\n    dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n\r\n    try {\r\n      await svgAsPngUri(document.getElementById('global-overview-map'), {\r\n        scale: 4,\r\n        backgroundColor: 'white',\r\n        width: 1200,\r\n        left: -200\r\n      }).then(async (uri) => {\r\n        let canvas = document.createElement('canvas');\r\n        let ctx = canvas.getContext('2d');\r\n\r\n        let mapImg = document.createElement('img');\r\n        let mapImgPromise = imgOnLoadPromise(mapImg);\r\n        mapImg.src = uri;\r\n        await mapImgPromise;\r\n\r\n        const cWidth = 3600;\r\n        const cHeight = 1800;\r\n        const textHeight = 250;\r\n        const legendHeight = 350;\r\n\r\n        canvas.width = cWidth;\r\n        canvas.height = cHeight + textHeight + legendHeight;\r\n\r\n        ctx.fillStyle = 'white';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        ctx.font = 'bolder 50px Montserrat';\r\n        ctx.fillStyle = 'black';\r\n        ctx.textAlign = 'center';\r\n        ctx.fillText(`Global Overview of ${globalOverviewLabel.fullLabel}`, canvas.width / 2, 80);\r\n        ctx.font = '35px Montserrat';\r\n        ctx.textAlign = 'center';\r\n\r\n        const actualMapView = mapLegends.find((x) => x.value === mapView).label;\r\n\r\n        ctx.fillText('Map View: ' + actualMapView, canvas.width / 2, 140);\r\n        ctx.fillText('Dataset: ' + dataset, canvas.width / 2, 190);\r\n        ctx.fillText('Time Period: ' + actualTimeInitial + ' to ' + actualTimeFinal, canvas.width / 2, 240);\r\n\r\n        ctx.drawImage(mapImg, 0, textHeight, canvas.width, cHeight);\r\n\r\n        const legendImg = document.createElement('img');\r\n        const legendImgPromise = imgOnLoadPromise(legendImg);\r\n        let legendWidth = 439;\r\n\r\n        switch (mapView) {\r\n          case 'Dominant Genotype':\r\n            legendWidth = organism === 'typhi' ? 3085 : 2937;\r\n            legendImg.src = `legends/MapView_DominantGenotype_${organism}.png`;\r\n            break;\r\n          case 'No. Samples':\r\n            legendImg.src = 'legends/MapView_NoSamples.png';\r\n            break;\r\n          case 'Sensitive to all drugs':\r\n            legendImg.src = 'legends/MapView_Sensitive.png';\r\n            break;\r\n          case 'Genotype prevalence':\r\n            legendImg.src = 'legends/MapView_prevalence.png';\r\n            break;\r\n          default:\r\n            legendImg.src = 'legends/MapView_Others.png';\r\n            break;\r\n        }\r\n\r\n        await legendImgPromise;\r\n        ctx.drawImage(\r\n          legendImg,\r\n          canvas.width / 2 - legendWidth / 2,\r\n          canvas.height - legendHeight - 30,\r\n          legendWidth,\r\n          legendHeight\r\n        );\r\n\r\n        const typhinetLogo = document.createElement('img');\r\n        const typhinetLogoPromise = imgOnLoadPromise(typhinetLogo);\r\n        typhinetLogo.src = LogoImg;\r\n        await typhinetLogoPromise;\r\n        ctx.drawImage(typhinetLogo, 25, 25, 500, 200);\r\n\r\n        const base64 = canvas.toDataURL();\r\n        await download(base64, 'TyphiNET - Global Overview Salmonella Typhi.png');\r\n      });\r\n    } catch (error) {\r\n      setShowAlert(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function handleCloseAlert() {\r\n    setShowAlert(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.bottomRightControls}>\r\n      <Tooltip title=\"Download Map as PNG\" placement=\"left\">\r\n        <span>\r\n          <IconButton color=\"primary\" onClick={handleClick} disabled={organism === 'none' || loading}>\r\n            {loading ? <CircularProgress color=\"primary\" size={35} /> : <CameraAlt fontSize=\"large\" />}\r\n          </IconButton>\r\n        </span>\r\n      </Tooltip>\r\n      <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleCloseAlert}>\r\n        <Alert onClose={handleCloseAlert} severity=\"error\" sx={{ width: '100%' }}>\r\n          Something went wrong with the download, please try again later.\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Card, CardContent, Typography, useMediaQuery } from '@mui/material';\r\nimport { ComposableMap, Geographies, Geography, Graticule, Sphere, ZoomableGroup } from 'react-simple-maps';\r\nimport { useStyles } from './MapMUI';\r\nimport geography from '../../../assets/world-50m.json';\r\nimport { darkGrey, getColorForGenotype, lightGrey, zeroCountColor, zeroPercentColor } from '../../../util/colorHelper';\r\nimport { redColorScale, samplesColorScale, sensitiveColorScale, redColorScale2 } from './mapColorHelper';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { BottomLeftControls } from './BottomLeftControls';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { setPosition, setTooltipContent } from '../../../stores/slices/mapSlice.ts';\r\nimport { TopRightControls } from './TopRightControls';\r\nimport { setActualCountry } from '../../../stores/slices/dashboardSlice.ts';\r\nimport { TopLeftControls } from './TopLeftControls';\r\nimport { TopRightControls2 } from './TopRightControls2';\r\nimport { BottomRightControls } from './BottomRightControls';\r\n\r\nconst statKey = {\r\n  MDR: 'MDR',\r\n  'H58 / Non-H58': 'H58',\r\n  XDR: 'XDR',\r\n  AzithR: 'AzithR',\r\n  CipNS: 'CipNS',\r\n  CipR: 'CipR',\r\n  'Sensitive to all drugs': 'Susceptible',\r\n  ESBL: 'ESBL',\r\n  Carb: 'Carb'\r\n};\r\n\r\nexport const Map = () => {\r\n  const classes = useStyles();\r\n  const matches = useMediaQuery('(max-width:700px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const position = useAppSelector((state) => state.map.position);\r\n  const mapData = useAppSelector((state) => state.map.mapData);\r\n  const mapView = useAppSelector((state) => state.map.mapView);\r\n  const tooltipContent = useAppSelector((state) => state.map.tooltipContent);\r\n  const globalOverviewLabel = useAppSelector((state) => state.dashboard.globalOverviewLabel);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const colorPallete = useAppSelector((state) => state.dashboard.colorPallete);\r\n  // const frequenciesGraphSelectedGenotypes = useAppSelector((state) => state.graph.frequenciesGraphSelectedGenotypes);\r\n  const customDropdownMapView = useAppSelector((state) => state.graph.customDropdownMapView);\r\n  const ifCustom = useAppSelector((state) => state.map.ifCustom);\r\n\r\n  function getGenotypeColor(genotype) {\r\n    return organism === 'typhi' ? getColorForGenotype(genotype) : colorPallete[genotype] || '#F5F4F6';\r\n  }\r\n\r\n  function handleOnClick(countryData) {\r\n    if (countryData !== undefined) {\r\n      dispatch(setActualCountry(countryData.name));\r\n    }\r\n  }\r\n// console.log(\" ifCustom \", ifCustom);\r\n  function handleOnMouseLeave() {\r\n    dispatch(setTooltipContent(null));\r\n  }\r\n  function handleOnMouseEnter({ geo, countryStats, countryData, smallerThan20 = false, showTooltip = false }) {\r\n    const { NAME } = geo.properties;\r\n    const tooltip = {\r\n      name: NAME,\r\n      content: {},\r\n      smallerThan20\r\n    };\r\n\r\n    if (countryData !== undefined) {\r\n      switch (mapView) {\r\n        case 'No. Samples':\r\n          Object.assign(tooltip, {\r\n            content:\r\n              organism === 'typhi'\r\n                ? {\r\n                    Samples: countryData.count,\r\n                    Genotypes: countryStats.GENOTYPE.count,\r\n                    H58: `${countryStats.H58.percentage}%`,\r\n                    MDR: `${countryStats.MDR.percentage}%`,\r\n                    XDR: `${countryStats.XDR.percentage}%`,\r\n                    AzithR: `${countryStats.AzithR.percentage}%`,\r\n                    CipR: `${countryStats.CipR.percentage}%`,\r\n                    CipNS: `${countryStats.CipNS.percentage}%`,\r\n                    Susceptible: `${countryStats.Susceptible.percentage}%`,\r\n                  }\r\n                : {\r\n                    Samples: countryData.count,\r\n                    Genotypes: countryStats.GENOTYPE.count,\r\n                    ESBL: `${countryStats.ESBL.percentage}%`,\r\n                    Carb: `${countryStats.Carb.percentage}%`,\r\n                    Susceptible: `${countryStats.Susceptible.percentage}%`\r\n                  }\r\n          });\r\n          break;\r\n        case 'Dominant Genotype':\r\n          const genotypes = countryStats.GENOTYPE.items.slice(0, 5);\r\n          genotypes.forEach((genotype) => {\r\n            tooltip.content[genotype.name] = genotype.count;\r\n          });\r\n          break;\r\n        case 'Genotype prevalence':\r\n            let percentCounter = 0;        \r\n            const genotypes1 = countryStats.GENOTYPE.items;\r\n            let genotypes2 = [];\r\n            genotypes1.forEach((genotype) => {\r\n               if (customDropdownMapView.includes(genotype.name)){\r\n                // tooltip.content[genotype.name] = `${genotype.count} `;\r\n                  genotypes2.push(genotype);}\r\n                percentCounter += genotype.count;\r\n            });\r\n            genotypes1.forEach((genotype) => {\r\n               if (customDropdownMapView.includes(genotype.name))\r\n                tooltip.content[genotype.name] = `${genotype.count} (${((genotype.count/percentCounter)*100).toFixed(2)} %)`;\r\n            });\r\n            if (genotypes2.length > 0) {\r\n              let sumCount = 0;\r\n              for (const genotype of genotypes2) {\r\n                sumCount += genotype.count;\r\n              }\r\n              if(countryData.count>=20 && genotypes2.length > 1 )\r\n                tooltip.content['All selected genotypes'] = `${sumCount} (${((sumCount/percentCounter)*100).toFixed(2)} %)`;\r\n\r\n            }\r\n            break;\r\n        case 'H58 / Non-H58':\r\n        case 'MDR':\r\n        case 'Sensitive to all drugs':\r\n        case 'XDR':\r\n        case 'AzithR':\r\n        case 'CipR':\r\n        case 'CipNS':\r\n        case 'ESBL':\r\n        case 'Carb':\r\n          if (showTooltip) {\r\n            tooltip.content[statKey[mapView]] = {\r\n              count: countryStats[statKey[mapView]].count,\r\n              percentage: `${countryStats[statKey[mapView]].percentage}%`\r\n            };\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    dispatch(setTooltipContent(tooltip));\r\n  }\r\n\r\n  function handleOnMoveEnd(value) {\r\n    dispatch(setPosition(value));\r\n  }\r\n\r\n  function showPercentage() {\r\n    return !['Dominant Genotype','Genotype prevalence','No. Samples'].includes(mapView);\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography gutterBottom variant=\"h5\" fontWeight={'bold'}>\r\n          Global Overview{' '}\r\n          {organism === 'none' ? (\r\n            ''\r\n          ) : (\r\n            <span>\r\n              of <i>{globalOverviewLabel.italicLabel}</i> {globalOverviewLabel.label}\r\n            </span>\r\n          )}\r\n        </Typography>\r\n        <div className={classes.mapWrapper}>\r\n          <ComposableMap\r\n            className={classes.composableMap}\r\n            id=\"global-overview-map\"\r\n            data-tip=\"\"\r\n            projectionConfig={{\r\n              rotate: [-10, 0, 0],\r\n              scale: 210\r\n            }}\r\n          >\r\n            <ZoomableGroup\r\n              zoom={position.zoom}\r\n              center={position.coordinates}\r\n              onMoveEnd={(value) => {\r\n                handleOnMoveEnd(value);\r\n              }}\r\n            >\r\n              <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n              <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n              <Geographies geography={geography}>\r\n                {({ geographies }) => {\r\n                  // console.log(\"coundry data changed\");\r\n                  return geographies.map((geo) => {\r\n                    const countryData = mapData.find((item) => item.name === geo.properties.NAME);\r\n                    const countryStats = countryData?.stats;\r\n                    let fillColor = lightGrey;\r\n                    let smallerThan20 = false;\r\n                    let showTooltip = false;\r\n\r\n                    if (countryData) {\r\n                      let count = 0;\r\n\r\n                      switch (mapView) {\r\n                        case 'No. Samples':\r\n                          if (countryData.count > 0) {\r\n                            fillColor = samplesColorScale(countryData.count);\r\n                          } else {\r\n                            fillColor = zeroCountColor;\r\n                          }\r\n                          break;\r\n                        case 'Dominant Genotype':\r\n                          const genotypes = countryStats.GENOTYPE.items;\r\n                          fillColor = getGenotypeColor(genotypes[0].name);\r\n                          break;\r\n                        case 'Genotype prevalence':\r\n                          let percentCounter = 0;        \r\n                          const genotypes1 = countryStats.GENOTYPE.items;\r\n                          // console.log(\"gencountryDataotypes1\",countryData);\r\n                          let genotypes2 = [];\r\n                          genotypes1.forEach((genotype) => {\r\n                            if (customDropdownMapView.includes(genotype.name))\r\n                                genotypes2.push(genotype);\r\n                              percentCounter += genotype.count;\r\n                          });\r\n                          // console.log(\"genotypes2\",genotypes2.length );\r\n                \r\n                          let sumCount = 0;\r\n\r\n                          if (genotypes2.length > 0 ) {\r\n                            for (const genotype of genotypes2) {\r\n                              sumCount += genotype.count;\r\n                            }\r\n                          }\r\n                          if(countryData.count>=20 && genotypes2.length > 0 ){\r\n                            // console.log(\"count %\",count );\r\n                            if(genotypes2 !== undefined){\r\n                              fillColor = redColorScale2(((sumCount/percentCounter)*100).toFixed(2));\r\n                            }\r\n                          }\r\n                          else if (countryData.count>=20) {\r\n                            fillColor = darkGrey;\r\n                            smallerThan20 = true;\r\n                          }\r\n                          break;\r\n                        case 'Sensitive to all drugs':\r\n                        case 'H58 / Non-H58':\r\n                        case 'MDR':\r\n                        case 'XDR':\r\n                        case 'AzithR':\r\n                        case 'CipR':\r\n                        case 'CipNS':\r\n                        case 'ESBL':\r\n                        case 'Carb':\r\n                          count = countryStats[statKey[mapView]]?.count;\r\n                          if (countryData.count >= 20 && count > 0) {\r\n                            if (mapView === 'Sensitive to all drugs') {\r\n                              fillColor = sensitiveColorScale(countryStats[statKey[mapView]].percentage);\r\n                            } else {\r\n                              fillColor = redColorScale(countryStats[statKey[mapView]].percentage);\r\n                            }\r\n                            showTooltip = true;\r\n                          } else if (countryData.count >= 20) {\r\n                            if (mapView === 'Sensitive to all drugs') {\r\n                              fillColor = zeroPercentColor;\r\n                            } else {\r\n                              fillColor = darkGrey;\r\n                            }\r\n                            smallerThan20 = true;\r\n                          }\r\n                          break;\r\n                        default:\r\n                          break;\r\n                      }\r\n                    }\r\n\r\n                    return (\r\n                      <Geography\r\n                        key={geo.rsmKey}\r\n                        geography={geo}\r\n                        cursor=\"pointer\"\r\n                        fill={fillColor}\r\n                        onClick={() => handleOnClick(countryData)}\r\n                        onMouseLeave={handleOnMouseLeave}\r\n                        onMouseEnter={() =>\r\n                          handleOnMouseEnter({\r\n                            geo,\r\n                            countryStats,\r\n                            countryData,\r\n                            smallerThan20,\r\n                            showTooltip\r\n                          })\r\n                        }\r\n                        style={{\r\n                          default: {\r\n                            outline: 'none'\r\n                          },\r\n                          hover: {\r\n                            stroke: '#607D8B',\r\n                            strokeWidth: 1,\r\n                            outline: 'none'\r\n                          },\r\n                          pressed: {\r\n                            fill: '#FF5722',\r\n                            stroke: '#607D8B',\r\n                            strokeWidth: 1,\r\n                            outline: 'none'\r\n                          }\r\n                        }}\r\n                      />\r\n                    );\r\n                  });\r\n                }}\r\n              </Geographies>\r\n            </ZoomableGroup>\r\n          </ComposableMap>\r\n          {!matches && (\r\n            <>\r\n              <TopLeftControls />\r\n              <TopRightControls />\r\n              {ifCustom ? <TopRightControls2/> : null}\r\n            </>\r\n          )}\r\n          <BottomLeftControls />\r\n          <BottomRightControls />\r\n        </div>\r\n        {matches && (\r\n          <div className={classes.topControls}>\r\n            <TopRightControls />\r\n            {ifCustom ? <TopRightControls2/> : null}\r\n            <TopLeftControls />\r\n            \r\n          </div>\r\n        )}\r\n        <ReactTooltip>\r\n          {tooltipContent && (\r\n            <div className={classes.tooltipMap}>\r\n              <span className={classes.country}>{tooltipContent.name}</span>\r\n              <div className={classes.tooltipInfo}>\r\n                {Object.keys(tooltipContent.content).map((key, index) => {\r\n                  return (\r\n                    <div key={`tooltip-${index}`} className={classes.info}>\r\n                      {mapView === 'Dominant Genotype' && (\r\n                        <div\r\n                          className={classes.color}\r\n                          style={{\r\n                            backgroundColor: getGenotypeColor(key)\r\n                          }}\r\n                        />\r\n                      )}\r\n                      <span key={`info-${index}`}>\r\n                        <span>{key}:</span>\r\n                        {showPercentage() ? (\r\n                          <span>{` ${tooltipContent.content[key].count} (${tooltipContent.content[key].percentage})`}</span>\r\n                        ) : (\r\n                          <span>{` ${tooltipContent.content[key]}`}</span>\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n                  );\r\n                })}\r\n                {Object.keys(tooltipContent.content).length === 0 && (\r\n                  <span>{tooltipContent.smallerThan20 ? '0%' : 'Insufficient data'}</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ReactTooltip>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: '16px',\r\n    backgroundColor: '#fff !important'\r\n  },\r\n  toolbar: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: '16px',\r\n    display: 'grid !important',\r\n    gap: '8px',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    padding: '16px 16px 24px !important',\r\n    margin: '0px 2%'\r\n  },\r\n  socialsWrapper: {\r\n    display: 'flex',\r\n    columnGap: '4px',\r\n    gridColumn: 'span 6',\r\n    justifyContent: 'flex-end'\r\n  },\r\n  logosWrapper: {\r\n    gridColumn: 'span 6',\r\n    display: 'flex',\r\n    columnGap: '8px'\r\n  },\r\n  logo: {\r\n    cursor: 'pointer'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","export default __webpack_public_path__ + \"static/media/LSHTMLogo2020.f787d6d4.jpg\";","export default __webpack_public_path__ + \"static/media/Wellcome_Trust_logo.359b4529.png\";","import { AppBar, IconButton, Toolbar, Tooltip } from '@mui/material';\r\nimport { useStyles } from './FooterMUI';\r\nimport { GitHub } from '@mui/icons-material';\r\nimport LSHTMLogoImg from '../../../assets/img/LSHTMLogo2020.jpg';\r\nimport WellcomeTrustLogoImg from '../../../assets/img/Wellcome_Trust_logo.png';\r\n\r\nexport const Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  function handleClickGithub() {\r\n    window.open('https://github.com/amrnet', '_blank');\r\n  }\r\n\r\n  function handleClickLSHTM() {\r\n    window.open('https://www.lshtm.ac.uk', '_blank');\r\n  }\r\n\r\n  function handleClickWT() {\r\n    window.open('http://wellcome.org', '_blank');\r\n  }\r\n\r\n  return (\r\n    <AppBar position=\"static\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <div className={classes.logosWrapper}>\r\n          <img\r\n            className={classes.logo}\r\n            onClick={handleClickLSHTM}\r\n            src={LSHTMLogoImg}\r\n            alt=\"LSHTM Logo\"\r\n            loading=\"lazy\"\r\n            height={60}\r\n          />\r\n          <img\r\n            className={classes.logo}\r\n            onClick={handleClickWT}\r\n            src={WellcomeTrustLogoImg}\r\n            alt=\"Wellcome Trust Logo\"\r\n            loading=\"lazy\"\r\n            height={60}\r\n          />\r\n        </div>\r\n        <div className={classes.socialsWrapper}>\r\n          <Tooltip title=\"Github\" placement=\"top\">\r\n            <IconButton onClick={handleClickGithub}>\r\n              <GitHub fontSize=\"large\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  downloadDataWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    padding: '16px 0px',\r\n\r\n    '@media (max-width: 500px)': {\r\n      padding: '8px 0px'\r\n    },\r\n\r\n    '@media (max-width: 700px)': {\r\n      flexDirection: 'column',\r\n      rowGap: '8px'\r\n    }\r\n  },\r\n  button: {\r\n    color: '#fff !important',\r\n    width: '30%',\r\n    textTransform: 'none !important',\r\n    paddingTop: '8px !important',\r\n    paddingBottom: '8px !important',\r\n    borderRadius: '100px !important',\r\n\r\n    '@media (max-width: 700px)': {\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","export default __webpack_public_path__ + \"static/media/eu_flag.77134ad3.jpg\";","import { BarChart, BubbleChart, MultilineChart, StackedBarChart, Timeline } from '@mui/icons-material';\r\n\r\nexport const graphCards = [\r\n  {\r\n    collapse: 'drugResistance',\r\n    title: 'Drug resistance trends',\r\n    description: ['Data are plotted for years with N ≥ 10 genomes'],\r\n    icon: <Timeline color=\"primary\" />,\r\n    id: 'DRT',\r\n    organisms: ['typhi', 'klebe']\r\n  },\r\n  {\r\n    collapse: 'frequencies',\r\n    title: 'Resistance frequencies within genotypes',\r\n    description: ['Select Genotypes (up to 7)'],\r\n    icon: <BarChart color=\"primary\" />,\r\n    id: 'RFWG',\r\n    organisms: ['typhi', 'klebe']\r\n  },\r\n  {\r\n    collapse: 'determinants',\r\n    title: 'Resistance determinants within genotypes',\r\n    description: ['Top Genotypes (up to 10)'],\r\n    icon: <StackedBarChart color=\"primary\" />,\r\n    id: 'RDWG',\r\n    organisms: ['typhi', 'klebe']\r\n  },\r\n  {\r\n    collapse: 'distribution',\r\n    title: 'Genotype distribution',\r\n    description: [''],\r\n    icon: <StackedBarChart color=\"primary\" />,\r\n    id: 'GD',\r\n    organisms: ['typhi', 'klebe']\r\n  },\r\n  {\r\n    collapse: 'trendsKP',\r\n    title: 'Carbapenems and ESBL resistant determinant trends',\r\n    description: ['Top Genotypes (up to 10)', 'Data are plotted for years with N ≥ 10 genomes'],\r\n    icon: <MultilineChart color=\"primary\" />,\r\n    id: 'CERDT',\r\n    organisms: ['klebe']\r\n  },\r\n  {\r\n    collapse: 'KODiversity',\r\n    title: 'K/O diversity',\r\n    description: ['Top K/O (up to 20)'],\r\n    icon: <StackedBarChart color=\"primary\" />,\r\n    id: 'KO',\r\n    organisms: ['klebe']\r\n  },\r\n  {\r\n    collapse: 'convergence',\r\n    title: 'Convergence vs metadata',\r\n    description: [''],\r\n    icon: <BubbleChart color=\"primary\" />,\r\n    id: 'CVM',\r\n    organisms: ['klebe']\r\n  }\r\n];\r\n","// List of Salmonella drugs\r\nexport const drugsST = [\r\n  'Ampicillin',\r\n  'Azithromycin',\r\n  'Chloramphenicol',\r\n  // 'Co-trimoxazole',\r\n  'Trimethoprim-sulfamethoxazole',\r\n  // 'ESBL',\r\n  'Ceftriaxone',\r\n  // 'Fluoroquinolones (CipNS)',\r\n  'Ciprofloxacin NS',\r\n  // 'Fluoroquinolones (CipR)',\r\n  'Ciprofloxacin R',\r\n  'Sulphonamides',\r\n  'Susceptible',\r\n  'Tetracyclines',\r\n  'Trimethoprim'\r\n].sort((a, b) => a.localeCompare(b));\r\n\r\nexport const drugsForDrugResistanceGraphST = [...drugsST, 'XDR', 'MDR'].sort((a, b) => a.localeCompare(b));\r\n\r\nexport const defaultDrugsForDrugResistanceGraphST = [\r\n  'Azithromycin',\r\n  'Ceftriaxone',\r\n  'Ciprofloxacin NS',\r\n  'Ciprofloxacin R',\r\n  'MDR',\r\n  'Susceptible',\r\n  'Trimethoprim-sulfamethoxazole',\r\n  'XDR'\r\n];\r\n\r\n// List of Klebsiella drugs\r\nexport const drugsKP = [\r\n  'Aminoglycosides',\r\n  'Carbapenems',\r\n  '3rd gen cephalosporins (3GCs)',\r\n  '3rd gen cephalosporins (3GCs) + β-lactamase inhibitors',\r\n  'Colistin',\r\n  'Fluoroquinolones',\r\n  'Fosfomycin',\r\n  'Penicillins',\r\n  'β-lactamase inhibitors',\r\n  'Phenicols',\r\n  'Sulfonamides',\r\n  'Susceptible',\r\n  'Tetracycline',\r\n  'Tigecycline',\r\n  'Trimethoprim'\r\n];\r\n\r\n// List of Salmonella drug classes\r\nexport const drugClassesST = [\r\n  'Ampicillin',\r\n  'Azithromycin',\r\n  'Chloramphenicol',\r\n  // 'Co-trimoxazole',\r\n  'Trimethoprim-sulfamethoxazole',\r\n  // 'ESBL',\r\n  'Ceftriaxone',\r\n  // 'Fluoroquinolones (CipNS)',\r\n  'Ciprofloxacin NS',\r\n  'Sulphonamides',\r\n  'Tetracyclines',\r\n  'Trimethoprim'\r\n];\r\n\r\n// List of Klebsiella drug classes\r\nexport const drugClassesKP = ['Carbapenems', 'ESBL'];\r\n","import { lightGrey } from '../../../util/colorHelper';\r\n\r\nexport const getColorForDrug = (drug) => {\r\n  switch (drug) {\r\n    case 'Ampicillin':\r\n    case 'Aminoglycosides':\r\n      return 'rgb(129,178,210)';\r\n\r\n    case 'Azithromycin':\r\n    case 'Carbapenems':\r\n      return 'rgb(144,211,199)';\r\n\r\n    case 'Chloramphenicol':\r\n    case '3rd gen cephalosporins (3GCs)':\r\n      return 'rgb(249,129,117)';\r\n\r\n    // case 'Co-trimoxazole':\r\n    case 'Trimethoprim-sulfamethoxazole':\r\n    case '3rd gen cephalosporins (3GCs) + β-lactamase inhibitors':\r\n      return 'rgb(252,180,105)';\r\n\r\n    // case 'ESBL':\r\n    case 'Ceftriaxone':\r\n    case 'Colistin':\r\n      return '#DB90F0';\r\n\r\n    // case 'Fluoroquinolones (CipI)':\r\n    case 'Fosfomycin':\r\n      return '#98fb98';\r\n\r\n    // case 'Fluoroquinolones (CipNS)':\r\n    case 'Ciprofloxacin NS':\r\n    case 'Penicillins':\r\n      return 'rgb(255,236,120)';\r\n\r\n    // case 'Fluoroquinolones (CipR)':\r\n    case 'Ciprofloxacin R':\r\n    case 'Fluoroquinolones':\r\n      return '#9e9ac8';\r\n\r\n    case 'Sulphonamides':\r\n    case 'Sulfonamides':\r\n      return 'rgb(180,221,112)';\r\n\r\n    case 'Susceptible':\r\n      return lightGrey;\r\n\r\n    case 'Tetracyclines':\r\n    case 'Tetracycline':\r\n      return 'rgb(251,207,229)';\r\n\r\n    case 'Trimethoprim':\r\n      return 'rgb(102,102,255)';\r\n\r\n    case 'β-lactamase inhibitors':\r\n      return '#F3AAB9';\r\n\r\n    case 'Phenicols':\r\n      return '#FBCFBA';\r\n\r\n    case 'Tigecycline':\r\n      return '#54C2FF';\r\n\r\n    case 'XDR':\r\n      return '#000';\r\n\r\n    case 'MDR':\r\n      return '#B80F0F';\r\n\r\n    default:\r\n      return '#F5F4F6';\r\n  }\r\n};\r\n\r\nexport const colorsForKODiversityGraph = [\r\n  { name: 'MDR', color: 'rgb(187, 54, 60)' },\r\n  { name: 'Hv', color: 'rgb(24, 85, 183)' },\r\n  { name: 'Carbapenems', color: 'rgb(144,211,199)' },\r\n  { name: 'ESBL', color: '#DB90F0' },\r\n  { name: 'Aerobactin(iuc)', color: 'rgb(180,221,112)' },\r\n  { name: 'rmpADC', color: 'rgb(252,180,105)' },\r\n  { name: 'neither', color: lightGrey }\r\n];\r\n","export function getSalmonellaTexts(date) {\r\n  return [\r\n    `This report was generated at ${date}, using TyphiNET (http://typhi.net), a data visualisation platform that draws genome-derived data on antimicrobial resistance and genotypes from Typhi Pathogenwatch (http://pathogen.watch).`,\r\n    'TyphiNET data were last updated on October 02 2023. For code and further details please see: https://github.com/zadyson/TyphiNET.',\r\n    'The genotypes reported here are defined in Dyson & Holt (2021), J. Infect. Dis.',\r\n    'Antimicrobial resistance determinants are described in the Typhi Pathogenwatch paper, Argimón et al. 2021, Nat. Commun.',\r\n    'Travel-associated cases are attributed to the country of travel, not the country of isolation (see Ingle et al. 2019, PLoS NTDs).',\r\n    'TyphiNET presents data aggregated from >100 studies. Individual genome information, including derived genotype and AMR calls, sequence data accession numbers, and source information (PubMedID for citation) can be downloaded as a spreadsheet from the TyphiNET website (http://typhi.net).',\r\n    \"This project has received funding from the the Wellcome Trust (Open Research Fund, 219692/Z/19/Z) and the  European Union's Horizon 2020 research and innovation programme under the Marie Sklodowska-Curie grant agreement No 845681.\"\r\n  ];\r\n}\r\n\r\nexport function getKlebsiellaTexts() {\r\n  return [\r\n    'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque',\r\n    'Aliquam laoreet, dolor eu convallis fringilla, velit dolor efficitur dui, eu fermentum tortor leo non justo. Suspendisse potenti.',\r\n    'Nam accumsan pulvinar arcu, sit amet lobortis felis bibendum quis.',\r\n    'Donec eu urna nunc. Quisque dapibus purus quis elit convallis tincidunt. Donec scelerisque neque a leo tincidunt, a placerat quam convallis.',\r\n    'Donec dictum et odio ac convallis. Duis non lectus in lectus auctor fringilla. Etiam eros orci, ultrices id pellentesque et, volutpat et orci.',\r\n    'Suspendisse potenti. Nullam vitae mi orci. Duis auctor purus rhoncus sapien posuere, vel malesuada sem convallis. Mauris euismod accumsan lectus vel dapibus. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Fusce venenatis, ipsum in blandit tempor, dui turpis luctus risus.',\r\n    'Quisque in lacinia enim, vel rutrum felis. Donec venenatis pulvinar vestibulum. Fusce pretium condimentum dolor in gravida. Morbi sollicitudin mollis tellus vel laoreet. Vivamus iaculis leo non diam tincidunt rutrum. Etiam id neque.'\r\n  ];\r\n}\r\n","export const variablesOptions = [\r\n  { label: 'Country', value: 'COUNTRY_ONLY' },\r\n  { label: 'Year', value: 'DATE' },\r\n  { label: 'Sublineage', value: 'GENOTYPE' }\r\n  // { label: 'Yersiniabactin', value: 'Yersiniabactin' },\r\n  // { label: 'Host', value: 'Host' },\r\n  // { label: 'Bla_Carb_acquired', value: 'Bla_Carb_acquired' },\r\n  // { label: 'Bla_ESBL_acquired', value: 'Bla_ESBL_acquired' }\r\n];\r\n","import { Alert, Button, Snackbar, useMediaQuery } from '@mui/material';\r\nimport { useStyles } from './DownloadDataMUI';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { setPage } from '../../../stores/slices/appSlice';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport download from 'downloadjs';\r\nimport { API_ENDPOINT } from '../../../constants';\r\nimport { useState } from 'react';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { PictureAsPdf, Storage, TableChart } from '@mui/icons-material';\r\nimport { setPosition } from '../../../stores/slices/mapSlice';\r\nimport jsPDF from 'jspdf';\r\nimport LogoImg from '../../../assets/img/logo-prod.png';\r\nimport EUFlagImg from '../../../assets/img/eu_flag.jpg';\r\nimport moment from 'moment';\r\nimport { svgAsPngUri } from 'save-svg-as-png';\r\nimport { mapLegends } from '../../../util/mapLegends';\r\nimport { imgOnLoadPromise } from '../../../util/imgOnLoadPromise';\r\nimport { graphCards } from '../../../util/graphCards';\r\nimport domtoimage from 'dom-to-image';\r\nimport { setCollapses } from '../../../stores/slices/graphSlice';\r\nimport { drugsKP, drugsST } from '../../../util/drugs';\r\nimport { colorsForKODiversityGraph, getColorForDrug } from '../Graphs/graphColorHelper';\r\nimport { colorForDrugClassesKP, colorForDrugClassesST, getColorForGenotype } from '../../../util/colorHelper';\r\nimport { getKlebsiellaTexts, getSalmonellaTexts } from '../../../util/reportInfoTexts';\r\nimport { variablesOptions } from '../../../util/convergenceVariablesOptions';\r\n\r\nconst columnsToRemove = [\r\n  'azith_pred_pheno',\r\n  'ACCESSION',\r\n  'COUNTRY_ONLY',\r\n  'REGION_IN_COUNTRY',\r\n  'LOCATION',\r\n  'ACCURACY',\r\n  'LATITUDE',\r\n  'LONGITUDE',\r\n  'REFERENCE',\r\n  'MLST ST (EnteroBase)',\r\n  'MLST PROFILE (EnteroBase)',\r\n  'GENOTYPHI SNPs CALLED',\r\n  'Genome ID',\r\n  'Version',\r\n  'Organism Name',\r\n  'Organism ID',\r\n  'Species Name',\r\n  'Species ID',\r\n  'Genus Name',\r\n  'Genus ID',\r\n  'Reference ID',\r\n  'Matching Hashes',\r\n  'p-Value',\r\n  'Mash Distance',\r\n  'cip',\r\n  'dcs_category',\r\n  'amr_category',\r\n  'num_qrdr',\r\n  'num_acrb',\r\n  'ESBL_category',\r\n  'chloramphenicol_category',\r\n  'tetracycline_category',\r\n  'cip_pheno_qrdr_gene',\r\n  'dcs_mechanisms',\r\n  'num_amr_genes',\r\n  'dfra_any',\r\n  'sul_any',\r\n  'co_trim',\r\n  'GENOTYPE_SIMPLE',\r\n  'h58_genotypes',\r\n  'COUNTRY OF ORIGIN',\r\n  'AGE',\r\n  'TRAVEL COUNTRY',\r\n  'TRAVEL ASSOCIATED'\r\n];\r\n\r\nexport const DownloadData = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const matches500 = useMediaQuery('(max-width:500px)');\r\n  const [loadingCSV, setLoadingCSV] = useState(false);\r\n  const [loadingPDF, setLoadingPDF] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const actualCountry = useAppSelector((state) => state.dashboard.actualCountry);\r\n  const listPIMD = useAppSelector((state) => state.dashboard.listPMID);\r\n  const globalOverviewLabel = useAppSelector((state) => state.dashboard.globalOverviewLabel);\r\n  const actualGenomes = useAppSelector((state) => state.dashboard.actualGenomes);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const mapView = useAppSelector((state) => state.map.mapView);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const determinantsGraphDrugClass = useAppSelector((state) => state.graph.determinantsGraphDrugClass);\r\n  const trendsKPGraphDrugClass = useAppSelector((state) => state.graph.trendsKPGraphDrugClass);\r\n  const KODiversityGraphView = useAppSelector((state) => state.graph.KODiversityGraphView);\r\n  const colorPallete = useAppSelector((state) => state.dashboard.colorPallete);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n  const convergenceGroupVariable = useAppSelector((state) => state.graph.convergenceGroupVariable);\r\n  const convergenceColourVariable = useAppSelector((state) => state.graph.convergenceColourVariable);\r\n  const convergenceColourPallete = useAppSelector((state) => state.graph.convergenceColourPallete);\r\n\r\n  async function handleClickDownloadDatabase() {\r\n    setLoadingCSV(true);\r\n    await axios\r\n      .post(`${API_ENDPOINT}file/download`, { organism })\r\n      .then((res) => {\r\n        let indexes = [];\r\n        let csv = res.data.split('\\n');\r\n        let lines = [];\r\n\r\n        for (let index = 0; index < csv.length; index++) {\r\n          let line = csv[index].split(',');\r\n          lines.push(line);\r\n        }\r\n\r\n        // lines[0].forEach((curr, index) => {\r\n        //   if (curr === 'cip_pred_pheno') {\r\n        //     lines[0][index] = 'Cip';\r\n        //   }\r\n        // });\r\n        \r\n        for (let index = 0; index < columnsToRemove.length; index++) {\r\n          let currentIndex = lines[0].indexOf(columnsToRemove[index]);\r\n          indexes.push(currentIndex);\r\n        }\r\n        indexes.sort();\r\n        indexes.reverse();\r\n\r\n        let newLines = [];\r\n        for (let j = 0; j < lines.length; j++) {\r\n          let aux = [];\r\n          for (let i = 0; i < lines[j].length; i++) {\r\n            if (!indexes.includes(i)) {\r\n              aux.push(lines[j][i]);\r\n            }\r\n          }\r\n          newLines.push(aux);\r\n        }\r\n\r\n        let newCSV = '';\r\n        for (let i = 0; i < newLines.length; i++) {\r\n          let aux = '';\r\n          for (let index = 0; index < newLines[i].length; index++) {\r\n            aux += newLines[i][index];\r\n            if (index !== newLines[i].length - 1) {\r\n              aux += ',';\r\n            }\r\n          }\r\n          if (i !== newLines.length - 1) {\r\n            aux += '\\n';\r\n          }\r\n          newCSV += aux;\r\n        }\r\n\r\n        download(newCSV, 'Database.csv');\r\n      })\r\n      .finally(() => {\r\n        setLoadingCSV(false);\r\n      });\r\n  }\r\n\r\n  function getOrganismCards() {\r\n    return graphCards.filter((card) => card.organisms.includes(organism));\r\n  }\r\n\r\n  function getGenotypeColor(genotype) {\r\n    return organism === 'typhi' ? getColorForGenotype(genotype) : colorPallete[genotype] || '#F5F4F6';\r\n  }\r\n\r\n  function getDrugClassesBars() {\r\n    switch (organism) {\r\n      case 'typhi':\r\n        return colorForDrugClassesST[determinantsGraphDrugClass];\r\n      default:\r\n        return colorForDrugClassesKP[determinantsGraphDrugClass];\r\n    }\r\n  }\r\n\r\n  function formatDate(date) {\r\n    return moment(date).format('ddd MMM DD YYYY HH:mm');\r\n  }\r\n\r\n  function drawFooter({ document, pageHeight, pageWidth, date }) {\r\n    document.setFontSize(10);\r\n    document.line(0, pageHeight - 26, pageWidth, pageHeight - 24);\r\n    document.text(`Source: amr.net [${date}]`, pageWidth / 2, pageHeight - 10, { align: 'center' });\r\n  }\r\n\r\n  function drawLegend({\r\n    id = null,\r\n    legendData,\r\n    document,\r\n    factor,\r\n    rectY,\r\n    isGenotype = false,\r\n    isDrug = false,\r\n    isVariable = false,\r\n    xSpace,\r\n    twoPages = false,\r\n    factorMultiply = 3\r\n  }) {\r\n    let firstLegendData = legendData.slice();\r\n    let secondLegendData = [];\r\n\r\n    let firstLegendFactor = factor;\r\n    let secondLegendFactor;\r\n\r\n    if (twoPages) {\r\n      firstLegendData = legendData.slice(0, 27 * factorMultiply);\r\n      secondLegendData = legendData.slice(27 * factorMultiply);\r\n      secondLegendFactor = factor - 27;\r\n      firstLegendFactor = 27;\r\n    }\r\n\r\n    firstLegendData.forEach((legend, i) => {\r\n      const yFactor = (i % firstLegendFactor) * 10;\r\n      const xFactor = Math.floor(i / firstLegendFactor) * xSpace;\r\n\r\n      document.setFillColor(\r\n        isGenotype\r\n          ? getGenotypeColor(legend)\r\n          : isDrug\r\n          ? getColorForDrug(legend)\r\n          : isVariable\r\n          ? convergenceColourPallete[legend]\r\n          : legend.color\r\n      );\r\n      document.circle(50 + xFactor, rectY + 10 + yFactor, 2.5, 'F');\r\n\r\n      if (id === 'CERDT' && i < 2) {\r\n        if (i === 0) {\r\n          document.setFont(undefined, 'bold');\r\n        } else {\r\n          document.setFont(undefined, 'normal');\r\n        }\r\n      }\r\n      document.text(\r\n        isGenotype || isDrug || isVariable ? legend.replaceAll('β', 'B') : legend.name,\r\n        56 + xFactor,\r\n        rectY + 12 + yFactor\r\n      );\r\n    });\r\n\r\n    if (twoPages) {\r\n      document.addPage();\r\n\r\n      secondLegendData.forEach((legend, i) => {\r\n        const yFactor = (i % secondLegendFactor) * 10;\r\n        const xFactor = Math.floor(i / secondLegendFactor) * xSpace;\r\n\r\n        document.setFillColor(\r\n          isGenotype\r\n            ? getGenotypeColor(legend)\r\n            : isDrug\r\n            ? getColorForDrug(legend)\r\n            : isVariable\r\n            ? convergenceColourPallete[legend]\r\n            : legend.color\r\n        );\r\n        document.circle(50 + xFactor, 24 + yFactor, 2.5, 'F');\r\n        document.text(\r\n          isGenotype || isDrug || isVariable ? legend.replaceAll('β', 'B') : legend.name,\r\n          56 + xFactor,\r\n          26 + yFactor\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  async function handleClickDownloadPDF() {\r\n    setLoadingPDF(true);\r\n    dispatch(\r\n      setCollapses({\r\n        determinants: true,\r\n        distribution: true,\r\n        drugResistance: true,\r\n        frequencies: true,\r\n        trendsKP: true,\r\n        KODiversity: true,\r\n        convergence: true\r\n      })\r\n    );\r\n    dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n\r\n    try {\r\n      const doc = new jsPDF({ unit: 'px', format: 'a4' });\r\n      const pageWidth = doc.internal.pageSize.getWidth();\r\n      const pageHeight = doc.internal.pageSize.getHeight();\r\n      const date = formatDate(new Date());\r\n\r\n      // Logo\r\n      const logo = new Image();\r\n      logo.src = LogoImg;\r\n      const logoWidth = 80;\r\n      doc.addImage(logo, 'PNG', 16, 16, logoWidth, 41);\r\n\r\n      // Title and Date\r\n      doc.setFontSize(16).setFont(undefined, 'bold');\r\n      doc.text(`AMRnet Report - ${globalOverviewLabel.fullLabel}`, pageWidth / 2, 34, { align: 'center' });\r\n      doc.setFontSize(12).setFont(undefined, 'normal');\r\n      doc.text(date, pageWidth / 2, 48, { align: 'center' });\r\n\r\n      let texts;\r\n      if (organism === 'typhi') {\r\n        texts = getSalmonellaTexts(date);\r\n      } else if (organism === 'klebe') {\r\n        texts = getKlebsiellaTexts();\r\n      }\r\n\r\n      // Info\r\n      doc.text(texts[0], 16, 85, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[1], 16, 125, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[2], 16, 153, {\r\n        align: 'justify',\r\n        maxWidth: pageWidth - 36\r\n      });\r\n      doc.text(texts[3], 16, 169, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[4], 16, 197, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[5], 16, 225, { align: 'justify', maxWidth: pageWidth - 36 });\r\n      doc.text(texts[6], 16, 277, { align: 'justify', maxWidth: pageWidth - 36 });\r\n\r\n      if (organism === 'typhi') {\r\n        const euFlag = new Image();\r\n        euFlag.src = EUFlagImg;\r\n        doc.addImage(euFlag, 'JPG', 208, 290, 12, 8);\r\n      }\r\n\r\n      if (actualCountry !== 'All') {\r\n        doc.text(\r\n          `Studies contributing genomes representing infections originating from ${actualCountry} have the following PubMed IDs (PMIDs): ${listPIMD.join(\r\n            ', '\r\n          )}.`,\r\n          16,\r\n          317,\r\n          { align: 'justify', maxWidth: pageWidth - 36 }\r\n        );\r\n      }\r\n\r\n      drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n\r\n      // Map\r\n      doc.addPage();\r\n      drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n\r\n      doc.setFontSize(16).setFont(undefined, 'bold');\r\n      doc.text(`Global Overview of ${globalOverviewLabel.fullLabel}`, pageWidth / 2, 24, { align: 'center' });\r\n      doc.setFontSize(12).setFont(undefined, 'normal');\r\n      doc.text(`Total: ${actualGenomes} genomes`, pageWidth / 2, 40, { align: 'center' });\r\n      doc.text(`Country: ${actualCountry}`, pageWidth / 2, 52, { align: 'center' });\r\n      doc.text(`Time Period: ${actualTimeInitial} to ${actualTimeFinal}`, pageWidth / 2, 64, { align: 'center' });\r\n      doc.line(16, 76, pageWidth - 16, 76);\r\n\r\n      doc.setFont(undefined, 'bold');\r\n      doc.text('Map Info', 16, 96);\r\n      doc.setFont(undefined, 'normal');\r\n      const actualMapView = mapLegends.find((x) => x.value === mapView).label;\r\n      doc.text(`Map View: ${actualMapView}`, 16, 108);\r\n      doc.text(`Dataset: ${dataset}${dataset === 'All' && organism === 'typhi' ? ' (local + travel)' : ''}`, 16, 120);\r\n\r\n      await svgAsPngUri(document.getElementById('global-overview-map'), {\r\n        scale: 4,\r\n        backgroundColor: 'white',\r\n        width: 1200,\r\n        left: -200\r\n      }).then(async (uri) => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        const mapImg = document.createElement('img');\r\n        const mapImgPromise = imgOnLoadPromise(mapImg);\r\n        mapImg.src = uri;\r\n        await mapImgPromise;\r\n\r\n        canvas.width = 4800;\r\n        canvas.height = 2400;\r\n        ctx.drawImage(mapImg, 0, 0, canvas.width, canvas.height);\r\n\r\n        const img = canvas.toDataURL('image/png');\r\n        doc.addImage(img, 'PNG', 0, 128, pageWidth, 223);\r\n      });\r\n\r\n      const mapLegend = new Image();\r\n      let legendWidth = 58.85;\r\n\r\n      switch (mapView) {\r\n        case 'Dominant Genotype':\r\n          legendWidth = organism === 'typhi' ? 414.21 : 394.28;\r\n          mapLegend.src = `legends/MapView_DominantGenotype_${organism}.png`;\r\n          break;\r\n        case 'No. Samples':\r\n          mapLegend.src = 'legends/MapView_NoSamples.png';\r\n          break;\r\n        case 'Sensitive to all drugs':\r\n          mapLegend.src = 'legends/MapView_Sensitive.png';\r\n          break;\r\n        default:\r\n          mapLegend.src = 'legends/MapView_Others.png';\r\n          break;\r\n      }\r\n      if (mapView === 'Dominant Genotype') {\r\n        doc.addImage(mapLegend, 'PNG', pageWidth / 2 - legendWidth / 2, 351, legendWidth, 47);\r\n      } else {\r\n        doc.addImage(mapLegend, 'PNG', 16, 351, legendWidth, 47);\r\n      }\r\n\r\n      // Graphs\r\n      const isKlebe = organism === 'klebe';\r\n\r\n      const cards = getOrganismCards();\r\n      const legendDrugs = organism === 'typhi' ? drugsST : drugsKP;\r\n      const drugClassesBars = getDrugClassesBars();\r\n      const drugClassesFactor = Math.ceil(drugClassesBars.length / 3);\r\n      const genotypesFactor = Math.ceil(genotypesForFilter.length / 6);\r\n\r\n      const isYersiniabactin = convergenceColourVariable === 'Yersiniabactin';\r\n      const variablesFactor = Math.ceil(Object.keys(convergenceColourPallete).length / (isYersiniabactin ? 2 : 3));\r\n\r\n      for (let index = 0; index < cards.length; index++) {\r\n        doc.addPage();\r\n        drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n\r\n        let title = `${cards[index].title}`;\r\n        switch (cards[index].id) {\r\n          case 'RDWG':\r\n            title += `: ${determinantsGraphDrugClass}`;\r\n            break;\r\n          case 'CERDT':\r\n            title += `: ${trendsKPGraphDrugClass}`;\r\n            break;\r\n          case 'KO':\r\n            title += `: ${KODiversityGraphView}`;\r\n            break;\r\n          case 'CVM':\r\n            const group = variablesOptions.find((option) => option.value === convergenceGroupVariable).label;\r\n            const colour = variablesOptions.find((option) => option.value === convergenceColourVariable).label;\r\n            title += `: ${group} x ${colour}`;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n\r\n        doc.setFontSize(12).setFont(undefined, 'bold');\r\n        doc.text(title, 16, 24);\r\n        doc.setFont(undefined, 'normal');\r\n        doc.setFontSize(10);\r\n        doc.text(cards[index].description.join(' / ').replaceAll('≥', '>='), 16, 36);\r\n        doc.setFontSize(12);\r\n        doc.text(`Total: ${actualGenomes} genomes`, 16, 54);\r\n        doc.text(`Country: ${actualCountry}`, 16, 66);\r\n        doc.text(`Time Period: ${actualTimeInitial} to ${actualTimeFinal}`, 16, 78);\r\n        doc.text(`Dataset: ${dataset}${dataset === 'All' && organism === 'typhi' ? ' (local + travel)' : ''}`, 16, 90);\r\n\r\n        const graphImg = document.createElement('img');\r\n        const graphImgPromise = imgOnLoadPromise(graphImg);\r\n        graphImg.src = await domtoimage.toPng(document.getElementById(cards[index].id), { bgcolor: 'white' });\r\n        await graphImgPromise;\r\n        if (graphImg.width <= 741) {\r\n          doc.addImage(graphImg, 'PNG', 16, 110);\r\n        } else {\r\n          doc.addImage(graphImg, 'PNG', 16, 110, pageWidth - 32, 271);\r\n        }\r\n\r\n        doc.setFillColor(255, 255, 255);\r\n        const rectY = matches500 ? 300 : 320;\r\n        doc.rect(0, rectY, pageWidth, 200, 'F');\r\n\r\n        doc.setFontSize(9);\r\n        if (['RFWG', 'DRT'].includes(cards[index].id)) {\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: legendDrugs,\r\n            factor: 8,\r\n            rectY,\r\n            xSpace: 190,\r\n            isDrug: true\r\n          });\r\n        } else if (cards[index].id === 'RDWG') {\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: drugClassesBars,\r\n            factor: drugClassesFactor,\r\n            rectY,\r\n            xSpace: 127,\r\n            twoPages: isKlebe\r\n          });\r\n\r\n          if (isKlebe) {\r\n            drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n          }\r\n        } else if (cards[index].id === 'GD') {\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: genotypesForFilter,\r\n            factor: genotypesFactor,\r\n            rectY,\r\n            xSpace: 65,\r\n            isGenotype: true\r\n          });\r\n        } else if (cards[index].id === 'CERDT') {\r\n          const legendGenotypes = genotypesForFilter.map((genotype) => {\r\n            return { name: genotype, color: getGenotypeColor(genotype) };\r\n          });\r\n\r\n          drawLegend({\r\n            id: 'CERDT',\r\n            document: doc,\r\n            legendData: [{ name: 'GENES: ', color: 'white' }, ...drugClassesBars],\r\n            factor: drugClassesFactor,\r\n            rectY,\r\n            xSpace: 127,\r\n            twoPages: true\r\n          });\r\n\r\n          drawLegend({\r\n            id: 'CERDT',\r\n            document: doc,\r\n            legendData: [{ name: 'GENOTYPES: ', color: 'white' }, ...legendGenotypes],\r\n            factor: Math.ceil(genotypesForFilter.length / 3),\r\n            rectY: 6 * 13,\r\n            xSpace: 127\r\n          });\r\n\r\n          drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n        } else if (cards[index].id === 'KO') {\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: colorsForKODiversityGraph,\r\n            factor: 1,\r\n            rectY,\r\n            xSpace: 50\r\n          });\r\n        } else if (cards[index].id === 'CVM') {\r\n          const isTwoPages = ['Bla_Carb_acquired', 'Bla_ESBL_acquired', 'Yersiniabactin'].includes(\r\n            convergenceColourVariable\r\n          );\r\n\r\n          drawLegend({\r\n            document: doc,\r\n            legendData: Object.keys(convergenceColourPallete),\r\n            factor: variablesFactor,\r\n            rectY,\r\n            xSpace: isYersiniabactin ? 190 : 127,\r\n            isVariable: true,\r\n            factorMultiply: isYersiniabactin ? 2 : 3,\r\n            twoPages: isTwoPages\r\n          });\r\n\r\n          if (isTwoPages) {\r\n            drawFooter({ document: doc, pageHeight, pageWidth, date });\r\n          }\r\n        }\r\n      }\r\n\r\n      doc.save('AMRnet - Report.pdf');\r\n    } catch (error) {\r\n      setShowAlert(true);\r\n    } finally {\r\n      setLoadingPDF(false);\r\n    }\r\n  }\r\n\r\n  function handleCloseAlert() {\r\n    setShowAlert(false);\r\n  }\r\n\r\n  function handleClickDatabasePage() {\r\n    dispatch(setPage('database'));\r\n    navigate('/database');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.downloadDataWrapper}>\r\n      <LoadingButton\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        onClick={handleClickDownloadDatabase}\r\n        loading={loadingCSV}\r\n        startIcon={<TableChart />}\r\n        loadingPosition=\"start\"\r\n        disabled={organism === 'none'}\r\n      >\r\n        Download database (CSV format)\r\n      </LoadingButton>\r\n      <LoadingButton\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        onClick={handleClickDownloadPDF}\r\n        loading={loadingPDF}\r\n        startIcon={<PictureAsPdf />}\r\n        loadingPosition=\"start\"\r\n        disabled={organism === 'none'}\r\n      >\r\n        Download PDF\r\n      </LoadingButton>\r\n      <Button className={classes.button} variant=\"contained\" onClick={handleClickDatabasePage} startIcon={<Storage />}>\r\n        See Database Page\r\n      </Button>\r\n      <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleCloseAlert}>\r\n        <Alert onClose={handleCloseAlert} severity=\"error\" sx={{ width: '100%' }}>\r\n          Something went wrong with the download, please try again later.\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardsWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '16px',\r\n\r\n    '@media (max-width: 500px)': {\r\n      rowGap: '8px'\r\n    }\r\n  },\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    }\r\n  },\r\n  cardActions: {\r\n    display: 'flex',\r\n    columnGap: '8px',\r\n    justifyContent: 'space-between',\r\n    padding: '16px !important'\r\n  },\r\n  titleWrapper: {\r\n    display: 'flex',\r\n    columnGap: '8px'\r\n  },\r\n  title: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  actionsWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '8px'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  determinantsGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)'\r\n  },\r\n  selectsWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      width: '100%',\r\n      height: '460px'\r\n    }\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  chartTooltipLabel: {\r\n    backgroundColor: '#fff',\r\n    padding: '8px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltipWrapper: {\r\n    width: '30%',\r\n    borderRadius: '6px',\r\n    backgroundColor: '#E5E5E5',\r\n    overflowY: 'auto',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      height: '250px'\r\n    }\r\n  },\r\n  tooltip: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end',\r\n    padding: '16px 16px 8px',\r\n    borderBottom: '1px solid #fff'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexWrap: 'wrap',\r\n    gap: '16px',\r\n    padding: '16px',\r\n    overflowY: 'auto'\r\n  },\r\n  tooltipItemWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    gridColumn: 'span 6'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  },\r\n  noGenotypeSelected: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","// Check if current device has touch screen\r\nexport function isTouchDevice() {\r\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, CardContent, MenuItem, Select, Typography } from '@mui/material';\r\nimport { useStyles } from './DeterminantsGraphMUI';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Label,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as ChartTooltip,\r\n  Brush\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setDeterminantsGraphDrugClass, setDeterminantsGraphView, setResetBool } from '../../../../stores/slices/graphSlice';\r\nimport { drugClassesST, drugClassesKP } from '../../../../util/drugs';\r\nimport { useEffect, useState } from 'react';\r\nimport { colorForDrugClassesKP, colorForDrugClassesST, hoverColor } from '../../../../util/colorHelper';\r\nimport { isTouchDevice } from '../../../../util/isTouchDevice';\r\n\r\nconst dataViewOptions = [\r\n  { label: 'Number of genomes', value: 'number', graphLabel: 'Number of occurrences' },\r\n  { label: 'Percentage per genotype', value: 'percentage', graphLabel: '% Genomes' }\r\n];\r\n\r\nexport const DeterminantsGraph = () => {\r\n  const classes = useStyles();\r\n  const [currentTooltip, setCurrentTooltip] = useState(null);\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n\r\n  const dispatch = useAppDispatch();\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const genotypesDrugClassesData = useAppSelector((state) => state.graph.genotypesDrugClassesData);\r\n  const determinantsGraphView = useAppSelector((state) => state.graph.determinantsGraphView);\r\n  const determinantsGraphDrugClass = useAppSelector((state) => state.graph.determinantsGraphDrugClass);\r\n  const resetBool = useAppSelector((state) => state.graph.resetBool);\r\n\r\n  useEffect(() => {\r\n    dispatch(setResetBool(true));\r\n    setCurrentTooltip(null);\r\n  }, [genotypesDrugClassesData]);\r\n\r\n  function getDrugClasses() {\r\n    switch (organism) {\r\n      case 'typhi':\r\n        return drugClassesST;\r\n      case 'klebe':\r\n        return drugClassesKP;\r\n      default:\r\n        return [];\r\n    }\r\n  }\r\n\r\n  function getDrugClassesBars() {\r\n    switch (organism) {\r\n      case 'typhi':\r\n        return colorForDrugClassesST[determinantsGraphDrugClass];\r\n      default:\r\n        return colorForDrugClassesKP[determinantsGraphDrugClass];\r\n    }\r\n  }\r\n\r\n  function getDomain() {\r\n    return determinantsGraphView === 'number' ? undefined : [0, 100];\r\n  }\r\n\r\n  function getData() {\r\n    if (determinantsGraphView === 'number') {\r\n      return genotypesDrugClassesData[determinantsGraphDrugClass];\r\n    }\r\n\r\n    const exclusions = ['name', 'totalCount', 'resistantCount'];\r\n    let genotypeDrugClassesDataPercentage = structuredClone(genotypesDrugClassesData[determinantsGraphDrugClass] ?? []);\r\n    genotypeDrugClassesDataPercentage = genotypeDrugClassesDataPercentage.map((item) => {\r\n      const keys = Object.keys(item).filter((x) => !exclusions.includes(x));\r\n\r\n      keys.forEach((key) => {\r\n        item[key] = Number(((item[key] / item.totalCount) * 100).toFixed(2));\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    return genotypeDrugClassesDataPercentage;\r\n  }\r\n\r\n  function handleChangeDataView(event) {\r\n    dispatch(setDeterminantsGraphView(event.target.value));\r\n  }\r\n\r\n  function handleChangeDrugClass(event) {\r\n    setCurrentTooltip(null);\r\n    dispatch(setDeterminantsGraphDrugClass(event.target.value));\r\n  }\r\n\r\n  function handleClickChart(event) {\r\n    const data = genotypesDrugClassesData[determinantsGraphDrugClass].find((item) => item.name === event?.activeLabel);\r\n\r\n    if (data) {\r\n      const currentData = structuredClone(data);\r\n      const value = {\r\n        name: currentData.name,\r\n        count: currentData.totalCount,\r\n        drugClasses: []\r\n      };\r\n\r\n      delete currentData.name;\r\n      delete currentData.totalCount;\r\n      delete currentData.resistantCount;\r\n\r\n      Object.keys(currentData).forEach((key) => {\r\n        const count = currentData[key];\r\n\r\n        if (count === 0) {\r\n          return;\r\n        }\r\n\r\n        value.drugClasses.push({\r\n          label: key,\r\n          count,\r\n          percentage: Number(((count / value.count) * 100).toFixed(2)),\r\n          color: event.activePayload.find((x) => x.name === key)?.color\r\n        });\r\n\r\n        value.drugClasses.sort((a, b) => a.label.localeCompare(b.label));\r\n      });\r\n\r\n      setCurrentTooltip(value);\r\n      dispatch(setResetBool(false));\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(resetBool){\r\n      setCurrentTooltip(null);\r\n      dispatch(setResetBool(true));\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <BarChart\r\n              data={getData()}\r\n              cursor={isTouchDevice() ? 'default' : 'pointer'}\r\n              onClick={handleClickChart}\r\n              maxBarSize={70}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={getDomain()} allowDataOverflow={true} allowDecimals={false}>\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  {dataViewOptions.find((option) => option.value === determinantsGraphView).label}\r\n                </Label>\r\n              </YAxis>\r\n              {(genotypesDrugClassesData[determinantsGraphDrugClass] ?? []).length > 0 && (\r\n                <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div key={`distribution-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                            <Typography variant=\"caption\">{dataKey}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                cursor={{ fill: hoverColor }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    return <div className={classes.chartTooltipLabel}>{label}</div>;\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {getDrugClassesBars()?.map((option, index) => (\r\n                <Bar\r\n                  key={`determinants-bar-${index}`}\r\n                  dataKey={option.name}\r\n                  name={option.name}\r\n                  stackId={0}\r\n                  fill={option.color}\r\n                />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [genotypesDrugClassesData, determinantsGraphView, determinantsGraphDrugClass]);\r\n\r\n  return (\r\n    <CardContent className={classes.determinantsGraph}>\r\n      <div className={classes.selectsWrapper}>\r\n        <div className={classes.selectWrapper}>\r\n          <Typography variant=\"caption\">Select drug class</Typography>\r\n          <Select\r\n            value={determinantsGraphDrugClass}\r\n            onChange={handleChangeDrugClass}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n            disabled={organism === 'none'}\r\n          >\r\n            {getDrugClasses().map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'determinants-drug-classes'} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div>\r\n        <div className={classes.selectWrapper}>\r\n          <Typography variant=\"caption\">Data view</Typography>\r\n          <Select\r\n            value={determinantsGraphView}\r\n            onChange={handleChangeDataView}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n            disabled={organism === 'none'}\r\n          >\r\n            {dataViewOptions.map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'determinants-dataview'} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"RDWG\">\r\n          {plotChart}\r\n        </div>\r\n        <div className={classes.tooltipWrapper}>\r\n          {currentTooltip ? (\r\n            <div className={classes.tooltip}>\r\n              <div className={classes.tooltipTitle}>\r\n                <Typography variant=\"h5\" fontWeight=\"600\">\r\n                  {currentTooltip.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">{'N = ' + currentTooltip.count}</Typography>\r\n              </div>\r\n              <div className={classes.tooltipContent}>\r\n                {currentTooltip.drugClasses.map((item, index) => {\r\n                  return (\r\n                    <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                      <Box\r\n                        className={classes.tooltipItemBox}\r\n                        style={{\r\n                          backgroundColor: item.color\r\n                        }}\r\n                      />\r\n                      <div className={classes.tooltipItemStats}>\r\n                        <Typography variant=\"body2\" fontWeight=\"500\">\r\n                          {item.label}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" noWrap>{`N = ${item.count}`}</Typography>\r\n                        <Typography fontSize=\"10px\">{`${item.percentage}%`}</Typography>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.noGenotypeSelected}>Click on a genotype to see detail</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  frequenciesGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)'\r\n  },\r\n  selectsWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '4px'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px'\r\n  },\r\n  labelWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '8px'\r\n  },\r\n  labelTooltipIcon: {\r\n    cursor: 'pointer'\r\n  },\r\n  dataViewSelectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  dataViewSelectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  genotypesSelectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important',\r\n    marginRight: '-80px !important'\r\n  },\r\n  genotypesSelectButton: {\r\n    height: '20px',\r\n    fontSize: '10px !important',\r\n    padding: '3px 5px !important',\r\n    whiteSpace: 'nowrap',\r\n    position: 'absolute',\r\n    right: '18px'\r\n  },\r\n  genotypesMenuPaper: {\r\n    maxHeight: '350px !important'\r\n  },\r\n  genotypesSelectMenu: {\r\n    '& .MuiCheckbox-root': {\r\n      padding: '0px 8px 0px 0px'\r\n    },\r\n    '& .MuiTypography-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      width: '100%',\r\n      height: '460px'\r\n    }\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  chartTooltipLabel: {\r\n    backgroundColor: '#fff',\r\n    padding: '8px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px'\r\n  },\r\n  tooltipWrapper: {\r\n    width: '30%',\r\n    borderRadius: '6px',\r\n    backgroundColor: '#E5E5E5',\r\n    overflowY: 'auto',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      height: '250px'\r\n    }\r\n  },\r\n  tooltip: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end',\r\n    padding: '16px 16px 8px',\r\n    borderBottom: '1px solid #fff'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexWrap: 'wrap',\r\n    gap: '16px',\r\n    padding: '16px',\r\n    overflowY: 'auto'\r\n  },\r\n  tooltipItemWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    gridColumn: 'span 6'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  },\r\n  noGenotypeSelected: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n  },\r\n}));\r\n\r\nexport { useStyles };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, Button, CardContent, Checkbox, ListItemText, MenuItem, Select, Tooltip, Typography, InputAdornment } from '@mui/material';\r\nimport { useStyles } from './FrequenciesGraphMUI';\r\nimport { InfoOutlined } from '@mui/icons-material';\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport TextField from '@mui/material/TextField';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip as ChartTooltip,\r\n  XAxis,\r\n  YAxis,\r\n  Label,\r\n  Legend,\r\n  Brush\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setFrequenciesGraphSelectedGenotypes, setFrequenciesGraphView, setResetBool} from '../../../../stores/slices/graphSlice';\r\nimport { useEffect, useState } from 'react';\r\nimport { hoverColor } from '../../../../util/colorHelper';\r\nimport { getColorForDrug } from '../graphColorHelper';\r\nimport { drugsST, drugsKP } from '../../../../util/drugs';\r\nimport { isTouchDevice } from '../../../../util/isTouchDevice';\r\n\r\nconst dataViewOptions = [\r\n  { label: 'Number of genomes', value: 'number' },\r\n  { label: 'Percentage within genotype', value: 'percentage' }\r\n];\r\n\r\nexport const FrequenciesGraph = () => {\r\n  const classes = useStyles();\r\n  const [currentTooltip, setCurrentTooltip] = useState(null);\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n  const [searchValue2, setSearchValue2] = useState(\"\")\r\n\r\n  const dispatch = useAppDispatch();\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const genotypesDrugsData = useAppSelector((state) => state.graph.genotypesDrugsData);\r\n  const frequenciesGraphView = useAppSelector((state) => state.graph.frequenciesGraphView);\r\n  const frequenciesGraphSelectedGenotypes = useAppSelector((state) => state.graph.frequenciesGraphSelectedGenotypes);\r\n  const resetBool = useAppSelector((state) => state.graph.resetBool);\r\n\r\n  useEffect(() => {\r\n    dispatch(setResetBool(true));\r\n    setCurrentTooltip(null);\r\n  }, [genotypesDrugsData]);\r\n\r\n  function getSelectGenotypeLabel(genotype) {\r\n    const percentage = Number(((genotype.Susceptible / genotype.totalCount) * 100).toFixed(2));\r\n\r\n    return `${genotype.name} (total N=${genotype.totalCount}, ${percentage}% Susceptible)`;\r\n  }\r\n\r\n  function getDomain() {\r\n    return frequenciesGraphView === 'number' ? undefined : [0, 100];\r\n  }\r\n\r\n  function getDrugs() {\r\n    if (organism === 'none') {\r\n      return [];\r\n    }\r\n    if (organism === 'typhi') {\r\n      return drugsST;\r\n    }\r\n    return drugsKP;\r\n  }\r\n\r\n  function getData() {\r\n    const data = genotypesDrugsData.filter((genotype) => frequenciesGraphSelectedGenotypes.includes(genotype.name));\r\n\r\n    if (frequenciesGraphView === 'number') {\r\n      return data;\r\n    }\r\n\r\n    const exclusions = ['name', 'totalCount', 'resistantCount'];\r\n    let genotypeDataPercentage = structuredClone(data);\r\n    genotypeDataPercentage = genotypeDataPercentage.map((item) => {\r\n      const keys = Object.keys(item).filter((x) => !exclusions.includes(x));\r\n\r\n      keys.forEach((key) => {\r\n        item[key] = Number(((item[key] / item.totalCount) * 100).toFixed(2));\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    return genotypeDataPercentage;\r\n  }\r\n\r\n  function getDataForGenotypeSelect() {\r\n    // if (organism === 'typhi') {\r\n      return genotypesDrugsData;\r\n    // } else {\r\n    //   return JSON.parse(JSON.stringify(genotypesDrugsData.slice(0, 20)));\r\n    // }\r\n  }\r\n\r\n  function handleClickChart(event) {\r\n    const data = genotypesDrugsData.find((item) => item.name === event?.activeLabel);\r\n\r\n    if (data) {\r\n      const currentData = structuredClone(data);\r\n\r\n      const value = {\r\n        name: currentData.name,\r\n        count: currentData.totalCount,\r\n        drugs: []\r\n      };\r\n\r\n      delete currentData.name;\r\n      delete currentData.totalCount;\r\n      delete currentData.resistantCount;\r\n\r\n      Object.keys(currentData).forEach((key) => {\r\n        const count = currentData[key];\r\n\r\n        if (count === 0) {\r\n          return;\r\n        }\r\n\r\n        value.drugs.push({\r\n          label: key,\r\n          count,\r\n          percentage: Number(((count / value.count) * 100).toFixed(2)),\r\n          fill: event.activePayload.find((x) => x.name === key).fill\r\n        });\r\n        value.drugs.sort((a, b) => b.count - a.count);\r\n      });\r\n\r\n      setCurrentTooltip(value);\r\n      dispatch(setResetBool(false));\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(resetBool){\r\n      setCurrentTooltip(null);\r\n      dispatch(setResetBool(true));\r\n    }\r\n  });\r\n\r\n  function handleChangeDataView(event) {\r\n    dispatch(setFrequenciesGraphView(event.target.value));\r\n  }\r\n\r\n  function handleChangeSelectedGenotypes({ event = null, all = false }) {\r\n    if (all) {\r\n      dispatch(setFrequenciesGraphSelectedGenotypes([]));\r\n      setCurrentTooltip(null);\r\n      return;\r\n    }\r\n\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n\r\n    if (frequenciesGraphSelectedGenotypes.length === 7 && value.length > 7) {\r\n      return;\r\n    }\r\n\r\n    if (value.length === 0) {\r\n      setCurrentTooltip(null);\r\n    }\r\n    dispatch(setFrequenciesGraphSelectedGenotypes(value));\r\n  }\r\n\r\n  function setSearchValue(event){\r\n    event.preventDefault()\r\n    setSearchValue2(event.target.value)\r\n  }\r\n\r\n  const filteredData = getDataForGenotypeSelect().filter((genotype) =>\r\n    genotype.name.includes(searchValue2.toLowerCase()) || genotype.name.includes(searchValue2.toUpperCase())\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <BarChart data={getData()} cursor={isTouchDevice() ? 'default' : 'pointer'} onClick={handleClickChart}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={getDomain()} allowDecimals={false}>\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  {dataViewOptions.find((option) => option.value === frequenciesGraphView).label}\r\n                </Label>\r\n              </YAxis>\r\n              {genotypesDrugsData.length > 0 && <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div key={`frequencies-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                            <Typography variant=\"caption\">{dataKey}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                cursor={{ fill: hoverColor }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    return <div className={classes.chartTooltipLabel}>{label}</div>;\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {getDrugs().map((option, index) => (\r\n                <Bar key={`frequencies-bar-${index}`} dataKey={option} fill={getColorForDrug(option)} />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [genotypesDrugsData, frequenciesGraphView, frequenciesGraphSelectedGenotypes]);\r\n\r\n  return (\r\n    <CardContent className={classes.frequenciesGraph}>\r\n      <div className={classes.selectsWrapper}>\r\n        <div className={classes.labelWrapper}>\r\n          <Typography variant=\"caption\">Data view</Typography>\r\n          <Tooltip title=\"Select up to 7 genotypes\" placement=\"top\">\r\n            <InfoOutlined color=\"action\" fontSize=\"small\" className={classes.labelTooltipIcon} />\r\n          </Tooltip>\r\n        </div>\r\n        <div className={classes.selectWrapper}>\r\n          <Select\r\n            value={frequenciesGraphView}\r\n            onChange={handleChangeDataView}\r\n            inputProps={{ className: classes.dataViewSelectInput }}\r\n            MenuProps={{ classes: { list: classes.dataViewSelectMenu } }}\r\n            disabled={organism === 'none'}\r\n          >\r\n            {dataViewOptions.map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'frequencies-dataview'} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n          <Select\r\n            multiple\r\n            value={frequenciesGraphSelectedGenotypes}\r\n            onChange={(event) => handleChangeSelectedGenotypes({ event })}\r\n            displayEmpty\r\n            disabled={organism === 'none'}\r\n            onClose={(e) => setSearchValue2(\"\")}\r\n            endAdornment={\r\n              <Button\r\n                variant=\"outlined\"\r\n                className={classes.genotypesSelectButton}\r\n                onClick={() => handleChangeSelectedGenotypes({ all: true })}\r\n                disabled={organism === 'none' || frequenciesGraphSelectedGenotypes.length === 0}\r\n                color=\"error\"\r\n              >\r\n                CLEAR\r\n              </Button>\r\n            }\r\n            inputProps={{ className: classes.genotypesSelectInput }}\r\n            MenuProps={{ classes: { paper: classes.genotypesMenuPaper, list: classes.genotypesSelectMenu } }}\r\n            renderValue={(selected) => (<div>{`Select genotypes (currently showing ${selected.length} )`}</div>)}\r\n          >\r\n            <TextField \r\n                size=\"small\"\r\n                autoFocus\r\n                placeholder=\"Type to search...\"\r\n                label=\"Search genotype\" \r\n                variant=\"standard\" \r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SearchIcon />\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n                sx={{ width:'98%', margin:'0% 1%'}}\r\n                onChange={e => setSearchValue(e)}\r\n                onKeyDown={(e) => e.stopPropagation()}\r\n              />\r\n            {filteredData.map((genotype, index) => (\r\n                <MenuItem key={`frequencies-option-${index}`} value={genotype.name} className={classes.dropdown}>\r\n                  <Checkbox sx={{padding: '0px', marginRight:'5px'}} checked={frequenciesGraphSelectedGenotypes.indexOf(genotype.name) > -1} />\r\n                  <ListItemText primary={getSelectGenotypeLabel(genotype)}   />\r\n                </MenuItem>\r\n              ))}\r\n          </Select>\r\n        </div>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"RFWG\">\r\n          {plotChart}\r\n        </div>\r\n        <div className={classes.tooltipWrapper}>\r\n          {currentTooltip ? (\r\n            <div className={classes.tooltip}>\r\n              <div className={classes.tooltipTitle}>\r\n                <Typography variant=\"h5\" fontWeight=\"600\">\r\n                  {currentTooltip.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">{'N = ' + currentTooltip.count}</Typography>\r\n              </div>\r\n              <div className={classes.tooltipContent}>\r\n                {currentTooltip.drugs.map((item, index) => {\r\n                  return (\r\n                    <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                      <Box\r\n                        className={classes.tooltipItemBox}\r\n                        style={{\r\n                          backgroundColor: item.fill\r\n                        }}\r\n                      />\r\n                      <div className={classes.tooltipItemStats}>\r\n                        <Typography variant=\"body2\" fontWeight=\"500\">\r\n                          {item.label}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" noWrap>{`N = ${item.count}`}</Typography>\r\n                        <Typography fontSize=\"10px\">{`${item.percentage}%`}</Typography>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.noGenotypeSelected}>Click on a genotype to see detail</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drugResistanceGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  labelWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    columnGap: '8px',\r\n    paddingBottom: '4px'\r\n  },\r\n  labelTooltipIcon: {\r\n    cursor: 'pointer'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important',\r\n    marginRight: '-80px !important'\r\n  },\r\n  selectButton: {\r\n    height: '20px',\r\n    fontSize: '10px !important',\r\n    padding: '3px 5px !important',\r\n    whiteSpace: 'nowrap',\r\n    position: 'absolute',\r\n    right: '18px'\r\n  },\r\n  menuPaper: {\r\n    maxHeight: '350px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiCheckbox-root': {\r\n      padding: '0px 8px 0px 0px'\r\n    },\r\n    '& .MuiTypography-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      width: '100%',\r\n      height: '460px'\r\n    }\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltipWrapper: {\r\n    width: '30%',\r\n    borderRadius: '6px',\r\n    backgroundColor: '#E5E5E5',\r\n    overflowY: 'auto',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      height: '250px'\r\n    }\r\n  },\r\n  noYearSelected: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n  },\r\n  tooltip: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end',\r\n    padding: '16px 16px 8px',\r\n    borderBottom: '1px solid #fff'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexWrap: 'wrap',\r\n    gap: '16px',\r\n    padding: '16px',\r\n    overflowY: 'auto'\r\n  },\r\n  tooltipItemWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    gridColumn: 'span 6'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  },\r\n  chartTooltipLabel: {\r\n    backgroundColor: '#fff',\r\n    padding: '8px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, Button, CardContent, Checkbox, ListItemText, MenuItem, Select, Tooltip, Typography } from '@mui/material';\r\nimport { useStyles } from './DrugResistanceGraphMUI';\r\nimport {\r\n  Brush,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as ChartTooltip,\r\n  LineChart,\r\n  Line,\r\n  Label\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setDrugResistanceGraphView, setResetBool } from '../../../../stores/slices/graphSlice';\r\nimport { drugsKP, drugsForDrugResistanceGraphST } from '../../../../util/drugs';\r\nimport { useEffect, useState } from 'react';\r\nimport { hoverColor } from '../../../../util/colorHelper';\r\nimport { getColorForDrug } from '../graphColorHelper';\r\nimport { InfoOutlined } from '@mui/icons-material';\r\nimport { isTouchDevice } from '../../../../util/isTouchDevice';\r\n\r\nexport const DrugResistanceGraph = () => {\r\n  const classes = useStyles();\r\n  const [currentTooltip, setCurrentTooltip] = useState(null);\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n\r\n  const dispatch = useAppDispatch();\r\n  const drugResistanceGraphView = useAppSelector((state) => state.graph.drugResistanceGraphView);\r\n  const drugsYearData = useAppSelector((state) => state.graph.drugsYearData);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const timeInitial = useAppSelector((state) => state.dashboard.timeInitial);\r\n  const timeFinal = useAppSelector((state) => state.dashboard.timeFinal);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const resetBool = useAppSelector((state) => state.graph.resetBool);\r\n\r\n  useEffect(() => {\r\n    dispatch(setResetBool(true));\r\n    setCurrentTooltip(null);\r\n  }, [drugsYearData]);\r\n\r\n  function getData() {\r\n    const exclusions = ['name', 'count'];\r\n    let drugDataPercentage = structuredClone(drugsYearData);\r\n    drugDataPercentage = drugDataPercentage.map((item) => {\r\n      const keys = Object.keys(item).filter((x) => !exclusions.includes(x));\r\n\r\n      keys.forEach((key) => {\r\n        item[key] = Number(((item[key] / item.count) * 100).toFixed(2));\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    return drugDataPercentage;\r\n  }\r\n\r\n  function getDrugs() {\r\n    if (organism === 'none') {\r\n      return [];\r\n    }\r\n    if (organism === 'typhi') {\r\n      return drugsForDrugResistanceGraphST;\r\n    }\r\n    return drugsKP;\r\n  }\r\n\r\n  function handleChangeDrugsView({ event = null, all = false }) {\r\n    setCurrentTooltip(null);\r\n    let newValues = [];\r\n    const drugs = getDrugs();\r\n\r\n    if (all) {\r\n      if (drugResistanceGraphView.length === drugs.length) {\r\n        newValues = [];\r\n      } else {\r\n        newValues = drugs.slice();\r\n      }\r\n    } else {\r\n      const {\r\n        target: { value }\r\n      } = event;\r\n      newValues = value;\r\n    }\r\n\r\n    newValues.sort((a, b) => a.localeCompare(b));\r\n    dispatch(setDrugResistanceGraphView(newValues));\r\n  }\r\n\r\n  function handleClickChart(event) {\r\n    const data = drugsYearData.find((item) => item.name === event?.activeLabel);\r\n\r\n    if (data && drugResistanceGraphView.length > 0) {\r\n      const currentData = structuredClone(data);\r\n\r\n      const value = {\r\n        name: currentData.name,\r\n        count: currentData.count,\r\n        drugs: []\r\n      };\r\n\r\n      delete currentData.name;\r\n      delete currentData.count;\r\n\r\n      Object.keys(currentData).forEach((key) => {\r\n        if (!drugResistanceGraphView.includes(key)) {\r\n          return;\r\n        }\r\n\r\n        const count = currentData[key];\r\n        if (count === 0) {\r\n          return;\r\n        }\r\n\r\n        value.drugs.push({\r\n          label: key,\r\n          count,\r\n          percentage: Number(((count / value.count) * 100).toFixed(2)),\r\n          fill: event.activePayload.find((x) => x.name === key).stroke\r\n        });\r\n        value.drugs.sort((a, b) => b.count - a.count);\r\n      });\r\n\r\n      setCurrentTooltip(value);\r\n      dispatch(setResetBool(false));\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(resetBool){\r\n      setCurrentTooltip(null);\r\n      dispatch(setResetBool(true));\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      const doc = document.getElementById('DRT');\r\n      const lines = doc.getElementsByClassName('recharts-line');\r\n\r\n      for (let index = 0; index < lines.length; index++) {\r\n        const hasValue = drugResistanceGraphView.some((value) => getDrugs().indexOf(value) === index);\r\n        lines[index].style.display = hasValue ? 'block' : 'none';\r\n      }\r\n\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <LineChart data={getData()} cursor={isTouchDevice() ? 'default' : 'pointer'} onClick={handleClickChart}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                tickCount={20}\r\n                allowDecimals={false}\r\n                padding={{ left: 20, right: 20 }}\r\n                dataKey=\"name\"\r\n                domain={drugsYearData.length > 0 ? ['dataMin', 'dataMax'] : undefined}\r\n                interval={'preserveStartEnd'}\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis tickCount={6} padding={{ top: 20, bottom: 20 }} allowDecimals={false}>\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  Resistant (%)\r\n                </Label>\r\n              </YAxis>\r\n              {drugsYearData.length > 0 && <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />}\r\n\r\n              {organism !== 'none' && (\r\n                <Legend\r\n                  content={(props) => {\r\n                    const { payload } = props;\r\n                    return (\r\n                      <div className={classes.legendWrapper}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry;\r\n                          return (\r\n                            <div key={`drug-resistance-legend-${index}`} className={classes.legendItemWrapper}>\r\n                              <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                              <Typography variant=\"caption\">{dataKey}</Typography>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                />\r\n              )}\r\n\r\n              <ChartTooltip\r\n                cursor={{ fill: hoverColor }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    return <div className={classes.chartTooltipLabel}>{label}</div>;\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {getDrugs().map((option, index) => (\r\n                <Line\r\n                  key={`drug-resistance-bar-${index}`}\r\n                  dataKey={option}\r\n                  strokeWidth={2}\r\n                  stroke={getColorForDrug(option)}\r\n                  connectNulls\r\n                  type=\"monotone\"\r\n                  activeDot={timeInitial === timeFinal ? true : false}\r\n                />\r\n              ))}\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [drugsYearData, drugResistanceGraphView]);\r\n\r\n  return (\r\n    <CardContent className={classes.drugResistanceGraph}>\r\n      <div className={classes.selectWrapper}>\r\n        <div className={classes.labelWrapper}>\r\n          <Typography variant=\"caption\">Drugs view</Typography>\r\n          <Tooltip\r\n            title=\"The resistance frequencies are only shown for years with N≥10 genomes. When the data is insufficent per year to calculate annual frequencies, there are no data points to show.\"\r\n            placement=\"top\"\r\n          >\r\n            <InfoOutlined color=\"action\" fontSize=\"small\" className={classes.labelTooltipIcon} />\r\n          </Tooltip>\r\n        </div>\r\n        <Select\r\n          multiple\r\n          value={drugResistanceGraphView}\r\n          onChange={(event) => handleChangeDrugsView({ event })}\r\n          displayEmpty\r\n          disabled={organism === 'none'}\r\n          endAdornment={\r\n            <Button\r\n              variant=\"outlined\"\r\n              className={classes.selectButton}\r\n              onClick={() => handleChangeDrugsView({ all: true })}\r\n              disabled={organism === 'none'}\r\n              color={drugResistanceGraphView.length === getDrugs().length ? 'error' : 'primary'}\r\n            >\r\n              {drugResistanceGraphView.length === getDrugs().length ? 'Clear All' : 'Select All'}\r\n            </Button>\r\n          }\r\n          inputProps={{ className: classes.selectInput }}\r\n          MenuProps={{ classes: { paper: classes.menuPaper, list: classes.selectMenu } }}\r\n          renderValue={(selected) => <div>{`${selected.length} of ${getDrugs().length} selected`}</div>}\r\n        >\r\n          {getDrugs().map((drug, index) => (\r\n            <MenuItem key={`drug-resistance-option-${index}`} value={drug}>\r\n              <Checkbox checked={drugResistanceGraphView.indexOf(drug) > -1} />\r\n              <ListItemText primary={drug} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"DRT\">\r\n          {plotChart}\r\n        </div>\r\n        <div className={classes.tooltipWrapper}>\r\n          {currentTooltip ? (\r\n            <div className={classes.tooltip}>\r\n              <div className={classes.tooltipTitle}>\r\n                <Typography variant=\"h5\" fontWeight=\"600\">\r\n                  {currentTooltip.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">{'N = ' + currentTooltip.count}</Typography>\r\n              </div>\r\n              <div className={classes.tooltipContent}>\r\n                {currentTooltip.drugs.map((item, index) => {\r\n                  return (\r\n                    <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                      <Box\r\n                        className={classes.tooltipItemBox}\r\n                        style={{\r\n                          backgroundColor: item.fill\r\n                        }}\r\n                      />\r\n                      <div className={classes.tooltipItemStats}>\r\n                        <Typography variant=\"body2\" fontWeight=\"500\">\r\n                          {item.label}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" noWrap>{`N = ${item.count}`}</Typography>\r\n                        <Typography fontSize=\"10px\">{`${item.percentage}%`}</Typography>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.noYearSelected}>\r\n              {drugResistanceGraphView.length === 0 ? 'Select a drug to see detail' : 'Click on a year to see detail'}{' '}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  distributionGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  selectLabel: {\r\n    paddingBottom: '4px'\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      width: '100%',\r\n      height: '460px'\r\n    }\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltipWrapper: {\r\n    width: '100%',\r\n    borderRadius: '6px',\r\n    backgroundColor: '#E5E5E5',\r\n    overflowY: 'auto',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      height: '250px',\r\n      overflowY: 'hidden',\r\n    }\r\n  },\r\n  sliderCont:{\r\n    width: '30%',\r\n    overflowY: 'auto',\r\n    overflowX: 'hidden',\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      overflowY: 'hidden',\r\n      overflowX: 'hidden',\r\n    }\r\n    \r\n  },\r\n  noYearSelected: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n  },\r\n  tooltip: {\r\n    width: '100%',\r\n    height: '450px',\r\n    display: 'flex',\r\n    overflowY:'auto',\r\n    flexDirection: 'column',\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      height:'100%',\r\n      overflowY: 'hidden',\r\n      overflowX: 'hidden',\r\n    }\r\n  },\r\n  noYearSelected2: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '450px',\r\n    '@media (max-width: 1000px)': {\r\n      height: '100%',\r\n    }\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end',\r\n    padding: '16px 16px 8px',\r\n    borderBottom: '1px solid #fff'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexWrap: 'wrap',\r\n    gap: '16px',\r\n    padding: '16px',\r\n    overflowY: 'auto'\r\n  },\r\n  tooltipItemWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    gridColumn: 'span 6'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  },\r\n  chartTooltipLabel: {\r\n    backgroundColor: '#fff',\r\n    padding: '8px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  sliderLabel:{\n    display:'flex', \n    fontSize:'12px', \n    justifyContent:'space-between', \n    flexDirection:'row'\n  },\n  sliderSize:{ \n    margin: '0px 10px'\n  }\n}));\n\nexport { useStyles };\n","import { useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Slider from '@mui/material/Slider';\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\nimport { setCurrentSliderValue,setMaxSliderValue } from '../../../stores/slices/graphSlice';\nimport { useStyles } from './SliderMUI';\n\nexport const SliderSizes = () => {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n  const currentSliderValue = useAppSelector((state) => state.graph.currentSliderValue);\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\n  const maxSliderValue = useAppSelector((state) => state.graph.maxSliderValue);\n  // const [currentSliderValue, setCurrentSliderValue] = useState(20);\n\n  const handleDefaultSliderChange = (event, newValue) => {\n    dispatch(setCurrentSliderValue(newValue));\n    // callBackValue(newValue);\n  };\n\n  useEffect(()=>{\n    const max = genotypesForFilter.length <= 133 ? genotypesForFilter.length : 133;\n    dispatch(setMaxSliderValue(max));\n  });\n\n  return (\n    <div className={classes.sliderSize}>\n      <Box >\n        {/* Display the values of the sliders */}\n        <div className={classes.sliderLabel}>\n        <p>Individual genotypes to colour:</p>\n        <p>{currentSliderValue}</p>\n        </div>\n        <Slider\n          value={currentSliderValue }\n          onChange={handleDefaultSliderChange}\n          aria-label=\"Default\"\n          valueLabelDisplay=\"auto\"\n          min={1}\n          max={maxSliderValue}\n        />\n      </Box>\n    </div>\n  );\n}\n","import { Box, CardContent, MenuItem, Select, Typography } from '@mui/material';\r\nimport { useStyles } from './DistributionGraphMUI';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  Brush,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as ChartTooltip,\r\n  Label\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setColorPallete } from '../../../../stores/slices/dashboardSlice';\r\nimport { setDistributionGraphView, setResetBool} from '../../../../stores/slices/graphSlice';\r\nimport { getColorForGenotype, hoverColor, generatePalleteForGenotypes } from '../../../../util/colorHelper';\r\nimport { useEffect, useState } from 'react';\r\nimport { isTouchDevice } from '../../../../util/isTouchDevice';\r\nimport {SliderSizes} from '../../Slider';\r\n\r\nconst dataViewOptions = [\r\n  { label: 'Number of genomes', value: 'number' },\r\n  { label: 'Percentage per year', value: 'percentage' }\r\n];\r\n\r\nexport const DistributionGraph = () => {\r\n  const classes = useStyles();\r\n  const [currentTooltip, setCurrentTooltip] = useState(null);\r\n  // const [currentSliderValue, setCurrentSliderValue] = useState(20);\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n\r\n  const dispatch = useAppDispatch();\r\n  const distributionGraphView = useAppSelector((state) => state.graph.distributionGraphView);\r\n  const genotypesYearData = useAppSelector((state) => state.graph.genotypesYearData);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const colorPallete = useAppSelector((state) => state.dashboard.colorPallete);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const currentSliderValue = useAppSelector((state) => state.graph.currentSliderValue);\r\n  const maxSliderValue = useAppSelector((state) => state.graph.maxSliderValue);\r\n  const resetBool = useAppSelector((state) => state.graph.resetBool);\r\n  const [topXGenotypes, setTopXGenotypes] = useState([]);\r\n  const [currentEventSelected, setCurrentEventSelected] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    dispatch(setResetBool(true));\r\n    setCurrentTooltip(null);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [genotypesYearData]);\r\n  \r\n  function getDomain() {\r\n    return distributionGraphView === 'number' ? undefined : [0, 100];\r\n  }\r\n\r\n  \r\n//  const updateSlider = (value) =>{\r\n//   setCurrentSliderValue(value);\r\n//  };\r\n\r\n  useEffect(() =>{\r\n      let mp = new Map(); //mp = total count of a genotype in database(including all years)\r\n      \r\n      genotypesYearData.forEach(cur => {\r\n        Object.keys(cur).forEach(it => {\r\n          if (it !== \"name\" && it !== \"count\") {\r\n            if (mp.has(it)) {\r\n              mp.set(it, mp.get(it) + cur[it]);\r\n            } else {\r\n              mp.set(it, cur[it]);\r\n            }\r\n          }\r\n        })\r\n      })\r\n      const mapArray = Array.from(mp);//[key, total_count], eg: ['4.3.1.1', 1995]\r\n      // Sort the array based on keys\r\n      mapArray.sort((a, b) => b[1] - a[1]);\r\n      const colorArray = mapArray.slice(0, maxSliderValue).map(([key, value]) => key);\r\n      const slicedArray = mapArray.slice(0, currentSliderValue).map(([key, value]) => key);\r\n      setTopXGenotypes(slicedArray);\r\n      dispatch(setColorPallete(generatePalleteForGenotypes(colorArray)));\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[genotypesForFilter, genotypesYearData, currentSliderValue]);\r\n\r\n  let newArray = []; //TODO: can be a global value in redux\r\n  let newArrayPercentage = []; //TODO: can be a global value in redux\r\n  const exclusions = ['name', 'count'];\r\n  newArray = genotypesYearData.map((item) => {\r\n    let count = 0;\r\n    for (const key in item) {     \r\n      if (!topXGenotypes.includes(key) && !exclusions.includes(key)) { \r\n        count += item[key]; //adding count of all genotypes which are not in topX\r\n      }  \r\n    }\r\n    const newItem = { ...item, Other: count };\r\n    return newItem; //return item of genotypesYearData with additional filed 'Other' to newArray\r\n  });\r\n  let genotypeDataPercentage = structuredClone(newArray);\r\n  newArrayPercentage = genotypeDataPercentage.map((item) => {\r\n    const keys = Object.keys(item).filter((x) => !exclusions.includes(x));    \r\n    keys.forEach((key) => {\r\n      item[key] = Number(((item[key] / item.count) * 100).toFixed(2));\r\n    });\r\n    return item;\r\n  });\r\n\r\n  function getData(){\r\n    if (distributionGraphView === 'number')\r\n      return newArray;\r\n    return newArrayPercentage;\r\n\r\n  }\r\n\r\n  function getGenotypeColor(genotype) {\r\n    console.log(\"genotype\", genotype);\r\n    return organism === 'typhi' ? getColorForGenotype(genotype) : colorPallete[genotype] || '#F5F4F6';\r\n  }\r\n\r\n  function handleChangeDataView(event) {\r\n    dispatch(setDistributionGraphView(event.target.value));\r\n  }\r\n  function handleClickChart(event){\r\n    console.log(\"event\", event);\r\n      setCurrentEventSelected(event);\r\n      const data = newArray.find((item) => item.name === event?.activeLabel);\r\n        if (data) {\r\n          const currentData = structuredClone(data);\r\n          \r\n          const value = {\r\n            name: currentData.name,\r\n            count: currentData.count,\r\n            genotypes: []\r\n          };\r\n\r\n          delete currentData.name;\r\n          delete currentData.count;\r\n          \r\n          value.genotypes = Object.keys(currentData).map((key) => {\r\n            console.log(\"key\", key);\r\n            const count = currentData[key];\r\n            // const activePayload = event.activePayload.find((x) => x.name === key);\r\n            // console.log(\"activePayload\", activePayload);\r\n            return {\r\n              label: key,\r\n              count,\r\n              percentage: Number(((count / value.count) * 100).toFixed(2)),\r\n              color: getGenotypeColor(key)\r\n            };\r\n          });\r\n          // console.log(\"value.genotypes\", value.genotypes);\r\n          value.genotypes = value.genotypes.filter((item) => topXGenotypes.includes(item.label) || item.label === \"Other\");\r\n          console.log(\"value\", value);\r\n          setCurrentTooltip(value);\r\n          dispatch(setResetBool(false));\r\n        }\r\n  }\r\n  // console.log(\"currentTooltip\", currentTooltip);\r\n  useEffect(()=>{\r\n    if(!resetBool)\r\n      handleClickChart(currentEventSelected);\r\n    else{\r\n      setCurrentTooltip(null);\r\n      dispatch(setResetBool(true));\r\n  }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[topXGenotypes]);\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <BarChart\r\n              data={getData()}\r\n              cursor={isTouchDevice() ? 'default' : 'pointer'}\r\n              onClick={handleClickChart}\r\n              maxBarSize={70}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis domain={getDomain()} allowDataOverflow={true} allowDecimals={false}>\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  {dataViewOptions.find((option) => option.value === distributionGraphView).label}\r\n                </Label>\r\n              </YAxis>\r\n              {genotypesYearData.length > 0 && <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />}\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div key={`distribution-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                            <Typography variant=\"caption\">{dataKey}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                cursor={{ fill: hoverColor }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    return <div className={classes.chartTooltipLabel}>{label}</div>;\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {topXGenotypes.map((option, index) => (\r\n                <Bar\r\n                  key={`distribution-bar-${index}`}\r\n                  dataKey={option}\r\n                  name={option}\r\n                  stackId={0}\r\n                  fill={getGenotypeColor(option)}\r\n                />\r\n              ))}\r\n              <Bar\r\n                  dataKey={\"Other\"}\r\n                  stackId={0}\r\n                  fill={getGenotypeColor(\"Other\")}\r\n               />                 \r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [genotypesYearData, distributionGraphView,topXGenotypes, currentSliderValue]);\r\n\r\n\r\n  return (\r\n    <CardContent className={classes.distributionGraph}>\r\n      <div className={classes.selectWrapper}>\r\n        <Typography variant=\"caption\">Data view</Typography>\r\n        <Select\r\n          value={distributionGraphView}\r\n          onChange={handleChangeDataView}\r\n          inputProps={{ className: classes.selectInput }}\r\n          MenuProps={{ classes: { list: classes.selectMenu } }}\r\n          disabled={organism === 'none'}\r\n        >\r\n          {dataViewOptions.map((option, index) => {\r\n            return (\r\n              <MenuItem key={index + 'distribution-dataview'} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"GD\">\r\n          {plotChart}\r\n        </div>\r\n        <div className={classes.sliderCont} >\r\n          {/* <SliderSizes callBackValue={ updateSlider} sx={{margin: '0px 10px 0px 10px'}}/> */}\r\n           <SliderSizes sx={{margin: '0px 10px 0px 10px'}}/>\r\n          <div className={classes.tooltipWrapper}>\r\n            {currentTooltip ? (\r\n              <div className={classes.tooltip}>\r\n                <div className={classes.tooltipTitle}>\r\n                  <Typography variant=\"h5\" fontWeight=\"600\">\r\n                    {currentTooltip.name}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\">{'N = ' + currentTooltip.count}</Typography>\r\n                </div>\r\n                <div className={classes.tooltipContent}>\r\n                  {currentTooltip.genotypes.map((item, index) => {\r\n                    return (\r\n                      <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                        <Box\r\n                          className={classes.tooltipItemBox}\r\n                          style={{\r\n                            backgroundColor: item.color\r\n                          }}\r\n                        />\r\n                        <div className={classes.tooltipItemStats}>\r\n                          <Typography variant=\"body2\" fontWeight=\"500\">\r\n                            {item.label}\r\n                          </Typography>\r\n                          <Typography variant=\"caption\" noWrap>{`N = ${item.count}`}</Typography>\r\n                          <Typography fontSize=\"10px\">{`${item.percentage}%`}</Typography>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className={classes.noYearSelected2}>Click on a year to see detail</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  trendsKPGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)'\r\n  },\r\n  selectsWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      width: '100%',\r\n      height: '460px'\r\n    }\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  legendDivider: {\r\n    marginRight: '8px !important'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    minWidth: '10px'\r\n  },\r\n  tooltipWrapper: {\r\n    width: '30%',\r\n    borderRadius: '6px',\r\n    backgroundColor: '#E5E5E5',\r\n    overflowY: 'auto',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      height: '300px'\r\n    }\r\n  },\r\n  noYearSelected: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n  },\r\n  tooltip: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end',\r\n    padding: '16px 16px 8px',\r\n    borderBottom: '1px solid #fff'\r\n  },\r\n  tooltipItemWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    gridColumn: 'span 6'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  },\r\n  chartTooltipLabel: {\r\n    backgroundColor: '#fff',\r\n    padding: '8px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px'\r\n  },\r\n  tooltipSubTitle: {\r\n    padding: '16px 0px'\r\n  },\r\n  tooltipContent: {\r\n    padding: '16px !important',\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexWrap: 'wrap',\r\n    gap: '16px',\r\n    overflowY: 'auto'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, CardContent, Divider, MenuItem, Select, Tab, Tabs, Typography } from '@mui/material';\r\nimport { useStyles } from './TrendsKPGraphMUI';\r\nimport {\r\n  Bar,\r\n  Brush,\r\n  CartesianGrid,\r\n  ComposedChart,\r\n  Label,\r\n  Legend,\r\n  Line,\r\n  ResponsiveContainer,\r\n  Tooltip as ChartTooltip,\r\n  XAxis,\r\n  YAxis\r\n} from 'recharts';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { isTouchDevice } from '../../../../util/isTouchDevice';\r\nimport { colorForDrugClassesKP, hoverColor } from '../../../../util/colorHelper';\r\nimport { setTrendsKPGraphDrugClass, setTrendsKPGraphView, setResetBool } from '../../../../stores/slices/graphSlice';\r\nimport { drugClassesKP } from '../../../../util/drugs';\r\n\r\nconst dataViewOptions = [\r\n  { label: 'Number of genomes', value: 'number' },\r\n  { label: 'Percentage per year', value: 'percentage' }\r\n];\r\n\r\nexport const TrendsKPGraph = () => {\r\n  const classes = useStyles();\r\n  const [currentTooltip, setCurrentTooltip] = useState(null);\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n  const [tooltipTab, setTooltipTab] = useState('genes');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n  const colorPallete = useAppSelector((state) => state.dashboard.colorPallete);\r\n  const timeInitial = useAppSelector((state) => state.dashboard.timeInitial);\r\n  const timeFinal = useAppSelector((state) => state.dashboard.timeFinal);\r\n  const genotypesAndDrugsYearData = useAppSelector((state) => state.graph.genotypesAndDrugsYearData);\r\n  const trendsKPGraphView = useAppSelector((state) => state.graph.trendsKPGraphView);\r\n  const trendsKPGraphDrugClass = useAppSelector((state) => state.graph.trendsKPGraphDrugClass);\r\n  const resetBool = useAppSelector((state) => state.graph.resetBool);\r\n\r\n  useEffect(() => {\r\n    dispatch(setResetBool(true));\r\n    setCurrentTooltip(null);\r\n  }, [genotypesAndDrugsYearData]);\r\n\r\n  function getDrugClasses() {\r\n    if (organism === 'none') {\r\n      return [];\r\n    }\r\n    return drugClassesKP;\r\n  }\r\n\r\n  function getDomain() {\r\n    return trendsKPGraphView === 'number' ? undefined : [0, 100];\r\n  }\r\n\r\n  function getData() {\r\n    if (trendsKPGraphView === 'number') {\r\n      return genotypesAndDrugsYearData[trendsKPGraphDrugClass];\r\n    }\r\n\r\n    const exclusions = ['name', 'totalCount', 'resistantCount'];\r\n    let percentageData = structuredClone(genotypesAndDrugsYearData[trendsKPGraphDrugClass] ?? []);\r\n    percentageData = percentageData.map((item) => {\r\n      const keys = Object.keys(item).filter((x) => !exclusions.includes(x));\r\n\r\n      keys.forEach((key) => {\r\n        item[key] = Number(((item[key] / item.totalCount) * 100).toFixed(2));\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    return percentageData;\r\n  }\r\n\r\n  function handleChangeDataView(event) {\r\n    dispatch(setTrendsKPGraphView(event.target.value));\r\n  }\r\n\r\n  function handleChangeDrugClass(event) {\r\n    setCurrentTooltip(null);\r\n    dispatch(setTrendsKPGraphDrugClass(event.target.value));\r\n  }\r\n\r\n  function handleChangeTooltipTab(_, newValue) {\r\n    setTooltipTab(newValue);\r\n  }\r\n\r\n  function handleClickChart(event) {\r\n    const data = genotypesAndDrugsYearData[trendsKPGraphDrugClass].find((item) => item.name === event?.activeLabel);\r\n\r\n    if (data) {\r\n      const currentData = structuredClone(data);\r\n      const value = {\r\n        name: currentData.name,\r\n        count: currentData.totalCount,\r\n        genes: [],\r\n        genotypes: []\r\n      };\r\n\r\n      delete currentData.name;\r\n      delete currentData.totalCount;\r\n      delete currentData.resistantCount;\r\n\r\n      Object.keys(currentData).forEach((key) => {\r\n        const count = currentData[key];\r\n\r\n        if (count === 0) {\r\n          return;\r\n        }\r\n\r\n        const item = {\r\n          label: key,\r\n          count,\r\n          percentage: Number(((count / value.count) * 100).toFixed(2)),\r\n          color: event.activePayload.find((x) => x.name === key).color\r\n        };\r\n\r\n        if (genotypesForFilter.includes(key)) {\r\n          value.genotypes.push(item);\r\n          value.genotypes.sort((a, b) => a.label.localeCompare(b.label));\r\n          return;\r\n        }\r\n\r\n        value.genes.push(item);\r\n        value.genes.sort((a, b) => a.label.localeCompare(b.label));\r\n      });\r\n\r\n      setCurrentTooltip(value);\r\n      dispatch(setResetBool(false));\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(resetBool){\r\n      setCurrentTooltip(null);\r\n      dispatch(setResetBool(true));\r\n    }\r\n  });\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <ComposedChart data={getData()} cursor={isTouchDevice() ? 'default' : 'pointer'} onClick={handleClickChart}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis\r\n                tickCount={20}\r\n                allowDecimals={false}\r\n                padding={{ left: 20, right: 20 }}\r\n                dataKey=\"name\"\r\n                domain={\r\n                  (genotypesAndDrugsYearData[trendsKPGraphDrugClass] ?? []).length > 0\r\n                    ? ['dataMin', 'dataMax']\r\n                    : undefined\r\n                }\r\n                interval={'preserveStartEnd'}\r\n                tick={{ fontSize: 14 }}\r\n              />\r\n              <YAxis\r\n                tickCount={6}\r\n                padding={{ top: 20, bottom: 20 }}\r\n                allowDecimals={false}\r\n                domain={getDomain()}\r\n                allowDataOverflow={true}\r\n              >\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  Number of Genomes\r\n                </Label>\r\n              </YAxis>\r\n              {(genotypesAndDrugsYearData[trendsKPGraphDrugClass] ?? []).length > 0 && (\r\n                <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />\r\n              )}\r\n\r\n              {organism !== 'none' && (\r\n                <Legend\r\n                  content={(props) => {\r\n                    const { payload } = props;\r\n                    const diviserIndex = colorForDrugClassesKP[trendsKPGraphDrugClass]?.length ?? 0;\r\n\r\n                    return (\r\n                      <div className={classes.legendWrapper}>\r\n                        {payload.map((entry, index) => {\r\n                          const { dataKey, color } = entry;\r\n                          return (\r\n                            <React.Fragment key={`trendsKP-legend-${index}`}>\r\n                              <div className={classes.legendItemWrapper}>\r\n                                <Box\r\n                                  className={classes.colorCircle}\r\n                                  style={{\r\n                                    backgroundColor: color,\r\n                                    borderRadius:\r\n                                      index < colorForDrugClassesKP[trendsKPGraphDrugClass]?.length ? undefined : '50%'\r\n                                  }}\r\n                                />\r\n                                <Typography variant=\"caption\">{dataKey}</Typography>\r\n                              </div>\r\n                              {diviserIndex - 1 === index && (\r\n                                <Divider orientation=\"vertical\" className={classes.legendDivider} />\r\n                              )}\r\n                            </React.Fragment>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    );\r\n                  }}\r\n                />\r\n              )}\r\n\r\n              <ChartTooltip\r\n                cursor={{ fill: hoverColor }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    return <div className={classes.chartTooltipLabel}>{label}</div>;\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {colorForDrugClassesKP[trendsKPGraphDrugClass]?.map((option, index) => (\r\n                <Bar\r\n                  key={`trendsKP-bar-${index}`}\r\n                  dataKey={option.name}\r\n                  name={option.name}\r\n                  stackId={0}\r\n                  fill={option.color}\r\n                />\r\n              ))}\r\n\r\n              {genotypesForFilter.map((option, index) => (\r\n                <Line\r\n                  key={`trendsKP-line-${index}`}\r\n                  dataKey={option}\r\n                  strokeWidth={2}\r\n                  stroke={colorPallete[option] || '#F5F4F6'}\r\n                  connectNulls\r\n                  type=\"monotone\"\r\n                  activeDot={timeInitial === timeFinal ? true : false}\r\n                />\r\n              ))}\r\n            </ComposedChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [genotypesAndDrugsYearData, trendsKPGraphView, trendsKPGraphDrugClass]);\r\n\r\n  return (\r\n    <CardContent className={classes.trendsKPGraph}>\r\n      <div className={classes.selectsWrapper}>\r\n        <div className={classes.selectWrapper}>\r\n          <Typography variant=\"caption\">Select drug class</Typography>\r\n          <Select\r\n            value={trendsKPGraphDrugClass}\r\n            onChange={handleChangeDrugClass}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n            disabled={organism === 'none'}\r\n          >\r\n            {getDrugClasses().map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'trendsKP-drug-classes'} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div>\r\n        <div className={classes.selectWrapper}>\r\n          <Typography variant=\"caption\">Data view</Typography>\r\n          <Select\r\n            value={trendsKPGraphView}\r\n            onChange={handleChangeDataView}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n            disabled={organism === 'none'}\r\n          >\r\n            {dataViewOptions.map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'trendsKP-dataview'} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"CERDT\">\r\n          {plotChart}\r\n        </div>\r\n        <div className={classes.tooltipWrapper}>\r\n          {currentTooltip ? (\r\n            <div className={classes.tooltip}>\r\n              <div className={classes.tooltipTitle}>\r\n                <Typography variant=\"h5\" fontWeight=\"600\">\r\n                  {currentTooltip.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">{'N = ' + currentTooltip.count}</Typography>\r\n              </div>\r\n              <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                <Tabs value={tooltipTab} onChange={handleChangeTooltipTab} variant=\"fullWidth\">\r\n                  <Tab label=\"Genes\" value=\"genes\" />\r\n                  <Tab label=\"Genotypes\" value=\"genotypes\" />\r\n                </Tabs>\r\n              </Box>\r\n              <div className={classes.tooltipContent}>\r\n                {currentTooltip[tooltipTab].map((item, index) => {\r\n                  return (\r\n                    <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                      <Box\r\n                        className={classes.tooltipItemBox}\r\n                        style={{\r\n                          backgroundColor: item.color\r\n                        }}\r\n                      />\r\n                      <div className={classes.tooltipItemStats}>\r\n                        <Typography variant=\"body2\" fontWeight=\"500\">\r\n                          {item.label}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" noWrap>{`N = ${item.count}`}</Typography>\r\n                        <Typography fontSize=\"10px\">{`${item.percentage}%`}</Typography>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.noYearSelected}>Click on a year to see detail</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  KODiversityGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  selectLabel: {\r\n    paddingBottom: '4px'\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      width: '100%',\r\n      height: '460px'\r\n    }\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltipWrapper: {\r\n    width: '30%',\r\n    borderRadius: '6px',\r\n    backgroundColor: '#E5E5E5',\r\n    overflowY: 'auto',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      height: '250px'\r\n    }\r\n  },\r\n  noYearSelected: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n  },\r\n  tooltip: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end',\r\n    padding: '16px 16px 8px',\r\n    borderBottom: '1px solid #fff'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexWrap: 'wrap',\r\n    gap: '16px',\r\n    padding: '16px',\r\n    overflowY: 'auto'\r\n  },\r\n  tooltipItemWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    gridColumn: 'span 6'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  },\r\n  chartTooltipLabel: {\r\n    backgroundColor: '#fff',\r\n    padding: '8px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Box, CardContent, MenuItem, Select, Typography } from '@mui/material';\r\nimport { useStyles } from './KODiversityGraphMUI';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  Brush,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as ChartTooltip,\r\n  Label\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { setKODiversityGraphView, setResetBool } from '../../../../stores/slices/graphSlice';\r\nimport { hoverColor } from '../../../../util/colorHelper';\r\nimport { useEffect, useState } from 'react';\r\nimport { isTouchDevice } from '../../../../util/isTouchDevice';\r\nimport { colorsForKODiversityGraph } from '../graphColorHelper';\r\n\r\nconst dataViewOptions = [\r\n  { label: 'K locus', value: 'K_locus' },\r\n  { label: 'O locus', value: 'O_locus' }\r\n];\r\n\r\nexport const KODiversityGraph = () => {\r\n  const classes = useStyles();\r\n  const [currentTooltip, setCurrentTooltip] = useState(null);\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n\r\n  const dispatch = useAppDispatch();\r\n  const KODiversityData = useAppSelector((state) => state.graph.KODiversityData);\r\n  const KODiversityGraphView = useAppSelector((state) => state.graph.KODiversityGraphView);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const resetBool = useAppSelector((state) => state.graph.resetBool);\r\n\r\n  useEffect(() => {\r\n    dispatch(setResetBool(true));\r\n    setCurrentTooltip(null);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [KODiversityData]);\r\n\r\n  function handleChangeDataView(event) {\r\n    setCurrentTooltip(null);\r\n    dispatch(setKODiversityGraphView(event.target.value));\r\n  }\r\n\r\n  function handleClickChart(event) {\r\n    const data = KODiversityData[KODiversityGraphView].find((item) => item.name === event?.activeLabel);\r\n\r\n    if (data) {\r\n      const currentData = structuredClone(data);\r\n\r\n      const value = {\r\n        name: currentData.name,\r\n        count: currentData.count,\r\n        diversity: []\r\n      };\r\n\r\n      delete currentData.name;\r\n      delete currentData.count;\r\n\r\n      Object.keys(currentData).forEach((key) => {\r\n        const count = currentData[key];\r\n\r\n        if (count === 0) {\r\n          return;\r\n        }\r\n\r\n        const activePayload = event.activePayload.find((x) => x.name === key);\r\n\r\n        value.diversity.push({\r\n          label: key,\r\n          count,\r\n          percentage: Number(((count / value.count) * 100).toFixed(2)),\r\n          color: activePayload?.fill\r\n        });\r\n      });\r\n\r\n      setCurrentTooltip(value);\r\n      dispatch(setResetBool(false));\r\n\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    if(resetBool){\r\n      setCurrentTooltip(null);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      dispatch(setResetBool(true));\r\n    }\r\n  });\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <BarChart\r\n              data={KODiversityData[KODiversityGraphView]}\r\n              cursor={isTouchDevice() ? 'default' : 'pointer'}\r\n              onClick={handleClickChart}\r\n              maxBarSize={70}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} />\r\n              <YAxis allowDataOverflow={true} allowDecimals={false} fontSize=\"14px\">\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  Number of genomes\r\n                </Label>\r\n              </YAxis>\r\n\r\n              {(KODiversityData[KODiversityGraphView] ?? []).length > 0 && (\r\n                <Brush dataKey=\"name\" height={20} stroke={'rgb(31, 187, 211)'} />\r\n              )}\r\n\r\n              <Legend\r\n                content={(props) => {\r\n                  const { payload } = props;\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {payload.map((entry, index) => {\r\n                        const { dataKey, color } = entry;\r\n                        return (\r\n                          <div key={`KODiversity-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box className={classes.colorCircle} style={{ backgroundColor: color }} />\r\n                            <Typography variant=\"caption\">{dataKey}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                cursor={{ fill: hoverColor }}\r\n                content={({ payload, active, label }) => {\r\n                  if (payload !== null && active) {\r\n                    return <div className={classes.chartTooltipLabel}>{label}</div>;\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              {colorsForKODiversityGraph.map((option, index) => (\r\n                <Bar\r\n                  key={`KODiversity-bar-${index}`}\r\n                  dataKey={option.name}\r\n                  name={option.name}\r\n                  stackId={0}\r\n                  fill={option.color}\r\n                />\r\n              ))}\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [KODiversityData, KODiversityGraphView]);\r\n\r\n  return (\r\n    <CardContent className={classes.KODiversityGraph}>\r\n      <div className={classes.selectWrapper}>\r\n        <Typography variant=\"caption\">Data view</Typography>\r\n        <Select\r\n          value={KODiversityGraphView}\r\n          onChange={handleChangeDataView}\r\n          inputProps={{ className: classes.selectInput }}\r\n          MenuProps={{ classes: { list: classes.selectMenu } }}\r\n          disabled={organism === 'none'}\r\n        >\r\n          {dataViewOptions.map((option, index) => {\r\n            return (\r\n              <MenuItem key={index + 'KODiversity-dataview'} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"KO\">\r\n          {plotChart}\r\n        </div>\r\n        <div className={classes.tooltipWrapper}>\r\n          {currentTooltip ? (\r\n            <div className={classes.tooltip}>\r\n              <div className={classes.tooltipTitle}>\r\n                <Typography variant=\"h5\" fontWeight=\"600\">\r\n                  {currentTooltip.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">{'N = ' + currentTooltip.count}</Typography>\r\n              </div>\r\n              <div className={classes.tooltipContent}>\r\n                {currentTooltip.diversity.map((item, index) => {\r\n                  return (\r\n                    <div key={`tooltip-content-${index}`} className={classes.tooltipItemWrapper}>\r\n                      <Box\r\n                        className={classes.tooltipItemBox}\r\n                        style={{\r\n                          backgroundColor: item.color\r\n                        }}\r\n                      />\r\n                      <div className={classes.tooltipItemStats}>\r\n                        <Typography variant=\"body2\" fontWeight=\"500\">\r\n                          {item.label}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" noWrap>{`N = ${item.count}`}</Typography>\r\n                        <Typography fontSize=\"10px\">{`${item.percentage}%`}</Typography>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.noYearSelected}>Click on a item to see the details</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  convergenceGraph: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    borderTop: '1px solid rgba(0, 0, 0, 0.12)'\r\n  },\r\n  selectsWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    rowGap: '8px'\r\n  },\r\n  selectWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  selectInput: {\r\n    fontSize: '14px !important',\r\n    fontWeight: '600 !important',\r\n    padding: '8px 32px 8px 8px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '14px'\r\n    }\r\n  },\r\n  graphWrapper: {\r\n    paddingTop: '16px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '16px',\r\n    height: '560px',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }\r\n  },\r\n  graph: {\r\n    height: '100%',\r\n    width: '70%',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%'\r\n    },\r\n\r\n    '@media (max-width: 500px)': {\r\n      width: '100%',\r\n      height: '460px'\r\n    }\r\n  },\r\n  graphLabel: {\r\n    textAnchor: 'middle'\r\n  },\r\n  legendWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflowX: 'auto',\r\n    flexWrap: 'wrap',\r\n    height: '110px',\r\n    gap: '4px',\r\n    padding: '8px 0px 4px',\r\n    marginLeft: '60px',\r\n    marginTop: '20px'\r\n  },\r\n  legendItemWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    columnGap: '4px',\r\n    paddingRight: '8px'\r\n  },\r\n  chartTooltipLabel: {\r\n    backgroundColor: '#fff',\r\n    padding: '8px',\r\n    border: 'solid rgba(0, 0, 0, 0.25) 1px'\r\n  },\r\n  colorCircle: {\r\n    height: '10px',\r\n    width: '10px',\r\n    borderRadius: '50%',\r\n    minWidth: '10px'\r\n  },\r\n  tooltipWrapper: {\r\n    width: '30%',\r\n    borderRadius: '6px',\r\n    backgroundColor: '#E5E5E5',\r\n    overflowY: 'auto',\r\n\r\n    '@media (max-width: 1000px)': {\r\n      width: '100%',\r\n      height: '250px'\r\n    }\r\n  },\r\n  tooltip: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  tooltipTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    alignItems: 'flex-end',\r\n    padding: '16px 16px 8px',\r\n    borderBottom: '1px solid #fff'\r\n  },\r\n  tooltipContent: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    flexWrap: 'wrap',\r\n    gap: '16px',\r\n    padding: '16px',\r\n    overflowY: 'auto'\r\n  },\r\n  tooltipItemWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    columnGap: '8px',\r\n    gridColumn: 'span 6'\r\n  },\r\n  tooltipItemBox: {\r\n    height: '18px',\r\n    width: '18px',\r\n    border: 'solid rgb(0, 0, 0, 0.75) 0.5px',\r\n    flex: 'none'\r\n  },\r\n  tooltipItemStats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n\r\n    '& .MuiTypography-body2': {\r\n      overflowWrap: 'anywhere'\r\n    }\r\n  },\r\n  noBubbleSelected: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, CardContent, MenuItem, Select, Typography } from '@mui/material';\r\nimport { useStyles } from './ConvergenceGraphMUI';\r\nimport {\r\n  CartesianGrid,\r\n  Label,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip as ChartTooltip,\r\n  ScatterChart,\r\n  Scatter,\r\n  ZAxis,\r\n  Cell\r\n} from 'recharts';\r\nimport { useAppDispatch, useAppSelector } from '../../../../stores/hooks';\r\nimport { /*setConvergenceColourVariable,*/ setConvergenceGroupVariable, setResetBool } from '../../../../stores/slices/graphSlice';\r\nimport { useEffect, useState } from 'react';\r\nimport { hoverColor } from '../../../../util/colorHelper';\r\nimport { isTouchDevice } from '../../../../util/isTouchDevice';\r\nimport { variablesOptions } from '../../../../util/convergenceVariablesOptions';\r\n\r\nexport const ConvergenceGraph = () => {\r\n  const classes = useStyles();\r\n  const [currentTooltip, setCurrentTooltip] = useState(null);\r\n  const [plotChart, setPlotChart] = useState(() => {});\r\n\r\n  const dispatch = useAppDispatch();\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const convergenceData = useAppSelector((state) => state.graph.convergenceData);\r\n  const convergenceGroupVariable = useAppSelector((state) => state.graph.convergenceGroupVariable);\r\n  // const convergenceColourVariable = useAppSelector((state) => state.graph.convergenceColourVariable);\r\n  const convergenceColourPallete = useAppSelector((state) => state.graph.convergenceColourPallete);\r\n  const resetBool = useAppSelector((state) => state.graph.resetBool);\r\n  useEffect(() => {\r\n    dispatch(setResetBool(true));\r\n    setCurrentTooltip(null);\r\n  }, [convergenceData]);\r\n\r\n  function handleChangeGroupVariable(event) {\r\n    setCurrentTooltip(null);\r\n    dispatch(setConvergenceGroupVariable(event.target.value));\r\n  }\r\n\r\n  // function handleChangeColourVariable(event) {\r\n  //   setCurrentTooltip(null);\r\n  //   dispatch(setConvergenceColourVariable(event.target.value));\r\n  // }\r\nuseEffect(()=>{\r\n    if(resetBool){\r\n      setCurrentTooltip(null);\r\n      dispatch(setResetBool(true));\r\n    }\r\n  });\r\n  function handleClickChart(name) {\r\n    const data = convergenceData.find((item) => item.name === name);\r\n\r\n    if (data) {\r\n      const currentData = structuredClone(data);\r\n      setCurrentTooltip({ ...currentData });\r\n      dispatch(setResetBool(false));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (canGetData) {\r\n      setPlotChart(() => {\r\n        return (\r\n          <ResponsiveContainer width=\"100%\">\r\n            <ScatterChart cursor={isTouchDevice() ? 'default' : 'pointer'}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              {/* <XAxis dataKey=\"name\" interval=\"preserveStartEnd\" tick={{ fontSize: 14 }} /> */}\r\n              <XAxis\r\n                dataKey=\"x\"\r\n                allowDecimals={false}\r\n                type=\"number\"\r\n                interval=\"preserveStartEnd\"\r\n                tick={{ fontSize: 14 }}\r\n                tickCount={10}\r\n                domain={[0, 5]}\r\n                padding={{ left: 20, right: 20 }}\r\n              >\r\n                <Label position=\"bottom\" className={classes.graphLabel}>\r\n                  Mean virulence score\r\n                </Label>\r\n              </XAxis>\r\n              <YAxis\r\n                type=\"number\"\r\n                dataKey=\"y\"\r\n                allowDataOverflow={true}\r\n                domain={[0, 3]}\r\n                padding={{ top: 20, bottom: 20 }}\r\n              >\r\n                <Label angle={-90} position=\"insideLeft\" className={classes.graphLabel}>\r\n                  Mean resistance score\r\n                </Label>\r\n              </YAxis>\r\n              <ZAxis type=\"number\" dataKey=\"z\" range={[50, 1000]} />\r\n\r\n              <Legend\r\n                content={() => {\r\n                  return (\r\n                    <div className={classes.legendWrapper}>\r\n                      {Object.keys(convergenceColourPallete).map((key, index) => {\r\n                        return (\r\n                          <div key={`convergence-legend-${index}`} className={classes.legendItemWrapper}>\r\n                            <Box\r\n                              className={classes.colorCircle}\r\n                              style={{ backgroundColor: convergenceColourPallete[key] }}\r\n                            />\r\n                            <Typography variant=\"caption\">{key}</Typography>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <ChartTooltip\r\n                cursor={{ fill: hoverColor }}\r\n                content={({ payload, active }) => {\r\n                  if (payload !== null && active) {\r\n                    return <div className={classes.chartTooltipLabel}>{payload[0]?.payload.name}</div>;\r\n                  }\r\n                  return null;\r\n                }}\r\n              />\r\n\r\n              <Scatter name=\"combinations\" data={convergenceData}>\r\n                {convergenceData.map((option, index) => (\r\n                  <Cell\r\n                    name={option.name}\r\n                    onClick={() => handleClickChart(option.name)}\r\n                    key={`combination-cell-${index}`}\r\n                    fill={convergenceColourPallete[option.colorLabel]}\r\n                  />\r\n                ))}\r\n              </Scatter>\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        );\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [convergenceData]);\r\n\r\n  return (\r\n    <CardContent className={classes.convergenceGraph}>\r\n      <div className={classes.selectsWrapper}>\r\n        <div className={classes.selectWrapper}>\r\n          <Typography variant=\"caption\">Group variable</Typography>\r\n          <Select\r\n            value={convergenceGroupVariable}\r\n            onChange={handleChangeGroupVariable}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n            disabled={organism === 'none'}\r\n          >\r\n            {variablesOptions.map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'convergence-group-variable'} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div>\r\n        {/* <div className={classes.selectWrapper}>\r\n          <Typography variant=\"caption\">Colour variable</Typography>\r\n          <Select\r\n            value={convergenceColourVariable}\r\n            onChange={handleChangeColourVariable}\r\n            inputProps={{ className: classes.selectInput }}\r\n            MenuProps={{ classes: { list: classes.selectMenu } }}\r\n            disabled={organism === 'none'}\r\n          >\r\n            {variablesOptions.map((option, index) => {\r\n              return (\r\n                <MenuItem key={index + 'convergence-colour-variable'} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </div> */}\r\n      </div>\r\n      <div className={classes.graphWrapper}>\r\n        <div className={classes.graph} id=\"CVM\">\r\n          {plotChart}\r\n        </div>\r\n        <div className={classes.tooltipWrapper}>\r\n          {currentTooltip ? (\r\n            <div className={classes.tooltip}>\r\n              <div className={classes.tooltipTitle}>\r\n                <Typography variant=\"h5\" fontWeight=\"600\">\r\n                  {currentTooltip.name}\r\n                </Typography>\r\n                {/* <Typography noWrap variant=\"subtitle1\" minWidth=\"90px\" textAlign=\"end\"> */}\r\n                <Typography variant=\"subtitle1\">{'N = ' + currentTooltip.z}</Typography>\r\n              </div>\r\n              <div className={classes.tooltipContent}>\r\n                <div className={classes.tooltipItemWrapper}>\r\n                  <Box\r\n                    className={classes.tooltipItemBox}\r\n                    style={{\r\n                      backgroundColor: 'rgb(24, 85, 183)'\r\n                    }}\r\n                  />\r\n                  <div className={classes.tooltipItemStats}>\r\n                    <Typography variant=\"body2\" fontWeight=\"500\">\r\n                      Mean virulence score\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" noWrap>\r\n                      {currentTooltip.x}\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <div className={classes.tooltipItemWrapper}>\r\n                  <Box\r\n                    className={classes.tooltipItemBox}\r\n                    style={{\r\n                      backgroundColor: 'rgb(187, 54, 60)'\r\n                    }}\r\n                  />\r\n                  <div className={classes.tooltipItemStats}>\r\n                    <Typography variant=\"body2\" fontWeight=\"500\">\r\n                      Mean resistance score\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" noWrap>\r\n                      {currentTooltip.y}\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.noBubbleSelected}>Click on a bubble to see the details</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  );\r\n};\r\n","import {\r\n  Alert,\r\n  Card,\r\n  CardActions,\r\n  CircularProgress,\r\n  Collapse,\r\n  IconButton,\r\n  Snackbar,\r\n  Tooltip,\r\n  Typography,\r\n  useMediaQuery\r\n} from '@mui/material';\r\nimport { useStyles } from './GraphsMUI';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { CameraAlt, ExpandLess, ExpandMore } from '@mui/icons-material';\r\nimport { setCollapse } from '../../../stores/slices/graphSlice';\r\nimport { DeterminantsGraph } from './DeterminantsGraph';\r\nimport { FrequenciesGraph } from './FrequenciesGraph';\r\nimport { DrugResistanceGraph } from './DrugResistanceGraph';\r\nimport { DistributionGraph } from './DistributionGraph';\r\nimport { useState } from 'react';\r\nimport { imgOnLoadPromise } from '../../../util/imgOnLoadPromise';\r\nimport domtoimage from 'dom-to-image';\r\nimport LogoImg from '../../../assets/img/logo-prod.png';\r\nimport download from 'downloadjs';\r\nimport { drugsST, drugsKP } from '../../../util/drugs';\r\nimport { colorsForKODiversityGraph, getColorForDrug } from './graphColorHelper';\r\nimport { colorForDrugClassesKP, colorForDrugClassesST, getColorForGenotype } from '../../../util/colorHelper';\r\nimport { TrendsKPGraph } from './TrendsKPGraph';\r\nimport { isTouchDevice } from '../../../util/isTouchDevice';\r\nimport { graphCards } from '../../../util/graphCards';\r\nimport { KODiversityGraph } from './KODiversityGraph';\r\nimport { ConvergenceGraph } from './ConvergenceGraph';\r\nimport { variablesOptions } from '../../../util/convergenceVariablesOptions';\r\n\r\nexport const Graphs = () => {\r\n  const classes = useStyles();\r\n  const matches500 = useMediaQuery('(max-width:500px)');\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [chartLoadings, setCharLoadings] = useState({\r\n    frequencies: false,\r\n    drugResistance: false,\r\n    determinants: false,\r\n    distribution: false,\r\n    trendsKP: false\r\n  });\r\n\r\n  const dispatch = useAppDispatch();\r\n  const collapses = useAppSelector((state) => state.graph.collapses);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const actualCountry = useAppSelector((state) => state.dashboard.actualCountry);\r\n  const determinantsGraphDrugClass = useAppSelector((state) => state.graph.determinantsGraphDrugClass);\r\n  const trendsKPGraphDrugClass = useAppSelector((state) => state.graph.trendsKPGraphDrugClass);\r\n  const KODiversityGraphView = useAppSelector((state) => state.graph.KODiversityGraphView);\r\n  const globalOverviewLabel = useAppSelector((state) => state.dashboard.globalOverviewLabel);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n  const colorPallete = useAppSelector((state) => state.dashboard.colorPallete);\r\n  const convergenceGroupVariable = useAppSelector((state) => state.graph.convergenceGroupVariable);\r\n  const convergenceColourVariable = useAppSelector((state) => state.graph.convergenceColourVariable);\r\n  const convergenceColourPallete = useAppSelector((state) => state.graph.convergenceColourPallete);\r\n\r\n  function getOrganismCards() {\r\n    return graphCards.filter((card) => card.organisms.includes(organism));\r\n  }\r\n\r\n  function getGenotypeColor(genotype) {\r\n    return organism === 'typhi' ? getColorForGenotype(genotype) : colorPallete[genotype] || '#F5F4F6';\r\n  }\r\n\r\n  function getDrugClassesBars() {\r\n    switch (organism) {\r\n      case 'typhi':\r\n        return colorForDrugClassesST[determinantsGraphDrugClass];\r\n      default:\r\n        return colorForDrugClassesKP[determinantsGraphDrugClass];\r\n    }\r\n  }\r\n\r\n  function drawLegend({\r\n    legendData,\r\n    context,\r\n    factor,\r\n    mobileFactor,\r\n    yPosition,\r\n    isGenotype = false,\r\n    isDrug = false,\r\n    isVariable = false,\r\n    xSpace\r\n  }) {\r\n    legendData.forEach((legend, i) => {\r\n      const yFactor = (i % factor) * 24;\r\n      const xFactor = Math.floor(i / factor) * xSpace;\r\n\r\n      context.fillStyle = isGenotype\r\n        ? getGenotypeColor(legend)\r\n        : isDrug\r\n        ? getColorForDrug(legend)\r\n        : isVariable\r\n        ? convergenceColourPallete[legend]\r\n        : legend.color;\r\n      context.beginPath();\r\n      context.arc(102 + xFactor, yPosition - mobileFactor + yFactor, 5, 0, 2 * Math.PI);\r\n      context.fill();\r\n      context.closePath();\r\n      context.fillStyle = 'black';\r\n      context.fillText(\r\n        isGenotype || isDrug || isVariable ? legend : legend.name,\r\n        111 + xFactor,\r\n        yPosition + 4 - mobileFactor + yFactor\r\n      );\r\n    });\r\n  }\r\n\r\n  async function handleClickDownload(event, card) {\r\n    event.stopPropagation();\r\n    handleLoading(card.collapse, true);\r\n\r\n    try {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n\r\n      const graph = document.getElementById(card.id);\r\n      const graphImg = document.createElement('img');\r\n      const graphImgPromise = imgOnLoadPromise(graphImg);\r\n\r\n      graphImg.src = await domtoimage.toPng(graph, { quality: 0.1, bgcolor: 'white' });\r\n      await graphImgPromise;\r\n\r\n      let heightFactor = 0,\r\n        drugClassesBars,\r\n        drugClassesFactor,\r\n        genotypesFactor,\r\n        variablesFactor;\r\n\r\n      if (['RFWG', 'DRT'].includes(card.id)) {\r\n        heightFactor = 250;\r\n      }\r\n      if (['RDWG', 'CERDT'].includes(card.id)) {\r\n        drugClassesBars = getDrugClassesBars();\r\n        drugClassesFactor = Math.ceil(drugClassesBars.length / 4);\r\n        heightFactor += drugClassesFactor * 22;\r\n      }\r\n      if (card.id === 'GD') {\r\n        genotypesFactor = Math.ceil(genotypesForFilter.length / 9);\r\n        heightFactor += genotypesFactor * 22;\r\n      }\r\n      if (card.id === 'CERDT') {\r\n        genotypesFactor = Math.ceil(genotypesForFilter.length / 9);\r\n        heightFactor += genotypesFactor * 22 + 50;\r\n      }\r\n      if (card.id === 'CVM') {\r\n        variablesFactor = Math.ceil(Object.keys(convergenceColourPallete).length / 3);\r\n        heightFactor += variablesFactor * 22;\r\n      }\r\n\r\n      canvas.width = 922;\r\n      canvas.height = graphImg.height + 220 + heightFactor;\r\n\r\n      ctx.fillStyle = 'white';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      const logo = document.createElement('img');\r\n      const logoPromise = imgOnLoadPromise(logo);\r\n      logo.src = LogoImg;\r\n      await logoPromise;\r\n\r\n      ctx.drawImage(logo, 10, 10, 155, 80);\r\n      ctx.drawImage(graphImg, canvas.width / 2 - graphImg.width / 2, 220);\r\n\r\n      ctx.font = 'bold 18px Montserrat';\r\n      ctx.fillStyle = 'black';\r\n      ctx.textAlign = 'center';\r\n      ctx.fillText(card.title, canvas.width / 2, 50);\r\n\r\n      ctx.font = '12px Montserrat';\r\n      ctx.fillText(card.description.join(' / '), canvas.width / 2, 72);\r\n\r\n      ctx.font = '14px Montserrat';\r\n      ctx.fillText(`Organism: ${globalOverviewLabel.fullLabel}`, canvas.width / 2, 110);\r\n      ctx.fillText(`Dataset: ${dataset}`, canvas.width / 2, 132);\r\n      ctx.fillText(`Time period: ${actualTimeInitial} to ${actualTimeFinal}`, canvas.width / 2, 154);\r\n      ctx.fillText(`Country: ${actualCountry}`, canvas.width / 2, 176);\r\n      if (card.id === 'RDWG') ctx.fillText(`Drug Class: ${determinantsGraphDrugClass}`, canvas.width / 2, 198);\r\n      if (card.id === 'CERDT') ctx.fillText(`Drug Class: ${trendsKPGraphDrugClass}`, canvas.width / 2, 198);\r\n      if (card.id === 'KO') ctx.fillText(`Data view: ${KODiversityGraphView}`, canvas.width / 2, 198);\r\n      if (card.id === 'CVM') {\r\n        const group = variablesOptions.find((option) => option.value === convergenceGroupVariable).label;\r\n        const colour = variablesOptions.find((option) => option.value === convergenceColourVariable).label;\r\n        ctx.fillText(`Group variable: ${group} / Colour variable: ${colour}`, canvas.width / 2, 198);\r\n      }\r\n\r\n      ctx.fillStyle = 'white';\r\n      ctx.textAlign = 'start';\r\n      ctx.font = '12px Montserrat';\r\n\r\n      const mobileFactor = matches500 ? 100 : 0;\r\n      if (['RFWG', 'DRT'].includes(card.id)) {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n        const legendDrugs = organism === 'typhi' ? drugsST : drugsKP;\r\n\r\n        drawLegend({\r\n          legendData: legendDrugs,\r\n          context: ctx,\r\n          factor: 5,\r\n          mobileFactor,\r\n          yPosition: 670,\r\n          xSpace: 330,\r\n          isDrug: true\r\n        });\r\n      } else if (card.id === 'RDWG') {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n\r\n        drawLegend({\r\n          legendData: drugClassesBars,\r\n          context: ctx,\r\n          factor: drugClassesFactor,\r\n          mobileFactor,\r\n          yPosition: 670,\r\n          xSpace: 208\r\n        });\r\n      } else if (card.id === 'GD') {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n\r\n        drawLegend({\r\n          legendData: genotypesForFilter,\r\n          context: ctx,\r\n          factor: genotypesFactor,\r\n          mobileFactor,\r\n          yPosition: 670,\r\n          isGenotype: true,\r\n          xSpace: 87\r\n        });\r\n      } else if (card.id === 'CERDT') {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n\r\n        ctx.fillStyle = 'black';\r\n        ctx.fillText('GENES:', 98, 675);\r\n        drawLegend({\r\n          legendData: drugClassesBars,\r\n          context: ctx,\r\n          factor: drugClassesFactor,\r\n          mobileFactor,\r\n          yPosition: 695,\r\n          xSpace: 208\r\n        });\r\n\r\n        ctx.fillStyle = 'black';\r\n        ctx.fillText('GENOTYPES:', 98, 1310);\r\n        drawLegend({\r\n          legendData: genotypesForFilter,\r\n          context: ctx,\r\n          factor: genotypesFactor,\r\n          mobileFactor,\r\n          yPosition: 1330,\r\n          isGenotype: true,\r\n          xSpace: 87\r\n        });\r\n      } else if (card.id === 'KO') {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n\r\n        drawLegend({\r\n          legendData: colorsForKODiversityGraph,\r\n          context: ctx,\r\n          factor: 5,\r\n          mobileFactor,\r\n          yPosition: 670,\r\n          xSpace: 330\r\n        });\r\n      } else if (card.id === 'CVM') {\r\n        ctx.fillRect(0, 660 - mobileFactor, canvas.width, canvas.height);\r\n\r\n        drawLegend({\r\n          legendData: Object.keys(convergenceColourPallete),\r\n          context: ctx,\r\n          factor: variablesFactor,\r\n          mobileFactor,\r\n          yPosition: 670,\r\n          xSpace: 270,\r\n          isVariable: true\r\n        });\r\n      }\r\n\r\n      const base64 = canvas.toDataURL();\r\n      await download(base64, `AMRnet - ${globalOverviewLabel.fullLabel} - ${card.title}.png`);\r\n    } catch {\r\n      setShowAlert(true);\r\n    } finally {\r\n      handleLoading(card.collapse, false);\r\n    }\r\n  }\r\n\r\n  function handleLoading(collapse, value) {\r\n    setCharLoadings({ ...chartLoadings, [collapse]: value });\r\n  }\r\n\r\n  function handleCloseAlert() {\r\n    setShowAlert(false);\r\n  }\r\n\r\n  function handleExpandClick(event, key) {\r\n    dispatch(setCollapse({ key, value: !collapses[key] }));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.cardsWrapper}>\r\n      {getOrganismCards().map((card, index) => {\r\n        return (\r\n          <Card key={`graph-card-${index}`} className={classes.card}>\r\n            <CardActions\r\n              disableSpacing\r\n              className={classes.cardActions}\r\n              onClick={(event) => handleExpandClick(event, card.collapse)}\r\n              style={{ cursor: isTouchDevice() ? 'default' : 'pointer' }}\r\n            >\r\n              <div className={classes.titleWrapper}>\r\n                {card.icon}\r\n                <div className={classes.title}>\r\n                  <Typography fontSize=\"18px\" fontWeight=\"500\">\r\n                    {card.title}\r\n                  </Typography>\r\n                  {collapses[card.collapse] && (\r\n                    <Typography fontSize=\"10px\" component=\"span\">\r\n                      {card.description.map((d, i) => (\r\n                        <div key={`description-${i}`}>{d}</div>\r\n                      ))}\r\n                    </Typography>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className={classes.actionsWrapper}>\r\n                {collapses[card.collapse] && (\r\n                  <Tooltip title=\"Download Chart as PNG\" placement=\"top\">\r\n                    <span>\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        onClick={(event) => handleClickDownload(event, card)}\r\n                        disabled={organism === 'none' || chartLoadings[card.collapse]}\r\n                      >\r\n                        {chartLoadings[card.collapse] ? <CircularProgress color=\"primary\" size={24} /> : <CameraAlt />}\r\n                      </IconButton>\r\n                    </span>\r\n                  </Tooltip>\r\n                )}\r\n                <IconButton>{collapses[card.collapse] ? <ExpandLess /> : <ExpandMore />}</IconButton>\r\n              </div>\r\n            </CardActions>\r\n            <Collapse in={collapses[card.collapse]} timeout=\"auto\">\r\n              {card.collapse === 'frequencies' && <FrequenciesGraph />}\r\n              {card.collapse === 'drugResistance' && <DrugResistanceGraph />}\r\n              {card.collapse === 'determinants' && <DeterminantsGraph />}\r\n              {card.collapse === 'distribution' && <DistributionGraph />}\r\n              {card.collapse === 'trendsKP' && <TrendsKPGraph />}\r\n              {card.collapse === 'KODiversity' && <KODiversityGraph />}\r\n              {card.collapse === 'convergence' && <ConvergenceGraph />}\r\n            </Collapse>\r\n          </Card>\r\n        );\r\n      })}\r\n      <Snackbar open={showAlert} autoHideDuration={5000} onClose={handleCloseAlert}>\r\n        <Alert onClose={handleCloseAlert} severity=\"error\" sx={{ width: '100%' }}>\r\n          Something went wrong with the download, please try again later.\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n","// Drug rules for Salmonella, where the column has to have one of the values to validate the rule. For frequencies and\r\n// drug resistance graphs\r\nexport const drugRulesST = [\r\n  { key: 'Ampicillin', columnID: 'blaTEM-1D', values: ['1'] },\r\n  { key: 'Azithromycin', columnID: 'azith_pred_pheno', values: ['AzithR'] },\r\n  { key: 'Chloramphenicol', columnID: 'chloramphenicol_category', values: ['ChlR'] },\r\n  // { key: 'Co-trimoxazole', columnID: 'co_trim', values: ['1'] },\r\n  { key: 'Trimethoprim-sulfamethoxazole', columnID: 'co_trim', values: ['1'] },\r\n  // { key: 'ESBL', columnID: 'ESBL_category', values: ['ESBL'] },\r\n  { key: 'Ceftriaxone', columnID: 'ESBL_category', values: ['ESBL'] },\r\n  // { key: 'Fluoroquinolones (CipNS)', columnID: 'cip_pred_pheno', values: ['CipR', 'CipI'] },\r\n  { key: 'Ciprofloxacin NS', columnID: 'cip_pred_pheno', values: ['CipNS'] },\r\n  { key: 'Sulphonamides', columnID: 'sul_any', values: ['1'] },\r\n  { key: 'Susceptible', columnID: 'amr_category', values: ['No AMR detected'] },\r\n  { key: 'Tetracyclines', columnID: 'tetracycline_category', values: ['TetR'] },\r\n  { key: 'Trimethoprim', columnID: 'dfra_any', values: ['1'] }\r\n];\r\n\r\nexport const drugRulesForDrugResistanceGraphST = [\r\n  { key: 'MDR', columnID: 'MDR', values: ['MDR'] },\r\n  { key: 'XDR', columnID: 'XDR', values: ['XDR'] }\r\n];\r\n\r\n// Drug rules for Klebsiella, where the column has to be any value other than '-' to validate the rule. For frequencies\r\n// and drug resistance graphs\r\nexport const drugRulesKP = [\r\n  { key: 'Aminoglycosides', columnIDs: ['AGly_acquired'] },\r\n  { key: 'Carbapenems', columnIDs: ['Bla_Carb_acquired'] },\r\n  { key: '3rd gen cephalosporins (3GCs)', columnIDs: ['Bla_ESBL_acquired'] },\r\n  { key: '3rd gen cephalosporins (3GCs) + β-lactamase inhibitors', columnIDs: ['Bla_ESBL_inhR_acquired'] },\r\n  { key: 'Colistin', columnIDs: ['Col_acquired', 'Col_mutations'] },\r\n  { key: 'Fluoroquinolones', columnIDs: ['Flq_acquired', 'Flq_mutations'] },\r\n  { key: 'Fosfomycin', columnIDs: ['Fcyn_acquired'] },\r\n  { key: 'Penicillins', columnIDs: ['Bla_chr'] },\r\n  { key: 'β-lactamase inhibitors', columnIDs: ['Bla_inhR_acquired'] },\r\n  { key: 'Phenicols', columnIDs: ['Phe_acquired'] },\r\n  { key: 'Sulfonamides', columnIDs: ['Sul_acquired'] },\r\n  { key: 'Tetracycline', columnIDs: ['Tet_acquired'] },\r\n  { key: 'Tigecycline', columnIDs: ['Tgc_acquired'] },\r\n  { key: 'Trimethoprim', columnIDs: ['Tmt_acquired'] }\r\n];\r\n\r\n// Salmonella drug classes rules for determinants graph\r\nexport const drugClassesRulesST = {\r\n  Ampicillin: [\r\n    {\r\n      name: 'blaTEM-1D',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'blaTEM-1D', value: '1' }]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'blaTEM-1D', value: '0' }]\r\n    }\r\n  ],\r\n  Azithromycin: [\r\n    {\r\n      name: 'acrB_R717Q + acrB_R717L',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'azith_pred_pheno', value: 'AzithR' },\r\n        { columnID: 'acrB_R717Q', value: '1' },\r\n        { columnID: 'acrB_R717L', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'acrB_R717Q',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'azith_pred_pheno', value: 'AzithR' },\r\n        { columnID: 'acrB_R717Q', value: '1' },\r\n        { columnID: 'acrB_R717L', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'acrB_R717L',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'azith_pred_pheno', value: 'AzithR' },\r\n        { columnID: 'acrB_R717L', value: '1' },\r\n        { columnID: 'acrB_R717Q', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'azith_pred_pheno', value: 'AzithS' }]\r\n    }\r\n  ],\r\n  Chloramphenicol: [\r\n    {\r\n      name: 'catA1 + cmlA',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'chloramphenicol_category', value: 'ChlR' },\r\n        { columnID: 'catA1', value: '1' },\r\n        { columnID: 'cmlA', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'catA1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'chloramphenicol_category', value: 'ChlR' },\r\n        { columnID: 'catA1', value: '1' },\r\n        { columnID: 'cmlA', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'cmlA',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'chloramphenicol_category', value: 'ChlR' },\r\n        { columnID: 'cmlA', value: '1' },\r\n        { columnID: 'catA1', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'chloramphenicol_category', value: 'ChlS' }]\r\n    }\r\n  ],\r\n  // 'Co-trimoxazole': [\r\n  'Trimethoprim-sulfamethoxazole': [\r\n    {\r\n      name: 'dfrA7 + dfrA14 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA7 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA7 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA7 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA14 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '0' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA14 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '0' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA14 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA7', value: '0' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA1 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA1', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA1 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA1', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA1', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA5 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA5', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA5 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA5', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA5 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA5', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA15 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA15', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA15 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA15', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA15 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA15', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA17 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA17', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA17 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA17', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA17 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA17', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA18 + sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA18', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA18 + sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA18', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA18 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'co_trim', value: '1' },\r\n        { columnID: 'dfrA18', value: '1' },\r\n        { columnID: 'sul1', value: '0' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'co_trim', value: '0' }]\r\n    }\r\n  ],\r\n  // ESBL: [\r\n  Ceftriaxone: [\r\n    {\r\n      name: 'blaCTX-M-15',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'ESBL_category', value: 'ESBL' },\r\n        { columnID: 'blaCTX-M-15_23', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'blaOXA-7',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'ESBL_category', value: 'ESBL' },\r\n        { columnID: 'blaOXA-7', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'blaSHV-12',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'ESBL_category', value: 'ESBL' },\r\n        { columnID: 'blaSHV-12', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'blaCTX-M-55',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'ESBL_category', value: 'ESBL' },\r\n        { columnID: 'blaCTX-M-55', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'ESBL_category', value: 'Non-ESBL' }]\r\n    }\r\n  ],\r\n  // 'Fluoroquinolones (CipNS)': [\r\n  'Ciprofloxacin NS': [\r\n    {\r\n      name: '3_QRDR + qnrS (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '3_QRDR + qnrS' }]\r\n    },\r\n    {\r\n      name: '3_QRDR + qnrB (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '3_QRDR + qnrB' }]\r\n    },\r\n    {\r\n      name: '3_QRDR (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '3_QRDR' }]\r\n    },\r\n    {\r\n      name: '2_QRDR + qnrS (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '2_QRDR + qnrS' }]\r\n    },\r\n    {\r\n      name: '2_QRDR + qnrB (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '2_QRDR + qnrB' }]\r\n    },\r\n    {\r\n      name: '2_QRDR (CipR)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '2_QRDR' }]\r\n    },\r\n    {\r\n      name: '1_QRDR + qnrS (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '1_QRDR + qnrS' }]\r\n    },\r\n    {\r\n      name: '1_QRDR + qnrB (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '1_QRDR + qnrB' }]\r\n    },\r\n    {\r\n      name: '1_QRDR (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '1_QRDR' }]\r\n    },\r\n    {\r\n      name: '0_QRDR + qnrS (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '0_QRDR + qnrS' }]\r\n    },\r\n    {\r\n      name: '0_QRDR + qnrB (CipNS)',\r\n      susceptible: false,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '0_QRDR + qnrB' }]\r\n    },\r\n    {\r\n      name: 'None (CipS)',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'dcs_mechanisms', value: '0_QRDR' }]\r\n    }\r\n  ],\r\n  Sulphonamides: [\r\n    {\r\n      name: 'sul1 + sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'sul_any', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'sul1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'sul_any', value: '1' },\r\n        { columnID: 'sul1', value: '1' },\r\n        { columnID: 'sul2', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'sul2',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'sul_any', value: '1' },\r\n        { columnID: 'sul2', value: '1' },\r\n        { columnID: 'sul1', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'sul_any', value: '0' }]\r\n    }\r\n  ],\r\n  Tetracyclines: [\r\n    {\r\n      name: 'tetA(A)',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'tetracycline_category', value: 'TetR' },\r\n        { columnID: 'tetA(A)', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'tetA(B)',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'tetracycline_category', value: 'TetR' },\r\n        { columnID: 'tetA(B)', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'tetA(C)',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'tetracycline_category', value: 'TetR' },\r\n        { columnID: 'tetA(C)', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'tetA(D)',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'tetracycline_category', value: 'TetR' },\r\n        { columnID: 'tetA(D)', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'tetracycline_category', value: 'TetS' }]\r\n    }\r\n  ],\r\n  Trimethoprim: [\r\n    {\r\n      name: 'dfrA7 + dfrA14',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '1' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA7',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA7', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA14',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA14', value: '1' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA1',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA1', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA5',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA5', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA15',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA15', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA17',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA17', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'dfrA18',\r\n      susceptible: false,\r\n      rules: [\r\n        { columnID: 'dfra_any', value: '1' },\r\n        { columnID: 'dfrA18', value: '1' },\r\n        { columnID: 'dfrA14', value: '0' },\r\n        { columnID: 'dfrA7', value: '0' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'None',\r\n      susceptible: true,\r\n      rules: [{ columnID: 'dfra_any', value: '0' }]\r\n    }\r\n  ]\r\n};\r\n\r\n// Klebsiella drug classes rules for determinants graph\r\nexport const drugClassesRulesKP = {\r\n  Carbapenems: 'Bla_Carb_acquired',\r\n  ESBL: 'Bla_ESBL_acquired'\r\n};\r\n","import { drugRulesForDrugResistanceGraphST, drugRulesKP } from '../../util/drugClassesRules';\r\nimport { drugClassesRulesST, drugClassesRulesKP, drugRulesST } from '../../util/drugClassesRules';\r\n\r\n// This filter is called after either dataset, initialYear, finalYear or country changes and if reset button is pressed.\r\n// And it returns the data filtered by the variables said before, also the list of unique genotypes, count of genotypes\r\n// and count of genomes.\r\nexport function filterData({ data, dataset, actualTimeInitial, actualTimeFinal, organism, actualCountry }) {\r\n  const checkDataset = (item) => dataset === 'All' || item.TRAVEL === dataset.toLowerCase();\r\n  const checkTime = (item) => {\r\n    return item.DATE >= actualTimeInitial && item.DATE <= actualTimeFinal;\r\n  };\r\n\r\n  const newData = data.filter((x) => checkDataset(x) && checkTime(x));\r\n  const genotypes = [...new Set(newData.map((x) => x.GENOTYPE))];\r\n\r\n  if (organism === 'typhi') {\r\n    genotypes.sort((a, b) => a.localeCompare(b));\r\n  } else {\r\n    genotypes.sort((a, b) => a - b);\r\n  }\r\n\r\n  let genomesCount = newData.length;\r\n  let genotypesCount = genotypes.length;\r\n  let listPMID = [];\r\n\r\n  if (actualCountry !== 'All') {\r\n    const countryData = newData.filter((x) => getCountryDisplayName(x.COUNTRY_ONLY) === actualCountry);\r\n    genomesCount = countryData.length;\r\n    listPMID = [...new Set(countryData.map((x) => x.PMID))];\r\n\r\n    const countryGenotypes = [...new Set(countryData.map((x) => x.GENOTYPE))];\r\n    genotypesCount = countryGenotypes.length;\r\n  }\r\n\r\n  return {\r\n    data: newData,\r\n    genotypes,\r\n    genomesCount,\r\n    genotypesCount,\r\n    listPMID\r\n  };\r\n}\r\n\r\n// Adjust the country names to its correct name\r\nexport function getCountryDisplayName(country) {\r\n  switch (country) {\r\n    case 'Democratic Republic of the Congo':\r\n      return 'Dem. Rep. Congo';\r\n    case 'Central African Republic':\r\n      return 'Central African Rep.';\r\n    case 'Ivory Coast':\r\n    case \"Cote d'Ivoire\":\r\n      return \"Côte d'Ivoire\";\r\n    case 'East Timor':\r\n      return 'Timor-Leste';\r\n    case 'State of Palestine':\r\n      return 'Palestine';\r\n    case 'Dominican Republic':\r\n      return 'Dominican Rep.';\r\n    case 'Viet Nam':\r\n      return 'Vietnam';\r\n    case 'USA':\r\n      return 'United States of America';\r\n    case 'Cape Verde':\r\n      return 'Cabo Verde';\r\n    case 'Turks and Caicos Islands':\r\n      return 'Turks and Caicos Is.';\r\n    case 'United Kingdom (England/Wales/N. Ireland)':\r\n    case 'United Kingdom (Scotland)':\r\n    case 'UK':\r\n      return 'United Kingdom';\r\n    case 'The Gambia':\r\n      return 'Gambia';\r\n    default:\r\n      return country;\r\n  }\r\n}\r\n\r\n// Get specific drug count, percentage and al its types for the map component\r\nfunction getMapStatsData({ countryData, columnKey, statsKey }) {\r\n  const data = {\r\n    items: [],\r\n    percentage: 0,\r\n    count: 0\r\n  };\r\n\r\n  const columnData = [...new Set(countryData.map((x) => x[columnKey]))];\r\n  data.items = columnData.map((name) => {\r\n    const count = countryData.filter((x) => x[columnKey] === name).length;\r\n    const percentage = Number(((count / countryData.length) * 100).toFixed(2));\r\n\r\n    if (name === statsKey) {\r\n      data.count = count;\r\n      data.percentage = percentage;\r\n    }\r\n    return { name, count, percentage };\r\n  });\r\n\r\n  if (statsKey === '-') {\r\n    data.count = countryData.length - data.count;\r\n    data.percentage = Number(((data.count / countryData.length) * 100).toFixed(2));\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n// Get country data for map component, the data includes the name, count and drug stats\r\nexport function getMapData({ data, countries, organism }) {\r\n  const mapData = countries.map((country) => {\r\n    const stats = {\r\n      GENOTYPE: {\r\n        items: [],\r\n        count: 0\r\n      }\r\n    };\r\n\r\n    const countryData = data.filter((x) => getCountryDisplayName(x.COUNTRY_ONLY) === country);\r\n\r\n    if (countryData.length === 0) {\r\n      return {};\r\n    }\r\n\r\n    const genotypes = [...new Set(countryData.map((x) => x.GENOTYPE))];\r\n    stats.GENOTYPE.count = genotypes.length;\r\n    stats.GENOTYPE.items = genotypes.map((genotype) => {\r\n      return {\r\n        name: genotype,\r\n        count: countryData.filter((x) => x.GENOTYPE === genotype).length\r\n      };\r\n    });\r\n    stats.GENOTYPE.items.sort((a, b) => (a.count <= b.count ? 1 : -1));\r\n\r\n    if (organism === 'typhi') {\r\n      stats.H58 = getMapStatsData({ countryData, columnKey: 'GENOTYPE_SIMPLE', statsKey: 'H58' });\r\n      stats.MDR = getMapStatsData({ countryData, columnKey: 'MDR', statsKey: 'MDR' });\r\n      stats.XDR = getMapStatsData({ countryData, columnKey: 'XDR', statsKey: 'XDR' });\r\n      stats.AzithR = getMapStatsData({ countryData, columnKey: 'azith_pred_pheno', statsKey: 'AzithR' });\r\n      stats.Susceptible = getMapStatsData({ countryData, columnKey: 'amr_category', statsKey: 'No AMR detected' });\r\n      stats.CipR = getMapStatsData({ countryData, columnKey: 'cip_pred_pheno', statsKey: 'CipR' });\r\n      stats.CipNS = getMapStatsData({ countryData, columnKey: 'cip_pred_pheno', statsKey: 'CipNS' });\r\n    } else {\r\n      stats.Susceptible = getMapStatsData({ countryData, columnKey: 'num_resistance_classes', statsKey: '0' });\r\n      stats.ESBL = getMapStatsData({ countryData, columnKey: 'Bla_ESBL_acquired', statsKey: '-' });\r\n      stats.Carb = getMapStatsData({ countryData, columnKey: 'Bla_Carb_acquired', statsKey: '-' });\r\n    }\r\n\r\n    return {\r\n      name: country,\r\n      count: countryData.length,\r\n      stats\r\n    };\r\n  });\r\n\r\n  return mapData;\r\n}\r\n\r\n// Get data for distribution and drug resistance graphs and, if the organism is klebsiella, the list of unique genotypes\r\n// for the pallete and legend of the distribution graph\r\nexport function getYearsData({ data, years, organism, getUniqueGenotypes = false }) {\r\n  const drugsData = [];\r\n  const genotypesAndDrugsData = {};\r\n  let uniqueGenotypes = [];\r\n  const genotypesAndDrugsDataUniqueGenotypes = {};\r\n\r\n  if (organism === 'klebe') {\r\n    Object.keys(drugClassesRulesKP).forEach((key) => {\r\n      genotypesAndDrugsData[key] = [];\r\n      genotypesAndDrugsDataUniqueGenotypes[key] = [];\r\n    });\r\n  }\r\n\r\n  const genotypesData = years.map((year) => {\r\n    const yearData = data.filter((x) => x.DATE === year);\r\n    const response = {\r\n      name: year.toString(),\r\n      count: yearData.length\r\n    };\r\n    let stats = {};\r\n\r\n    if (yearData.length > 0) {\r\n      const genotypes = [...new Set(yearData.map((x) => x.GENOTYPE))];\r\n\r\n      stats = genotypes.reduce((accumulator, currentValue) => {\r\n        const count = yearData.filter((x) => x.GENOTYPE === currentValue).length;\r\n        accumulator[currentValue] = count;\r\n\r\n        return accumulator;\r\n      }, {});\r\n\r\n      if (yearData.length >= 10) {\r\n        const drugStats = {};\r\n\r\n        if (organism === 'typhi') {\r\n          drugRulesST.forEach((rule) => {\r\n            const drugData = yearData.filter((x) => rule.values.includes(x[rule.columnID]));\r\n            drugStats[rule.key] = drugData.length;\r\n\r\n            if (rule.key === 'Ciprofloxacin NS') {\r\n              drugStats['Ciprofloxacin R'] = yearData.filter((x) => x[rule.columnID] === 'CipR').length;\r\n            }\r\n          });\r\n\r\n          drugRulesForDrugResistanceGraphST.forEach((rule) => {\r\n            const drugData = yearData.filter((x) => rule.values.includes(x[rule.columnID]));\r\n            drugStats[rule.key] = drugData.length;\r\n          });\r\n        } else {\r\n          // For drugsData\r\n          drugRulesKP.forEach((rule) => {\r\n            const drugData = yearData.filter((x) => rule.columnIDs.some((columnID) => x[columnID] !== '-'));\r\n            drugStats[rule.key] = drugData.length;\r\n          });\r\n\r\n          const susceptible = yearData.filter((x) => x.num_resistance_classes === '0');\r\n          drugStats['Susceptible'] = susceptible.length;\r\n\r\n          // For genotypesAndDrugsData\r\n          Object.keys(drugClassesRulesKP).forEach((key) => {\r\n            const filteredGenotypes = Object.fromEntries(\r\n              Object.entries(stats)\r\n                .sort(([, a], [, b]) => b - a)\r\n                .slice(0, 10)\r\n            );\r\n\r\n            genotypesAndDrugsDataUniqueGenotypes[key].push.apply(\r\n              genotypesAndDrugsDataUniqueGenotypes[key],\r\n              Object.keys(filteredGenotypes)\r\n            );\r\n\r\n            const drugClass = getKPDrugClassData({ drugKey: key, dataToFilter: yearData });\r\n\r\n            const item = { ...response, ...filteredGenotypes, ...drugClass, totalCount: response.count };\r\n            delete item.count;\r\n\r\n            genotypesAndDrugsData[key].push(item);\r\n          });\r\n        }\r\n\r\n        drugsData.push({ ...response, ...drugStats });\r\n      }\r\n    }\r\n\r\n    if (organism === 'klebe' && getUniqueGenotypes) {\r\n      const sortedStats = Object.fromEntries(\r\n        Object.entries(stats)\r\n          .sort(([, a], [, b]) => b - a)\r\n          // .slice(0, 20)\r\n      );\r\n      uniqueGenotypes = uniqueGenotypes.concat(Object.keys(sortedStats));\r\n\r\n      return {\r\n        ...response,\r\n        ...sortedStats\r\n      };\r\n    }\r\n\r\n    return {\r\n      ...response,\r\n      ...stats\r\n    };\r\n  });\r\n\r\n  if (getUniqueGenotypes) {\r\n    uniqueGenotypes = [...new Set(uniqueGenotypes.map((x) => x))];\r\n    uniqueGenotypes.sort((a, b) => a - b);\r\n  }\r\n\r\n  Object.keys(genotypesAndDrugsDataUniqueGenotypes).forEach((key) => {\r\n    const unique = [...new Set(genotypesAndDrugsDataUniqueGenotypes[key])];\r\n\r\n    genotypesAndDrugsData[key].forEach((item) => {\r\n      const keys = Object.keys(item);\r\n      const filtered = unique.filter((x) => !keys.includes(x));\r\n      filtered.forEach((x) => {\r\n        item[x] = 0;\r\n      });\r\n    });\r\n  });\r\n\r\n  return { genotypesData: genotypesData.filter((x) => x.count > 0), drugsData, uniqueGenotypes, genotypesAndDrugsData };\r\n}\r\n\r\n// Get data for frequencies and determinants graphs\r\nexport function getGenotypesData({ data, genotypes, organism }) {\r\n  const genotypesDrugClassesData = {};\r\n\r\n  if (organism === 'typhi') {\r\n    drugRulesST.forEach((drug) => {\r\n      if (drug.key !== 'Susceptible') {\r\n        genotypesDrugClassesData[drug.key] = [];\r\n      }\r\n    });\r\n  } else {\r\n    Object.keys(drugClassesRulesKP).forEach((key) => {\r\n      genotypesDrugClassesData[key] = [];\r\n    });\r\n  }\r\n\r\n  const genotypesDrugsData = genotypes.map((genotype) => {\r\n    const genotypeData = data.filter((x) => x.GENOTYPE === genotype);\r\n\r\n    const response = {\r\n      name: genotype,\r\n      totalCount: genotypeData.length,\r\n      resistantCount: 0\r\n    };\r\n\r\n    const drugClassResponse = {\r\n      name: genotype,\r\n      totalCount: genotypeData.length,\r\n      resistantCount: 0\r\n    };\r\n\r\n    if (organism === 'typhi') {\r\n      drugRulesST.forEach((rule) => {\r\n        const drugData = genotypeData.filter((x) => rule.values.includes(x[rule.columnID]));\r\n        response[rule.key] = drugData.length;\r\n\r\n        if (rule.key === 'Ciprofloxacin NS') {\r\n          response['Ciprofloxacin R'] = genotypeData.filter((x) => x[rule.columnID] === 'CipR').length;\r\n        }\r\n\r\n        if (rule.key !== 'Susceptible') {\r\n          const drugClass = { ...drugClassResponse };\r\n\r\n          drugClassesRulesST[rule.key].forEach((classRule) => {\r\n            const classRuleName = classRule.name;\r\n\r\n            drugClass[classRuleName] = genotypeData.filter((x) => {\r\n              return classRule.rules.every((r) => x[r.columnID] === r.value);\r\n            }).length;\r\n\r\n            if (classRule.susceptible) {\r\n              drugClass.resistantCount = drugClass.totalCount - drugClass[classRuleName];\r\n            }\r\n          });\r\n\r\n          genotypesDrugClassesData[rule.key].push(drugClass);\r\n        }\r\n      });\r\n    } else {\r\n      drugRulesKP.forEach((rule) => {\r\n        const drugData = genotypeData.filter((x) => rule.columnIDs.some((columnID) => x[columnID] !== '-'));\r\n        response[rule.key] = drugData.length;\r\n      });\r\n\r\n      const susceptible = genotypeData.filter((x) => x.num_resistance_classes === '0');\r\n      response['Susceptible'] = susceptible.length;\r\n\r\n      Object.keys(drugClassesRulesKP).forEach((key) => {\r\n        const drugClass = { ...drugClassResponse, ...getKPDrugClassData({ drugKey: key, dataToFilter: genotypeData }) };\r\n        genotypesDrugClassesData[key].push(drugClass);\r\n      });\r\n    }\r\n\r\n    response.resistantCount = response.totalCount - response['Susceptible'];\r\n    return response;\r\n  });\r\n\r\n  genotypesDrugsData.sort((a, b) => b.resistantCount - a.resistantCount);\r\n  Object.keys(genotypesDrugClassesData).forEach((key) => {\r\n    genotypesDrugClassesData[key].sort((a, b) => b.resistantCount - a.resistantCount);\r\n    genotypesDrugClassesData[key] = genotypesDrugClassesData[key].slice(0, 10);\r\n  });\r\n\r\n  return { genotypesDrugsData, genotypesDrugClassesData };\r\n}\r\n\r\nconst KO_MDR = ['ST258', 'ST307', 'ST340', 'ST512', 'ST11', 'ST15'];\r\nconst KO_HV = ['ST23', 'ST86', 'ST65', 'ST25'];\r\n\r\nexport function getKODiversityData({ data }) {\r\n  const KODiversityData = {\r\n    K_locus: [],\r\n    O_locus: []\r\n  };\r\n\r\n  Object.keys(KODiversityData).forEach((key) => {\r\n    const values = [...new Set(data.map((x) => x[key]))];\r\n\r\n    const keyData = values.map((value) => {\r\n      const diversityData = data.filter((x) => x[key] === value);\r\n      const MDR = diversityData.filter((x) => KO_MDR.includes(x.GENOTYPE));\r\n      const Hv = diversityData.filter((x) => KO_HV.includes(x.GENOTYPE));\r\n      const Carbapenems = diversityData.filter((x) => x.Bla_Carb_acquired !== '-');\r\n      const ESBL = diversityData.filter((x) => x.Bla_ESBL_acquired !== '-');\r\n      const aerobactin = diversityData.filter((x) => x.Aerobactin !== '-');\r\n      const rmpADC = diversityData.filter((x) => !['-', '-,-,-'].includes(x.RmpADC));\r\n      const neither = diversityData.filter(\r\n        (x) =>\r\n          !KO_MDR.includes(x.GENOTYPE) &&\r\n          !KO_HV.includes(x.GENOTYPE) &&\r\n          x.Bla_Carb_acquired === '-' &&\r\n          x.Bla_ESBL_acquired === '-' &&\r\n          x.Aerobactin === '-' &&\r\n          ['-', '-,-,-'].includes(x.RmpADC)\r\n      );\r\n\r\n      return {\r\n        name: value,\r\n        count: diversityData.length,\r\n        MDR: MDR.length,\r\n        Hv: Hv.length,\r\n        Carbapenems: Carbapenems.length,\r\n        ESBL: ESBL.length,\r\n        'Aerobactin(iuc)': aerobactin.length,\r\n        rmpADC: rmpADC.length,\r\n        neither: neither.length\r\n      };\r\n    });\r\n\r\n    KODiversityData[key] = keyData.filter((x) => !x.name.includes('unknown'));\r\n    const unknownData = keyData.filter((x) => x.name.includes('unknown'));\r\n\r\n    KODiversityData[key].push({\r\n      name: 'unknown',\r\n      count: unknownData.reduce((total, obj) => obj.count + total, 0),\r\n      MDR: unknownData.reduce((total, obj) => obj.MDR + total, 0),\r\n      Hv: unknownData.reduce((total, obj) => obj.Hv + total, 0),\r\n      Carbapenems: unknownData.reduce((total, obj) => obj.Carbapenems + total, 0),\r\n      ESBL: unknownData.reduce((total, obj) => obj.ESBL + total, 0),\r\n      'Aerobactin(iuc)': unknownData.reduce((total, obj) => obj['Aerobactin(iuc)'] + total, 0),\r\n      rmpADC: unknownData.reduce((total, obj) => obj.rmpADC + total, 0),\r\n      neither: unknownData.reduce((total, obj) => obj.neither + total, 0)\r\n    });\r\n\r\n    KODiversityData[key].sort((a, b) => b.count - a.count);\r\n    KODiversityData[key] = KODiversityData[key].slice(0, 20);\r\n  });\r\n\r\n  return KODiversityData;\r\n}\r\n\r\nfunction getVariableValue(dataItem, variable) {\r\n  if (variable === 'COUNTRY_ONLY') {\r\n    return getCountryDisplayName(dataItem[variable]);\r\n  }\r\n\r\n  return dataItem[variable];\r\n}\r\n\r\nexport function getConvergenceData({ data, groupVariable, colourVariable }) {\r\n  const convergenceData = [];\r\n  let variablesCombinations = [];\r\n  let colourVariables = [];\r\n\r\n  if (groupVariable === colourVariable) {\r\n    variablesCombinations = [...new Set(data.map((x) => getVariableValue(x, colourVariable)))];\r\n    colourVariables = variablesCombinations;\r\n  } else {\r\n    variablesCombinations = [\r\n      ...new Set(data.map((x) => `${getVariableValue(x, groupVariable)} - ${getVariableValue(x, colourVariable)}`))\r\n    ];\r\n    colourVariables = [...new Set(data.map((x) => getVariableValue(x, colourVariable)))];\r\n  }\r\n\r\n  variablesCombinations.forEach((combination) => {\r\n    let combinedData = [];\r\n\r\n    if (groupVariable === colourVariable) {\r\n      combinedData = data.filter((x) => getVariableValue(x, groupVariable) === combination);\r\n    } else {\r\n      const variables = combination.split(' - ');\r\n      combinedData = data.filter(\r\n        (x) =>\r\n          getVariableValue(x, groupVariable) === variables[0] && getVariableValue(x, colourVariable) === variables[1]\r\n      );\r\n    }\r\n\r\n    const count = combinedData.length;\r\n\r\n    const splitCombination = combination.split(' - ');\r\n    const colorLabel = splitCombination.length > 1 ? splitCombination[1] : combination;\r\n    convergenceData.push({\r\n      name: combination,\r\n      colorLabel,\r\n      z: count,\r\n      x: (combinedData.reduce((total, obj) => Number(obj.virulence_score) + total, 0) / count).toFixed(2),\r\n      y: (combinedData.reduce((total, obj) => Number(obj.resistance_score) + total, 0) / count).toFixed(2)\r\n    });\r\n  });\r\n\r\n  if (colourVariable === 'YEAR') {\r\n    colourVariables.sort((a, b) => b - a);\r\n  } else {\r\n    colourVariables.sort((a, b) => a.localeCompare(b));\r\n  }\r\n\r\n  return { data: convergenceData, colourVariables };\r\n}\r\n\r\n// Check if a gene has a susceptible character for klebesiella drug rules for determinants graph\r\nfunction isSusceptible(gene) {\r\n  return gene.includes('*') || gene.includes('^') || gene.includes('?');\r\n}\r\n\r\n// Filter all genes for a specific drug class from Klebsiella and return the final object\r\nfunction getKPDrugClassData({ drugKey, dataToFilter }) {\r\n  const drugClass = {};\r\n  const columnID = drugClassesRulesKP[drugKey];\r\n\r\n  const resistantData = dataToFilter.filter((x) => {\r\n    if (x[columnID] === '-') {\r\n      return false;\r\n    }\r\n\r\n    const genes = x[columnID].split(';');\r\n\r\n    if (genes.every((g) => isSusceptible(g))) {\r\n      return false;\r\n    }\r\n\r\n    if (genes.length === 1) {\r\n      if (genes[0] in drugClass) {\r\n        drugClass[genes[0]] += 1;\r\n      } else {\r\n        drugClass[genes[0]] = 1;\r\n      }\r\n    } else {\r\n      const resistantGenes = genes.filter((g) => !isSusceptible(g));\r\n      resistantGenes.sort((a, b) => a.localeCompare(b));\r\n\r\n      const name = resistantGenes.join(';').replaceAll(';', ' + ');\r\n\r\n      if (name in drugClass) {\r\n        drugClass[name] += 1;\r\n      } else {\r\n        drugClass[name] = 1;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  drugClass['None'] = dataToFilter.length - resistantData.length;\r\n  drugClass.resistantCount = resistantData.length;\r\n\r\n  return drugClass;\r\n}\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  resetButton: {\r\n    position: 'fixed',\r\n    right: 16,\r\n    bottom: 0,\r\n    padding: '16px',\r\n\r\n    '@media (max-width: 500px)': {\r\n      right: 8,\r\n      padding: '16px 8px'\r\n    }\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { RestartAlt } from '@mui/icons-material';\r\nimport { useStyles } from './ResetButtonMUI';\r\nimport { Fab, Tooltip, useMediaQuery } from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { setActualTimeFinal, setActualTimeInitial, setCanGetData } from '../../../stores/slices/dashboardSlice';\r\nimport { setDataset, setMapView, setPosition, setIfCustom } from '../../../stores/slices/mapSlice';\r\nimport { setActualCountry } from '../../../stores/slices/dashboardSlice';\r\nimport {\r\n  setCollapses,\r\n  setConvergenceColourPallete,\r\n  setConvergenceColourVariable,\r\n  setConvergenceGroupVariable,\r\n  setDeterminantsGraphDrugClass,\r\n  setDeterminantsGraphView,\r\n  setDistributionGraphView,\r\n  setDrugResistanceGraphView,\r\n  setFrequenciesGraphView,\r\n  setKODiversityGraphView,\r\n  setTrendsKPGraphDrugClass,\r\n  setTrendsKPGraphView,\r\n  setCustomDropdownMapView,\r\n  setCurrentSliderValue,\r\n  setResetBool,\r\n  setFrequenciesGraphSelectedGenotypes,\r\n} from '../../../stores/slices/graphSlice';\r\nimport { drugsKP, defaultDrugsForDrugResistanceGraphST } from '../../../util/drugs';\r\nimport {\r\n  getGenotypesData\r\n} from '../../Dashboard/filters';\r\n\r\nexport const ResetButton = (props) => {\r\n  const classes = useStyles();\r\n  const matches500 = useMediaQuery('(max-width: 500px)');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const timeInitial = useAppSelector((state) => state.dashboard.timeInitial);\r\n  const timeFinal = useAppSelector((state) => state.dashboard.timeFinal);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const genotypes = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n\r\n  function handleClick() {\r\n    dispatch(setCanGetData(false));\r\n    dispatch(\r\n      setCollapses({\r\n        determinants: false,\r\n        distribution: false,\r\n        drugResistance: false,\r\n        frequencies: false,\r\n        trendsKP: false,\r\n        KODiversity: false,\r\n        convergence: false\r\n      })\r\n    );\r\n\r\n    dispatch(setDataset('All'));\r\n    dispatch(setActualTimeInitial(timeInitial));\r\n    dispatch(setActualTimeFinal(timeFinal));\r\n    dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n    dispatch(setActualCountry('All'));\r\n\r\n    if (organism === 'typhi') {\r\n      dispatch(setMapView('CipNS'));\r\n      dispatch(setDeterminantsGraphDrugClass('Ciprofloxacin NS'));\r\n      dispatch(setDrugResistanceGraphView(defaultDrugsForDrugResistanceGraphST));\r\n    } else {\r\n      dispatch(setMapView('No. Samples'));\r\n      dispatch(setDrugResistanceGraphView(drugsKP));\r\n      dispatch(setDeterminantsGraphDrugClass('Carbapenems'));\r\n      dispatch(setTrendsKPGraphDrugClass('Carbapenems'));\r\n      dispatch(setTrendsKPGraphView('number'));\r\n      dispatch(setKODiversityGraphView('K_locus'));\r\n      dispatch(setConvergenceGroupVariable('COUNTRY_ONLY'));\r\n      dispatch(setConvergenceColourVariable('DATE'));\r\n      dispatch(setConvergenceColourPallete({}));\r\n    }\r\n\r\n    dispatch(setFrequenciesGraphView('percentage'));\r\n    dispatch(setDeterminantsGraphView('percentage'));\r\n    dispatch(setDistributionGraphView('number'));\r\n    dispatch(setCanGetData(true));\r\n    dispatch(setIfCustom(false));\r\n\r\n    const genotypesData = getGenotypesData({ data: props.data, genotypes, organism });\r\n    dispatch(setCustomDropdownMapView(genotypesData.genotypesDrugsData.slice(0, 1).map((x) => x.name)));\r\n    dispatch(setFrequenciesGraphSelectedGenotypes(genotypesData.genotypesDrugsData.slice(0, 5).map((x) => x.name)));\r\n    dispatch(setCurrentSliderValue(20));\r\n    dispatch(setResetBool(true));\r\n    // dispatch(setGenotypesForFilter(true))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.resetButton}>\r\n      <Tooltip title=\"Reset Configurations\" placement=\"left\">\r\n        <span>\r\n          <Fab\r\n            color=\"primary\"\r\n            size={matches500 ? 'medium' : 'large'}\r\n            onClick={handleClick}\r\n            disabled={organism === 'none'}\r\n          >\r\n            <RestartAlt sx={{ color: '#fff' }} />\r\n          </Fab>\r\n        </span>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    }\r\n  },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    rowGap: '8px'\r\n  },\r\n  selectInput: {\r\n    fontSize: '16px !important',\r\n    fontWeight: '600 !important',\r\n    textAlign: 'start',\r\n    minWidth: '250px !important'\r\n  },\r\n  selectMenu: {\r\n    '& .MuiMenuItem-root': {\r\n      fontSize: '16px'\r\n    }\r\n  },\r\n  menuPaper: {\r\n    maxHeight: '350px !important'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { useStyles } from './SelectCountryMUI';\r\nimport { Card, CardContent, MenuItem, Select, Typography } from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../../../stores/hooks';\r\nimport { setActualCountry } from '../../../stores/slices/dashboardSlice';\r\n\r\nexport const SelectCountry = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const actualCountry = useAppSelector((state) => state.dashboard.actualCountry);\r\n  const countriesForFilter = useAppSelector((state) => state.graph.countriesForFilter);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n\r\n  function handleChange(event) {\r\n    dispatch(setActualCountry(event.target.value));\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography variant=\"h5\" fontWeight={700}>\r\n          {`Now showing: ${\r\n            organism === 'none'\r\n              ? ''\r\n              : `${dataset} data from ${actualCountry === 'All' ? 'all countries' : actualCountry} from ${\r\n                  actualTimeInitial || 'year'\r\n                } to ${actualTimeFinal || 'year'}`\r\n          }`}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" fontWeight={500}>\r\n          Select country (or click map)\r\n        </Typography>\r\n        <Select\r\n          variant=\"standard\"\r\n          value={actualCountry}\r\n          onChange={handleChange}\r\n          inputProps={{ className: classes.selectInput }}\r\n          MenuProps={{ classes: { paper: classes.menuPaper, list: classes.selectMenu } }}\r\n          disabled={organism === 'none'}\r\n        >\r\n          <MenuItem value=\"All\">All</MenuItem>\r\n          {countriesForFilter.map((country, index) => {\r\n            return (\r\n              <MenuItem key={index + 'mapview'} value={country}>\r\n                {country}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { MainLayout } from '../Layout';\r\nimport { Map } from '../Elements/Map';\r\nimport { Footer } from '../Elements/Footer';\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { DownloadData } from '../Elements/DownloadData';\r\nimport { useAppDispatch, useAppSelector } from '../../stores/hooks';\r\nimport {\r\n  setActualCountry,\r\n  setActualGenomes,\r\n  setActualGenotypes,\r\n  setActualTimeFinal,\r\n  setActualTimeInitial,\r\n  // setColorPallete,\r\n  setGenotypesForFilter,\r\n  setListPMID,\r\n  setLoadingData,\r\n  setTimeFinal,\r\n  setTimeInitial,\r\n  setTotalGenomes,\r\n  setTotalGenotypes,\r\n  setYears,\r\n\r\n} from '../../stores/slices/dashboardSlice.ts';\r\nimport { setDataset, setMapData, setMapView, setPosition, setIfCustom } from '../../stores/slices/mapSlice.ts';\r\nimport { Graphs } from '../Elements/Graphs';\r\nimport {\r\n  setCollapses,\r\n  setConvergenceColourPallete,\r\n  setConvergenceColourVariable,\r\n  setConvergenceData,\r\n  setConvergenceGroupVariable,\r\n  setCountriesForFilter,\r\n  setDeterminantsGraphDrugClass,\r\n  setDeterminantsGraphView,\r\n  setDistributionGraphView,\r\n  setDrugResistanceGraphView,\r\n  setDrugsYearData,\r\n  setFrequenciesGraphSelectedGenotypes,\r\n  setCustomDropdownMapView,\r\n  setFrequenciesGraphView,\r\n  setGenotypesAndDrugsYearData,\r\n  setGenotypesDrugClassesData,\r\n  setGenotypesDrugsData,\r\n  setGenotypesDrugsData2,\r\n  setGenotypesYearData,\r\n  setKODiversityData,\r\n  setKODiversityGraphView,\r\n  setTrendsKPGraphDrugClass,\r\n  setTrendsKPGraphView,\r\n  setCurrentSliderValue\r\n} from '../../stores/slices/graphSlice.ts';\r\nimport {\r\n  filterData,\r\n  getYearsData,\r\n  getMapData,\r\n  getGenotypesData,\r\n  getCountryDisplayName,\r\n  getKODiversityData,\r\n  getConvergenceData\r\n} from './filters';\r\nimport { ResetButton } from '../Elements/ResetButton/ResetButton';\r\nimport { generatePalleteForGenotypes } from '../../util/colorHelper';\r\nimport { SelectCountry } from '../Elements/SelectCountry';\r\nimport { drugsKP, defaultDrugsForDrugResistanceGraphST } from '../../util/drugs';\r\n\r\nexport const DashboardPage = () => {\r\n  const [data, setData] = useState([]);\r\n  const [currentConvergenceGroupVariable, setCurrentConvergenceGroupVariable] = useState('COUNTRY_ONLY');\r\n  const [currentConvergenceColourVariable, setCurrentConvergenceColourVariable] = useState('DATE');\r\n\r\n  const dispatch = useAppDispatch();\r\n  const canGetData = useAppSelector((state) => state.dashboard.canGetData);\r\n  const organism = useAppSelector((state) => state.dashboard.organism);\r\n  const dataset = useAppSelector((state) => state.map.dataset);\r\n  const actualTimeInitial = useAppSelector((state) => state.dashboard.actualTimeInitial);\r\n  const actualTimeFinal = useAppSelector((state) => state.dashboard.actualTimeFinal);\r\n  const actualCountry = useAppSelector((state) => state.dashboard.actualCountry);\r\n  const countriesForFilter = useAppSelector((state) => state.graph.countriesForFilter);\r\n  const yearsForFilter = useAppSelector((state) => state.dashboard.years);\r\n  const genotypesForFilter = useAppSelector((state) => state.dashboard.genotypesForFilter);\r\n  const convergenceGroupVariable = useAppSelector((state) => state.graph.convergenceGroupVariable);\r\n  const convergenceColourVariable = useAppSelector((state) => state.graph.convergenceColourVariable);\r\n\r\n  // This function is only called once, after the csv is read. It gets all the static and dynamic data\r\n  // that came from the csv file and sets all the data the organism needs to show\r\n  function getInfoFromData(response) {\r\n    const responseData = response.data;\r\n    dispatch(setTotalGenomes(responseData.length));\r\n    dispatch(setActualGenomes(responseData.length));\r\n\r\n    const genotypes = [...new Set(responseData.map((x) => x.GENOTYPE))];\r\n    if (organism === 'typhi') {\r\n      genotypes.sort((a, b) => a.localeCompare(b));\r\n      dispatch(setGenotypesForFilter(genotypes));\r\n    }\r\n\r\n    const years = [...new Set(responseData.map((x) => x.DATE))];\r\n    const countries = [...new Set(responseData.map((x) => getCountryDisplayName(x.COUNTRY_ONLY)))];\r\n\r\n    years.sort();\r\n    countries.sort();\r\n\r\n    dispatch(setTotalGenotypes(genotypes.length));\r\n    dispatch(setActualGenotypes(genotypes.length));\r\n    dispatch(setYears(years));\r\n    dispatch(setTimeInitial(years[0]));\r\n    dispatch(setActualTimeInitial(years[0]));\r\n    dispatch(setTimeFinal(years[years.length - 1]));\r\n    dispatch(setActualTimeFinal(years[years.length - 1]));\r\n    dispatch(setCountriesForFilter(countries));\r\n\r\n    dispatch(setMapData(getMapData({ data: responseData, countries, organism })));\r\n\r\n    const genotypesData = getGenotypesData({ data: responseData, genotypes, organism });\r\n    dispatch(setGenotypesDrugsData(genotypesData.genotypesDrugsData));\r\n    dispatch(setGenotypesDrugsData2(genotypesData.genotypesDrugsData));\r\n    dispatch(setFrequenciesGraphSelectedGenotypes(genotypesData.genotypesDrugsData.slice(0, 5).map((x) => x.name)));\r\n    dispatch(setCustomDropdownMapView(genotypesData.genotypesDrugsData.slice(0, 1).map((x) => x.name)));\r\n    dispatch(setGenotypesDrugClassesData(genotypesData.genotypesDrugClassesData));\r\n\r\n    const yearsData = getYearsData({\r\n      data: responseData,\r\n      years,\r\n      organism,\r\n      getUniqueGenotypes: true\r\n    });\r\n\r\n    if (organism === 'klebe') {\r\n      console.log(\"yearsData.uniqueGenotypes\", yearsData.uniqueGenotypes)\r\n      // dispatch(setColorPallete(generatePalleteForGenotypes(yearsData.uniqueGenotypes)));\r\n      dispatch(setGenotypesForFilter(yearsData.uniqueGenotypes));\r\n\r\n      const KODiversityData = getKODiversityData({ data: responseData });\r\n      dispatch(setKODiversityData(KODiversityData));\r\n\r\n      const convergenceData = getConvergenceData({\r\n        data: responseData,\r\n        groupVariable: convergenceGroupVariable,\r\n        // colourVariable: convergenceColourVariable,\r\n        colourVariable: convergenceGroupVariable\r\n      });\r\n      dispatch(setConvergenceColourPallete(generatePalleteForGenotypes(convergenceData.colourVariables)));\r\n      dispatch(setConvergenceData(convergenceData.data));\r\n    }\r\n\r\n    dispatch(setGenotypesYearData(yearsData.genotypesData));\r\n    dispatch(setDrugsYearData(yearsData.drugsData));\r\n    dispatch(setGenotypesAndDrugsYearData(yearsData.genotypesAndDrugsData));\r\n    console.log(\"genotypesDrugsData\", genotypesData.genotypesDrugsData);\r\n    return responseData;\r\n  }\r\n\r\n  // This function reads the csv file and set specific filters accordingly to the current organism\r\n  async function getData(endpoint) {\r\n    dispatch(setLoadingData(true));\r\n\r\n    await axios\r\n      .get(`${API_ENDPOINT}filters/${endpoint}`)\r\n      .then((response) => {\r\n        const newData = getInfoFromData(response);\r\n        dispatch(setDataset('All'));\r\n\r\n        switch (organism) {\r\n          case 'typhi':\r\n            dispatch(setMapView('CipNS'));\r\n            dispatch(setDrugResistanceGraphView(defaultDrugsForDrugResistanceGraphST));\r\n            dispatch(setDeterminantsGraphDrugClass('Ciprofloxacin NS'));\r\n            break;\r\n          case 'klebe':\r\n            dispatch(setMapView('No. Samples'));\r\n            dispatch(setDrugResistanceGraphView(drugsKP));\r\n            dispatch(setDeterminantsGraphDrugClass('Carbapenems'));\r\n            dispatch(setTrendsKPGraphDrugClass('Carbapenems'));\r\n            dispatch(setKODiversityGraphView('K_locus'));\r\n            dispatch(setTrendsKPGraphView('number'));\r\n            dispatch(setConvergenceGroupVariable('COUNTRY_ONLY'));\r\n            dispatch(setConvergenceColourVariable('DATE'));\r\n            setCurrentConvergenceGroupVariable('COUNTRY_ONLY');\r\n            setCurrentConvergenceColourVariable('DATE');\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n\r\n        setData(newData);\r\n      })\r\n      .finally(() => {\r\n        dispatch(setLoadingData(false));\r\n      });\r\n  }\r\n\r\n  // This useEffect is called everytime the organism changes, it resets all data and filters and\r\n  // call the function to read the specific organism csv\r\n  useEffect(() => {\r\n    if (organism !== 'none') {\r\n      console.log('change organism');\r\n      dispatch(\r\n        setCollapses({\r\n          determinants: false,\r\n          distribution: false,\r\n          drugResistance: false,\r\n          frequencies: false,\r\n          trendsKP: false,\r\n          KODiversity: false,\r\n          convergence: false\r\n        })\r\n      );\r\n      setData([]);\r\n      dispatch(setDataset(''));\r\n      dispatch(setActualTimeInitial(''));\r\n      dispatch(setActualTimeFinal(''));\r\n      dispatch(setPosition({ coordinates: [0, 0], zoom: 1 }));\r\n      dispatch(setActualCountry('All'));\r\n      dispatch(setMapData([]));\r\n      dispatch(setGenotypesYearData([]));\r\n      dispatch(setDrugsYearData([]));\r\n      dispatch(setGenotypesDrugsData([]));\r\n      dispatch(setGenotypesDrugClassesData([]));\r\n      dispatch(setGenotypesAndDrugsYearData([]));\r\n      dispatch(setKODiversityData([]));\r\n      dispatch(setConvergenceData([]));\r\n      dispatch(setDeterminantsGraphDrugClass(''));\r\n      dispatch(setTrendsKPGraphDrugClass(''));\r\n      dispatch(setMapView(''));\r\n      dispatch(setFrequenciesGraphView('percentage'));\r\n      dispatch(setDeterminantsGraphView('percentage'));\r\n      dispatch(setDistributionGraphView('number'));\r\n      dispatch(setConvergenceColourPallete({}));\r\n      dispatch(setIfCustom(false));\r\n      \r\n      dispatch(setCurrentSliderValue(20));\r\n\r\n      switch (organism) {\r\n        case 'typhi':\r\n          getData('getDataFromCSV');\r\n          break;\r\n        case 'klebe':\r\n          getData('getDataFromCSVKlebe');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [organism]);\r\n\r\n  // This useEffect is called everytime the main filters are changed, it does not need to read the csv file again.\r\n  // It filters accordingly to the filters give. Is also called when the reset button is pressed.\r\n  useEffect(() => {\r\n    if (data.length > 0 && canGetData) {\r\n      // console.log('update data', dataset, actualTimeInitial, actualTimeFinal, actualCountry);\r\n\r\n      const filters = filterData({ data, dataset, actualTimeInitial, actualTimeFinal, organism, actualCountry });\r\n      const filteredData = filters.data.filter(\r\n        (x) => actualCountry === 'All' || getCountryDisplayName(x.COUNTRY_ONLY) === actualCountry\r\n      );\r\n\r\n      if (\r\n        convergenceGroupVariable !== currentConvergenceGroupVariable ||\r\n        convergenceColourVariable !== currentConvergenceColourVariable\r\n      ) {\r\n        // console.log('update variables', convergenceGroupVariable, convergenceColourVariable);\r\n        setCurrentConvergenceGroupVariable(convergenceGroupVariable);\r\n        setCurrentConvergenceColourVariable(convergenceColourVariable);\r\n\r\n        const convergenceData = getConvergenceData({\r\n          data: filteredData,\r\n          groupVariable: convergenceGroupVariable,\r\n          // colourVariable: convergenceColourVariable,\r\n          colourVariable: convergenceGroupVariable\r\n        });\r\n        dispatch(setConvergenceColourPallete(generatePalleteForGenotypes(convergenceData.colourVariables)));\r\n        dispatch(setConvergenceData(convergenceData.data));\r\n      } else {\r\n        dispatch(setActualGenomes(filters.genomesCount));\r\n        dispatch(setActualGenotypes(filters.genotypesCount));\r\n        dispatch(setListPMID(filters.listPMID));\r\n\r\n        dispatch(setMapData(getMapData({ data: filters.data, countries: countriesForFilter, organism })));\r\n\r\n        const genotypesData = getGenotypesData({\r\n          data: filteredData,\r\n          genotypes: genotypesForFilter,\r\n          organism\r\n        });\r\n        dispatch(setGenotypesDrugsData(genotypesData.genotypesDrugsData));\r\n        dispatch(setFrequenciesGraphSelectedGenotypes(genotypesData.genotypesDrugsData.slice(0, 5).map((x) => x.name)));\r\n        dispatch(setGenotypesDrugClassesData(genotypesData.genotypesDrugClassesData));\r\n\r\n        const yearsData = getYearsData({\r\n          data: filteredData,\r\n          years: yearsForFilter,\r\n          organism\r\n        });\r\n        dispatch(setGenotypesYearData(yearsData.genotypesData));\r\n        dispatch(setDrugsYearData(yearsData.drugsData));\r\n        dispatch(setGenotypesAndDrugsYearData(yearsData.genotypesAndDrugsData));\r\n\r\n        if (organism === 'klebe') {\r\n          const KODiversityData = getKODiversityData({ data: filteredData });\r\n          dispatch(setKODiversityData(KODiversityData));\r\n\r\n          const convergenceData = getConvergenceData({\r\n            data: filteredData,\r\n            groupVariable: convergenceGroupVariable,\r\n            // colourVariable: convergenceColourVariable,\r\n            colourVariable: convergenceGroupVariable\r\n          });\r\n          dispatch(setConvergenceColourPallete(generatePalleteForGenotypes(convergenceData.colourVariables)));\r\n          dispatch(setConvergenceData(convergenceData.data));\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    canGetData,\r\n    dataset,\r\n    actualTimeInitial,\r\n    actualTimeFinal,\r\n    actualCountry,\r\n    convergenceGroupVariable,\r\n    convergenceColourVariable\r\n  ]);\r\n\r\n  return (\r\n    <MainLayout isHomePage>\r\n      <Map />\r\n      <SelectCountry />\r\n      <Graphs />\r\n      <DownloadData />\r\n      <Footer />\r\n      <ResetButton data={data} />\r\n    </MainLayout>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    },\r\n    minHeight: '500px'\r\n  },\r\n  cardContent: {\r\n    margin: '0px 2%'\r\n  },\r\n  paragraph: {\r\n    textAlign: 'justify'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Card, CardContent, Typography } from '@mui/material';\r\nimport { MainLayout } from '../Layout';\r\nimport { useStyles } from './AboutMUI';\r\nimport { Footer } from '../Elements/Footer';\r\n\r\nexport const AboutPage = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MainLayout>\r\n      <Card className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography variant=\"body1\" className={classes.paragraph}>\r\n            AMRnet is a data visualisation dashboard that makes genome-derived antimicrobial resistance(AMR) data\r\n            accessible to a wide range of stakeholders including policy makers.\r\n          </Typography>\r\n\r\n          <Typography variant=\"body1\" className={classes.paragraph}>\r\n            AMRnet visualisations will be geared towards showing national annual prevalence estimates and trends, that\r\n            can be broken down and explored in terms of underlying genotypes and AMR mechanisms, for bacterial pathogens\r\n            of public health importance.\r\n          </Typography>\r\n\r\n          <Typography variant=\"body1\" className={classes.paragraph}>\r\n            The concept is based on the{' '}\r\n            <a href=\"https://github.com/zadyson/TyphiNET\" target=\"_blank\" rel=\"noreferrer\">\r\n              TyphiNET dashboard\r\n            </a>\r\n            , which serves data on the typhoid fever pathogen <i>Salmonella Typhi</i>.\r\n          </Typography>\r\n\r\n          <Typography variant=\"body1\" className={classes.paragraph}>\r\n            Find out more about the project{' '}\r\n            <a href=\"https://www.lshtm.ac.uk/amrnet\" target=\"_blank\" rel=\"noreferrer\">\r\n              here\r\n            </a>\r\n            .\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Footer />\r\n    </MainLayout>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    },\r\n    minHeight: '500px'\r\n  },\r\n  cardContent: {\r\n    margin: '0px 2%'\r\n  },\r\n  paragraph: {\r\n    textAlign: 'justify'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Card, CardContent, Typography } from '@mui/material';\r\nimport { MainLayout } from '../Layout';\r\nimport { useStyles } from './UserGuideMUI';\r\nimport { Footer } from '../Elements/Footer';\r\n\r\nexport const UserGuidePage = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MainLayout>\r\n      <Card className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography variant=\"body1\" className={classes.paragraph}>\r\n            Under development, please see the TyphiNET{' '}\r\n            <a href=\"https://github.com/zadyson/TyphiNET/wiki\" target=\"_blank\" rel=\"noreferrer\">\r\n              wiki\r\n            </a>{' '}\r\n            for details.\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Footer />\r\n    </MainLayout>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    },\r\n    minHeight: '500px'\r\n  },\r\n  cardContent: {\r\n    margin: '0px 2%'\r\n  },\r\n  paragraph: {\r\n    textAlign: 'justify'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Card, CardContent, Typography } from '@mui/material';\r\nimport { MainLayout } from '../Layout';\r\nimport { useStyles } from './DatabaseMUI';\r\nimport { Footer } from '../Elements/Footer';\r\n\r\nexport const DatabasePage = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MainLayout>\r\n      <Card className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography variant=\"body1\" className={classes.paragraph}>\r\n            Why do we use it? It is a long established fact that a reader will be distracted by the readable content of\r\n            a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal\r\n            distribution of letters, as opposed to using 'Content here, content here', making it look like readable\r\n            English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model\r\n            text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions\r\n            have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\r\n            Where does it come from? Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in\r\n            a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin\r\n            professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur,\r\n            from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the\r\n            undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\"\r\n            (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of\r\n            ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\",\r\n            comes from a line in section 1.10.32. The standard chunk of Lorem Ipsum used since the 1500s is reproduced\r\n            below for those interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are\r\n            also reproduced in their exact original form, accompanied by English versions from the 1914 translation by\r\n            H. Rackham.\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Footer />\r\n    </MainLayout>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    },\r\n    minHeight: '500px'\r\n  },\r\n  cardContent: {\r\n    margin: '0px 2%'\r\n  },\r\n  paragraph: {\r\n    textAlign: 'justify'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { Card, CardContent, Typography } from '@mui/material';\r\nimport { MainLayout } from '../Layout';\r\nimport { useStyles } from './DocumentationMUI';\r\nimport { Footer } from '../Elements/Footer';\r\n\r\nexport const DocumentationPage = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <MainLayout>\r\n      <Card className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography variant=\"body1\" className={classes.paragraph}>\r\n            Under development, please see the TyphiNET{' '}\r\n            <a href=\"https://github.com/zadyson/TyphiNET/wiki\" target=\"_blank\" rel=\"noreferrer\">\r\n              wiki\r\n            </a>{' '}\r\n            for details.\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Footer />\r\n    </MainLayout>\r\n  );\r\n};\r\n","import { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    '&.MuiCard-root': {\r\n      borderRadius: '16px'\r\n    },\r\n    minHeight: '500px'\r\n  },\r\n  cardContent: {\r\n    maxWidth: '600px',\r\n    margin: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '24px',\r\n    padding: '50px !important',\r\n\r\n    '@media (max-width: 500px)': {\r\n      padding: '24px !important'\r\n    }\r\n  },\r\n  row: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    gap: '24px',\r\n\r\n    '@media (max-width: 600px)': {\r\n      flexDirection: 'column'\r\n    }\r\n  },\r\n  submitButton: {\r\n    marginTop: '16px !important',\r\n    height: '50px',\r\n    color: '#fff !important'\r\n  }\r\n}));\r\n\r\nexport { useStyles };\r\n","import { MainLayout } from '../Layout';\r\nimport { useStyles } from './ContactMUI';\r\nimport TextField from '@mui/material/TextField';\r\nimport { API_ENDPOINT } from '../../constants';\r\nimport { Card, CardContent } from '@mui/material';\r\nimport { Footer } from '../Elements/Footer';\r\nimport LoadingButton from '@mui/lab/LoadingButton/LoadingButton';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst defaultValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  message: ''\r\n};\r\n\r\nconst requiredValues = ['firstName', 'lastName', 'email'];\r\n\r\nconst email = new RegExp('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$');\r\n\r\nexport const ContactPage = () => {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const [formValues, setFormValues] = useState(defaultValues);\r\n  const [formErrors, setFormErrors] = useState({});\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n\r\n    setFormValues({ ...formValues, [name]: value });\r\n  };\r\n\r\n  const sendEmail = async () => {\r\n    const errors = {};\r\n    const required = 'This field is required.';\r\n\r\n    requiredValues.forEach((key) => {\r\n      if (!formValues[key]) {\r\n        errors[key] = required;\r\n      }\r\n    });\r\n\r\n    if (!!formValues.email && !email.test(formValues.email)) {\r\n      errors.email = 'This field is invalid.';\r\n    }\r\n\r\n    setFormErrors(errors);\r\n\r\n    if (Object.keys(errors).length === 0) {\r\n      try {\r\n        setLoading(true);\r\n\r\n        await axios.post(`${API_ENDPOINT}email`, formValues);\r\n        setFormValues(defaultValues);\r\n        window.alert('Message successfully sent!');\r\n      } catch (error) {\r\n        window.alert('Error while sending message. Please try again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainLayout>\r\n      <Card className={classes.card}>\r\n        <CardContent className={classes.cardContent}>\r\n          <div className={classes.row}>\r\n            <TextField\r\n              required\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              label=\"First name\"\r\n              fullWidth\r\n              variant=\"standard\"\r\n              value={formValues.firstName}\r\n              error={!!formErrors.firstName}\r\n              helperText={formErrors.firstName}\r\n              onChange={handleChange}\r\n            />\r\n            <TextField\r\n              required\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              label=\"Last name\"\r\n              fullWidth\r\n              variant=\"standard\"\r\n              value={formValues.lastName}\r\n              error={!!formErrors.lastName}\r\n              helperText={formErrors.lastName}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <TextField\r\n            required\r\n            id=\"email\"\r\n            name=\"email\"\r\n            label=\"Email address\"\r\n            fullWidth\r\n            type=\"email\"\r\n            variant=\"standard\"\r\n            value={formValues.email}\r\n            error={!!formErrors.email}\r\n            helperText={formErrors.email}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            id=\"message\"\r\n            name=\"message\"\r\n            label=\"Add a message\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={formValues.message}\r\n            onChange={handleChange}\r\n          />\r\n          <LoadingButton className={classes.submitButton} variant=\"contained\" loading={loading} onClick={sendEmail}>\r\n            Submit\r\n          </LoadingButton>\r\n        </CardContent>\r\n      </Card>\r\n      <Footer />\r\n    </MainLayout>\r\n  );\r\n};\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport appReducer from './slices/appSlice';\r\nimport deashboardReducer from './slices/dashboardSlice';\r\nimport mapReducer from './slices/mapSlice';\r\nimport graphReducer from './slices/graphSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n    dashboard: deashboardReducer,\r\n    map: mapReducer,\r\n    graph: graphReducer\r\n  },\r\n  middleware: (getDefaultMiddleware) => {\r\n    return getDefaultMiddleware({\r\n      serializableCheck: false\r\n    });\r\n  }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import './App.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createTheme, ThemeProvider } from '@mui/material';\r\nimport { Provider } from 'react-redux';\r\nimport { AdminPage } from './components/Admin';\r\nimport { DashboardPage } from './components/Dashboard';\r\nimport { AboutPage } from './components/About';\r\nimport { UserGuidePage } from './components/UserGuide';\r\nimport { DatabasePage } from './components/Database';\r\nimport { DocumentationPage } from './components/Documentation';\r\nimport { ContactPage } from './components/Contact';\r\nimport { HashRouter, Route, Routes } from 'react-router-dom';\r\nimport { store } from './stores/store.ts';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1fbbd3'\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      'Montserrat',\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      '\"Roboto\"',\r\n      '\"Oxygen\"',\r\n      '\"Ubuntu\"',\r\n      '\"Cantarell\"',\r\n      '\"Fira Sans\"',\r\n      '\"Droid Sans\"',\r\n      '\"Helvetica Neue\"',\r\n      'sans-serif'\r\n    ].join(',')\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <ThemeProvider theme={theme}>\r\n          <div className=\"App\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<DashboardPage />} />\r\n              <Route path=\"/admin\" element={<AdminPage />} />\r\n              <Route path=\"/about\" element={<AboutPage />} />\r\n              <Route path=\"/user-guide\" element={<UserGuidePage />} />\r\n              <Route path=\"/database\" element={<DatabasePage />} />\r\n              <Route path=\"/documentation\" element={<DocumentationPage />} />\r\n              <Route path=\"/contact\" element={<ContactPage />} />\r\n            </Routes>\r\n          </div>\r\n        </ThemeProvider>\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}