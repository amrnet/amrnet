name: ESLint

on:
  push:
    branches: [ "devrev", "main" ]
  pull_request:
    branches: [ "devrev", "main" ]
  schedule:
    - cron: '43 17 * * 1'

jobs:
  eslint:
    name: Run ESLint scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.20.2' # Specify the exact Node.js version from your engines field

      - name: Install Node.js dependencies
        # Assuming you use 'yarn' as indicated in your root package.json scripts.
        # This will install all dependencies and devDependencies from your package.json,
        # including the correct ESLint, TypeScript-ESLint, and Prettier versions.
        run: yarn install # Or 'npm install' if you prefer npm in CI

      - name: Run ESLint
        id: run_eslint
        env:
          SARIF_ESLINT_IGNORE_SUPPRESSED: "true"
        run: |
          # Use npx to ensure the locally installed ESLint is used.
          npx eslint . \
            --config .eslintrc.js \
            --ext .js,.jsx,.ts,.tsx \
            --format @microsoft/eslint-formatter-sarif \
            --output-file eslint-results.sarif
        # This will now fail if ESLint has issues, which is what we want for debugging

      - name: Check if SARIF file exists (for debugging)
        run: |
          ls -la eslint-results.sarif || echo "eslint-results.sarif does NOT exist, as 'Run ESLint' must have failed."
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true
